0
sieve.c:6:1 keyword char
sieve.c:6:6 identifier flags
sieve.c:6:11 punctuator [
sieve.c:6:12 constant 8190
sieve.c:6:17 punctuator +
sieve.c:6:18 constant 1
sieve.c:6:19 punctuator ]
sieve.c:6:20 punctuator ;
sieve.c:8:1 identifier main
sieve.c:8:5 punctuator (
sieve.c:8:6 punctuator )
sieve.c:9:1 punctuator {
sieve.c:10:2 keyword register
sieve.c:10:11 keyword int
sieve.c:10:15 identifier i
sieve.c:10:16 punctuator ,
sieve.c:10:18 identifier prime
sieve.c:10:23 punctuator ,
sieve.c:10:25 identifier k
sieve.c:10:26 punctuator ,
sieve.c:10:28 identifier count
sieve.c:10:33 punctuator ,
sieve.c:10:35 identifier iter
sieve.c:10:39 punctuator ;
sieve.c:11:2 keyword for
sieve.c:11:6 punctuator (
sieve.c:11:7 identifier iter
sieve.c:11:11 punctuator =
sieve.c:11:12 constant 1
sieve.c:11:13 punctuator ;
sieve.c:11:14 identifier iter
sieve.c:11:18 punctuator <=
sieve.c:11:20 constant 100
sieve.c:11:23 punctuator ;
sieve.c:11:24 identifier iter
sieve.c:11:28 punctuator ++
sieve.c:11:30 punctuator )
sieve.c:11:32 punctuator {
sieve.c:12:3 identifier count
sieve.c:12:8 punctuator =
sieve.c:12:9 constant 0
sieve.c:12:10 punctuator ;
sieve.c:13:3 keyword for
sieve.c:13:7 punctuator (
sieve.c:13:8 identifier i
sieve.c:13:9 punctuator =
sieve.c:13:10 constant 0
sieve.c:13:11 punctuator ;
sieve.c:13:12 identifier i
sieve.c:13:13 punctuator <=
sieve.c:13:15 constant 8190
sieve.c:13:19 punctuator ;
sieve.c:13:20 identifier i
sieve.c:13:21 punctuator ++
sieve.c:13:23 punctuator )
sieve.c:14:4 identifier flags
sieve.c:14:9 punctuator [
sieve.c:14:10 identifier i
sieve.c:14:11 punctuator ]
sieve.c:14:12 punctuator =
sieve.c:14:13 constant 1
sieve.c:14:14 punctuator ;
sieve.c:15:3 keyword for
sieve.c:15:7 punctuator (
sieve.c:15:8 identifier i
sieve.c:15:9 punctuator =
sieve.c:15:10 constant 0
sieve.c:15:11 punctuator ;
sieve.c:15:12 identifier i
sieve.c:15:13 punctuator <=
sieve.c:15:15 constant 8190
sieve.c:15:19 punctuator ;
sieve.c:15:20 identifier i
sieve.c:15:21 punctuator ++
sieve.c:15:23 punctuator )
sieve.c:15:25 punctuator {
sieve.c:16:4 keyword if
sieve.c:16:7 punctuator (
sieve.c:16:8 identifier flags
sieve.c:16:13 punctuator [
sieve.c:16:14 identifier i
sieve.c:16:15 punctuator ]
sieve.c:16:16 punctuator )
sieve.c:16:18 punctuator {
sieve.c:17:5 identifier prime
sieve.c:17:10 punctuator =
sieve.c:17:11 identifier i
sieve.c:17:12 punctuator +
sieve.c:17:13 identifier i
sieve.c:17:14 punctuator +
sieve.c:17:15 constant 3
sieve.c:17:16 punctuator ;
sieve.c:18:5 keyword for
sieve.c:18:9 punctuator (
sieve.c:18:10 identifier k
sieve.c:18:11 punctuator =
sieve.c:18:12 identifier i
sieve.c:18:13 punctuator +
sieve.c:18:14 identifier prime
sieve.c:18:19 punctuator ;
sieve.c:18:20 identifier k
sieve.c:18:21 punctuator <=
sieve.c:18:23 constant 8190
sieve.c:18:27 punctuator ;
sieve.c:18:28 identifier k
sieve.c:18:29 punctuator +=
sieve.c:18:31 identifier prime
sieve.c:18:36 punctuator )
sieve.c:19:6 identifier flags
sieve.c:19:11 punctuator [
sieve.c:19:12 identifier k
sieve.c:19:13 punctuator ]
sieve.c:19:14 punctuator =
sieve.c:19:15 constant 0
sieve.c:19:16 punctuator ;
sieve.c:20:5 identifier count
sieve.c:20:10 punctuator ++
sieve.c:20:12 punctuator ;
sieve.c:21:4 punctuator }
sieve.c:22:3 punctuator }
sieve.c:23:2 punctuator }
sieve.c:24:2 keyword return
sieve.c:24:9 constant 0
sieve.c:24:10 punctuator ;
sieve.c:25:1 punctuator }
