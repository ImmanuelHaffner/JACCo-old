0
990801-2.c:1:1 keyword void
990801-2.c:1:6 identifier f
990801-2.c:1:7 punctuator (
990801-2.c:1:8 punctuator )
990801-2.c:2:1 punctuator {
990801-2.c:3:5 keyword extern
990801-2.c:3:12 keyword char
990801-2.c:3:16 punctuator *
990801-2.c:3:18 identifier p
990801-2.c:3:19 punctuator ;
990801-2.c:4:5 keyword int
990801-2.c:4:9 identifier ch
990801-2.c:4:11 punctuator ;
990801-2.c:5:5 keyword while
990801-2.c:5:11 punctuator (
990801-2.c:5:12 punctuator !
990801-2.c:5:13 punctuator (
990801-2.c:5:14 identifier ch
990801-2.c:5:17 punctuator =
990801-2.c:5:19 constant 0
990801-2.c:5:20 punctuator )
990801-2.c:5:21 punctuator )
990801-2.c:5:23 punctuator {
990801-2.c:6:9 keyword if
990801-2.c:6:12 punctuator (
990801-2.c:6:13 punctuator (
990801-2.c:6:14 identifier ch
990801-2.c:6:17 punctuator ==
990801-2.c:6:20 constant 0
990801-2.c:6:21 punctuator )
990801-2.c:6:23 punctuator ||
990801-2.c:6:26 punctuator (
990801-2.c:6:27 identifier ch
990801-2.c:6:30 punctuator ==
990801-2.c:6:33 constant 2
990801-2.c:6:34 punctuator )
990801-2.c:6:35 punctuator )
990801-2.c:6:37 punctuator {
990801-2.c:7:13 keyword break
990801-2.c:7:18 punctuator ;
990801-2.c:8:9 punctuator }
990801-2.c:9:9 punctuator *
990801-2.c:9:10 identifier p
990801-2.c:9:12 punctuator =
990801-2.c:9:14 constant 0
990801-2.c:9:15 punctuator ;
990801-2.c:10:5 punctuator }
990801-2.c:11:1 punctuator }
