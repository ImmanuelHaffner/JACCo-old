0
20031231-1.c:1:1 keyword extern
20031231-1.c:1:8 keyword int
20031231-1.c:1:12 identifier f1
20031231-1.c:1:15 punctuator (
20031231-1.c:1:16 keyword int
20031231-1.c:1:19 punctuator ,
20031231-1.c:1:21 keyword void
20031231-1.c:1:26 punctuator *
20031231-1.c:1:27 punctuator )
20031231-1.c:1:28 punctuator ;
20031231-1.c:2:1 keyword extern
20031231-1.c:2:8 keyword int
20031231-1.c:2:12 punctuator *
20031231-1.c:2:13 identifier f2
20031231-1.c:2:16 punctuator (
20031231-1.c:2:17 keyword void
20031231-1.c:2:21 punctuator )
20031231-1.c:2:23 identifier __attribute__
20031231-1.c:2:37 punctuator (
20031231-1.c:2:38 punctuator (
20031231-1.c:2:39 identifier __const__
20031231-1.c:2:48 punctuator )
20031231-1.c:2:49 punctuator )
20031231-1.c:2:50 punctuator ;
20031231-1.c:3:1 keyword extern
20031231-1.c:3:8 keyword int
20031231-1.c:3:12 identifier f3
20031231-1.c:3:15 punctuator (
20031231-1.c:3:16 keyword int
20031231-1.c:3:19 punctuator ,
20031231-1.c:3:21 keyword void
20031231-1.c:3:26 punctuator *
20031231-1.c:3:27 punctuator )
20031231-1.c:3:28 punctuator ;
20031231-1.c:5:1 keyword int
20031231-1.c:6:1 identifier test
20031231-1.c:6:6 punctuator (
20031231-1.c:6:7 keyword int
20031231-1.c:6:11 identifier x
20031231-1.c:6:12 punctuator ,
20031231-1.c:6:14 keyword char
20031231-1.c:6:19 punctuator *
20031231-1.c:6:20 identifier y
20031231-1.c:6:21 punctuator ,
20031231-1.c:6:23 keyword int
20031231-1.c:6:27 identifier z
20031231-1.c:6:28 punctuator )
20031231-1.c:7:1 punctuator {
20031231-1.c:8:3 keyword int
20031231-1.c:8:7 identifier b
20031231-1.c:8:9 punctuator =
20031231-1.c:8:11 constant 0
20031231-1.c:8:12 punctuator ;
20031231-1.c:10:3 keyword if
20031231-1.c:10:6 punctuator (
20031231-1.c:10:7 identifier x
20031231-1.c:10:9 punctuator <
20031231-1.c:10:11 constant 1024
20031231-1.c:10:15 punctuator )
20031231-1.c:11:5 punctuator {
20031231-1.c:12:7 identifier y
20031231-1.c:12:8 punctuator [
20031231-1.c:12:9 constant 0
20031231-1.c:12:10 punctuator ]
20031231-1.c:12:12 punctuator =
20031231-1.c:12:14 constant '\0'
20031231-1.c:12:18 punctuator ;
20031231-1.c:14:7 keyword do
20031231-1.c:15:2 punctuator {
20031231-1.c:16:4 keyword switch
20031231-1.c:16:11 punctuator (
20031231-1.c:16:12 identifier f1
20031231-1.c:16:15 punctuator (
20031231-1.c:16:16 identifier x
20031231-1.c:16:17 punctuator ,
20031231-1.c:16:19 identifier y
20031231-1.c:16:21 punctuator +
20031231-1.c:16:23 identifier b
20031231-1.c:16:24 punctuator )
20031231-1.c:16:25 punctuator )
20031231-1.c:17:6 punctuator {
20031231-1.c:18:6 keyword case
20031231-1.c:18:11 punctuator -
20031231-1.c:18:12 constant 1
20031231-1.c:18:13 punctuator :
20031231-1.c:19:8 keyword if
20031231-1.c:19:11 punctuator (
20031231-1.c:19:12 identifier b
20031231-1.c:19:14 punctuator ==
20031231-1.c:19:17 constant 0
20031231-1.c:19:18 punctuator )
20031231-1.c:20:3 keyword return
20031231-1.c:20:10 punctuator -
20031231-1.c:20:11 constant 1
20031231-1.c:20:12 punctuator ;
20031231-1.c:21:8 keyword else
20031231-1.c:22:3 keyword return
20031231-1.c:22:10 identifier b
20031231-1.c:22:11 punctuator ;
20031231-1.c:24:6 keyword default
20031231-1.c:24:13 punctuator :
20031231-1.c:25:8 identifier b
20031231-1.c:25:9 punctuator ++
20031231-1.c:25:11 punctuator ;
20031231-1.c:26:6 punctuator }
20031231-1.c:27:2 punctuator }
20031231-1.c:28:7 keyword while
20031231-1.c:28:13 punctuator (
20031231-1.c:28:14 identifier y
20031231-1.c:28:15 punctuator [
20031231-1.c:28:16 identifier b
20031231-1.c:28:18 punctuator -
20031231-1.c:28:20 constant 1
20031231-1.c:28:21 punctuator ]
20031231-1.c:28:23 punctuator !=
20031231-1.c:28:26 constant '\0'
20031231-1.c:28:31 punctuator &&
20031231-1.c:28:34 identifier y
20031231-1.c:28:35 punctuator [
20031231-1.c:28:36 identifier b
20031231-1.c:28:38 punctuator -
20031231-1.c:28:40 constant 1
20031231-1.c:28:41 punctuator ]
20031231-1.c:28:43 punctuator !=
20031231-1.c:28:46 constant '\n'
20031231-1.c:28:51 punctuator &&
20031231-1.c:28:54 identifier b
20031231-1.c:28:56 punctuator <
20031231-1.c:28:58 identifier z
20031231-1.c:28:59 punctuator )
20031231-1.c:28:60 punctuator ;
20031231-1.c:29:5 punctuator }
20031231-1.c:30:3 keyword else
20031231-1.c:31:5 punctuator {
20031231-1.c:32:7 keyword do
20031231-1.c:33:2 punctuator {
20031231-1.c:34:4 keyword switch
20031231-1.c:34:11 punctuator (
20031231-1.c:34:12 identifier f3
20031231-1.c:34:15 punctuator (
20031231-1.c:34:16 identifier x
20031231-1.c:34:17 punctuator ,
20031231-1.c:34:19 identifier y
20031231-1.c:34:21 punctuator +
20031231-1.c:34:23 identifier b
20031231-1.c:34:24 punctuator )
20031231-1.c:34:25 punctuator )
20031231-1.c:35:6 punctuator {
20031231-1.c:36:6 keyword case
20031231-1.c:36:11 punctuator -
20031231-1.c:36:12 constant 1
20031231-1.c:36:13 punctuator :
20031231-1.c:37:8 keyword if
20031231-1.c:37:11 punctuator (
20031231-1.c:37:12 punctuator (
20031231-1.c:37:13 punctuator *
20031231-1.c:37:14 identifier f2
20031231-1.c:37:17 punctuator (
20031231-1.c:37:18 punctuator )
20031231-1.c:37:19 punctuator )
20031231-1.c:37:21 punctuator ==
20031231-1.c:37:24 constant 4
20031231-1.c:37:25 punctuator )
20031231-1.c:38:3 keyword continue
20031231-1.c:38:11 punctuator ;
20031231-1.c:39:8 keyword if
20031231-1.c:39:11 punctuator (
20031231-1.c:39:12 identifier b
20031231-1.c:39:14 punctuator ==
20031231-1.c:39:17 constant 0
20031231-1.c:39:18 punctuator )
20031231-1.c:40:3 keyword return
20031231-1.c:40:10 punctuator -
20031231-1.c:40:11 constant 1
20031231-1.c:40:12 punctuator ;
20031231-1.c:41:8 keyword else
20031231-1.c:42:3 keyword return
20031231-1.c:42:10 identifier b
20031231-1.c:42:11 punctuator ;
20031231-1.c:44:6 keyword default
20031231-1.c:44:13 punctuator :
20031231-1.c:45:8 identifier b
20031231-1.c:45:9 punctuator ++
20031231-1.c:45:11 punctuator ;
20031231-1.c:46:6 punctuator }
20031231-1.c:47:2 punctuator }
20031231-1.c:48:7 keyword while
20031231-1.c:48:13 punctuator (
20031231-1.c:48:14 identifier y
20031231-1.c:48:15 punctuator [
20031231-1.c:48:16 identifier b
20031231-1.c:48:18 punctuator -
20031231-1.c:48:20 constant 1
20031231-1.c:48:21 punctuator ]
20031231-1.c:48:23 punctuator !=
20031231-1.c:48:26 constant '\0'
20031231-1.c:48:31 punctuator &&
20031231-1.c:48:34 identifier y
20031231-1.c:48:35 punctuator [
20031231-1.c:48:36 identifier b
20031231-1.c:48:38 punctuator -
20031231-1.c:48:40 constant 1
20031231-1.c:48:41 punctuator ]
20031231-1.c:48:43 punctuator !=
20031231-1.c:48:46 constant '\n'
20031231-1.c:48:51 punctuator &&
20031231-1.c:48:54 identifier b
20031231-1.c:48:56 punctuator <
20031231-1.c:48:58 identifier z
20031231-1.c:48:59 punctuator )
20031231-1.c:48:60 punctuator ;
20031231-1.c:49:5 punctuator }
20031231-1.c:50:3 keyword return
20031231-1.c:50:10 identifier b
20031231-1.c:50:11 punctuator ;
20031231-1.c:51:1 punctuator }
