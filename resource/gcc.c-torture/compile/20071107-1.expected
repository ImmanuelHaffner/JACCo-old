0
20071107-1.c:4:1 keyword enum
20071107-1.c:4:6 punctuator {
20071107-1.c:4:8 identifier PROP_0
20071107-1.c:4:14 punctuator ,
20071107-1.c:4:16 identifier PROP_DOUBLE_CLICK_TIME
20071107-1.c:4:38 punctuator ,
20071107-1.c:4:40 identifier PROP_DOUBLE_CLICK_DISTANCE
20071107-1.c:4:66 punctuator ,
20071107-1.c:4:68 identifier PROP_CURSOR_BLINK
20071107-1.c:4:85 punctuator ,
20071107-1.c:4:87 identifier PROP_CURSOR_BLINK_TIME
20071107-1.c:4:109 punctuator ,
20071107-1.c:4:111 identifier PROP_CURSOR_BLINK_TIMEOUT
20071107-1.c:4:136 punctuator ,
20071107-1.c:4:138 identifier PROP_SPLIT_CURSOR
20071107-1.c:4:155 punctuator ,
20071107-1.c:4:157 identifier PROP_THEME_NAME
20071107-1.c:4:172 punctuator ,
20071107-1.c:4:174 identifier PROP_ICON_THEME_NAME
20071107-1.c:4:194 punctuator ,
20071107-1.c:4:196 identifier PROP_FALLBACK_ICON_THEME
20071107-1.c:4:220 punctuator ,
20071107-1.c:4:222 identifier PROP_KEY_THEME_NAME
20071107-1.c:4:241 punctuator ,
20071107-1.c:4:243 identifier PROP_MENU_BAR_ACCEL
20071107-1.c:4:262 punctuator ,
20071107-1.c:4:264 identifier PROP_DND_DRAG_THRESHOLD
20071107-1.c:4:287 punctuator ,
20071107-1.c:4:289 identifier PROP_FONT_NAME
20071107-1.c:4:303 punctuator ,
20071107-1.c:4:305 identifier PROP_ICON_SIZES
20071107-1.c:4:320 punctuator ,
20071107-1.c:4:322 identifier PROP_MODULES
20071107-1.c:4:334 punctuator ,
20071107-1.c:4:336 identifier PROP_XFT_ANTIALIAS
20071107-1.c:4:354 punctuator ,
20071107-1.c:4:356 identifier PROP_XFT_HINTING
20071107-1.c:4:372 punctuator ,
20071107-1.c:4:374 identifier PROP_XFT_HINTSTYLE
20071107-1.c:4:392 punctuator ,
20071107-1.c:4:394 identifier PROP_XFT_RGBA
20071107-1.c:4:407 punctuator ,
20071107-1.c:4:409 identifier PROP_XFT_DPI
20071107-1.c:4:421 punctuator ,
20071107-1.c:4:423 identifier PROP_CURSOR_THEME_NAME
20071107-1.c:4:445 punctuator ,
20071107-1.c:4:447 identifier PROP_CURSOR_THEME_SIZE
20071107-1.c:4:469 punctuator ,
20071107-1.c:4:471 identifier PROP_ALTERNATIVE_BUTTON_ORDER
20071107-1.c:4:500 punctuator ,
20071107-1.c:4:502 identifier PROP_ALTERNATIVE_SORT_ARROWS
20071107-1.c:4:530 punctuator ,
20071107-1.c:4:532 identifier PROP_SHOW_INPUT_METHOD_MENU
20071107-1.c:4:559 punctuator ,
20071107-1.c:4:561 identifier PROP_SHOW_UNICODE_MENU
20071107-1.c:4:583 punctuator ,
20071107-1.c:4:585 identifier PROP_TIMEOUT_INITIAL
20071107-1.c:4:605 punctuator ,
20071107-1.c:4:607 identifier PROP_TIMEOUT_REPEAT
20071107-1.c:4:626 punctuator ,
20071107-1.c:4:628 identifier PROP_TIMEOUT_EXPAND
20071107-1.c:4:647 punctuator ,
20071107-1.c:4:649 identifier PROP_COLOR_SCHEME
20071107-1.c:4:666 punctuator ,
20071107-1.c:4:668 identifier PROP_ENABLE_ANIMATIONS
20071107-1.c:4:690 punctuator ,
20071107-1.c:4:692 identifier PROP_TOUCHSCREEN_MODE
20071107-1.c:4:713 punctuator ,
20071107-1.c:4:715 identifier PROP_TOOLTIP_TIMEOUT
20071107-1.c:4:735 punctuator ,
20071107-1.c:4:737 identifier PROP_TOOLTIP_BROWSE_TIMEOUT
20071107-1.c:4:764 punctuator ,
20071107-1.c:4:766 identifier PROP_TOOLTIP_BROWSE_MODE_TIMEOUT
20071107-1.c:4:798 punctuator ,
20071107-1.c:4:800 identifier PROP_KEYNAV_CURSOR_ONLY
20071107-1.c:4:823 punctuator ,
20071107-1.c:4:825 identifier PROP_KEYNAV_WRAP_AROUND
20071107-1.c:4:848 punctuator ,
20071107-1.c:4:850 identifier PROP_ERROR_BELL
20071107-1.c:4:865 punctuator ,
20071107-1.c:4:867 identifier PROP_COLOR_HASH
20071107-1.c:4:882 punctuator ,
20071107-1.c:4:884 identifier PROP_FILE_CHOOSER_BACKEND
20071107-1.c:4:909 punctuator ,
20071107-1.c:4:911 identifier PROP_PRINT_BACKENDS
20071107-1.c:4:930 punctuator ,
20071107-1.c:4:932 identifier PROP_PRINT_PREVIEW_COMMAND
20071107-1.c:4:958 punctuator ,
20071107-1.c:4:960 identifier PROP_ENABLE_MNEMONICS
20071107-1.c:4:981 punctuator ,
20071107-1.c:4:983 identifier PROP_ENABLE_ACCELS
20071107-1.c:4:1001 punctuator ,
20071107-1.c:4:1003 identifier PROP_RECENT_FILES_LIMIT
20071107-1.c:4:1027 punctuator }
20071107-1.c:4:1028 punctuator ;
20071107-1.c:5:1 keyword void
20071107-1.c:5:6 identifier g_assert_warning
20071107-1.c:5:23 punctuator (
20071107-1.c:5:24 keyword void
20071107-1.c:5:28 punctuator )
20071107-1.c:5:30 identifier __attribute__
20071107-1.c:5:43 punctuator (
20071107-1.c:5:44 punctuator (
20071107-1.c:5:45 identifier __noreturn__
20071107-1.c:5:57 punctuator )
20071107-1.c:5:58 punctuator )
20071107-1.c:5:59 punctuator ;
20071107-1.c:6:1 keyword void
20071107-1.c:6:6 identifier gtk_settings_class_init
20071107-1.c:6:30 punctuator (
20071107-1.c:6:31 keyword void
20071107-1.c:6:35 punctuator )
20071107-1.c:7:1 punctuator {
20071107-1.c:8:5 keyword unsigned
20071107-1.c:8:14 keyword int
20071107-1.c:8:18 identifier result
20071107-1.c:8:24 punctuator ;
20071107-1.c:9:5 identifier result
20071107-1.c:9:12 punctuator =
20071107-1.c:9:14 identifier settings_install_property_parser
20071107-1.c:9:46 punctuator (
20071107-1.c:9:47 punctuator )
20071107-1.c:9:48 punctuator ;
20071107-1.c:10:6 keyword if
20071107-1.c:10:9 punctuator (
20071107-1.c:10:10 identifier __builtin_expect
20071107-1.c:10:27 punctuator (
20071107-1.c:10:28 identifier __extension__
20071107-1.c:10:42 punctuator (
20071107-1.c:10:43 punctuator {
20071107-1.c:11:8 keyword int
20071107-1.c:11:12 identifier _g_boolean_var_
20071107-1.c:11:27 punctuator ;
20071107-1.c:12:8 keyword if
20071107-1.c:12:11 punctuator (
20071107-1.c:12:12 identifier result
20071107-1.c:12:19 punctuator ==
20071107-1.c:12:22 identifier PROP_DOUBLE_CLICK_TIME
20071107-1.c:12:44 punctuator )
20071107-1.c:12:46 identifier _g_boolean_var_
20071107-1.c:12:62 punctuator =
20071107-1.c:12:64 constant 1
20071107-1.c:12:65 punctuator ;
20071107-1.c:13:8 keyword else
20071107-1.c:13:13 identifier _g_boolean_var_
20071107-1.c:13:29 punctuator =
20071107-1.c:13:31 constant 0
20071107-1.c:13:32 punctuator ;
20071107-1.c:14:8 identifier _g_boolean_var_
20071107-1.c:14:23 punctuator ;
20071107-1.c:15:4 punctuator }
20071107-1.c:15:5 punctuator )
20071107-1.c:15:6 punctuator ,
20071107-1.c:15:8 constant 1
20071107-1.c:15:9 punctuator )
20071107-1.c:15:10 punctuator )
20071107-1.c:15:12 punctuator {
20071107-1.c:16:6 punctuator }
20071107-1.c:17:6 keyword else
20071107-1.c:17:11 identifier g_assert_warning
20071107-1.c:17:27 punctuator (
20071107-1.c:17:28 punctuator )
20071107-1.c:17:29 punctuator ;
20071107-1.c:18:5 identifier result
20071107-1.c:18:12 punctuator =
20071107-1.c:18:14 identifier settings_install_property_parser
20071107-1.c:18:46 punctuator (
20071107-1.c:18:47 punctuator )
20071107-1.c:18:48 punctuator ;
20071107-1.c:19:6 keyword if
20071107-1.c:19:9 punctuator (
20071107-1.c:19:10 identifier __builtin_expect
20071107-1.c:19:27 punctuator (
20071107-1.c:19:28 identifier __extension__
20071107-1.c:19:42 punctuator (
20071107-1.c:19:43 punctuator {
20071107-1.c:20:8 keyword int
20071107-1.c:20:12 identifier _g_boolean_var_
20071107-1.c:20:27 punctuator ;
20071107-1.c:21:8 keyword if
20071107-1.c:21:11 punctuator (
20071107-1.c:21:12 identifier result
20071107-1.c:21:19 punctuator ==
20071107-1.c:21:22 identifier PROP_DOUBLE_CLICK_DISTANCE
20071107-1.c:21:48 punctuator )
20071107-1.c:21:50 identifier _g_boolean_var_
20071107-1.c:21:66 punctuator =
20071107-1.c:21:68 constant 1
20071107-1.c:21:69 punctuator ;
20071107-1.c:22:8 keyword else
20071107-1.c:22:13 identifier _g_boolean_var_
20071107-1.c:22:29 punctuator =
20071107-1.c:22:31 constant 0
20071107-1.c:22:32 punctuator ;
20071107-1.c:23:8 identifier _g_boolean_var_
20071107-1.c:23:23 punctuator ;
20071107-1.c:24:4 punctuator }
20071107-1.c:24:5 punctuator )
20071107-1.c:24:6 punctuator ,
20071107-1.c:24:8 constant 1
20071107-1.c:24:9 punctuator )
20071107-1.c:24:10 punctuator )
20071107-1.c:24:12 punctuator {
20071107-1.c:25:6 punctuator }
20071107-1.c:26:6 keyword else
20071107-1.c:26:11 identifier g_assert_warning
20071107-1.c:26:27 punctuator (
20071107-1.c:26:28 punctuator )
20071107-1.c:26:29 punctuator ;
20071107-1.c:27:5 identifier result
20071107-1.c:27:12 punctuator =
20071107-1.c:27:14 identifier settings_install_property_parser
20071107-1.c:27:46 punctuator (
20071107-1.c:27:47 punctuator )
20071107-1.c:27:48 punctuator ;
20071107-1.c:28:6 keyword if
20071107-1.c:28:9 punctuator (
20071107-1.c:28:10 identifier __builtin_expect
20071107-1.c:28:27 punctuator (
20071107-1.c:28:28 identifier __extension__
20071107-1.c:28:42 punctuator (
20071107-1.c:28:43 punctuator {
20071107-1.c:29:8 keyword int
20071107-1.c:29:12 identifier _g_boolean_var_
20071107-1.c:29:27 punctuator ;
20071107-1.c:30:8 keyword if
20071107-1.c:30:11 punctuator (
20071107-1.c:30:12 identifier result
20071107-1.c:30:19 punctuator ==
20071107-1.c:30:22 identifier PROP_CURSOR_BLINK
20071107-1.c:30:39 punctuator )
20071107-1.c:30:41 identifier _g_boolean_var_
20071107-1.c:30:57 punctuator =
20071107-1.c:30:59 constant 1
20071107-1.c:30:60 punctuator ;
20071107-1.c:31:8 keyword else
20071107-1.c:31:13 identifier _g_boolean_var_
20071107-1.c:31:29 punctuator =
20071107-1.c:31:31 constant 0
20071107-1.c:31:32 punctuator ;
20071107-1.c:32:8 identifier _g_boolean_var_
20071107-1.c:32:23 punctuator ;
20071107-1.c:33:4 punctuator }
20071107-1.c:33:5 punctuator )
20071107-1.c:33:6 punctuator ,
20071107-1.c:33:8 constant 1
20071107-1.c:33:9 punctuator )
20071107-1.c:33:10 punctuator )
20071107-1.c:33:12 punctuator {
20071107-1.c:34:6 punctuator }
20071107-1.c:35:6 keyword else
20071107-1.c:35:11 identifier g_assert_warning
20071107-1.c:35:27 punctuator (
20071107-1.c:35:28 punctuator )
20071107-1.c:35:29 punctuator ;
20071107-1.c:36:5 identifier result
20071107-1.c:36:12 punctuator =
20071107-1.c:36:14 identifier settings_install_property_parser
20071107-1.c:36:46 punctuator (
20071107-1.c:36:47 punctuator )
20071107-1.c:36:48 punctuator ;
20071107-1.c:37:6 keyword if
20071107-1.c:37:9 punctuator (
20071107-1.c:37:10 identifier __builtin_expect
20071107-1.c:37:27 punctuator (
20071107-1.c:37:28 identifier __extension__
20071107-1.c:37:42 punctuator (
20071107-1.c:37:43 punctuator {
20071107-1.c:38:8 keyword int
20071107-1.c:38:12 identifier _g_boolean_var_
20071107-1.c:38:27 punctuator ;
20071107-1.c:39:8 keyword if
20071107-1.c:39:11 punctuator (
20071107-1.c:39:12 identifier result
20071107-1.c:39:19 punctuator ==
20071107-1.c:39:22 identifier PROP_CURSOR_BLINK_TIME
20071107-1.c:39:44 punctuator )
20071107-1.c:39:46 identifier _g_boolean_var_
20071107-1.c:39:62 punctuator =
20071107-1.c:39:64 constant 1
20071107-1.c:39:65 punctuator ;
20071107-1.c:40:8 keyword else
20071107-1.c:40:13 identifier _g_boolean_var_
20071107-1.c:40:29 punctuator =
20071107-1.c:40:31 constant 0
20071107-1.c:40:32 punctuator ;
20071107-1.c:41:8 identifier _g_boolean_var_
20071107-1.c:41:23 punctuator ;
20071107-1.c:42:4 punctuator }
20071107-1.c:42:5 punctuator )
20071107-1.c:42:6 punctuator ,
20071107-1.c:42:8 constant 1
20071107-1.c:42:9 punctuator )
20071107-1.c:42:10 punctuator )
20071107-1.c:42:12 punctuator {
20071107-1.c:43:6 punctuator }
20071107-1.c:44:6 keyword else
20071107-1.c:44:11 identifier g_assert_warning
20071107-1.c:44:27 punctuator (
20071107-1.c:44:28 punctuator )
20071107-1.c:44:29 punctuator ;
20071107-1.c:45:5 identifier result
20071107-1.c:45:12 punctuator =
20071107-1.c:45:14 identifier settings_install_property_parser
20071107-1.c:45:46 punctuator (
20071107-1.c:45:47 punctuator )
20071107-1.c:45:48 punctuator ;
20071107-1.c:46:6 keyword if
20071107-1.c:46:9 punctuator (
20071107-1.c:46:10 identifier __builtin_expect
20071107-1.c:46:27 punctuator (
20071107-1.c:46:28 identifier __extension__
20071107-1.c:46:42 punctuator (
20071107-1.c:46:43 punctuator {
20071107-1.c:47:8 keyword int
20071107-1.c:47:12 identifier _g_boolean_var_
20071107-1.c:47:27 punctuator ;
20071107-1.c:48:8 keyword if
20071107-1.c:48:11 punctuator (
20071107-1.c:48:12 identifier result
20071107-1.c:48:19 punctuator ==
20071107-1.c:48:22 identifier PROP_CURSOR_BLINK_TIMEOUT
20071107-1.c:48:47 punctuator )
20071107-1.c:48:49 identifier _g_boolean_var_
20071107-1.c:48:65 punctuator =
20071107-1.c:48:67 constant 1
20071107-1.c:48:68 punctuator ;
20071107-1.c:49:8 keyword else
20071107-1.c:49:13 identifier _g_boolean_var_
20071107-1.c:49:29 punctuator =
20071107-1.c:49:31 constant 0
20071107-1.c:49:32 punctuator ;
20071107-1.c:50:8 identifier _g_boolean_var_
20071107-1.c:50:23 punctuator ;
20071107-1.c:51:4 punctuator }
20071107-1.c:51:5 punctuator )
20071107-1.c:51:6 punctuator ,
20071107-1.c:51:8 constant 1
20071107-1.c:51:9 punctuator )
20071107-1.c:51:10 punctuator )
20071107-1.c:51:12 punctuator {
20071107-1.c:52:6 punctuator }
20071107-1.c:53:6 keyword else
20071107-1.c:53:11 identifier g_assert_warning
20071107-1.c:53:27 punctuator (
20071107-1.c:53:28 punctuator )
20071107-1.c:53:29 punctuator ;
20071107-1.c:54:5 identifier result
20071107-1.c:54:12 punctuator =
20071107-1.c:54:14 identifier settings_install_property_parser
20071107-1.c:54:46 punctuator (
20071107-1.c:54:47 punctuator )
20071107-1.c:54:48 punctuator ;
20071107-1.c:55:6 keyword if
20071107-1.c:55:9 punctuator (
20071107-1.c:55:10 identifier __builtin_expect
20071107-1.c:55:27 punctuator (
20071107-1.c:55:28 identifier __extension__
20071107-1.c:55:42 punctuator (
20071107-1.c:55:43 punctuator {
20071107-1.c:56:8 keyword int
20071107-1.c:56:12 identifier _g_boolean_var_
20071107-1.c:56:27 punctuator ;
20071107-1.c:57:8 keyword if
20071107-1.c:57:11 punctuator (
20071107-1.c:57:12 identifier result
20071107-1.c:57:19 punctuator ==
20071107-1.c:57:22 identifier PROP_SPLIT_CURSOR
20071107-1.c:57:39 punctuator )
20071107-1.c:57:41 identifier _g_boolean_var_
20071107-1.c:57:57 punctuator =
20071107-1.c:57:59 constant 1
20071107-1.c:57:60 punctuator ;
20071107-1.c:58:8 keyword else
20071107-1.c:58:13 identifier _g_boolean_var_
20071107-1.c:58:29 punctuator =
20071107-1.c:58:31 constant 0
20071107-1.c:58:32 punctuator ;
20071107-1.c:59:8 identifier _g_boolean_var_
20071107-1.c:59:23 punctuator ;
20071107-1.c:60:4 punctuator }
20071107-1.c:60:5 punctuator )
20071107-1.c:60:6 punctuator ,
20071107-1.c:60:8 constant 1
20071107-1.c:60:9 punctuator )
20071107-1.c:60:10 punctuator )
20071107-1.c:60:12 punctuator {
20071107-1.c:61:6 punctuator }
20071107-1.c:62:6 keyword else
20071107-1.c:62:11 identifier g_assert_warning
20071107-1.c:62:27 punctuator (
20071107-1.c:62:28 punctuator )
20071107-1.c:62:29 punctuator ;
20071107-1.c:63:5 identifier result
20071107-1.c:63:12 punctuator =
20071107-1.c:63:14 identifier settings_install_property_parser
20071107-1.c:63:46 punctuator (
20071107-1.c:63:47 punctuator )
20071107-1.c:63:48 punctuator ;
20071107-1.c:64:6 keyword if
20071107-1.c:64:9 punctuator (
20071107-1.c:64:10 identifier __builtin_expect
20071107-1.c:64:27 punctuator (
20071107-1.c:64:28 identifier __extension__
20071107-1.c:64:42 punctuator (
20071107-1.c:64:43 punctuator {
20071107-1.c:65:8 keyword int
20071107-1.c:65:12 identifier _g_boolean_var_
20071107-1.c:65:27 punctuator ;
20071107-1.c:66:8 keyword if
20071107-1.c:66:11 punctuator (
20071107-1.c:66:12 identifier result
20071107-1.c:66:19 punctuator ==
20071107-1.c:66:22 identifier PROP_THEME_NAME
20071107-1.c:66:37 punctuator )
20071107-1.c:66:39 identifier _g_boolean_var_
20071107-1.c:66:55 punctuator =
20071107-1.c:66:57 constant 1
20071107-1.c:66:58 punctuator ;
20071107-1.c:67:8 keyword else
20071107-1.c:67:13 identifier _g_boolean_var_
20071107-1.c:67:29 punctuator =
20071107-1.c:67:31 constant 0
20071107-1.c:67:32 punctuator ;
20071107-1.c:68:8 identifier _g_boolean_var_
20071107-1.c:68:23 punctuator ;
20071107-1.c:69:4 punctuator }
20071107-1.c:69:5 punctuator )
20071107-1.c:69:6 punctuator ,
20071107-1.c:69:8 constant 1
20071107-1.c:69:9 punctuator )
20071107-1.c:69:10 punctuator )
20071107-1.c:69:12 punctuator {
20071107-1.c:70:6 punctuator }
20071107-1.c:71:6 keyword else
20071107-1.c:71:11 identifier g_assert_warning
20071107-1.c:71:27 punctuator (
20071107-1.c:71:28 punctuator )
20071107-1.c:71:29 punctuator ;
20071107-1.c:72:5 identifier result
20071107-1.c:72:12 punctuator =
20071107-1.c:72:14 identifier settings_install_property_parser
20071107-1.c:72:46 punctuator (
20071107-1.c:72:47 punctuator )
20071107-1.c:72:48 punctuator ;
20071107-1.c:73:6 keyword if
20071107-1.c:73:9 punctuator (
20071107-1.c:73:10 identifier __builtin_expect
20071107-1.c:73:27 punctuator (
20071107-1.c:73:28 identifier __extension__
20071107-1.c:73:42 punctuator (
20071107-1.c:73:43 punctuator {
20071107-1.c:74:8 keyword int
20071107-1.c:74:12 identifier _g_boolean_var_
20071107-1.c:74:27 punctuator ;
20071107-1.c:75:8 keyword if
20071107-1.c:75:11 punctuator (
20071107-1.c:75:12 identifier result
20071107-1.c:75:19 punctuator ==
20071107-1.c:75:22 identifier PROP_ICON_THEME_NAME
20071107-1.c:75:42 punctuator )
20071107-1.c:75:44 identifier _g_boolean_var_
20071107-1.c:75:60 punctuator =
20071107-1.c:75:62 constant 1
20071107-1.c:75:63 punctuator ;
20071107-1.c:76:8 keyword else
20071107-1.c:76:13 identifier _g_boolean_var_
20071107-1.c:76:29 punctuator =
20071107-1.c:76:31 constant 0
20071107-1.c:76:32 punctuator ;
20071107-1.c:77:8 identifier _g_boolean_var_
20071107-1.c:77:23 punctuator ;
20071107-1.c:78:4 punctuator }
20071107-1.c:78:5 punctuator )
20071107-1.c:78:6 punctuator ,
20071107-1.c:78:8 constant 1
20071107-1.c:78:9 punctuator )
20071107-1.c:78:10 punctuator )
20071107-1.c:78:12 punctuator {
20071107-1.c:79:6 punctuator }
20071107-1.c:80:6 keyword else
20071107-1.c:80:11 identifier g_assert_warning
20071107-1.c:80:27 punctuator (
20071107-1.c:80:28 punctuator )
20071107-1.c:80:29 punctuator ;
20071107-1.c:81:5 identifier result
20071107-1.c:81:12 punctuator =
20071107-1.c:81:14 identifier settings_install_property_parser
20071107-1.c:81:46 punctuator (
20071107-1.c:81:47 punctuator )
20071107-1.c:81:48 punctuator ;
20071107-1.c:82:6 keyword if
20071107-1.c:82:9 punctuator (
20071107-1.c:82:10 identifier __builtin_expect
20071107-1.c:82:27 punctuator (
20071107-1.c:82:28 identifier __extension__
20071107-1.c:82:42 punctuator (
20071107-1.c:82:43 punctuator {
20071107-1.c:83:8 keyword int
20071107-1.c:83:12 identifier _g_boolean_var_
20071107-1.c:83:27 punctuator ;
20071107-1.c:84:8 keyword if
20071107-1.c:84:11 punctuator (
20071107-1.c:84:12 identifier result
20071107-1.c:84:19 punctuator ==
20071107-1.c:84:22 identifier PROP_FALLBACK_ICON_THEME
20071107-1.c:84:46 punctuator )
20071107-1.c:84:48 identifier _g_boolean_var_
20071107-1.c:84:64 punctuator =
20071107-1.c:84:66 constant 1
20071107-1.c:84:67 punctuator ;
20071107-1.c:85:8 keyword else
20071107-1.c:85:13 identifier _g_boolean_var_
20071107-1.c:85:29 punctuator =
20071107-1.c:85:31 constant 0
20071107-1.c:85:32 punctuator ;
20071107-1.c:86:8 identifier _g_boolean_var_
20071107-1.c:86:23 punctuator ;
20071107-1.c:87:4 punctuator }
20071107-1.c:87:5 punctuator )
20071107-1.c:87:6 punctuator ,
20071107-1.c:87:8 constant 1
20071107-1.c:87:9 punctuator )
20071107-1.c:87:10 punctuator )
20071107-1.c:87:12 punctuator {
20071107-1.c:88:6 punctuator }
20071107-1.c:89:6 keyword else
20071107-1.c:89:11 identifier g_assert_warning
20071107-1.c:89:27 punctuator (
20071107-1.c:89:28 punctuator )
20071107-1.c:89:29 punctuator ;
20071107-1.c:90:5 identifier result
20071107-1.c:90:12 punctuator =
20071107-1.c:90:14 identifier settings_install_property_parser
20071107-1.c:90:46 punctuator (
20071107-1.c:90:47 punctuator )
20071107-1.c:90:48 punctuator ;
20071107-1.c:91:6 keyword if
20071107-1.c:91:9 punctuator (
20071107-1.c:91:10 identifier __builtin_expect
20071107-1.c:91:27 punctuator (
20071107-1.c:91:28 identifier __extension__
20071107-1.c:91:42 punctuator (
20071107-1.c:91:43 punctuator {
20071107-1.c:92:8 keyword int
20071107-1.c:92:12 identifier _g_boolean_var_
20071107-1.c:92:27 punctuator ;
20071107-1.c:93:8 keyword if
20071107-1.c:93:11 punctuator (
20071107-1.c:93:12 identifier result
20071107-1.c:93:19 punctuator ==
20071107-1.c:93:22 identifier PROP_KEY_THEME_NAME
20071107-1.c:93:41 punctuator )
20071107-1.c:93:43 identifier _g_boolean_var_
20071107-1.c:93:59 punctuator =
20071107-1.c:93:61 constant 1
20071107-1.c:93:62 punctuator ;
20071107-1.c:94:8 keyword else
20071107-1.c:94:13 identifier _g_boolean_var_
20071107-1.c:94:29 punctuator =
20071107-1.c:94:31 constant 0
20071107-1.c:94:32 punctuator ;
20071107-1.c:95:8 identifier _g_boolean_var_
20071107-1.c:95:23 punctuator ;
20071107-1.c:96:4 punctuator }
20071107-1.c:96:5 punctuator )
20071107-1.c:96:6 punctuator ,
20071107-1.c:96:8 constant 1
20071107-1.c:96:9 punctuator )
20071107-1.c:96:10 punctuator )
20071107-1.c:96:12 punctuator {
20071107-1.c:97:6 punctuator }
20071107-1.c:98:6 keyword else
20071107-1.c:98:11 identifier g_assert_warning
20071107-1.c:98:27 punctuator (
20071107-1.c:98:28 punctuator )
20071107-1.c:98:29 punctuator ;
20071107-1.c:99:5 identifier result
20071107-1.c:99:12 punctuator =
20071107-1.c:99:14 identifier settings_install_property_parser
20071107-1.c:99:46 punctuator (
20071107-1.c:99:47 punctuator )
20071107-1.c:99:48 punctuator ;
20071107-1.c:100:6 keyword if
20071107-1.c:100:9 punctuator (
20071107-1.c:100:10 identifier __builtin_expect
20071107-1.c:100:27 punctuator (
20071107-1.c:100:28 identifier __extension__
20071107-1.c:100:42 punctuator (
20071107-1.c:100:43 punctuator {
20071107-1.c:101:8 keyword int
20071107-1.c:101:12 identifier _g_boolean_var_
20071107-1.c:101:27 punctuator ;
20071107-1.c:102:8 keyword if
20071107-1.c:102:11 punctuator (
20071107-1.c:102:12 identifier result
20071107-1.c:102:19 punctuator ==
20071107-1.c:102:22 identifier PROP_MENU_BAR_ACCEL
20071107-1.c:102:41 punctuator )
20071107-1.c:102:43 identifier _g_boolean_var_
20071107-1.c:102:59 punctuator =
20071107-1.c:102:61 constant 1
20071107-1.c:102:62 punctuator ;
20071107-1.c:103:8 keyword else
20071107-1.c:103:13 identifier _g_boolean_var_
20071107-1.c:103:29 punctuator =
20071107-1.c:103:31 constant 0
20071107-1.c:103:32 punctuator ;
20071107-1.c:104:8 identifier _g_boolean_var_
20071107-1.c:104:23 punctuator ;
20071107-1.c:105:4 punctuator }
20071107-1.c:105:5 punctuator )
20071107-1.c:105:6 punctuator ,
20071107-1.c:105:8 constant 1
20071107-1.c:105:9 punctuator )
20071107-1.c:105:10 punctuator )
20071107-1.c:105:12 punctuator {
20071107-1.c:106:6 punctuator }
20071107-1.c:107:6 keyword else
20071107-1.c:107:11 identifier g_assert_warning
20071107-1.c:107:27 punctuator (
20071107-1.c:107:28 punctuator )
20071107-1.c:107:29 punctuator ;
20071107-1.c:108:5 identifier result
20071107-1.c:108:12 punctuator =
20071107-1.c:108:14 identifier settings_install_property_parser
20071107-1.c:108:46 punctuator (
20071107-1.c:108:47 punctuator )
20071107-1.c:108:48 punctuator ;
20071107-1.c:109:6 keyword if
20071107-1.c:109:9 punctuator (
20071107-1.c:109:10 identifier __builtin_expect
20071107-1.c:109:27 punctuator (
20071107-1.c:109:28 identifier __extension__
20071107-1.c:109:42 punctuator (
20071107-1.c:109:43 punctuator {
20071107-1.c:110:8 keyword int
20071107-1.c:110:12 identifier _g_boolean_var_
20071107-1.c:110:27 punctuator ;
20071107-1.c:111:8 keyword if
20071107-1.c:111:11 punctuator (
20071107-1.c:111:12 identifier result
20071107-1.c:111:19 punctuator ==
20071107-1.c:111:22 identifier PROP_DND_DRAG_THRESHOLD
20071107-1.c:111:45 punctuator )
20071107-1.c:111:47 identifier _g_boolean_var_
20071107-1.c:111:63 punctuator =
20071107-1.c:111:65 constant 1
20071107-1.c:111:66 punctuator ;
20071107-1.c:112:8 keyword else
20071107-1.c:112:13 identifier _g_boolean_var_
20071107-1.c:112:29 punctuator =
20071107-1.c:112:31 constant 0
20071107-1.c:112:32 punctuator ;
20071107-1.c:113:8 identifier _g_boolean_var_
20071107-1.c:113:23 punctuator ;
20071107-1.c:114:4 punctuator }
20071107-1.c:114:5 punctuator )
20071107-1.c:114:6 punctuator ,
20071107-1.c:114:8 constant 1
20071107-1.c:114:9 punctuator )
20071107-1.c:114:10 punctuator )
20071107-1.c:114:12 punctuator {
20071107-1.c:115:6 punctuator }
20071107-1.c:116:6 keyword else
20071107-1.c:116:11 identifier g_assert_warning
20071107-1.c:116:27 punctuator (
20071107-1.c:116:28 punctuator )
20071107-1.c:116:29 punctuator ;
20071107-1.c:117:5 identifier result
20071107-1.c:117:12 punctuator =
20071107-1.c:117:14 identifier settings_install_property_parser
20071107-1.c:117:46 punctuator (
20071107-1.c:117:47 punctuator )
20071107-1.c:117:48 punctuator ;
20071107-1.c:118:6 keyword if
20071107-1.c:118:9 punctuator (
20071107-1.c:118:10 identifier __builtin_expect
20071107-1.c:118:27 punctuator (
20071107-1.c:118:28 identifier __extension__
20071107-1.c:118:42 punctuator (
20071107-1.c:118:43 punctuator {
20071107-1.c:119:8 keyword int
20071107-1.c:119:12 identifier _g_boolean_var_
20071107-1.c:119:27 punctuator ;
20071107-1.c:120:8 keyword if
20071107-1.c:120:11 punctuator (
20071107-1.c:120:12 identifier result
20071107-1.c:120:19 punctuator ==
20071107-1.c:120:22 identifier PROP_FONT_NAME
20071107-1.c:120:36 punctuator )
20071107-1.c:120:38 identifier _g_boolean_var_
20071107-1.c:120:54 punctuator =
20071107-1.c:120:56 constant 1
20071107-1.c:120:57 punctuator ;
20071107-1.c:121:8 keyword else
20071107-1.c:121:13 identifier _g_boolean_var_
20071107-1.c:121:29 punctuator =
20071107-1.c:121:31 constant 0
20071107-1.c:121:32 punctuator ;
20071107-1.c:122:8 identifier _g_boolean_var_
20071107-1.c:122:23 punctuator ;
20071107-1.c:123:4 punctuator }
20071107-1.c:123:5 punctuator )
20071107-1.c:123:6 punctuator ,
20071107-1.c:123:8 constant 1
20071107-1.c:123:9 punctuator )
20071107-1.c:123:10 punctuator )
20071107-1.c:123:12 punctuator {
20071107-1.c:124:6 punctuator }
20071107-1.c:125:6 keyword else
20071107-1.c:125:11 identifier g_assert_warning
20071107-1.c:125:27 punctuator (
20071107-1.c:125:28 punctuator )
20071107-1.c:125:29 punctuator ;
20071107-1.c:126:5 identifier result
20071107-1.c:126:12 punctuator =
20071107-1.c:126:14 identifier settings_install_property_parser
20071107-1.c:126:46 punctuator (
20071107-1.c:126:47 punctuator )
20071107-1.c:126:48 punctuator ;
20071107-1.c:127:6 keyword if
20071107-1.c:127:9 punctuator (
20071107-1.c:127:10 identifier __builtin_expect
20071107-1.c:127:27 punctuator (
20071107-1.c:127:28 identifier __extension__
20071107-1.c:127:42 punctuator (
20071107-1.c:127:43 punctuator {
20071107-1.c:128:8 keyword int
20071107-1.c:128:12 identifier _g_boolean_var_
20071107-1.c:128:27 punctuator ;
20071107-1.c:129:8 keyword if
20071107-1.c:129:11 punctuator (
20071107-1.c:129:12 identifier result
20071107-1.c:129:19 punctuator ==
20071107-1.c:129:22 identifier PROP_ICON_SIZES
20071107-1.c:129:37 punctuator )
20071107-1.c:129:39 identifier _g_boolean_var_
20071107-1.c:129:55 punctuator =
20071107-1.c:129:57 constant 1
20071107-1.c:129:58 punctuator ;
20071107-1.c:130:8 keyword else
20071107-1.c:130:13 identifier _g_boolean_var_
20071107-1.c:130:29 punctuator =
20071107-1.c:130:31 constant 0
20071107-1.c:130:32 punctuator ;
20071107-1.c:131:8 identifier _g_boolean_var_
20071107-1.c:131:23 punctuator ;
20071107-1.c:132:4 punctuator }
20071107-1.c:132:5 punctuator )
20071107-1.c:132:6 punctuator ,
20071107-1.c:132:8 constant 1
20071107-1.c:132:9 punctuator )
20071107-1.c:132:10 punctuator )
20071107-1.c:132:12 punctuator {
20071107-1.c:133:6 punctuator }
20071107-1.c:134:6 keyword else
20071107-1.c:134:11 identifier g_assert_warning
20071107-1.c:134:27 punctuator (
20071107-1.c:134:28 punctuator )
20071107-1.c:134:29 punctuator ;
20071107-1.c:135:5 identifier result
20071107-1.c:135:12 punctuator =
20071107-1.c:135:14 identifier settings_install_property_parser
20071107-1.c:135:46 punctuator (
20071107-1.c:135:47 punctuator )
20071107-1.c:135:48 punctuator ;
20071107-1.c:136:6 keyword if
20071107-1.c:136:9 punctuator (
20071107-1.c:136:10 identifier __builtin_expect
20071107-1.c:136:27 punctuator (
20071107-1.c:136:28 identifier __extension__
20071107-1.c:136:42 punctuator (
20071107-1.c:136:43 punctuator {
20071107-1.c:137:8 keyword int
20071107-1.c:137:12 identifier _g_boolean_var_
20071107-1.c:137:27 punctuator ;
20071107-1.c:138:8 keyword if
20071107-1.c:138:11 punctuator (
20071107-1.c:138:12 identifier result
20071107-1.c:138:19 punctuator ==
20071107-1.c:138:22 identifier PROP_MODULES
20071107-1.c:138:34 punctuator )
20071107-1.c:138:36 identifier _g_boolean_var_
20071107-1.c:138:52 punctuator =
20071107-1.c:138:54 constant 1
20071107-1.c:138:55 punctuator ;
20071107-1.c:139:8 keyword else
20071107-1.c:139:13 identifier _g_boolean_var_
20071107-1.c:139:29 punctuator =
20071107-1.c:139:31 constant 0
20071107-1.c:139:32 punctuator ;
20071107-1.c:140:8 identifier _g_boolean_var_
20071107-1.c:140:23 punctuator ;
20071107-1.c:141:4 punctuator }
20071107-1.c:141:5 punctuator )
20071107-1.c:141:6 punctuator ,
20071107-1.c:141:8 constant 1
20071107-1.c:141:9 punctuator )
20071107-1.c:141:10 punctuator )
20071107-1.c:141:12 punctuator {
20071107-1.c:142:6 punctuator }
20071107-1.c:143:6 keyword else
20071107-1.c:143:11 identifier g_assert_warning
20071107-1.c:143:27 punctuator (
20071107-1.c:143:28 punctuator )
20071107-1.c:143:29 punctuator ;
20071107-1.c:144:5 identifier result
20071107-1.c:144:12 punctuator =
20071107-1.c:144:14 identifier settings_install_property_parser
20071107-1.c:144:46 punctuator (
20071107-1.c:144:47 punctuator )
20071107-1.c:144:48 punctuator ;
20071107-1.c:145:6 keyword if
20071107-1.c:145:9 punctuator (
20071107-1.c:145:10 identifier __builtin_expect
20071107-1.c:145:27 punctuator (
20071107-1.c:145:28 identifier __extension__
20071107-1.c:145:42 punctuator (
20071107-1.c:145:43 punctuator {
20071107-1.c:146:8 keyword int
20071107-1.c:146:12 identifier _g_boolean_var_
20071107-1.c:146:27 punctuator ;
20071107-1.c:147:8 keyword if
20071107-1.c:147:11 punctuator (
20071107-1.c:147:12 identifier result
20071107-1.c:147:19 punctuator ==
20071107-1.c:147:22 identifier PROP_XFT_ANTIALIAS
20071107-1.c:147:40 punctuator )
20071107-1.c:147:42 identifier _g_boolean_var_
20071107-1.c:147:58 punctuator =
20071107-1.c:147:60 constant 1
20071107-1.c:147:61 punctuator ;
20071107-1.c:148:8 keyword else
20071107-1.c:148:13 identifier _g_boolean_var_
20071107-1.c:148:29 punctuator =
20071107-1.c:148:31 constant 0
20071107-1.c:148:32 punctuator ;
20071107-1.c:149:8 identifier _g_boolean_var_
20071107-1.c:149:23 punctuator ;
20071107-1.c:150:4 punctuator }
20071107-1.c:150:5 punctuator )
20071107-1.c:150:6 punctuator ,
20071107-1.c:150:8 constant 1
20071107-1.c:150:9 punctuator )
20071107-1.c:150:10 punctuator )
20071107-1.c:150:12 punctuator {
20071107-1.c:151:6 punctuator }
20071107-1.c:152:6 keyword else
20071107-1.c:152:11 identifier g_assert_warning
20071107-1.c:152:27 punctuator (
20071107-1.c:152:28 punctuator )
20071107-1.c:152:29 punctuator ;
20071107-1.c:153:5 identifier result
20071107-1.c:153:12 punctuator =
20071107-1.c:153:14 identifier settings_install_property_parser
20071107-1.c:153:46 punctuator (
20071107-1.c:153:47 punctuator )
20071107-1.c:153:48 punctuator ;
20071107-1.c:154:6 keyword if
20071107-1.c:154:9 punctuator (
20071107-1.c:154:10 identifier __builtin_expect
20071107-1.c:154:27 punctuator (
20071107-1.c:154:28 identifier __extension__
20071107-1.c:154:42 punctuator (
20071107-1.c:154:43 punctuator {
20071107-1.c:155:8 keyword int
20071107-1.c:155:12 identifier _g_boolean_var_
20071107-1.c:155:27 punctuator ;
20071107-1.c:156:8 keyword if
20071107-1.c:156:11 punctuator (
20071107-1.c:156:12 identifier result
20071107-1.c:156:19 punctuator ==
20071107-1.c:156:22 identifier PROP_XFT_HINTING
20071107-1.c:156:38 punctuator )
20071107-1.c:156:40 identifier _g_boolean_var_
20071107-1.c:156:56 punctuator =
20071107-1.c:156:58 constant 1
20071107-1.c:156:59 punctuator ;
20071107-1.c:157:8 keyword else
20071107-1.c:157:13 identifier _g_boolean_var_
20071107-1.c:157:29 punctuator =
20071107-1.c:157:31 constant 0
20071107-1.c:157:32 punctuator ;
20071107-1.c:158:8 identifier _g_boolean_var_
20071107-1.c:158:23 punctuator ;
20071107-1.c:159:4 punctuator }
20071107-1.c:159:5 punctuator )
20071107-1.c:159:6 punctuator ,
20071107-1.c:159:8 constant 1
20071107-1.c:159:9 punctuator )
20071107-1.c:159:10 punctuator )
20071107-1.c:159:12 punctuator {
20071107-1.c:160:6 punctuator }
20071107-1.c:161:6 keyword else
20071107-1.c:161:11 identifier g_assert_warning
20071107-1.c:161:27 punctuator (
20071107-1.c:161:28 punctuator )
20071107-1.c:161:29 punctuator ;
20071107-1.c:162:5 identifier result
20071107-1.c:162:12 punctuator =
20071107-1.c:162:14 identifier settings_install_property_parser
20071107-1.c:162:46 punctuator (
20071107-1.c:162:47 punctuator )
20071107-1.c:162:48 punctuator ;
20071107-1.c:163:6 keyword if
20071107-1.c:163:9 punctuator (
20071107-1.c:163:10 identifier __builtin_expect
20071107-1.c:163:27 punctuator (
20071107-1.c:163:28 identifier __extension__
20071107-1.c:163:42 punctuator (
20071107-1.c:163:43 punctuator {
20071107-1.c:164:8 keyword int
20071107-1.c:164:12 identifier _g_boolean_var_
20071107-1.c:164:27 punctuator ;
20071107-1.c:165:8 keyword if
20071107-1.c:165:11 punctuator (
20071107-1.c:165:12 identifier result
20071107-1.c:165:19 punctuator ==
20071107-1.c:165:22 identifier PROP_XFT_HINTSTYLE
20071107-1.c:165:40 punctuator )
20071107-1.c:165:42 identifier _g_boolean_var_
20071107-1.c:165:58 punctuator =
20071107-1.c:165:60 constant 1
20071107-1.c:165:61 punctuator ;
20071107-1.c:166:8 keyword else
20071107-1.c:166:13 identifier _g_boolean_var_
20071107-1.c:166:29 punctuator =
20071107-1.c:166:31 constant 0
20071107-1.c:166:32 punctuator ;
20071107-1.c:167:8 identifier _g_boolean_var_
20071107-1.c:167:23 punctuator ;
20071107-1.c:168:4 punctuator }
20071107-1.c:168:5 punctuator )
20071107-1.c:168:6 punctuator ,
20071107-1.c:168:8 constant 1
20071107-1.c:168:9 punctuator )
20071107-1.c:168:10 punctuator )
20071107-1.c:168:12 punctuator {
20071107-1.c:169:6 punctuator }
20071107-1.c:170:6 keyword else
20071107-1.c:170:11 identifier g_assert_warning
20071107-1.c:170:27 punctuator (
20071107-1.c:170:28 punctuator )
20071107-1.c:170:29 punctuator ;
20071107-1.c:171:5 identifier result
20071107-1.c:171:12 punctuator =
20071107-1.c:171:14 identifier settings_install_property_parser
20071107-1.c:171:46 punctuator (
20071107-1.c:171:47 punctuator )
20071107-1.c:171:48 punctuator ;
20071107-1.c:172:6 keyword if
20071107-1.c:172:9 punctuator (
20071107-1.c:172:10 identifier __builtin_expect
20071107-1.c:172:27 punctuator (
20071107-1.c:172:28 identifier __extension__
20071107-1.c:172:42 punctuator (
20071107-1.c:172:43 punctuator {
20071107-1.c:173:8 keyword int
20071107-1.c:173:12 identifier _g_boolean_var_
20071107-1.c:173:27 punctuator ;
20071107-1.c:174:8 keyword if
20071107-1.c:174:11 punctuator (
20071107-1.c:174:12 identifier result
20071107-1.c:174:19 punctuator ==
20071107-1.c:174:22 identifier PROP_XFT_RGBA
20071107-1.c:174:35 punctuator )
20071107-1.c:174:37 identifier _g_boolean_var_
20071107-1.c:174:53 punctuator =
20071107-1.c:174:55 constant 1
20071107-1.c:174:56 punctuator ;
20071107-1.c:175:8 keyword else
20071107-1.c:175:13 identifier _g_boolean_var_
20071107-1.c:175:29 punctuator =
20071107-1.c:175:31 constant 0
20071107-1.c:175:32 punctuator ;
20071107-1.c:176:8 identifier _g_boolean_var_
20071107-1.c:176:23 punctuator ;
20071107-1.c:177:4 punctuator }
20071107-1.c:177:5 punctuator )
20071107-1.c:177:6 punctuator ,
20071107-1.c:177:8 constant 1
20071107-1.c:177:9 punctuator )
20071107-1.c:177:10 punctuator )
20071107-1.c:177:12 punctuator {
20071107-1.c:178:6 punctuator }
20071107-1.c:179:6 keyword else
20071107-1.c:179:11 identifier g_assert_warning
20071107-1.c:179:27 punctuator (
20071107-1.c:179:28 punctuator )
20071107-1.c:179:29 punctuator ;
20071107-1.c:180:5 identifier result
20071107-1.c:180:12 punctuator =
20071107-1.c:180:14 identifier settings_install_property_parser
20071107-1.c:180:46 punctuator (
20071107-1.c:180:47 punctuator )
20071107-1.c:180:48 punctuator ;
20071107-1.c:181:6 keyword if
20071107-1.c:181:9 punctuator (
20071107-1.c:181:10 identifier __builtin_expect
20071107-1.c:181:27 punctuator (
20071107-1.c:181:28 identifier __extension__
20071107-1.c:181:42 punctuator (
20071107-1.c:181:43 punctuator {
20071107-1.c:182:8 keyword int
20071107-1.c:182:12 identifier _g_boolean_var_
20071107-1.c:182:27 punctuator ;
20071107-1.c:183:8 keyword if
20071107-1.c:183:11 punctuator (
20071107-1.c:183:12 identifier result
20071107-1.c:183:19 punctuator ==
20071107-1.c:183:22 identifier PROP_XFT_DPI
20071107-1.c:183:34 punctuator )
20071107-1.c:183:36 identifier _g_boolean_var_
20071107-1.c:183:52 punctuator =
20071107-1.c:183:54 constant 1
20071107-1.c:183:55 punctuator ;
20071107-1.c:184:8 keyword else
20071107-1.c:184:13 identifier _g_boolean_var_
20071107-1.c:184:29 punctuator =
20071107-1.c:184:31 constant 0
20071107-1.c:184:32 punctuator ;
20071107-1.c:185:8 identifier _g_boolean_var_
20071107-1.c:185:23 punctuator ;
20071107-1.c:186:4 punctuator }
20071107-1.c:186:5 punctuator )
20071107-1.c:186:6 punctuator ,
20071107-1.c:186:8 constant 1
20071107-1.c:186:9 punctuator )
20071107-1.c:186:10 punctuator )
20071107-1.c:186:12 punctuator {
20071107-1.c:187:6 punctuator }
20071107-1.c:188:6 keyword else
20071107-1.c:188:11 identifier g_assert_warning
20071107-1.c:188:27 punctuator (
20071107-1.c:188:28 punctuator )
20071107-1.c:188:29 punctuator ;
20071107-1.c:189:5 identifier result
20071107-1.c:189:12 punctuator =
20071107-1.c:189:14 identifier settings_install_property_parser
20071107-1.c:189:46 punctuator (
20071107-1.c:189:47 punctuator )
20071107-1.c:189:48 punctuator ;
20071107-1.c:190:6 keyword if
20071107-1.c:190:9 punctuator (
20071107-1.c:190:10 identifier __builtin_expect
20071107-1.c:190:27 punctuator (
20071107-1.c:190:28 identifier __extension__
20071107-1.c:190:42 punctuator (
20071107-1.c:190:43 punctuator {
20071107-1.c:191:8 keyword int
20071107-1.c:191:12 identifier _g_boolean_var_
20071107-1.c:191:27 punctuator ;
20071107-1.c:192:8 keyword if
20071107-1.c:192:11 punctuator (
20071107-1.c:192:12 identifier result
20071107-1.c:192:19 punctuator ==
20071107-1.c:192:22 identifier PROP_CURSOR_THEME_NAME
20071107-1.c:192:44 punctuator )
20071107-1.c:192:46 identifier _g_boolean_var_
20071107-1.c:192:62 punctuator =
20071107-1.c:192:64 constant 1
20071107-1.c:192:65 punctuator ;
20071107-1.c:193:8 keyword else
20071107-1.c:193:13 identifier _g_boolean_var_
20071107-1.c:193:29 punctuator =
20071107-1.c:193:31 constant 0
20071107-1.c:193:32 punctuator ;
20071107-1.c:194:8 identifier _g_boolean_var_
20071107-1.c:194:23 punctuator ;
20071107-1.c:195:4 punctuator }
20071107-1.c:195:5 punctuator )
20071107-1.c:195:6 punctuator ,
20071107-1.c:195:8 constant 1
20071107-1.c:195:9 punctuator )
20071107-1.c:195:10 punctuator )
20071107-1.c:195:12 punctuator {
20071107-1.c:196:6 punctuator }
20071107-1.c:197:6 keyword else
20071107-1.c:197:11 identifier g_assert_warning
20071107-1.c:197:27 punctuator (
20071107-1.c:197:28 punctuator )
20071107-1.c:197:29 punctuator ;
20071107-1.c:198:5 identifier result
20071107-1.c:198:12 punctuator =
20071107-1.c:198:14 identifier settings_install_property_parser
20071107-1.c:198:46 punctuator (
20071107-1.c:198:47 punctuator )
20071107-1.c:198:48 punctuator ;
20071107-1.c:199:6 keyword if
20071107-1.c:199:9 punctuator (
20071107-1.c:199:10 identifier __builtin_expect
20071107-1.c:199:27 punctuator (
20071107-1.c:199:28 identifier __extension__
20071107-1.c:199:42 punctuator (
20071107-1.c:199:43 punctuator {
20071107-1.c:200:8 keyword int
20071107-1.c:200:12 identifier _g_boolean_var_
20071107-1.c:200:27 punctuator ;
20071107-1.c:201:8 keyword if
20071107-1.c:201:11 punctuator (
20071107-1.c:201:12 identifier result
20071107-1.c:201:19 punctuator ==
20071107-1.c:201:22 identifier PROP_CURSOR_THEME_SIZE
20071107-1.c:201:44 punctuator )
20071107-1.c:201:46 identifier _g_boolean_var_
20071107-1.c:201:62 punctuator =
20071107-1.c:201:64 constant 1
20071107-1.c:201:65 punctuator ;
20071107-1.c:202:8 keyword else
20071107-1.c:202:13 identifier _g_boolean_var_
20071107-1.c:202:29 punctuator =
20071107-1.c:202:31 constant 0
20071107-1.c:202:32 punctuator ;
20071107-1.c:203:8 identifier _g_boolean_var_
20071107-1.c:203:23 punctuator ;
20071107-1.c:204:4 punctuator }
20071107-1.c:204:5 punctuator )
20071107-1.c:204:6 punctuator ,
20071107-1.c:204:8 constant 1
20071107-1.c:204:9 punctuator )
20071107-1.c:204:10 punctuator )
20071107-1.c:204:12 punctuator {
20071107-1.c:205:6 punctuator }
20071107-1.c:206:6 keyword else
20071107-1.c:206:11 identifier g_assert_warning
20071107-1.c:206:27 punctuator (
20071107-1.c:206:28 punctuator )
20071107-1.c:206:29 punctuator ;
20071107-1.c:207:5 identifier result
20071107-1.c:207:12 punctuator =
20071107-1.c:207:14 identifier settings_install_property_parser
20071107-1.c:207:46 punctuator (
20071107-1.c:207:47 punctuator )
20071107-1.c:207:48 punctuator ;
20071107-1.c:208:6 keyword if
20071107-1.c:208:9 punctuator (
20071107-1.c:208:10 identifier __builtin_expect
20071107-1.c:208:27 punctuator (
20071107-1.c:208:28 identifier __extension__
20071107-1.c:208:42 punctuator (
20071107-1.c:208:43 punctuator {
20071107-1.c:209:8 keyword int
20071107-1.c:209:12 identifier _g_boolean_var_
20071107-1.c:209:27 punctuator ;
20071107-1.c:210:8 keyword if
20071107-1.c:210:11 punctuator (
20071107-1.c:210:12 identifier result
20071107-1.c:210:19 punctuator ==
20071107-1.c:210:22 identifier PROP_ALTERNATIVE_BUTTON_ORDER
20071107-1.c:210:51 punctuator )
20071107-1.c:210:53 identifier _g_boolean_var_
20071107-1.c:210:69 punctuator =
20071107-1.c:210:71 constant 1
20071107-1.c:210:72 punctuator ;
20071107-1.c:211:8 keyword else
20071107-1.c:211:13 identifier _g_boolean_var_
20071107-1.c:211:29 punctuator =
20071107-1.c:211:31 constant 0
20071107-1.c:211:32 punctuator ;
20071107-1.c:212:8 identifier _g_boolean_var_
20071107-1.c:212:23 punctuator ;
20071107-1.c:213:4 punctuator }
20071107-1.c:213:5 punctuator )
20071107-1.c:213:6 punctuator ,
20071107-1.c:213:8 constant 1
20071107-1.c:213:9 punctuator )
20071107-1.c:213:10 punctuator )
20071107-1.c:213:12 punctuator {
20071107-1.c:214:6 punctuator }
20071107-1.c:215:6 keyword else
20071107-1.c:215:11 identifier g_assert_warning
20071107-1.c:215:27 punctuator (
20071107-1.c:215:28 punctuator )
20071107-1.c:215:29 punctuator ;
20071107-1.c:216:5 identifier result
20071107-1.c:216:12 punctuator =
20071107-1.c:216:14 identifier settings_install_property_parser
20071107-1.c:216:46 punctuator (
20071107-1.c:216:47 punctuator )
20071107-1.c:216:48 punctuator ;
20071107-1.c:217:6 keyword if
20071107-1.c:217:9 punctuator (
20071107-1.c:217:10 identifier __builtin_expect
20071107-1.c:217:27 punctuator (
20071107-1.c:217:28 identifier __extension__
20071107-1.c:217:42 punctuator (
20071107-1.c:217:43 punctuator {
20071107-1.c:218:8 keyword int
20071107-1.c:218:12 identifier _g_boolean_var_
20071107-1.c:218:27 punctuator ;
20071107-1.c:219:8 keyword if
20071107-1.c:219:11 punctuator (
20071107-1.c:219:12 identifier result
20071107-1.c:219:19 punctuator ==
20071107-1.c:219:22 identifier PROP_ALTERNATIVE_SORT_ARROWS
20071107-1.c:219:50 punctuator )
20071107-1.c:219:52 identifier _g_boolean_var_
20071107-1.c:219:68 punctuator =
20071107-1.c:219:70 constant 1
20071107-1.c:219:71 punctuator ;
20071107-1.c:220:8 keyword else
20071107-1.c:220:13 identifier _g_boolean_var_
20071107-1.c:220:29 punctuator =
20071107-1.c:220:31 constant 0
20071107-1.c:220:32 punctuator ;
20071107-1.c:221:8 identifier _g_boolean_var_
20071107-1.c:221:23 punctuator ;
20071107-1.c:222:4 punctuator }
20071107-1.c:222:5 punctuator )
20071107-1.c:222:6 punctuator ,
20071107-1.c:222:8 constant 1
20071107-1.c:222:9 punctuator )
20071107-1.c:222:10 punctuator )
20071107-1.c:222:12 punctuator {
20071107-1.c:223:6 punctuator }
20071107-1.c:224:6 keyword else
20071107-1.c:224:11 identifier g_assert_warning
20071107-1.c:224:27 punctuator (
20071107-1.c:224:28 punctuator )
20071107-1.c:224:29 punctuator ;
20071107-1.c:225:5 identifier result
20071107-1.c:225:12 punctuator =
20071107-1.c:225:14 identifier settings_install_property_parser
20071107-1.c:225:46 punctuator (
20071107-1.c:225:47 punctuator )
20071107-1.c:225:48 punctuator ;
20071107-1.c:226:6 keyword if
20071107-1.c:226:9 punctuator (
20071107-1.c:226:10 identifier __builtin_expect
20071107-1.c:226:27 punctuator (
20071107-1.c:226:28 identifier __extension__
20071107-1.c:226:42 punctuator (
20071107-1.c:226:43 punctuator {
20071107-1.c:227:8 keyword int
20071107-1.c:227:12 identifier _g_boolean_var_
20071107-1.c:227:27 punctuator ;
20071107-1.c:228:8 keyword if
20071107-1.c:228:11 punctuator (
20071107-1.c:228:12 identifier result
20071107-1.c:228:19 punctuator ==
20071107-1.c:228:22 identifier PROP_SHOW_INPUT_METHOD_MENU
20071107-1.c:228:49 punctuator )
20071107-1.c:228:51 identifier _g_boolean_var_
20071107-1.c:228:67 punctuator =
20071107-1.c:228:69 constant 1
20071107-1.c:228:70 punctuator ;
20071107-1.c:229:8 keyword else
20071107-1.c:229:13 identifier _g_boolean_var_
20071107-1.c:229:29 punctuator =
20071107-1.c:229:31 constant 0
20071107-1.c:229:32 punctuator ;
20071107-1.c:230:8 identifier _g_boolean_var_
20071107-1.c:230:23 punctuator ;
20071107-1.c:231:4 punctuator }
20071107-1.c:231:5 punctuator )
20071107-1.c:231:6 punctuator ,
20071107-1.c:231:8 constant 1
20071107-1.c:231:9 punctuator )
20071107-1.c:231:10 punctuator )
20071107-1.c:231:12 punctuator {
20071107-1.c:232:6 punctuator }
20071107-1.c:233:6 keyword else
20071107-1.c:233:11 identifier g_assert_warning
20071107-1.c:233:27 punctuator (
20071107-1.c:233:28 punctuator )
20071107-1.c:233:29 punctuator ;
20071107-1.c:234:5 identifier result
20071107-1.c:234:12 punctuator =
20071107-1.c:234:14 identifier settings_install_property_parser
20071107-1.c:234:46 punctuator (
20071107-1.c:234:47 punctuator )
20071107-1.c:234:48 punctuator ;
20071107-1.c:235:6 keyword if
20071107-1.c:235:9 punctuator (
20071107-1.c:235:10 identifier __builtin_expect
20071107-1.c:235:27 punctuator (
20071107-1.c:235:28 identifier __extension__
20071107-1.c:235:42 punctuator (
20071107-1.c:235:43 punctuator {
20071107-1.c:236:8 keyword int
20071107-1.c:236:12 identifier _g_boolean_var_
20071107-1.c:236:27 punctuator ;
20071107-1.c:237:8 keyword if
20071107-1.c:237:11 punctuator (
20071107-1.c:237:12 identifier result
20071107-1.c:237:19 punctuator ==
20071107-1.c:237:22 identifier PROP_SHOW_UNICODE_MENU
20071107-1.c:237:44 punctuator )
20071107-1.c:237:46 identifier _g_boolean_var_
20071107-1.c:237:62 punctuator =
20071107-1.c:237:64 constant 1
20071107-1.c:237:65 punctuator ;
20071107-1.c:238:8 keyword else
20071107-1.c:238:13 identifier _g_boolean_var_
20071107-1.c:238:29 punctuator =
20071107-1.c:238:31 constant 0
20071107-1.c:238:32 punctuator ;
20071107-1.c:239:8 identifier _g_boolean_var_
20071107-1.c:239:23 punctuator ;
20071107-1.c:240:4 punctuator }
20071107-1.c:240:5 punctuator )
20071107-1.c:240:6 punctuator ,
20071107-1.c:240:8 constant 1
20071107-1.c:240:9 punctuator )
20071107-1.c:240:10 punctuator )
20071107-1.c:240:12 punctuator {
20071107-1.c:241:6 punctuator }
20071107-1.c:242:6 keyword else
20071107-1.c:242:11 identifier g_assert_warning
20071107-1.c:242:27 punctuator (
20071107-1.c:242:28 punctuator )
20071107-1.c:242:29 punctuator ;
20071107-1.c:243:5 identifier result
20071107-1.c:243:12 punctuator =
20071107-1.c:243:14 identifier settings_install_property_parser
20071107-1.c:243:46 punctuator (
20071107-1.c:243:47 punctuator )
20071107-1.c:243:48 punctuator ;
20071107-1.c:244:6 keyword if
20071107-1.c:244:9 punctuator (
20071107-1.c:244:10 identifier __builtin_expect
20071107-1.c:244:27 punctuator (
20071107-1.c:244:28 identifier __extension__
20071107-1.c:244:42 punctuator (
20071107-1.c:244:43 punctuator {
20071107-1.c:245:8 keyword int
20071107-1.c:245:12 identifier _g_boolean_var_
20071107-1.c:245:27 punctuator ;
20071107-1.c:246:8 keyword if
20071107-1.c:246:11 punctuator (
20071107-1.c:246:12 identifier result
20071107-1.c:246:19 punctuator ==
20071107-1.c:246:22 identifier PROP_TOOLTIP_BROWSE_TIMEOUT
20071107-1.c:246:49 punctuator )
20071107-1.c:246:51 identifier _g_boolean_var_
20071107-1.c:246:67 punctuator =
20071107-1.c:246:69 constant 1
20071107-1.c:246:70 punctuator ;
20071107-1.c:247:8 keyword else
20071107-1.c:247:13 identifier _g_boolean_var_
20071107-1.c:247:29 punctuator =
20071107-1.c:247:31 constant 0
20071107-1.c:247:32 punctuator ;
20071107-1.c:248:8 identifier _g_boolean_var_
20071107-1.c:248:23 punctuator ;
20071107-1.c:249:4 punctuator }
20071107-1.c:249:5 punctuator )
20071107-1.c:249:6 punctuator ,
20071107-1.c:249:8 constant 1
20071107-1.c:249:9 punctuator )
20071107-1.c:249:10 punctuator )
20071107-1.c:249:12 punctuator {
20071107-1.c:250:6 punctuator }
20071107-1.c:251:6 keyword else
20071107-1.c:251:11 identifier g_assert_warning
20071107-1.c:251:27 punctuator (
20071107-1.c:251:28 punctuator )
20071107-1.c:251:29 punctuator ;
20071107-1.c:252:5 identifier result
20071107-1.c:252:12 punctuator =
20071107-1.c:252:14 identifier settings_install_property_parser
20071107-1.c:252:46 punctuator (
20071107-1.c:252:47 punctuator )
20071107-1.c:252:48 punctuator ;
20071107-1.c:253:6 keyword if
20071107-1.c:253:9 punctuator (
20071107-1.c:253:10 identifier __builtin_expect
20071107-1.c:253:27 punctuator (
20071107-1.c:253:28 identifier __extension__
20071107-1.c:253:42 punctuator (
20071107-1.c:253:43 punctuator {
20071107-1.c:254:8 keyword int
20071107-1.c:254:12 identifier _g_boolean_var_
20071107-1.c:254:27 punctuator ;
20071107-1.c:255:8 keyword if
20071107-1.c:255:11 punctuator (
20071107-1.c:255:12 identifier result
20071107-1.c:255:19 punctuator ==
20071107-1.c:255:22 identifier PROP_TOOLTIP_BROWSE_MODE_TIMEOUT
20071107-1.c:255:54 punctuator )
20071107-1.c:255:56 identifier _g_boolean_var_
20071107-1.c:255:72 punctuator =
20071107-1.c:255:74 constant 1
20071107-1.c:255:75 punctuator ;
20071107-1.c:256:8 keyword else
20071107-1.c:256:13 identifier _g_boolean_var_
20071107-1.c:256:29 punctuator =
20071107-1.c:256:31 constant 0
20071107-1.c:256:32 punctuator ;
20071107-1.c:257:8 identifier _g_boolean_var_
20071107-1.c:257:23 punctuator ;
20071107-1.c:258:4 punctuator }
20071107-1.c:258:5 punctuator )
20071107-1.c:258:6 punctuator ,
20071107-1.c:258:8 constant 1
20071107-1.c:258:9 punctuator )
20071107-1.c:258:10 punctuator )
20071107-1.c:258:12 punctuator {
20071107-1.c:259:6 punctuator }
20071107-1.c:260:6 keyword else
20071107-1.c:260:11 identifier g_assert_warning
20071107-1.c:260:27 punctuator (
20071107-1.c:260:28 punctuator )
20071107-1.c:260:29 punctuator ;
20071107-1.c:261:5 identifier result
20071107-1.c:261:12 punctuator =
20071107-1.c:261:14 identifier settings_install_property_parser
20071107-1.c:261:46 punctuator (
20071107-1.c:261:47 punctuator )
20071107-1.c:261:48 punctuator ;
20071107-1.c:262:6 keyword if
20071107-1.c:262:9 punctuator (
20071107-1.c:262:10 identifier __builtin_expect
20071107-1.c:262:27 punctuator (
20071107-1.c:262:28 identifier __extension__
20071107-1.c:262:42 punctuator (
20071107-1.c:262:43 punctuator {
20071107-1.c:263:8 keyword int
20071107-1.c:263:12 identifier _g_boolean_var_
20071107-1.c:263:27 punctuator ;
20071107-1.c:264:8 keyword if
20071107-1.c:264:11 punctuator (
20071107-1.c:264:12 identifier result
20071107-1.c:264:19 punctuator ==
20071107-1.c:264:22 identifier PROP_KEYNAV_CURSOR_ONLY
20071107-1.c:264:45 punctuator )
20071107-1.c:264:47 identifier _g_boolean_var_
20071107-1.c:264:63 punctuator =
20071107-1.c:264:65 constant 1
20071107-1.c:264:66 punctuator ;
20071107-1.c:265:8 keyword else
20071107-1.c:265:13 identifier _g_boolean_var_
20071107-1.c:265:29 punctuator =
20071107-1.c:265:31 constant 0
20071107-1.c:265:32 punctuator ;
20071107-1.c:266:8 identifier _g_boolean_var_
20071107-1.c:266:23 punctuator ;
20071107-1.c:267:4 punctuator }
20071107-1.c:267:5 punctuator )
20071107-1.c:267:6 punctuator ,
20071107-1.c:267:8 constant 1
20071107-1.c:267:9 punctuator )
20071107-1.c:267:10 punctuator )
20071107-1.c:267:12 punctuator {
20071107-1.c:268:6 punctuator }
20071107-1.c:269:6 keyword else
20071107-1.c:269:11 identifier g_assert_warning
20071107-1.c:269:27 punctuator (
20071107-1.c:269:28 punctuator )
20071107-1.c:269:29 punctuator ;
20071107-1.c:270:5 identifier result
20071107-1.c:270:12 punctuator =
20071107-1.c:270:14 identifier settings_install_property_parser
20071107-1.c:270:46 punctuator (
20071107-1.c:270:47 punctuator )
20071107-1.c:270:48 punctuator ;
20071107-1.c:271:6 keyword if
20071107-1.c:271:9 punctuator (
20071107-1.c:271:10 identifier __builtin_expect
20071107-1.c:271:27 punctuator (
20071107-1.c:271:28 identifier __extension__
20071107-1.c:271:42 punctuator (
20071107-1.c:271:43 punctuator {
20071107-1.c:272:8 keyword int
20071107-1.c:272:12 identifier _g_boolean_var_
20071107-1.c:272:27 punctuator ;
20071107-1.c:273:8 keyword if
20071107-1.c:273:11 punctuator (
20071107-1.c:273:12 identifier result
20071107-1.c:273:19 punctuator ==
20071107-1.c:273:22 identifier PROP_KEYNAV_WRAP_AROUND
20071107-1.c:273:45 punctuator )
20071107-1.c:273:47 identifier _g_boolean_var_
20071107-1.c:273:63 punctuator =
20071107-1.c:273:65 constant 1
20071107-1.c:273:66 punctuator ;
20071107-1.c:274:8 keyword else
20071107-1.c:274:13 identifier _g_boolean_var_
20071107-1.c:274:29 punctuator =
20071107-1.c:274:31 constant 0
20071107-1.c:274:32 punctuator ;
20071107-1.c:275:8 identifier _g_boolean_var_
20071107-1.c:275:23 punctuator ;
20071107-1.c:276:4 punctuator }
20071107-1.c:276:5 punctuator )
20071107-1.c:276:6 punctuator ,
20071107-1.c:276:8 constant 1
20071107-1.c:276:9 punctuator )
20071107-1.c:276:10 punctuator )
20071107-1.c:276:12 punctuator {
20071107-1.c:277:6 punctuator }
20071107-1.c:278:6 keyword else
20071107-1.c:278:11 identifier g_assert_warning
20071107-1.c:278:27 punctuator (
20071107-1.c:278:28 punctuator )
20071107-1.c:278:29 punctuator ;
20071107-1.c:279:5 identifier result
20071107-1.c:279:12 punctuator =
20071107-1.c:279:14 identifier settings_install_property_parser
20071107-1.c:279:46 punctuator (
20071107-1.c:279:47 punctuator )
20071107-1.c:279:48 punctuator ;
20071107-1.c:280:6 keyword if
20071107-1.c:280:9 punctuator (
20071107-1.c:280:10 identifier __builtin_expect
20071107-1.c:280:27 punctuator (
20071107-1.c:280:28 identifier __extension__
20071107-1.c:280:42 punctuator (
20071107-1.c:280:43 punctuator {
20071107-1.c:281:8 keyword int
20071107-1.c:281:12 identifier _g_boolean_var_
20071107-1.c:281:27 punctuator ;
20071107-1.c:282:8 keyword if
20071107-1.c:282:11 punctuator (
20071107-1.c:282:12 identifier result
20071107-1.c:282:19 punctuator ==
20071107-1.c:282:22 identifier PROP_ERROR_BELL
20071107-1.c:282:37 punctuator )
20071107-1.c:282:39 identifier _g_boolean_var_
20071107-1.c:282:55 punctuator =
20071107-1.c:282:57 constant 1
20071107-1.c:282:58 punctuator ;
20071107-1.c:283:8 keyword else
20071107-1.c:283:13 identifier _g_boolean_var_
20071107-1.c:283:29 punctuator =
20071107-1.c:283:31 constant 0
20071107-1.c:283:32 punctuator ;
20071107-1.c:284:8 identifier _g_boolean_var_
20071107-1.c:284:23 punctuator ;
20071107-1.c:285:4 punctuator }
20071107-1.c:285:5 punctuator )
20071107-1.c:285:6 punctuator ,
20071107-1.c:285:8 constant 1
20071107-1.c:285:9 punctuator )
20071107-1.c:285:10 punctuator )
20071107-1.c:285:12 punctuator {
20071107-1.c:286:6 punctuator }
20071107-1.c:287:6 keyword else
20071107-1.c:287:11 identifier g_assert_warning
20071107-1.c:287:27 punctuator (
20071107-1.c:287:28 punctuator )
20071107-1.c:287:29 punctuator ;
20071107-1.c:288:5 identifier result
20071107-1.c:288:12 punctuator =
20071107-1.c:288:14 identifier settings_install_property_parser
20071107-1.c:288:46 punctuator (
20071107-1.c:288:47 punctuator )
20071107-1.c:288:48 punctuator ;
20071107-1.c:289:6 keyword if
20071107-1.c:289:9 punctuator (
20071107-1.c:289:10 identifier __builtin_expect
20071107-1.c:289:27 punctuator (
20071107-1.c:289:28 identifier __extension__
20071107-1.c:289:42 punctuator (
20071107-1.c:289:43 punctuator {
20071107-1.c:290:8 keyword int
20071107-1.c:290:12 identifier _g_boolean_var_
20071107-1.c:290:27 punctuator ;
20071107-1.c:291:8 keyword if
20071107-1.c:291:11 punctuator (
20071107-1.c:291:12 identifier result
20071107-1.c:291:19 punctuator ==
20071107-1.c:291:22 identifier PROP_FILE_CHOOSER_BACKEND
20071107-1.c:291:47 punctuator )
20071107-1.c:291:49 identifier _g_boolean_var_
20071107-1.c:291:65 punctuator =
20071107-1.c:291:67 constant 1
20071107-1.c:291:68 punctuator ;
20071107-1.c:292:8 keyword else
20071107-1.c:292:13 identifier _g_boolean_var_
20071107-1.c:292:29 punctuator =
20071107-1.c:292:31 constant 0
20071107-1.c:292:32 punctuator ;
20071107-1.c:293:8 identifier _g_boolean_var_
20071107-1.c:293:23 punctuator ;
20071107-1.c:294:4 punctuator }
20071107-1.c:294:5 punctuator )
20071107-1.c:294:6 punctuator ,
20071107-1.c:294:8 constant 1
20071107-1.c:294:9 punctuator )
20071107-1.c:294:10 punctuator )
20071107-1.c:294:12 punctuator {
20071107-1.c:295:6 punctuator }
20071107-1.c:296:6 keyword else
20071107-1.c:296:11 identifier g_assert_warning
20071107-1.c:296:27 punctuator (
20071107-1.c:296:28 punctuator )
20071107-1.c:296:29 punctuator ;
20071107-1.c:297:5 identifier result
20071107-1.c:297:12 punctuator =
20071107-1.c:297:14 identifier settings_install_property_parser
20071107-1.c:297:46 punctuator (
20071107-1.c:297:47 punctuator )
20071107-1.c:297:48 punctuator ;
20071107-1.c:298:6 keyword if
20071107-1.c:298:9 punctuator (
20071107-1.c:298:10 identifier __builtin_expect
20071107-1.c:298:27 punctuator (
20071107-1.c:298:28 identifier __extension__
20071107-1.c:298:42 punctuator (
20071107-1.c:298:43 punctuator {
20071107-1.c:299:8 keyword int
20071107-1.c:299:12 identifier _g_boolean_var_
20071107-1.c:299:27 punctuator ;
20071107-1.c:300:8 keyword if
20071107-1.c:300:11 punctuator (
20071107-1.c:300:12 identifier result
20071107-1.c:300:19 punctuator ==
20071107-1.c:300:22 identifier PROP_PRINT_PREVIEW_COMMAND
20071107-1.c:300:48 punctuator )
20071107-1.c:300:50 identifier _g_boolean_var_
20071107-1.c:300:66 punctuator =
20071107-1.c:300:68 constant 1
20071107-1.c:300:69 punctuator ;
20071107-1.c:301:8 keyword else
20071107-1.c:301:13 identifier _g_boolean_var_
20071107-1.c:301:29 punctuator =
20071107-1.c:301:31 constant 0
20071107-1.c:301:32 punctuator ;
20071107-1.c:302:8 identifier _g_boolean_var_
20071107-1.c:302:23 punctuator ;
20071107-1.c:303:4 punctuator }
20071107-1.c:303:5 punctuator )
20071107-1.c:303:6 punctuator ,
20071107-1.c:303:8 constant 1
20071107-1.c:303:9 punctuator )
20071107-1.c:303:10 punctuator )
20071107-1.c:303:12 punctuator {
20071107-1.c:304:6 punctuator }
20071107-1.c:305:6 keyword else
20071107-1.c:305:11 identifier g_assert_warning
20071107-1.c:305:27 punctuator (
20071107-1.c:305:28 punctuator )
20071107-1.c:305:29 punctuator ;
20071107-1.c:306:5 identifier result
20071107-1.c:306:12 punctuator =
20071107-1.c:306:14 identifier settings_install_property_parser
20071107-1.c:306:46 punctuator (
20071107-1.c:306:47 punctuator )
20071107-1.c:306:48 punctuator ;
20071107-1.c:307:6 keyword if
20071107-1.c:307:9 punctuator (
20071107-1.c:307:10 identifier __builtin_expect
20071107-1.c:307:27 punctuator (
20071107-1.c:307:28 identifier __extension__
20071107-1.c:307:42 punctuator (
20071107-1.c:307:43 punctuator {
20071107-1.c:308:8 keyword int
20071107-1.c:308:12 identifier _g_boolean_var_
20071107-1.c:308:27 punctuator ;
20071107-1.c:309:8 keyword if
20071107-1.c:309:11 punctuator (
20071107-1.c:309:12 identifier result
20071107-1.c:309:19 punctuator ==
20071107-1.c:309:22 identifier PROP_ENABLE_MNEMONICS
20071107-1.c:309:43 punctuator )
20071107-1.c:309:45 identifier _g_boolean_var_
20071107-1.c:309:61 punctuator =
20071107-1.c:309:63 constant 1
20071107-1.c:309:64 punctuator ;
20071107-1.c:310:8 keyword else
20071107-1.c:310:13 identifier _g_boolean_var_
20071107-1.c:310:29 punctuator =
20071107-1.c:310:31 constant 0
20071107-1.c:310:32 punctuator ;
20071107-1.c:311:8 identifier _g_boolean_var_
20071107-1.c:311:23 punctuator ;
20071107-1.c:312:4 punctuator }
20071107-1.c:312:5 punctuator )
20071107-1.c:312:6 punctuator ,
20071107-1.c:312:8 constant 1
20071107-1.c:312:9 punctuator )
20071107-1.c:312:10 punctuator )
20071107-1.c:312:12 punctuator {
20071107-1.c:313:6 punctuator }
20071107-1.c:314:6 keyword else
20071107-1.c:314:11 identifier g_assert_warning
20071107-1.c:314:27 punctuator (
20071107-1.c:314:28 punctuator )
20071107-1.c:314:29 punctuator ;
20071107-1.c:315:5 identifier result
20071107-1.c:315:12 punctuator =
20071107-1.c:315:14 identifier settings_install_property_parser
20071107-1.c:315:46 punctuator (
20071107-1.c:315:47 punctuator )
20071107-1.c:315:48 punctuator ;
20071107-1.c:316:6 keyword if
20071107-1.c:316:9 punctuator (
20071107-1.c:316:10 identifier __builtin_expect
20071107-1.c:316:27 punctuator (
20071107-1.c:316:28 identifier __extension__
20071107-1.c:316:42 punctuator (
20071107-1.c:316:43 punctuator {
20071107-1.c:317:8 keyword int
20071107-1.c:317:12 identifier _g_boolean_var_
20071107-1.c:317:27 punctuator ;
20071107-1.c:318:8 keyword if
20071107-1.c:318:11 punctuator (
20071107-1.c:318:12 identifier result
20071107-1.c:318:19 punctuator ==
20071107-1.c:318:22 identifier PROP_ENABLE_ACCELS
20071107-1.c:318:40 punctuator )
20071107-1.c:318:42 identifier _g_boolean_var_
20071107-1.c:318:58 punctuator =
20071107-1.c:318:60 constant 1
20071107-1.c:318:61 punctuator ;
20071107-1.c:319:8 keyword else
20071107-1.c:319:13 identifier _g_boolean_var_
20071107-1.c:319:29 punctuator =
20071107-1.c:319:31 constant 0
20071107-1.c:319:32 punctuator ;
20071107-1.c:320:8 identifier _g_boolean_var_
20071107-1.c:320:23 punctuator ;
20071107-1.c:321:4 punctuator }
20071107-1.c:321:5 punctuator )
20071107-1.c:321:6 punctuator ,
20071107-1.c:321:8 constant 1
20071107-1.c:321:9 punctuator )
20071107-1.c:321:10 punctuator )
20071107-1.c:321:12 punctuator {
20071107-1.c:322:6 punctuator }
20071107-1.c:323:6 keyword else
20071107-1.c:323:11 identifier g_assert_warning
20071107-1.c:323:27 punctuator (
20071107-1.c:323:28 punctuator )
20071107-1.c:323:29 punctuator ;
20071107-1.c:324:6 keyword if
20071107-1.c:324:9 punctuator (
20071107-1.c:324:10 identifier __builtin_expect
20071107-1.c:324:27 punctuator (
20071107-1.c:324:28 identifier __extension__
20071107-1.c:324:42 punctuator (
20071107-1.c:324:43 punctuator {
20071107-1.c:325:8 keyword int
20071107-1.c:325:12 identifier _g_boolean_var_
20071107-1.c:325:27 punctuator ;
20071107-1.c:326:8 keyword if
20071107-1.c:326:11 punctuator (
20071107-1.c:326:12 identifier result
20071107-1.c:326:19 punctuator ==
20071107-1.c:326:22 identifier PROP_RECENT_FILES_LIMIT
20071107-1.c:326:45 punctuator )
20071107-1.c:326:47 identifier _g_boolean_var_
20071107-1.c:326:63 punctuator =
20071107-1.c:326:65 constant 1
20071107-1.c:326:66 punctuator ;
20071107-1.c:327:8 keyword else
20071107-1.c:327:13 identifier _g_boolean_var_
20071107-1.c:327:29 punctuator =
20071107-1.c:327:31 constant 0
20071107-1.c:327:32 punctuator ;
20071107-1.c:328:8 identifier _g_boolean_var_
20071107-1.c:328:23 punctuator ;
20071107-1.c:329:4 punctuator }
20071107-1.c:329:5 punctuator )
20071107-1.c:329:6 punctuator ,
20071107-1.c:329:8 constant 1
20071107-1.c:329:9 punctuator )
20071107-1.c:329:10 punctuator )
20071107-1.c:329:12 punctuator {
20071107-1.c:330:6 punctuator }
20071107-1.c:331:6 keyword else
20071107-1.c:331:11 identifier g_assert_warning
20071107-1.c:331:27 punctuator (
20071107-1.c:331:28 punctuator )
20071107-1.c:331:29 punctuator ;
20071107-1.c:332:1 punctuator }
