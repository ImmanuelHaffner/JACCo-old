0
20000504-1.c:1:1 keyword struct
20000504-1.c:1:8 identifier foo
20000504-1.c:1:12 punctuator {
20000504-1.c:2:2 keyword int
20000504-1.c:2:6 identifier a
20000504-1.c:2:7 punctuator ;
20000504-1.c:3:2 keyword int
20000504-1.c:3:6 identifier b
20000504-1.c:3:7 punctuator ;
20000504-1.c:4:1 punctuator }
20000504-1.c:4:2 punctuator ;
20000504-1.c:6:1 keyword int
20000504-1.c:6:5 identifier func
20000504-1.c:6:9 punctuator (
20000504-1.c:6:10 keyword struct
20000504-1.c:6:17 identifier foo
20000504-1.c:6:21 punctuator *
20000504-1.c:6:22 identifier foo
20000504-1.c:6:25 punctuator ,
20000504-1.c:6:27 keyword int
20000504-1.c:6:31 identifier a
20000504-1.c:6:32 punctuator )
20000504-1.c:7:1 punctuator {
20000504-1.c:8:2 keyword if
20000504-1.c:8:5 punctuator (
20000504-1.c:8:6 identifier foo
20000504-1.c:8:9 punctuator ->
20000504-1.c:8:11 identifier b
20000504-1.c:8:13 punctuator ==
20000504-1.c:8:16 constant 0
20000504-1.c:8:17 punctuator )
20000504-1.c:8:19 punctuator {
20000504-1.c:9:3 keyword int
20000504-1.c:9:7 identifier ret
20000504-1.c:9:11 punctuator =
20000504-1.c:9:13 identifier foo
20000504-1.c:9:16 punctuator ->
20000504-1.c:9:18 identifier a
20000504-1.c:9:20 punctuator =
20000504-1.c:9:22 identifier a
20000504-1.c:9:23 punctuator ;
20000504-1.c:10:3 keyword if
20000504-1.c:10:6 punctuator (
20000504-1.c:10:7 identifier a
20000504-1.c:10:9 punctuator >=
20000504-1.c:10:12 constant 0
20000504-1.c:10:13 punctuator )
20000504-1.c:11:4 identifier foo
20000504-1.c:11:7 punctuator ->
20000504-1.c:11:9 identifier a
20000504-1.c:11:11 punctuator =
20000504-1.c:11:13 identifier a
20000504-1.c:11:14 punctuator ;
20000504-1.c:12:3 keyword return
20000504-1.c:12:10 punctuator (
20000504-1.c:12:11 identifier ret
20000504-1.c:12:14 punctuator )
20000504-1.c:12:15 punctuator ;
20000504-1.c:13:3 punctuator }
20000504-1.c:14:2 keyword return
20000504-1.c:14:9 punctuator (
20000504-1.c:14:10 constant 0
20000504-1.c:14:11 punctuator )
20000504-1.c:14:12 punctuator ;
20000504-1.c:15:1 punctuator }
