0
20071120-1.c:1:1 keyword extern
20071120-1.c:1:8 keyword void
20071120-1.c:1:13 identifier abort
20071120-1.c:1:19 punctuator (
20071120-1.c:1:20 keyword void
20071120-1.c:1:24 punctuator )
20071120-1.c:1:25 punctuator ;
20071120-1.c:3:1 keyword void
20071120-1.c:3:6 identifier __attribute__
20071120-1.c:3:19 punctuator (
20071120-1.c:3:20 punctuator (
20071120-1.c:3:21 identifier noinline
20071120-1.c:3:29 punctuator ,
20071120-1.c:3:30 identifier noreturn
20071120-1.c:3:38 punctuator )
20071120-1.c:3:39 punctuator )
20071120-1.c:4:1 identifier vec_assert_fail
20071120-1.c:4:17 punctuator (
20071120-1.c:4:18 keyword void
20071120-1.c:4:22 punctuator )
20071120-1.c:5:1 punctuator {
20071120-1.c:6:5 identifier abort
20071120-1.c:6:11 punctuator (
20071120-1.c:6:12 punctuator )
20071120-1.c:6:13 punctuator ;
20071120-1.c:7:1 punctuator }
20071120-1.c:9:1 keyword struct
20071120-1.c:9:8 identifier ggc_root_tab
20071120-1.c:9:21 punctuator {
20071120-1.c:10:5 keyword void
20071120-1.c:10:10 punctuator *
20071120-1.c:10:11 identifier base
20071120-1.c:10:15 punctuator ;
20071120-1.c:11:1 punctuator }
20071120-1.c:11:2 punctuator ;
20071120-1.c:13:1 keyword typedef
20071120-1.c:13:9 keyword struct
20071120-1.c:13:16 identifier deferred_access_check
20071120-1.c:13:38 punctuator {
20071120-1.c:13:39 punctuator }
20071120-1.c:13:41 identifier VEC_deferred_access_check_gc
20071120-1.c:13:69 punctuator ;
20071120-1.c:15:1 keyword typedef
20071120-1.c:15:9 keyword struct
20071120-1.c:15:16 identifier deferred_access
20071120-1.c:15:32 punctuator {
20071120-1.c:16:5 identifier VEC_deferred_access_check_gc
20071120-1.c:16:33 punctuator *
20071120-1.c:16:35 identifier deferred_access_checks
20071120-1.c:16:57 punctuator ;
20071120-1.c:17:5 keyword int
20071120-1.c:17:9 identifier deferring_access_checks_kind
20071120-1.c:17:37 punctuator ;
20071120-1.c:18:1 punctuator }
20071120-1.c:18:3 identifier deferred_access
20071120-1.c:18:18 punctuator ;
20071120-1.c:20:1 keyword typedef
20071120-1.c:20:9 keyword struct
20071120-1.c:20:16 identifier VEC_deferred_access_base
20071120-1.c:20:41 punctuator {
20071120-1.c:21:5 keyword unsigned
20071120-1.c:21:14 identifier num
20071120-1.c:21:17 punctuator ;
20071120-1.c:22:5 identifier deferred_access
20071120-1.c:22:21 identifier vec
20071120-1.c:22:24 punctuator [
20071120-1.c:22:25 constant 1
20071120-1.c:22:26 punctuator ]
20071120-1.c:22:27 punctuator ;
20071120-1.c:23:1 punctuator }
20071120-1.c:23:3 identifier VEC_deferred_access_base
20071120-1.c:23:27 punctuator ;
20071120-1.c:25:1 keyword static
20071120-1.c:25:8 identifier __inline__
20071120-1.c:25:19 identifier deferred_access
20071120-1.c:25:35 punctuator *
20071120-1.c:26:1 identifier VEC_deferred_access_base_last
20071120-1.c:26:31 punctuator (
20071120-1.c:26:32 identifier VEC_deferred_access_base
20071120-1.c:26:57 punctuator *
20071120-1.c:26:58 identifier vec_
20071120-1.c:26:62 punctuator )
20071120-1.c:27:1 punctuator {
20071120-1.c:28:5 punctuator (
20071120-1.c:28:6 keyword void
20071120-1.c:28:10 punctuator )
20071120-1.c:28:11 punctuator (
20071120-1.c:28:12 punctuator (
20071120-1.c:28:13 identifier vec_
20071120-1.c:28:18 punctuator &&
20071120-1.c:28:21 identifier vec_
20071120-1.c:28:25 punctuator ->
20071120-1.c:28:27 identifier num
20071120-1.c:28:30 punctuator )
20071120-1.c:28:32 punctuator ?
20071120-1.c:28:34 constant 0
20071120-1.c:28:36 punctuator :
20071120-1.c:28:38 punctuator (
20071120-1.c:28:39 identifier vec_assert_fail
20071120-1.c:28:55 punctuator (
20071120-1.c:28:56 punctuator )
20071120-1.c:28:57 punctuator ,
20071120-1.c:28:59 constant 0
20071120-1.c:28:60 punctuator )
20071120-1.c:28:61 punctuator )
20071120-1.c:28:62 punctuator ;
20071120-1.c:29:5 keyword return
20071120-1.c:29:12 punctuator &
20071120-1.c:29:13 identifier vec_
20071120-1.c:29:17 punctuator ->
20071120-1.c:29:19 identifier vec
20071120-1.c:29:22 punctuator [
20071120-1.c:29:23 identifier vec_
20071120-1.c:29:27 punctuator ->
20071120-1.c:29:29 identifier num
20071120-1.c:29:33 punctuator -
20071120-1.c:29:35 constant 1
20071120-1.c:29:36 punctuator ]
20071120-1.c:29:37 punctuator ;
20071120-1.c:30:1 punctuator }
20071120-1.c:32:1 keyword static
20071120-1.c:32:8 identifier __inline__
20071120-1.c:32:19 keyword void
20071120-1.c:33:1 identifier VEC_deferred_access_base_pop
20071120-1.c:33:30 punctuator (
20071120-1.c:33:31 identifier VEC_deferred_access_base
20071120-1.c:33:56 punctuator *
20071120-1.c:33:57 identifier vec_
20071120-1.c:33:61 punctuator )
20071120-1.c:34:1 punctuator {
20071120-1.c:35:5 punctuator (
20071120-1.c:35:6 keyword void
20071120-1.c:35:10 punctuator )
20071120-1.c:35:11 punctuator (
20071120-1.c:35:12 punctuator (
20071120-1.c:35:13 identifier vec_
20071120-1.c:35:17 punctuator ->
20071120-1.c:35:19 identifier num
20071120-1.c:35:22 punctuator )
20071120-1.c:35:24 punctuator ?
20071120-1.c:35:26 constant 0
20071120-1.c:35:28 punctuator :
20071120-1.c:35:30 punctuator (
20071120-1.c:35:31 identifier vec_assert_fail
20071120-1.c:35:47 punctuator (
20071120-1.c:35:48 punctuator )
20071120-1.c:35:49 punctuator ,
20071120-1.c:35:51 constant 0
20071120-1.c:35:52 punctuator )
20071120-1.c:35:53 punctuator )
20071120-1.c:35:54 punctuator ;
20071120-1.c:36:5 punctuator --
20071120-1.c:36:7 identifier vec_
20071120-1.c:36:11 punctuator ->
20071120-1.c:36:13 identifier num
20071120-1.c:36:16 punctuator ;
20071120-1.c:37:1 punctuator }
20071120-1.c:39:1 keyword void
20071120-1.c:39:6 identifier __attribute__
20071120-1.c:39:19 punctuator (
20071120-1.c:39:20 punctuator (
20071120-1.c:39:21 identifier noinline
20071120-1.c:39:29 punctuator )
20071120-1.c:39:30 punctuator )
20071120-1.c:40:1 identifier perform_access_checks
20071120-1.c:40:23 punctuator (
20071120-1.c:40:24 identifier VEC_deferred_access_check_gc
20071120-1.c:40:52 punctuator *
20071120-1.c:40:54 identifier p
20071120-1.c:40:55 punctuator )
20071120-1.c:41:1 punctuator {
20071120-1.c:42:5 identifier abort
20071120-1.c:42:11 punctuator (
20071120-1.c:42:12 punctuator )
20071120-1.c:42:13 punctuator ;
20071120-1.c:43:1 punctuator }
20071120-1.c:45:1 keyword typedef
20071120-1.c:45:9 keyword struct
20071120-1.c:45:16 identifier VEC_deferred_access_gc
20071120-1.c:45:39 punctuator {
20071120-1.c:46:5 identifier VEC_deferred_access_base
20071120-1.c:46:30 identifier base
20071120-1.c:46:34 punctuator ;
20071120-1.c:47:1 punctuator }
20071120-1.c:47:3 identifier VEC_deferred_access_gc
20071120-1.c:47:25 punctuator ;
20071120-1.c:49:1 keyword static
20071120-1.c:49:8 identifier VEC_deferred_access_gc
20071120-1.c:49:31 punctuator *
20071120-1.c:49:32 identifier deferred_access_stack
20071120-1.c:49:53 punctuator ;
20071120-1.c:50:1 keyword static
20071120-1.c:50:8 keyword unsigned
20071120-1.c:50:17 identifier deferred_access_no_check
20071120-1.c:50:41 punctuator ;
20071120-1.c:52:1 keyword const
20071120-1.c:52:7 keyword struct
20071120-1.c:52:14 identifier ggc_root_tab
20071120-1.c:52:27 identifier gt_pch_rs_gt_cp_semantics_h
20071120-1.c:52:54 punctuator [
20071120-1.c:52:55 punctuator ]
20071120-1.c:52:57 punctuator =
20071120-1.c:52:59 punctuator {
20071120-1.c:53:5 punctuator {
20071120-1.c:54:2 punctuator &
20071120-1.c:54:3 identifier deferred_access_no_check
20071120-1.c:55:5 punctuator }
20071120-1.c:56:1 punctuator }
20071120-1.c:56:2 punctuator ;
20071120-1.c:58:1 keyword void
20071120-1.c:58:6 identifier __attribute__
20071120-1.c:58:19 punctuator (
20071120-1.c:58:20 punctuator (
20071120-1.c:58:21 identifier noinline
20071120-1.c:58:29 punctuator )
20071120-1.c:58:30 punctuator )
20071120-1.c:58:32 identifier pop_to_parent_deferring_access_checks
20071120-1.c:58:70 punctuator (
20071120-1.c:58:71 keyword void
20071120-1.c:58:75 punctuator )
20071120-1.c:59:1 punctuator {
20071120-1.c:60:5 keyword if
20071120-1.c:60:8 punctuator (
20071120-1.c:60:9 identifier deferred_access_no_check
20071120-1.c:60:33 punctuator )
20071120-1.c:61:2 identifier deferred_access_no_check
20071120-1.c:61:26 punctuator --
20071120-1.c:61:28 punctuator ;
20071120-1.c:62:5 keyword else
20071120-1.c:63:5 punctuator {
20071120-1.c:64:9 identifier VEC_deferred_access_check_gc
20071120-1.c:64:38 punctuator *
20071120-1.c:64:39 identifier checks
20071120-1.c:64:45 punctuator ;
20071120-1.c:65:9 identifier deferred_access
20071120-1.c:65:25 punctuator *
20071120-1.c:65:26 identifier ptr
20071120-1.c:65:29 punctuator ;
20071120-1.c:66:2 identifier checks
20071120-1.c:66:9 punctuator =
20071120-1.c:66:11 punctuator (
20071120-1.c:66:12 identifier VEC_deferred_access_base_last
20071120-1.c:66:41 punctuator (
20071120-1.c:66:42 identifier deferred_access_stack
20071120-1.c:66:64 punctuator ?
20071120-1.c:66:66 punctuator &
20071120-1.c:66:67 identifier deferred_access_stack
20071120-1.c:66:88 punctuator ->
20071120-1.c:66:90 identifier base
20071120-1.c:66:95 punctuator :
20071120-1.c:66:97 constant 0
20071120-1.c:66:98 punctuator )
20071120-1.c:66:99 punctuator )
20071120-1.c:66:100 punctuator ->
20071120-1.c:66:102 identifier deferred_access_checks
20071120-1.c:66:124 punctuator ;
20071120-1.c:67:9 identifier VEC_deferred_access_base_pop
20071120-1.c:67:37 punctuator (
20071120-1.c:67:38 identifier deferred_access_stack
20071120-1.c:67:60 punctuator ?
20071120-1.c:67:62 punctuator &
20071120-1.c:67:63 identifier deferred_access_stack
20071120-1.c:67:84 punctuator ->
20071120-1.c:67:86 identifier base
20071120-1.c:67:91 punctuator :
20071120-1.c:67:93 constant 0
20071120-1.c:67:94 punctuator )
20071120-1.c:67:95 punctuator ;
20071120-1.c:68:9 identifier ptr
20071120-1.c:68:13 punctuator =
20071120-1.c:68:15 identifier VEC_deferred_access_base_last
20071120-1.c:68:44 punctuator (
20071120-1.c:68:45 identifier deferred_access_stack
20071120-1.c:68:67 punctuator ?
20071120-1.c:68:69 punctuator &
20071120-1.c:68:70 identifier deferred_access_stack
20071120-1.c:68:91 punctuator ->
20071120-1.c:68:93 identifier base
20071120-1.c:68:98 punctuator :
20071120-1.c:68:100 constant 0
20071120-1.c:68:101 punctuator )
20071120-1.c:68:102 punctuator ;
20071120-1.c:69:9 keyword if
20071120-1.c:69:12 punctuator (
20071120-1.c:69:13 identifier ptr
20071120-1.c:69:16 punctuator ->
20071120-1.c:69:18 identifier deferring_access_checks_kind
20071120-1.c:69:47 punctuator ==
20071120-1.c:69:50 constant 0
20071120-1.c:69:51 punctuator )
20071120-1.c:70:6 identifier perform_access_checks
20071120-1.c:70:28 punctuator (
20071120-1.c:70:29 identifier checks
20071120-1.c:70:35 punctuator )
20071120-1.c:70:36 punctuator ;
20071120-1.c:71:5 punctuator }
20071120-1.c:72:1 punctuator }
20071120-1.c:74:1 keyword int
20071120-1.c:74:5 identifier main
20071120-1.c:74:9 punctuator (
20071120-1.c:74:10 punctuator )
20071120-1.c:75:1 punctuator {
20071120-1.c:76:5 identifier deferred_access_stack
20071120-1.c:76:27 punctuator =
20071120-1.c:76:29 identifier __builtin_malloc
20071120-1.c:76:46 punctuator (
20071120-1.c:76:47 keyword sizeof
20071120-1.c:76:53 punctuator (
20071120-1.c:76:54 identifier VEC_deferred_access_gc
20071120-1.c:76:76 punctuator )
20071120-1.c:76:78 punctuator +
20071120-1.c:76:80 keyword sizeof
20071120-1.c:76:86 punctuator (
20071120-1.c:76:87 identifier deferred_access
20071120-1.c:76:102 punctuator )
20071120-1.c:76:104 punctuator *
20071120-1.c:76:106 constant 8
20071120-1.c:76:107 punctuator )
20071120-1.c:76:108 punctuator ;
20071120-1.c:77:5 identifier deferred_access_stack
20071120-1.c:77:26 punctuator ->
20071120-1.c:77:28 identifier base
20071120-1.c:77:32 punctuator .
20071120-1.c:77:33 identifier num
20071120-1.c:77:37 punctuator =
20071120-1.c:77:39 constant 2
20071120-1.c:77:40 punctuator ;
20071120-1.c:78:5 identifier deferred_access_stack
20071120-1.c:78:26 punctuator ->
20071120-1.c:78:28 identifier base
20071120-1.c:78:32 punctuator .
20071120-1.c:78:33 identifier vec
20071120-1.c:78:36 punctuator [
20071120-1.c:78:37 constant 0
20071120-1.c:78:38 punctuator ]
20071120-1.c:78:39 punctuator .
20071120-1.c:78:40 identifier deferring_access_checks_kind
20071120-1.c:78:69 punctuator =
20071120-1.c:78:71 constant 1
20071120-1.c:78:72 punctuator ;
20071120-1.c:79:5 identifier pop_to_parent_deferring_access_checks
20071120-1.c:79:43 punctuator (
20071120-1.c:79:44 punctuator )
20071120-1.c:79:45 punctuator ;
20071120-1.c:80:5 keyword return
20071120-1.c:80:12 constant 0
20071120-1.c:80:13 punctuator ;
20071120-1.c:81:1 punctuator }
