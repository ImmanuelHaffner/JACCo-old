0
20001011-1.c:1:1 keyword extern
20001011-1.c:1:8 keyword void
20001011-1.c:1:13 identifier abort
20001011-1.c:1:18 punctuator (
20001011-1.c:1:19 keyword void
20001011-1.c:1:23 punctuator )
20001011-1.c:1:24 punctuator ;
20001011-1.c:2:1 keyword extern
20001011-1.c:2:8 keyword int
20001011-1.c:2:12 identifier strcmp
20001011-1.c:2:18 punctuator (
20001011-1.c:2:19 keyword const
20001011-1.c:2:25 keyword char
20001011-1.c:2:30 punctuator *
20001011-1.c:2:31 punctuator ,
20001011-1.c:2:33 keyword const
20001011-1.c:2:39 keyword char
20001011-1.c:2:44 punctuator *
20001011-1.c:2:45 punctuator )
20001011-1.c:2:46 punctuator ;
20001011-1.c:4:1 keyword int
20001011-1.c:4:5 identifier foo
20001011-1.c:4:8 punctuator (
20001011-1.c:4:9 keyword const
20001011-1.c:4:15 keyword char
20001011-1.c:4:20 punctuator *
20001011-1.c:4:21 identifier a
20001011-1.c:4:22 punctuator )
20001011-1.c:5:1 punctuator {
20001011-1.c:6:5 keyword return
20001011-1.c:6:12 identifier strcmp
20001011-1.c:6:18 punctuator (
20001011-1.c:6:19 identifier a
20001011-1.c:6:20 punctuator ,
20001011-1.c:6:22 string-literal "main"
20001011-1.c:6:28 punctuator )
20001011-1.c:6:29 punctuator ;
20001011-1.c:7:1 punctuator }
20001011-1.c:9:1 keyword int
20001011-1.c:9:5 identifier main
20001011-1.c:9:9 punctuator (
20001011-1.c:9:10 keyword void
20001011-1.c:9:14 punctuator )
20001011-1.c:10:1 punctuator {
20001011-1.c:11:5 keyword if
20001011-1.c:11:7 punctuator (
20001011-1.c:11:8 identifier foo
20001011-1.c:11:11 punctuator (
20001011-1.c:11:12 identifier __FUNCTION__
20001011-1.c:11:24 punctuator )
20001011-1.c:11:25 punctuator )
20001011-1.c:12:9 identifier abort
20001011-1.c:12:14 punctuator (
20001011-1.c:12:15 punctuator )
20001011-1.c:12:16 punctuator ;
20001011-1.c:13:5 keyword return
20001011-1.c:13:12 constant 0
20001011-1.c:13:13 punctuator ;
20001011-1.c:14:1 punctuator }
