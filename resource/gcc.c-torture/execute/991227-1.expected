0
991227-1.c:1:1 keyword char
991227-1.c:1:5 punctuator *
991227-1.c:1:7 identifier doit
991227-1.c:1:11 punctuator (
991227-1.c:1:12 keyword int
991227-1.c:1:16 identifier flag
991227-1.c:1:20 punctuator )
991227-1.c:2:1 punctuator {
991227-1.c:3:3 keyword return
991227-1.c:3:10 constant 1
991227-1.c:3:12 punctuator +
991227-1.c:3:14 punctuator (
991227-1.c:3:15 identifier flag
991227-1.c:3:20 punctuator ?
991227-1.c:3:22 string-literal "\0wrong\n"
991227-1.c:3:34 punctuator :
991227-1.c:3:36 string-literal "\0right\n"
991227-1.c:3:47 punctuator )
991227-1.c:3:48 punctuator ;
991227-1.c:4:1 punctuator }
991227-1.c:5:1 keyword int
991227-1.c:5:5 identifier main
991227-1.c:5:9 punctuator (
991227-1.c:5:10 punctuator )
991227-1.c:6:1 punctuator {
991227-1.c:7:3 keyword char
991227-1.c:7:8 punctuator *
991227-1.c:7:9 identifier result
991227-1.c:7:16 punctuator =
991227-1.c:7:18 identifier doit
991227-1.c:7:22 punctuator (
991227-1.c:7:23 constant 0
991227-1.c:7:24 punctuator )
991227-1.c:7:25 punctuator ;
991227-1.c:8:3 keyword if
991227-1.c:8:6 punctuator (
991227-1.c:8:7 punctuator *
991227-1.c:8:8 identifier result
991227-1.c:8:15 punctuator ==
991227-1.c:8:18 constant 'r'
991227-1.c:8:22 punctuator &&
991227-1.c:8:25 identifier result
991227-1.c:8:31 punctuator [
991227-1.c:8:32 constant 1
991227-1.c:8:33 punctuator ]
991227-1.c:8:35 punctuator ==
991227-1.c:8:38 constant 'i'
991227-1.c:8:41 punctuator )
991227-1.c:9:5 identifier exit
991227-1.c:9:9 punctuator (
991227-1.c:9:10 constant 0
991227-1.c:9:11 punctuator )
991227-1.c:9:12 punctuator ;
991227-1.c:10:3 identifier abort
991227-1.c:10:8 punctuator (
991227-1.c:10:9 punctuator )
991227-1.c:10:10 punctuator ;
991227-1.c:11:1 punctuator }
