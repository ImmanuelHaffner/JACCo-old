0
20060905-1.c:4:1 keyword extern
20060905-1.c:4:8 keyword void
20060905-1.c:4:13 identifier abort
20060905-1.c:4:18 punctuator (
20060905-1.c:4:19 keyword void
20060905-1.c:4:23 punctuator )
20060905-1.c:4:24 punctuator ;
20060905-1.c:6:1 keyword volatile
20060905-1.c:6:10 keyword char
20060905-1.c:6:15 identifier s
20060905-1.c:6:16 punctuator [
20060905-1.c:6:17 constant 256
20060905-1.c:6:20 punctuator ]
20060905-1.c:6:21 punctuator [
20060905-1.c:6:22 constant 3
20060905-1.c:6:23 punctuator ]
20060905-1.c:6:24 punctuator ;
20060905-1.c:8:1 keyword char
20060905-1.c:8:6 identifier g
20060905-1.c:8:7 punctuator ;
20060905-1.c:10:1 keyword static
20060905-1.c:10:8 keyword void
20060905-1.c:10:13 identifier dummy
20060905-1.c:10:18 punctuator (
20060905-1.c:10:19 keyword char
20060905-1.c:10:24 identifier a
20060905-1.c:10:25 punctuator )
20060905-1.c:11:1 punctuator {
20060905-1.c:12:3 identifier g
20060905-1.c:12:5 punctuator =
20060905-1.c:12:7 identifier a
20060905-1.c:12:8 punctuator ;
20060905-1.c:13:1 punctuator }
20060905-1.c:15:1 keyword static
20060905-1.c:15:8 keyword int
20060905-1.c:15:12 identifier foo
20060905-1.c:15:15 punctuator (
20060905-1.c:15:16 keyword void
20060905-1.c:15:20 punctuator )
20060905-1.c:16:1 punctuator {
20060905-1.c:17:3 keyword int
20060905-1.c:17:7 identifier i
20060905-1.c:17:8 punctuator ,
20060905-1.c:17:10 identifier j
20060905-1.c:17:11 punctuator =
20060905-1.c:17:12 constant 0
20060905-1.c:17:13 punctuator ;
20060905-1.c:19:3 keyword for
20060905-1.c:19:7 punctuator (
20060905-1.c:19:8 identifier i
20060905-1.c:19:10 punctuator =
20060905-1.c:19:12 constant 0
20060905-1.c:19:13 punctuator ;
20060905-1.c:19:15 identifier i
20060905-1.c:19:17 punctuator <
20060905-1.c:19:19 constant 256
20060905-1.c:19:22 punctuator ;
20060905-1.c:19:24 identifier i
20060905-1.c:19:25 punctuator ++
20060905-1.c:19:27 punctuator )
20060905-1.c:20:5 keyword if
20060905-1.c:20:8 punctuator (
20060905-1.c:20:9 identifier i
20060905-1.c:20:11 punctuator >=
20060905-1.c:20:14 constant 128
20060905-1.c:20:18 punctuator &&
20060905-1.c:20:21 identifier i
20060905-1.c:20:23 punctuator <
20060905-1.c:20:25 constant 256
20060905-1.c:20:28 punctuator )
20060905-1.c:21:7 punctuator {
20060905-1.c:22:2 identifier dummy
20060905-1.c:22:8 punctuator (
20060905-1.c:22:9 identifier s
20060905-1.c:22:10 punctuator [
20060905-1.c:22:11 identifier i
20060905-1.c:22:13 punctuator -
20060905-1.c:22:15 constant 128
20060905-1.c:22:18 punctuator ]
20060905-1.c:22:19 punctuator [
20060905-1.c:22:20 constant 0
20060905-1.c:22:21 punctuator ]
20060905-1.c:22:22 punctuator )
20060905-1.c:22:23 punctuator ;
20060905-1.c:23:2 punctuator ++
20060905-1.c:23:4 identifier j
20060905-1.c:23:5 punctuator ;
20060905-1.c:24:7 punctuator }
20060905-1.c:26:3 keyword return
20060905-1.c:26:10 identifier j
20060905-1.c:26:11 punctuator ;
20060905-1.c:27:1 punctuator }
20060905-1.c:29:1 keyword int
20060905-1.c:29:5 identifier main
20060905-1.c:29:9 punctuator (
20060905-1.c:29:10 keyword void
20060905-1.c:29:14 punctuator )
20060905-1.c:30:1 punctuator {
20060905-1.c:31:3 keyword if
20060905-1.c:31:6 punctuator (
20060905-1.c:31:7 identifier foo
20060905-1.c:31:11 punctuator (
20060905-1.c:31:12 punctuator )
20060905-1.c:31:14 punctuator !=
20060905-1.c:31:17 constant 128
20060905-1.c:31:20 punctuator )
20060905-1.c:32:5 identifier abort
20060905-1.c:32:11 punctuator (
20060905-1.c:32:12 punctuator )
20060905-1.c:32:13 punctuator ;
20060905-1.c:34:3 keyword return
20060905-1.c:34:10 constant 0
20060905-1.c:34:11 punctuator ;
20060905-1.c:35:1 punctuator }
