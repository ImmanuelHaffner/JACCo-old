0
20030501-1.c:1:1 keyword int
20030501-1.c:2:1 identifier main
20030501-1.c:2:6 punctuator (
20030501-1.c:2:7 keyword int
20030501-1.c:2:11 identifier argc
20030501-1.c:2:15 punctuator ,
20030501-1.c:2:17 keyword char
20030501-1.c:2:22 punctuator *
20030501-1.c:2:23 punctuator *
20030501-1.c:2:24 identifier argv
20030501-1.c:2:28 punctuator )
20030501-1.c:3:1 punctuator {
20030501-1.c:4:3 keyword int
20030501-1.c:4:7 identifier size
20030501-1.c:4:12 punctuator =
20030501-1.c:4:14 constant 10
20030501-1.c:4:16 punctuator ;
20030501-1.c:6:3 punctuator {
20030501-1.c:7:5 keyword int
20030501-1.c:7:9 identifier retframe_block
20030501-1.c:7:23 punctuator (
20030501-1.c:7:24 punctuator )
20030501-1.c:8:7 punctuator {
20030501-1.c:9:9 keyword return
20030501-1.c:9:16 identifier size
20030501-1.c:9:21 punctuator +
20030501-1.c:9:23 constant 5
20030501-1.c:9:24 punctuator ;
20030501-1.c:10:7 punctuator }
20030501-1.c:12:3 keyword if
20030501-1.c:12:6 punctuator (
20030501-1.c:12:7 identifier retframe_block
20030501-1.c:12:21 punctuator (
20030501-1.c:12:22 punctuator )
20030501-1.c:12:24 punctuator !=
20030501-1.c:12:27 constant 15
20030501-1.c:12:29 punctuator )
20030501-1.c:13:7 identifier abort
20030501-1.c:13:13 punctuator (
20030501-1.c:13:14 punctuator )
20030501-1.c:13:15 punctuator ;
20030501-1.c:14:3 identifier exit
20030501-1.c:14:8 punctuator (
20030501-1.c:14:9 constant 0
20030501-1.c:14:10 punctuator )
20030501-1.c:14:11 punctuator ;
20030501-1.c:16:3 punctuator }
20030501-1.c:17:1 punctuator }
