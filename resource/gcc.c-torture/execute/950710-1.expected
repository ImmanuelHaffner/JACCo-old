0
950710-1.c:1:1 keyword struct
950710-1.c:1:8 identifier twelve
950710-1.c:2:1 punctuator {
950710-1.c:3:3 keyword int
950710-1.c:3:7 identifier a
950710-1.c:3:8 punctuator ;
950710-1.c:4:3 keyword int
950710-1.c:4:7 identifier b
950710-1.c:4:8 punctuator ;
950710-1.c:5:3 keyword int
950710-1.c:5:7 identifier c
950710-1.c:5:8 punctuator ;
950710-1.c:6:1 punctuator }
950710-1.c:6:2 punctuator ;
950710-1.c:8:1 keyword struct
950710-1.c:8:8 identifier pair
950710-1.c:9:1 punctuator {
950710-1.c:10:3 keyword int
950710-1.c:10:7 identifier first
950710-1.c:10:12 punctuator ;
950710-1.c:11:3 keyword int
950710-1.c:11:7 identifier second
950710-1.c:11:13 punctuator ;
950710-1.c:12:1 punctuator }
950710-1.c:12:2 punctuator ;
950710-1.c:14:1 keyword struct
950710-1.c:14:8 identifier pair
950710-1.c:15:1 identifier g
950710-1.c:15:3 punctuator (
950710-1.c:15:4 punctuator )
950710-1.c:16:1 punctuator {
950710-1.c:17:3 keyword struct
950710-1.c:17:10 identifier pair
950710-1.c:17:15 identifier p
950710-1.c:17:16 punctuator ;
950710-1.c:18:3 keyword return
950710-1.c:18:10 identifier p
950710-1.c:18:11 punctuator ;
950710-1.c:19:1 punctuator }
950710-1.c:21:1 keyword static
950710-1.c:21:8 keyword void
950710-1.c:22:1 identifier f
950710-1.c:22:3 punctuator (
950710-1.c:22:4 punctuator )
950710-1.c:23:1 punctuator {
950710-1.c:24:3 keyword int
950710-1.c:24:7 identifier i
950710-1.c:24:8 punctuator ;
950710-1.c:25:3 keyword for
950710-1.c:25:7 punctuator (
950710-1.c:25:8 identifier i
950710-1.c:25:10 punctuator =
950710-1.c:25:12 constant 0
950710-1.c:25:13 punctuator ;
950710-1.c:25:15 identifier i
950710-1.c:25:17 punctuator <
950710-1.c:25:19 constant 1
950710-1.c:25:20 punctuator ;
950710-1.c:25:22 identifier i
950710-1.c:25:23 punctuator ++
950710-1.c:25:25 punctuator )
950710-1.c:26:5 punctuator {
950710-1.c:27:7 keyword int
950710-1.c:27:11 identifier j
950710-1.c:27:12 punctuator ;
950710-1.c:28:7 keyword for
950710-1.c:28:11 punctuator (
950710-1.c:28:12 identifier j
950710-1.c:28:14 punctuator =
950710-1.c:28:16 constant 0
950710-1.c:28:17 punctuator ;
950710-1.c:28:19 identifier j
950710-1.c:28:21 punctuator <
950710-1.c:28:23 constant 1
950710-1.c:28:24 punctuator ;
950710-1.c:28:26 identifier j
950710-1.c:28:27 punctuator ++
950710-1.c:28:29 punctuator )
950710-1.c:29:2 punctuator {
950710-1.c:30:4 keyword if
950710-1.c:30:7 punctuator (
950710-1.c:30:8 constant 0
950710-1.c:30:9 punctuator )
950710-1.c:31:6 punctuator {
950710-1.c:32:8 keyword int
950710-1.c:32:12 identifier k
950710-1.c:32:13 punctuator ;
950710-1.c:33:8 keyword for
950710-1.c:33:12 punctuator (
950710-1.c:33:13 identifier k
950710-1.c:33:15 punctuator =
950710-1.c:33:17 constant 0
950710-1.c:33:18 punctuator ;
950710-1.c:33:20 identifier k
950710-1.c:33:22 punctuator <
950710-1.c:33:24 constant 1
950710-1.c:33:25 punctuator ;
950710-1.c:33:27 identifier k
950710-1.c:33:28 punctuator ++
950710-1.c:33:30 punctuator )
950710-1.c:34:3 punctuator {
950710-1.c:35:5 keyword struct
950710-1.c:35:12 identifier pair
950710-1.c:35:17 identifier e
950710-1.c:35:19 punctuator =
950710-1.c:35:21 identifier g
950710-1.c:35:23 punctuator (
950710-1.c:35:24 punctuator )
950710-1.c:35:25 punctuator ;
950710-1.c:36:3 punctuator }
950710-1.c:37:6 punctuator }
950710-1.c:38:4 keyword else
950710-1.c:39:6 punctuator {
950710-1.c:40:8 keyword struct
950710-1.c:40:15 identifier twelve
950710-1.c:40:22 identifier a
950710-1.c:40:23 punctuator ,
950710-1.c:40:25 identifier b
950710-1.c:40:26 punctuator ;
950710-1.c:41:8 keyword if
950710-1.c:41:11 punctuator (
950710-1.c:41:12 punctuator (
950710-1.c:41:13 punctuator (
950710-1.c:41:14 punctuator (
950710-1.c:41:15 keyword char
950710-1.c:41:20 punctuator *
950710-1.c:41:21 punctuator )
950710-1.c:41:23 punctuator &
950710-1.c:41:24 identifier b
950710-1.c:41:26 punctuator -
950710-1.c:41:28 punctuator (
950710-1.c:41:29 keyword char
950710-1.c:41:34 punctuator *
950710-1.c:41:35 punctuator )
950710-1.c:41:37 punctuator &
950710-1.c:41:38 identifier a
950710-1.c:41:39 punctuator )
950710-1.c:41:41 punctuator <
950710-1.c:41:43 constant 0
950710-1.c:42:6 punctuator ?
950710-1.c:42:8 punctuator (
950710-1.c:42:9 punctuator -
950710-1.c:42:10 punctuator (
950710-1.c:42:11 punctuator (
950710-1.c:42:12 keyword char
950710-1.c:42:17 punctuator *
950710-1.c:42:18 punctuator )
950710-1.c:42:20 punctuator &
950710-1.c:42:21 identifier b
950710-1.c:42:23 punctuator -
950710-1.c:42:25 punctuator (
950710-1.c:42:26 keyword char
950710-1.c:42:31 punctuator *
950710-1.c:42:32 punctuator )
950710-1.c:42:34 punctuator &
950710-1.c:42:35 identifier a
950710-1.c:42:36 punctuator )
950710-1.c:42:37 punctuator )
950710-1.c:43:6 punctuator :
950710-1.c:43:8 punctuator (
950710-1.c:43:9 punctuator (
950710-1.c:43:10 keyword char
950710-1.c:43:15 punctuator *
950710-1.c:43:16 punctuator )
950710-1.c:43:18 punctuator &
950710-1.c:43:19 identifier b
950710-1.c:43:21 punctuator -
950710-1.c:43:23 punctuator (
950710-1.c:43:24 keyword char
950710-1.c:43:29 punctuator *
950710-1.c:43:30 punctuator )
950710-1.c:43:32 punctuator &
950710-1.c:43:33 identifier a
950710-1.c:43:34 punctuator )
950710-1.c:43:35 punctuator )
950710-1.c:43:37 punctuator <
950710-1.c:43:39 keyword sizeof
950710-1.c:43:46 punctuator (
950710-1.c:43:47 identifier a
950710-1.c:43:48 punctuator )
950710-1.c:43:49 punctuator )
950710-1.c:44:3 identifier abort
950710-1.c:44:9 punctuator (
950710-1.c:44:10 punctuator )
950710-1.c:44:11 punctuator ;
950710-1.c:45:6 punctuator }
950710-1.c:46:2 punctuator }
950710-1.c:47:5 punctuator }
950710-1.c:48:1 punctuator }
950710-1.c:50:1 identifier main
950710-1.c:50:6 punctuator (
950710-1.c:50:7 punctuator )
950710-1.c:51:1 punctuator {
950710-1.c:52:3 identifier f
950710-1.c:52:5 punctuator (
950710-1.c:52:6 punctuator )
950710-1.c:52:7 punctuator ;
950710-1.c:53:3 identifier exit
950710-1.c:53:8 punctuator (
950710-1.c:53:9 constant 0
950710-1.c:53:10 punctuator )
950710-1.c:53:11 punctuator ;
950710-1.c:54:1 punctuator }
