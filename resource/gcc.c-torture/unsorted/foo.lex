0
foo.c:1:1 keyword int
foo.c:1:5 punctuator *
foo.c:2:1 identifier main
foo.c:2:6 punctuator (
foo.c:2:7 identifier s1
foo.c:2:9 punctuator ,
foo.c:2:11 identifier s2
foo.c:2:13 punctuator )
foo.c:3:6 keyword int
foo.c:3:10 punctuator *
foo.c:3:11 identifier s1
foo.c:3:13 punctuator ;
foo.c:3:15 keyword int
foo.c:3:19 punctuator *
foo.c:3:20 identifier s2
foo.c:3:22 punctuator ;
foo.c:4:1 punctuator {
foo.c:5:3 keyword while
foo.c:5:9 punctuator (
foo.c:5:10 punctuator (
foo.c:5:11 punctuator *
foo.c:5:12 identifier s1
foo.c:5:14 punctuator ++
foo.c:5:17 punctuator =
foo.c:5:19 punctuator *
foo.c:5:20 identifier s2
foo.c:5:22 punctuator ++
foo.c:5:24 punctuator )
foo.c:5:26 punctuator !=
foo.c:5:29 constant '\0'
foo.c:5:33 punctuator )
foo.c:6:5 punctuator ;
foo.c:7:3 keyword return
foo.c:7:10 identifier s1
foo.c:7:13 punctuator -
foo.c:7:15 constant 1
foo.c:7:16 punctuator ;
foo.c:8:1 punctuator }
