0
raw-string-7.c:8:1 keyword const
raw-string-7.c:8:7 keyword char
raw-string-7.c:8:12 punctuator *
raw-string-7.c:8:13 identifier s0
raw-string-7.c:8:16 punctuator =
raw-string-7.c:8:18 identifier R
raw-string-7.c:8:19 string-literal "()"
raw-string-7.c:8:23 punctuator ;
raw-string-7.c:13:1 keyword const
raw-string-7.c:13:7 keyword char
raw-string-7.c:13:12 punctuator *
raw-string-7.c:13:13 identifier s1
raw-string-7.c:13:16 punctuator =
raw-string-7.c:13:18 identifier R
raw-string-7.c:13:19 string-literal "()"
raw-string-7.c:13:23 punctuator ;
raw-string-7.c:17:1 keyword int
raw-string-7.c:18:1 identifier main
raw-string-7.c:18:6 punctuator (
raw-string-7.c:18:7 keyword void
raw-string-7.c:18:11 punctuator )
raw-string-7.c:19:1 punctuator {
raw-string-7.c:20:3 keyword if
raw-string-7.c:20:6 punctuator (
raw-string-7.c:20:7 identifier __builtin_strcmp
raw-string-7.c:20:24 punctuator (
raw-string-7.c:20:25 identifier s0
raw-string-7.c:20:27 punctuator ,
raw-string-7.c:20:29 string-literal "\\ \n"
raw-string-7.c:20:36 punctuator )
raw-string-7.c:20:38 punctuator !=
raw-string-7.c:20:41 constant 0
raw-string-7.c:21:7 punctuator ||
raw-string-7.c:21:10 identifier __builtin_strcmp
raw-string-7.c:21:27 punctuator (
raw-string-7.c:21:28 identifier s1
raw-string-7.c:21:30 punctuator ,
raw-string-7.c:21:32 string-literal "\\\t\n"
raw-string-7.c:21:40 punctuator )
raw-string-7.c:21:42 punctuator !=
raw-string-7.c:21:45 constant 0
raw-string-7.c:21:46 punctuator )
raw-string-7.c:22:5 identifier __builtin_abort
raw-string-7.c:22:21 punctuator (
raw-string-7.c:22:22 punctuator )
raw-string-7.c:22:23 punctuator ;
raw-string-7.c:23:3 keyword return
raw-string-7.c:23:10 constant 0
raw-string-7.c:23:11 punctuator ;
raw-string-7.c:24:1 punctuator }
