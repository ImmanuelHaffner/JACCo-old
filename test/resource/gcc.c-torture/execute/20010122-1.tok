0
20010122-1.c:2:1: keyword extern
20010122-1.c:2:8: keyword void
20010122-1.c:2:13: identifier exit
20010122-1.c:2:18: punctuator (
20010122-1.c:2:19: keyword int
20010122-1.c:2:22: punctuator )
20010122-1.c:2:23: punctuator ;
20010122-1.c:3:1: keyword extern
20010122-1.c:3:8: keyword void
20010122-1.c:3:13: identifier abort
20010122-1.c:3:19: punctuator (
20010122-1.c:3:20: keyword void
20010122-1.c:3:24: punctuator )
20010122-1.c:3:25: punctuator ;
20010122-1.c:4:1: keyword extern
20010122-1.c:4:8: keyword void
20010122-1.c:4:13: punctuator *
20010122-1.c:4:14: identifier alloca
20010122-1.c:4:21: punctuator (
20010122-1.c:4:22: keyword long
20010122-1.c:4:27: keyword unsigned
20010122-1.c:4:36: keyword int
20010122-1.c:4:39: punctuator )
20010122-1.c:4:40: punctuator ;
20010122-1.c:5:1: keyword char
20010122-1.c:5:6: punctuator *
20010122-1.c:5:7: identifier dummy
20010122-1.c:5:13: punctuator (
20010122-1.c:5:14: keyword void
20010122-1.c:5:18: punctuator )
20010122-1.c:5:19: punctuator ;
20010122-1.c:9:1: keyword void
20010122-1.c:9:6: punctuator *
20010122-1.c:9:7: identifier save_ret1
20010122-1.c:9:16: punctuator [
20010122-1.c:9:17: constant 6
20010122-1.c:9:18: punctuator ]
20010122-1.c:9:19: punctuator ;
20010122-1.c:10:1: keyword void
20010122-1.c:10:6: punctuator *
20010122-1.c:10:7: identifier test4a
20010122-1.c:10:14: punctuator (
20010122-1.c:10:15: keyword char
20010122-1.c:10:20: punctuator *
20010122-1.c:10:21: punctuator )
20010122-1.c:10:22: punctuator ;
20010122-1.c:11:1: keyword void
20010122-1.c:11:6: punctuator *
20010122-1.c:11:7: identifier test5a
20010122-1.c:11:14: punctuator (
20010122-1.c:11:15: keyword char
20010122-1.c:11:20: punctuator *
20010122-1.c:11:21: punctuator )
20010122-1.c:11:22: punctuator ;
20010122-1.c:12:1: keyword void
20010122-1.c:12:6: punctuator *
20010122-1.c:12:7: identifier test6a
20010122-1.c:12:14: punctuator (
20010122-1.c:12:15: keyword char
20010122-1.c:12:20: punctuator *
20010122-1.c:12:21: punctuator )
20010122-1.c:12:22: punctuator ;
20010122-1.c:14:1: keyword void
20010122-1.c:14:6: identifier __attribute__
20010122-1.c:14:19: punctuator (
20010122-1.c:14:20: punctuator (
20010122-1.c:14:21: identifier noinline
20010122-1.c:14:29: punctuator )
20010122-1.c:14:30: punctuator )
20010122-1.c:14:32: punctuator *
20010122-1.c:14:33: identifier test1
20010122-1.c:14:39: punctuator (
20010122-1.c:14:40: keyword void
20010122-1.c:14:44: punctuator )
20010122-1.c:15:1: punctuator {
20010122-1.c:16:3: keyword void
20010122-1.c:16:8: punctuator *
20010122-1.c:16:10: identifier temp
20010122-1.c:16:14: punctuator ;
20010122-1.c:17:3: identifier temp
20010122-1.c:17:8: punctuator =
20010122-1.c:17:10: identifier __builtin_return_address
20010122-1.c:17:35: punctuator (
20010122-1.c:17:36: constant 0
20010122-1.c:17:37: punctuator )
20010122-1.c:17:38: punctuator ;
20010122-1.c:18:3: keyword return
20010122-1.c:18:10: identifier temp
20010122-1.c:18:14: punctuator ;
20010122-1.c:19:1: punctuator }
20010122-1.c:21:1: keyword void
20010122-1.c:21:6: identifier __attribute__
20010122-1.c:21:19: punctuator (
20010122-1.c:21:20: punctuator (
20010122-1.c:21:21: identifier noinline
20010122-1.c:21:29: punctuator )
20010122-1.c:21:30: punctuator )
20010122-1.c:21:32: punctuator *
20010122-1.c:21:33: identifier test2
20010122-1.c:21:39: punctuator (
20010122-1.c:21:40: keyword void
20010122-1.c:21:44: punctuator )
20010122-1.c:22:1: punctuator {
20010122-1.c:23:3: keyword void
20010122-1.c:23:8: punctuator *
20010122-1.c:23:10: identifier temp
20010122-1.c:23:14: punctuator ;
20010122-1.c:24:3: identifier dummy
20010122-1.c:24:9: punctuator (
20010122-1.c:24:10: punctuator )
20010122-1.c:24:11: punctuator ;
20010122-1.c:25:3: identifier temp
20010122-1.c:25:8: punctuator =
20010122-1.c:25:10: identifier __builtin_return_address
20010122-1.c:25:35: punctuator (
20010122-1.c:25:36: constant 0
20010122-1.c:25:37: punctuator )
20010122-1.c:25:38: punctuator ;
20010122-1.c:26:3: keyword return
20010122-1.c:26:10: identifier temp
20010122-1.c:26:14: punctuator ;
20010122-1.c:27:1: punctuator }
20010122-1.c:29:1: keyword void
20010122-1.c:29:6: identifier __attribute__
20010122-1.c:29:19: punctuator (
20010122-1.c:29:20: punctuator (
20010122-1.c:29:21: identifier noinline
20010122-1.c:29:29: punctuator )
20010122-1.c:29:30: punctuator )
20010122-1.c:29:32: punctuator *
20010122-1.c:29:33: identifier test3
20010122-1.c:29:39: punctuator (
20010122-1.c:29:40: keyword void
20010122-1.c:29:44: punctuator )
20010122-1.c:30:1: punctuator {
20010122-1.c:31:3: keyword void
20010122-1.c:31:8: punctuator *
20010122-1.c:31:10: identifier temp
20010122-1.c:31:14: punctuator ;
20010122-1.c:32:3: identifier temp
20010122-1.c:32:8: punctuator =
20010122-1.c:32:10: identifier __builtin_return_address
20010122-1.c:32:35: punctuator (
20010122-1.c:32:36: constant 0
20010122-1.c:32:37: punctuator )
20010122-1.c:32:38: punctuator ;
20010122-1.c:33:3: identifier dummy
20010122-1.c:33:9: punctuator (
20010122-1.c:33:10: punctuator )
20010122-1.c:33:11: punctuator ;
20010122-1.c:34:3: keyword return
20010122-1.c:34:10: identifier temp
20010122-1.c:34:14: punctuator ;
20010122-1.c:35:1: punctuator }
20010122-1.c:37:1: keyword void
20010122-1.c:37:6: identifier __attribute__
20010122-1.c:37:19: punctuator (
20010122-1.c:37:20: punctuator (
20010122-1.c:37:21: identifier noinline
20010122-1.c:37:29: punctuator )
20010122-1.c:37:30: punctuator )
20010122-1.c:37:32: punctuator *
20010122-1.c:37:33: identifier test4
20010122-1.c:37:39: punctuator (
20010122-1.c:37:40: keyword void
20010122-1.c:37:44: punctuator )
20010122-1.c:38:1: punctuator {
20010122-1.c:39:3: keyword char
20010122-1.c:39:8: punctuator *
20010122-1.c:39:10: identifier save
20010122-1.c:39:15: punctuator =
20010122-1.c:39:17: punctuator (
20010122-1.c:39:18: keyword char
20010122-1.c:39:22: punctuator *
20010122-1.c:39:23: punctuator )
20010122-1.c:39:25: identifier alloca
20010122-1.c:39:32: punctuator (
20010122-1.c:39:33: constant 4
20010122-1.c:39:34: punctuator )
20010122-1.c:39:35: punctuator ;
20010122-1.c:41:3: keyword return
20010122-1.c:41:10: identifier test4a
20010122-1.c:41:17: punctuator (
20010122-1.c:41:18: identifier save
20010122-1.c:41:22: punctuator )
20010122-1.c:41:23: punctuator ;
20010122-1.c:42:1: punctuator }
20010122-1.c:44:1: keyword void
20010122-1.c:44:6: punctuator *
20010122-1.c:44:7: identifier __attribute__
20010122-1.c:44:20: punctuator (
20010122-1.c:44:21: punctuator (
20010122-1.c:44:22: identifier noinline
20010122-1.c:44:30: punctuator )
20010122-1.c:44:31: punctuator )
20010122-1.c:44:33: identifier test4a
20010122-1.c:44:40: punctuator (
20010122-1.c:44:41: keyword char
20010122-1.c:44:46: punctuator *
20010122-1.c:44:48: identifier p
20010122-1.c:44:49: punctuator )
20010122-1.c:45:1: punctuator {
20010122-1.c:46:3: keyword void
20010122-1.c:46:8: punctuator *
20010122-1.c:46:10: identifier temp
20010122-1.c:46:14: punctuator ;
20010122-1.c:47:3: identifier temp
20010122-1.c:47:8: punctuator =
20010122-1.c:47:10: identifier __builtin_return_address
20010122-1.c:47:35: punctuator (
20010122-1.c:47:36: constant 1
20010122-1.c:47:37: punctuator )
20010122-1.c:47:38: punctuator ;
20010122-1.c:48:3: keyword return
20010122-1.c:48:10: identifier temp
20010122-1.c:48:14: punctuator ;
20010122-1.c:49:1: punctuator }
20010122-1.c:51:1: keyword void
20010122-1.c:51:6: identifier __attribute__
20010122-1.c:51:19: punctuator (
20010122-1.c:51:20: punctuator (
20010122-1.c:51:21: identifier noinline
20010122-1.c:51:29: punctuator )
20010122-1.c:51:30: punctuator )
20010122-1.c:51:32: punctuator *
20010122-1.c:51:33: identifier test5
20010122-1.c:51:39: punctuator (
20010122-1.c:51:40: keyword void
20010122-1.c:51:44: punctuator )
20010122-1.c:52:1: punctuator {
20010122-1.c:53:3: keyword char
20010122-1.c:53:8: punctuator *
20010122-1.c:53:10: identifier save
20010122-1.c:53:15: punctuator =
20010122-1.c:53:17: punctuator (
20010122-1.c:53:18: keyword char
20010122-1.c:53:22: punctuator *
20010122-1.c:53:23: punctuator )
20010122-1.c:53:25: identifier alloca
20010122-1.c:53:32: punctuator (
20010122-1.c:53:33: constant 4
20010122-1.c:53:34: punctuator )
20010122-1.c:53:35: punctuator ;
20010122-1.c:55:3: keyword return
20010122-1.c:55:10: identifier test5a
20010122-1.c:55:17: punctuator (
20010122-1.c:55:18: identifier save
20010122-1.c:55:22: punctuator )
20010122-1.c:55:23: punctuator ;
20010122-1.c:56:1: punctuator }
20010122-1.c:58:1: keyword void
20010122-1.c:58:6: identifier __attribute__
20010122-1.c:58:19: punctuator (
20010122-1.c:58:20: punctuator (
20010122-1.c:58:21: identifier noinline
20010122-1.c:58:29: punctuator )
20010122-1.c:58:30: punctuator )
20010122-1.c:58:32: punctuator *
20010122-1.c:58:33: identifier test5a
20010122-1.c:58:40: punctuator (
20010122-1.c:58:41: keyword char
20010122-1.c:58:46: punctuator *
20010122-1.c:58:48: identifier p
20010122-1.c:58:49: punctuator )
20010122-1.c:59:1: punctuator {
20010122-1.c:60:3: keyword void
20010122-1.c:60:8: punctuator *
20010122-1.c:60:10: identifier temp
20010122-1.c:60:14: punctuator ;
20010122-1.c:61:3: identifier dummy
20010122-1.c:61:9: punctuator (
20010122-1.c:61:10: punctuator )
20010122-1.c:61:11: punctuator ;
20010122-1.c:62:3: identifier temp
20010122-1.c:62:8: punctuator =
20010122-1.c:62:10: identifier __builtin_return_address
20010122-1.c:62:35: punctuator (
20010122-1.c:62:36: constant 1
20010122-1.c:62:37: punctuator )
20010122-1.c:62:38: punctuator ;
20010122-1.c:63:3: keyword return
20010122-1.c:63:10: identifier temp
20010122-1.c:63:14: punctuator ;
20010122-1.c:64:1: punctuator }
20010122-1.c:66:1: keyword void
20010122-1.c:66:6: identifier __attribute__
20010122-1.c:66:19: punctuator (
20010122-1.c:66:20: punctuator (
20010122-1.c:66:21: identifier noinline
20010122-1.c:66:29: punctuator )
20010122-1.c:66:30: punctuator )
20010122-1.c:66:32: punctuator *
20010122-1.c:66:33: identifier test6
20010122-1.c:66:39: punctuator (
20010122-1.c:66:40: keyword void
20010122-1.c:66:44: punctuator )
20010122-1.c:67:1: punctuator {
20010122-1.c:68:3: keyword char
20010122-1.c:68:8: punctuator *
20010122-1.c:68:10: identifier save
20010122-1.c:68:15: punctuator =
20010122-1.c:68:17: punctuator (
20010122-1.c:68:18: keyword char
20010122-1.c:68:22: punctuator *
20010122-1.c:68:23: punctuator )
20010122-1.c:68:25: identifier alloca
20010122-1.c:68:32: punctuator (
20010122-1.c:68:33: constant 4
20010122-1.c:68:34: punctuator )
20010122-1.c:68:35: punctuator ;
20010122-1.c:70:3: keyword return
20010122-1.c:70:10: identifier test6a
20010122-1.c:70:17: punctuator (
20010122-1.c:70:18: identifier save
20010122-1.c:70:22: punctuator )
20010122-1.c:70:23: punctuator ;
20010122-1.c:71:1: punctuator }
20010122-1.c:73:1: keyword void
20010122-1.c:73:6: identifier __attribute__
20010122-1.c:73:19: punctuator (
20010122-1.c:73:20: punctuator (
20010122-1.c:73:21: identifier noinline
20010122-1.c:73:29: punctuator )
20010122-1.c:73:30: punctuator )
20010122-1.c:73:32: punctuator *
20010122-1.c:73:33: identifier test6a
20010122-1.c:73:40: punctuator (
20010122-1.c:73:41: keyword char
20010122-1.c:73:46: punctuator *
20010122-1.c:73:48: identifier p
20010122-1.c:73:49: punctuator )
20010122-1.c:74:1: punctuator {
20010122-1.c:75:3: keyword void
20010122-1.c:75:8: punctuator *
20010122-1.c:75:10: identifier temp
20010122-1.c:75:14: punctuator ;
20010122-1.c:76:3: identifier temp
20010122-1.c:76:8: punctuator =
20010122-1.c:76:10: identifier __builtin_return_address
20010122-1.c:76:35: punctuator (
20010122-1.c:76:36: constant 1
20010122-1.c:76:37: punctuator )
20010122-1.c:76:38: punctuator ;
20010122-1.c:77:3: identifier dummy
20010122-1.c:77:9: punctuator (
20010122-1.c:77:10: punctuator )
20010122-1.c:77:11: punctuator ;
20010122-1.c:78:3: keyword return
20010122-1.c:78:10: identifier temp
20010122-1.c:78:14: punctuator ;
20010122-1.c:79:1: punctuator }
20010122-1.c:81:1: keyword void
20010122-1.c:81:6: punctuator *
20010122-1.c:81:7: punctuator (
20010122-1.c:81:8: punctuator *
20010122-1.c:81:9: identifier func1
20010122-1.c:81:14: punctuator [
20010122-1.c:81:15: constant 6
20010122-1.c:81:16: punctuator ]
20010122-1.c:81:17: punctuator )
20010122-1.c:81:18: punctuator (
20010122-1.c:81:19: keyword void
20010122-1.c:81:23: punctuator )
20010122-1.c:81:25: punctuator =
20010122-1.c:81:27: punctuator {
20010122-1.c:81:29: identifier test1
20010122-1.c:81:34: punctuator ,
20010122-1.c:81:36: identifier test2
20010122-1.c:81:41: punctuator ,
20010122-1.c:81:43: identifier test3
20010122-1.c:81:48: punctuator ,
20010122-1.c:81:50: identifier test4
20010122-1.c:81:55: punctuator ,
20010122-1.c:81:57: identifier test5
20010122-1.c:81:62: punctuator ,
20010122-1.c:81:64: identifier test6
20010122-1.c:81:70: punctuator }
20010122-1.c:81:71: punctuator ;
20010122-1.c:83:1: keyword char
20010122-1.c:83:6: punctuator *
20010122-1.c:83:8: identifier __attribute__
20010122-1.c:83:21: punctuator (
20010122-1.c:83:22: punctuator (
20010122-1.c:83:23: identifier noinline
20010122-1.c:83:31: punctuator )
20010122-1.c:83:32: punctuator )
20010122-1.c:83:34: identifier call_func1
20010122-1.c:83:45: punctuator (
20010122-1.c:83:46: keyword int
20010122-1.c:83:50: identifier i
20010122-1.c:83:51: punctuator )
20010122-1.c:84:1: punctuator {
20010122-1.c:85:3: identifier save_ret1
20010122-1.c:85:12: punctuator [
20010122-1.c:85:13: identifier i
20010122-1.c:85:14: punctuator ]
20010122-1.c:85:16: punctuator =
20010122-1.c:85:18: identifier func1
20010122-1.c:85:23: punctuator [
20010122-1.c:85:24: identifier i
20010122-1.c:85:25: punctuator ]
20010122-1.c:85:27: punctuator (
20010122-1.c:85:28: punctuator )
20010122-1.c:85:29: punctuator ;
20010122-1.c:86:1: punctuator }
20010122-1.c:88:1: keyword static
20010122-1.c:88:8: keyword void
20010122-1.c:88:13: punctuator *
20010122-1.c:88:14: identifier ret_addr
20010122-1.c:88:22: punctuator ;
20010122-1.c:89:1: keyword void
20010122-1.c:89:6: punctuator *
20010122-1.c:89:7: identifier save_ret2
20010122-1.c:89:16: punctuator [
20010122-1.c:89:17: constant 6
20010122-1.c:89:18: punctuator ]
20010122-1.c:89:19: punctuator ;
20010122-1.c:90:1: keyword void
20010122-1.c:90:6: identifier test10a
20010122-1.c:90:14: punctuator (
20010122-1.c:90:15: keyword char
20010122-1.c:90:20: punctuator *
20010122-1.c:90:21: punctuator )
20010122-1.c:90:22: punctuator ;
20010122-1.c:91:1: keyword void
20010122-1.c:91:6: identifier test11a
20010122-1.c:91:14: punctuator (
20010122-1.c:91:15: keyword char
20010122-1.c:91:20: punctuator *
20010122-1.c:91:21: punctuator )
20010122-1.c:91:22: punctuator ;
20010122-1.c:92:1: keyword void
20010122-1.c:92:6: identifier test12a
20010122-1.c:92:14: punctuator (
20010122-1.c:92:15: keyword char
20010122-1.c:92:20: punctuator *
20010122-1.c:92:21: punctuator )
20010122-1.c:92:22: punctuator ;
20010122-1.c:94:1: keyword void
20010122-1.c:94:6: identifier __attribute__
20010122-1.c:94:19: punctuator (
20010122-1.c:94:20: punctuator (
20010122-1.c:94:21: identifier noinline
20010122-1.c:94:29: punctuator )
20010122-1.c:94:30: punctuator )
20010122-1.c:94:32: identifier test7
20010122-1.c:94:38: punctuator (
20010122-1.c:94:39: keyword void
20010122-1.c:94:43: punctuator )
20010122-1.c:95:1: punctuator {
20010122-1.c:96:3: identifier ret_addr
20010122-1.c:96:12: punctuator =
20010122-1.c:96:14: identifier __builtin_return_address
20010122-1.c:96:39: punctuator (
20010122-1.c:96:40: constant 0
20010122-1.c:96:41: punctuator )
20010122-1.c:96:42: punctuator ;
20010122-1.c:97:3: keyword return
20010122-1.c:97:9: punctuator ;
20010122-1.c:98:1: punctuator }
20010122-1.c:100:1: keyword void
20010122-1.c:100:6: identifier __attribute__
20010122-1.c:100:19: punctuator (
20010122-1.c:100:20: punctuator (
20010122-1.c:100:21: identifier noinline
20010122-1.c:100:29: punctuator )
20010122-1.c:100:30: punctuator )
20010122-1.c:100:32: identifier test8
20010122-1.c:100:38: punctuator (
20010122-1.c:100:39: keyword void
20010122-1.c:100:43: punctuator )
20010122-1.c:101:1: punctuator {
20010122-1.c:102:3: identifier dummy
20010122-1.c:102:9: punctuator (
20010122-1.c:102:10: punctuator )
20010122-1.c:102:11: punctuator ;
20010122-1.c:103:3: identifier ret_addr
20010122-1.c:103:12: punctuator =
20010122-1.c:103:14: identifier __builtin_return_address
20010122-1.c:103:39: punctuator (
20010122-1.c:103:40: constant 0
20010122-1.c:103:41: punctuator )
20010122-1.c:103:42: punctuator ;
20010122-1.c:104:3: keyword return
20010122-1.c:104:9: punctuator ;
20010122-1.c:105:1: punctuator }
20010122-1.c:107:1: keyword void
20010122-1.c:107:6: identifier __attribute__
20010122-1.c:107:19: punctuator (
20010122-1.c:107:20: punctuator (
20010122-1.c:107:21: identifier noinline
20010122-1.c:107:29: punctuator )
20010122-1.c:107:30: punctuator )
20010122-1.c:107:32: identifier test9
20010122-1.c:107:38: punctuator (
20010122-1.c:107:39: keyword void
20010122-1.c:107:43: punctuator )
20010122-1.c:108:1: punctuator {
20010122-1.c:109:3: identifier ret_addr
20010122-1.c:109:12: punctuator =
20010122-1.c:109:14: identifier __builtin_return_address
20010122-1.c:109:39: punctuator (
20010122-1.c:109:40: constant 0
20010122-1.c:109:41: punctuator )
20010122-1.c:109:42: punctuator ;
20010122-1.c:110:3: identifier dummy
20010122-1.c:110:9: punctuator (
20010122-1.c:110:10: punctuator )
20010122-1.c:110:11: punctuator ;
20010122-1.c:111:3: keyword return
20010122-1.c:111:9: punctuator ;
20010122-1.c:112:1: punctuator }
20010122-1.c:114:1: keyword void
20010122-1.c:114:6: identifier __attribute__
20010122-1.c:114:19: punctuator (
20010122-1.c:114:20: punctuator (
20010122-1.c:114:21: identifier noinline
20010122-1.c:114:29: punctuator )
20010122-1.c:114:30: punctuator )
20010122-1.c:114:32: identifier test10
20010122-1.c:114:39: punctuator (
20010122-1.c:114:40: keyword void
20010122-1.c:114:44: punctuator )
20010122-1.c:115:1: punctuator {
20010122-1.c:116:3: keyword char
20010122-1.c:116:8: punctuator *
20010122-1.c:116:10: identifier save
20010122-1.c:116:15: punctuator =
20010122-1.c:116:17: punctuator (
20010122-1.c:116:18: keyword char
20010122-1.c:116:22: punctuator *
20010122-1.c:116:23: punctuator )
20010122-1.c:116:25: identifier alloca
20010122-1.c:116:32: punctuator (
20010122-1.c:116:33: constant 4
20010122-1.c:116:34: punctuator )
20010122-1.c:116:35: punctuator ;
20010122-1.c:118:3: identifier test10a
20010122-1.c:118:11: punctuator (
20010122-1.c:118:12: identifier save
20010122-1.c:118:16: punctuator )
20010122-1.c:118:17: punctuator ;
20010122-1.c:119:1: punctuator }
20010122-1.c:121:1: keyword void
20010122-1.c:121:6: identifier __attribute__
20010122-1.c:121:19: punctuator (
20010122-1.c:121:20: punctuator (
20010122-1.c:121:21: identifier noinline
20010122-1.c:121:29: punctuator )
20010122-1.c:121:30: punctuator )
20010122-1.c:121:32: identifier test10a
20010122-1.c:121:40: punctuator (
20010122-1.c:121:41: keyword char
20010122-1.c:121:46: punctuator *
20010122-1.c:121:48: identifier p
20010122-1.c:121:49: punctuator )
20010122-1.c:122:1: punctuator {
20010122-1.c:123:3: identifier ret_addr
20010122-1.c:123:12: punctuator =
20010122-1.c:123:14: identifier __builtin_return_address
20010122-1.c:123:39: punctuator (
20010122-1.c:123:40: constant 1
20010122-1.c:123:41: punctuator )
20010122-1.c:123:42: punctuator ;
20010122-1.c:124:3: keyword return
20010122-1.c:124:9: punctuator ;
20010122-1.c:125:1: punctuator }
20010122-1.c:127:1: keyword void
20010122-1.c:127:6: identifier __attribute__
20010122-1.c:127:19: punctuator (
20010122-1.c:127:20: punctuator (
20010122-1.c:127:21: identifier noinline
20010122-1.c:127:29: punctuator )
20010122-1.c:127:30: punctuator )
20010122-1.c:127:32: identifier test11
20010122-1.c:127:39: punctuator (
20010122-1.c:127:40: keyword void
20010122-1.c:127:44: punctuator )
20010122-1.c:128:1: punctuator {
20010122-1.c:129:3: keyword char
20010122-1.c:129:8: punctuator *
20010122-1.c:129:10: identifier save
20010122-1.c:129:15: punctuator =
20010122-1.c:129:17: punctuator (
20010122-1.c:129:18: keyword char
20010122-1.c:129:22: punctuator *
20010122-1.c:129:23: punctuator )
20010122-1.c:129:25: identifier alloca
20010122-1.c:129:32: punctuator (
20010122-1.c:129:33: constant 4
20010122-1.c:129:34: punctuator )
20010122-1.c:129:35: punctuator ;
20010122-1.c:131:3: identifier test11a
20010122-1.c:131:11: punctuator (
20010122-1.c:131:12: identifier save
20010122-1.c:131:16: punctuator )
20010122-1.c:131:17: punctuator ;
20010122-1.c:132:1: punctuator }
20010122-1.c:134:1: keyword void
20010122-1.c:134:6: identifier __attribute__
20010122-1.c:134:19: punctuator (
20010122-1.c:134:20: punctuator (
20010122-1.c:134:21: identifier noinline
20010122-1.c:134:29: punctuator )
20010122-1.c:134:30: punctuator )
20010122-1.c:134:32: identifier test11a
20010122-1.c:134:40: punctuator (
20010122-1.c:134:41: keyword char
20010122-1.c:134:46: punctuator *
20010122-1.c:134:48: identifier p
20010122-1.c:134:49: punctuator )
20010122-1.c:135:1: punctuator {
20010122-1.c:136:3: identifier dummy
20010122-1.c:136:9: punctuator (
20010122-1.c:136:10: punctuator )
20010122-1.c:136:11: punctuator ;
20010122-1.c:137:3: identifier ret_addr
20010122-1.c:137:12: punctuator =
20010122-1.c:137:14: identifier __builtin_return_address
20010122-1.c:137:39: punctuator (
20010122-1.c:137:40: constant 1
20010122-1.c:137:41: punctuator )
20010122-1.c:137:42: punctuator ;
20010122-1.c:138:3: keyword return
20010122-1.c:138:9: punctuator ;
20010122-1.c:139:1: punctuator }
20010122-1.c:141:1: keyword void
20010122-1.c:141:6: identifier __attribute__
20010122-1.c:141:19: punctuator (
20010122-1.c:141:20: punctuator (
20010122-1.c:141:21: identifier noinline
20010122-1.c:141:29: punctuator )
20010122-1.c:141:30: punctuator )
20010122-1.c:141:32: identifier test12
20010122-1.c:141:39: punctuator (
20010122-1.c:141:40: keyword void
20010122-1.c:141:44: punctuator )
20010122-1.c:142:1: punctuator {
20010122-1.c:143:3: keyword char
20010122-1.c:143:8: punctuator *
20010122-1.c:143:10: identifier save
20010122-1.c:143:15: punctuator =
20010122-1.c:143:17: punctuator (
20010122-1.c:143:18: keyword char
20010122-1.c:143:22: punctuator *
20010122-1.c:143:23: punctuator )
20010122-1.c:143:25: identifier alloca
20010122-1.c:143:32: punctuator (
20010122-1.c:143:33: constant 4
20010122-1.c:143:34: punctuator )
20010122-1.c:143:35: punctuator ;
20010122-1.c:145:3: identifier test12a
20010122-1.c:145:11: punctuator (
20010122-1.c:145:12: identifier save
20010122-1.c:145:16: punctuator )
20010122-1.c:145:17: punctuator ;
20010122-1.c:146:1: punctuator }
20010122-1.c:148:1: keyword void
20010122-1.c:148:6: identifier __attribute__
20010122-1.c:148:19: punctuator (
20010122-1.c:148:20: punctuator (
20010122-1.c:148:21: identifier noinline
20010122-1.c:148:29: punctuator )
20010122-1.c:148:30: punctuator )
20010122-1.c:148:32: identifier test12a
20010122-1.c:148:40: punctuator (
20010122-1.c:148:41: keyword char
20010122-1.c:148:46: punctuator *
20010122-1.c:148:48: identifier p
20010122-1.c:148:49: punctuator )
20010122-1.c:149:1: punctuator {
20010122-1.c:150:3: identifier ret_addr
20010122-1.c:150:12: punctuator =
20010122-1.c:150:14: identifier __builtin_return_address
20010122-1.c:150:39: punctuator (
20010122-1.c:150:40: constant 1
20010122-1.c:150:41: punctuator )
20010122-1.c:150:42: punctuator ;
20010122-1.c:151:3: identifier dummy
20010122-1.c:151:9: punctuator (
20010122-1.c:151:10: punctuator )
20010122-1.c:151:11: punctuator ;
20010122-1.c:152:3: keyword return
20010122-1.c:152:9: punctuator ;
20010122-1.c:153:1: punctuator }
20010122-1.c:155:1: keyword char
20010122-1.c:155:6: punctuator *
20010122-1.c:155:8: identifier dummy
20010122-1.c:155:14: punctuator (
20010122-1.c:155:15: keyword void
20010122-1.c:155:19: punctuator )
20010122-1.c:156:1: punctuator {
20010122-1.c:157:3: keyword char
20010122-1.c:157:8: punctuator *
20010122-1.c:157:10: identifier save
20010122-1.c:157:15: punctuator =
20010122-1.c:157:17: punctuator (
20010122-1.c:157:18: keyword char
20010122-1.c:157:22: punctuator *
20010122-1.c:157:23: punctuator )
20010122-1.c:157:25: identifier alloca
20010122-1.c:157:32: punctuator (
20010122-1.c:157:33: constant 4
20010122-1.c:157:34: punctuator )
20010122-1.c:157:35: punctuator ;
20010122-1.c:159:3: keyword return
20010122-1.c:159:10: identifier save
20010122-1.c:159:14: punctuator ;
20010122-1.c:160:1: punctuator }
20010122-1.c:162:1: keyword void
20010122-1.c:162:6: punctuator (
20010122-1.c:162:7: punctuator *
20010122-1.c:162:8: identifier func2
20010122-1.c:162:13: punctuator [
20010122-1.c:162:14: constant 6
20010122-1.c:162:15: punctuator ]
20010122-1.c:162:16: punctuator )
20010122-1.c:162:17: punctuator (
20010122-1.c:162:18: keyword void
20010122-1.c:162:22: punctuator )
20010122-1.c:162:24: punctuator =
20010122-1.c:162:26: punctuator {
20010122-1.c:162:28: identifier test7
20010122-1.c:162:33: punctuator ,
20010122-1.c:162:35: identifier test8
20010122-1.c:162:40: punctuator ,
20010122-1.c:162:42: identifier test9
20010122-1.c:162:47: punctuator ,
20010122-1.c:162:49: identifier test10
20010122-1.c:162:55: punctuator ,
20010122-1.c:162:57: identifier test11
20010122-1.c:162:63: punctuator ,
20010122-1.c:162:65: identifier test12
20010122-1.c:162:72: punctuator }
20010122-1.c:162:73: punctuator ;
20010122-1.c:164:1: keyword void
20010122-1.c:164:6: identifier __attribute__
20010122-1.c:164:19: punctuator (
20010122-1.c:164:20: punctuator (
20010122-1.c:164:21: identifier noinline
20010122-1.c:164:29: punctuator )
20010122-1.c:164:30: punctuator )
20010122-1.c:164:32: identifier call_func2
20010122-1.c:164:43: punctuator (
20010122-1.c:164:44: keyword int
20010122-1.c:164:48: identifier i
20010122-1.c:164:49: punctuator )
20010122-1.c:165:1: punctuator {
20010122-1.c:166:3: identifier func2
20010122-1.c:166:8: punctuator [
20010122-1.c:166:9: identifier i
20010122-1.c:166:10: punctuator ]
20010122-1.c:166:12: punctuator (
20010122-1.c:166:13: punctuator )
20010122-1.c:166:14: punctuator ;
20010122-1.c:167:3: identifier save_ret2
20010122-1.c:167:12: punctuator [
20010122-1.c:167:13: identifier i
20010122-1.c:167:14: punctuator ]
20010122-1.c:167:16: punctuator =
20010122-1.c:167:18: identifier ret_addr
20010122-1.c:167:26: punctuator ;
20010122-1.c:168:1: punctuator }
20010122-1.c:170:1: keyword int
20010122-1.c:170:5: identifier main
20010122-1.c:170:10: punctuator (
20010122-1.c:170:11: keyword void
20010122-1.c:170:15: punctuator )
20010122-1.c:171:1: punctuator {
20010122-1.c:172:3: keyword int
20010122-1.c:172:7: identifier i
20010122-1.c:172:8: punctuator ;
20010122-1.c:174:3: keyword for
20010122-1.c:174:7: punctuator (
20010122-1.c:174:8: identifier i
20010122-1.c:174:10: punctuator =
20010122-1.c:174:12: constant 0
20010122-1.c:174:13: punctuator ;
20010122-1.c:174:15: identifier i
20010122-1.c:174:17: punctuator <
20010122-1.c:174:19: constant 6
20010122-1.c:174:20: punctuator ;
20010122-1.c:174:22: identifier i
20010122-1.c:174:23: punctuator ++
20010122-1.c:174:25: punctuator )
20010122-1.c:174:27: punctuator {
20010122-1.c:175:5: identifier call_func1
20010122-1.c:175:15: punctuator (
20010122-1.c:175:16: identifier i
20010122-1.c:175:17: punctuator )
20010122-1.c:175:18: punctuator ;
20010122-1.c:176:3: punctuator }
20010122-1.c:178:3: keyword if
20010122-1.c:178:6: punctuator (
20010122-1.c:178:7: identifier save_ret1
20010122-1.c:178:16: punctuator [
20010122-1.c:178:17: constant 0
20010122-1.c:178:18: punctuator ]
20010122-1.c:178:20: punctuator !=
20010122-1.c:178:23: identifier save_ret1
20010122-1.c:178:32: punctuator [
20010122-1.c:178:33: constant 1
20010122-1.c:178:34: punctuator ]
20010122-1.c:179:7: punctuator ||
20010122-1.c:179:10: identifier save_ret1
20010122-1.c:179:19: punctuator [
20010122-1.c:179:20: constant 1
20010122-1.c:179:21: punctuator ]
20010122-1.c:179:23: punctuator !=
20010122-1.c:179:26: identifier save_ret1
20010122-1.c:179:35: punctuator [
20010122-1.c:179:36: constant 2
20010122-1.c:179:37: punctuator ]
20010122-1.c:179:38: punctuator )
20010122-1.c:180:5: identifier abort
20010122-1.c:180:11: punctuator (
20010122-1.c:180:12: punctuator )
20010122-1.c:180:13: punctuator ;
20010122-1.c:181:3: keyword if
20010122-1.c:181:6: punctuator (
20010122-1.c:181:7: identifier save_ret1
20010122-1.c:181:16: punctuator [
20010122-1.c:181:17: constant 3
20010122-1.c:181:18: punctuator ]
20010122-1.c:181:20: punctuator !=
20010122-1.c:181:23: identifier save_ret1
20010122-1.c:181:32: punctuator [
20010122-1.c:181:33: constant 4
20010122-1.c:181:34: punctuator ]
20010122-1.c:182:7: punctuator ||
20010122-1.c:182:10: identifier save_ret1
20010122-1.c:182:19: punctuator [
20010122-1.c:182:20: constant 4
20010122-1.c:182:21: punctuator ]
20010122-1.c:182:23: punctuator !=
20010122-1.c:182:26: identifier save_ret1
20010122-1.c:182:35: punctuator [
20010122-1.c:182:36: constant 5
20010122-1.c:182:37: punctuator ]
20010122-1.c:182:38: punctuator )
20010122-1.c:183:5: identifier abort
20010122-1.c:183:11: punctuator (
20010122-1.c:183:12: punctuator )
20010122-1.c:183:13: punctuator ;
20010122-1.c:184:3: keyword if
20010122-1.c:184:6: punctuator (
20010122-1.c:184:7: identifier save_ret1
20010122-1.c:184:16: punctuator [
20010122-1.c:184:17: constant 3
20010122-1.c:184:18: punctuator ]
20010122-1.c:184:20: punctuator &&
20010122-1.c:184:23: identifier save_ret1
20010122-1.c:184:32: punctuator [
20010122-1.c:184:33: constant 0
20010122-1.c:184:34: punctuator ]
20010122-1.c:184:36: punctuator !=
20010122-1.c:184:39: identifier save_ret1
20010122-1.c:184:48: punctuator [
20010122-1.c:184:49: constant 3
20010122-1.c:184:50: punctuator ]
20010122-1.c:184:51: punctuator )
20010122-1.c:185:5: identifier abort
20010122-1.c:185:11: punctuator (
20010122-1.c:185:12: punctuator )
20010122-1.c:185:13: punctuator ;
20010122-1.c:188:3: keyword for
20010122-1.c:188:7: punctuator (
20010122-1.c:188:8: identifier i
20010122-1.c:188:10: punctuator =
20010122-1.c:188:12: constant 0
20010122-1.c:188:13: punctuator ;
20010122-1.c:188:15: identifier i
20010122-1.c:188:17: punctuator <
20010122-1.c:188:19: constant 6
20010122-1.c:188:20: punctuator ;
20010122-1.c:188:22: identifier i
20010122-1.c:188:23: punctuator ++
20010122-1.c:188:25: punctuator )
20010122-1.c:188:27: punctuator {
20010122-1.c:189:5: identifier call_func2
20010122-1.c:189:15: punctuator (
20010122-1.c:189:16: identifier i
20010122-1.c:189:17: punctuator )
20010122-1.c:189:18: punctuator ;
20010122-1.c:190:3: punctuator }
20010122-1.c:192:3: keyword if
20010122-1.c:192:6: punctuator (
20010122-1.c:192:7: identifier save_ret2
20010122-1.c:192:16: punctuator [
20010122-1.c:192:17: constant 0
20010122-1.c:192:18: punctuator ]
20010122-1.c:192:20: punctuator !=
20010122-1.c:192:23: identifier save_ret2
20010122-1.c:192:32: punctuator [
20010122-1.c:192:33: constant 1
20010122-1.c:192:34: punctuator ]
20010122-1.c:193:7: punctuator ||
20010122-1.c:193:10: identifier save_ret2
20010122-1.c:193:19: punctuator [
20010122-1.c:193:20: constant 1
20010122-1.c:193:21: punctuator ]
20010122-1.c:193:23: punctuator !=
20010122-1.c:193:26: identifier save_ret2
20010122-1.c:193:35: punctuator [
20010122-1.c:193:36: constant 2
20010122-1.c:193:37: punctuator ]
20010122-1.c:193:38: punctuator )
20010122-1.c:194:5: identifier abort
20010122-1.c:194:11: punctuator (
20010122-1.c:194:12: punctuator )
20010122-1.c:194:13: punctuator ;
20010122-1.c:195:3: keyword if
20010122-1.c:195:6: punctuator (
20010122-1.c:195:7: identifier save_ret2
20010122-1.c:195:16: punctuator [
20010122-1.c:195:17: constant 3
20010122-1.c:195:18: punctuator ]
20010122-1.c:195:20: punctuator !=
20010122-1.c:195:23: identifier save_ret2
20010122-1.c:195:32: punctuator [
20010122-1.c:195:33: constant 4
20010122-1.c:195:34: punctuator ]
20010122-1.c:196:7: punctuator ||
20010122-1.c:196:10: identifier save_ret2
20010122-1.c:196:19: punctuator [
20010122-1.c:196:20: constant 4
20010122-1.c:196:21: punctuator ]
20010122-1.c:196:23: punctuator !=
20010122-1.c:196:26: identifier save_ret2
20010122-1.c:196:35: punctuator [
20010122-1.c:196:36: constant 5
20010122-1.c:196:37: punctuator ]
20010122-1.c:196:38: punctuator )
20010122-1.c:197:5: identifier abort
20010122-1.c:197:11: punctuator (
20010122-1.c:197:12: punctuator )
20010122-1.c:197:13: punctuator ;
20010122-1.c:198:3: keyword if
20010122-1.c:198:6: punctuator (
20010122-1.c:198:7: identifier save_ret2
20010122-1.c:198:16: punctuator [
20010122-1.c:198:17: constant 3
20010122-1.c:198:18: punctuator ]
20010122-1.c:198:20: punctuator &&
20010122-1.c:198:23: identifier save_ret2
20010122-1.c:198:32: punctuator [
20010122-1.c:198:33: constant 0
20010122-1.c:198:34: punctuator ]
20010122-1.c:198:36: punctuator !=
20010122-1.c:198:39: identifier save_ret2
20010122-1.c:198:48: punctuator [
20010122-1.c:198:49: constant 3
20010122-1.c:198:50: punctuator ]
20010122-1.c:198:51: punctuator )
20010122-1.c:199:5: identifier abort
20010122-1.c:199:11: punctuator (
20010122-1.c:199:12: punctuator )
20010122-1.c:199:13: punctuator ;
20010122-1.c:201:3: identifier exit
20010122-1.c:201:8: punctuator (
20010122-1.c:201:9: constant 0
20010122-1.c:201:10: punctuator )
20010122-1.c:201:11: punctuator ;
20010122-1.c:202:1: punctuator }
