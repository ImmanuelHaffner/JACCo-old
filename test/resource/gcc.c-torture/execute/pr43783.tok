0
pr43783.c:1:1: keyword typedef
pr43783.c:1:9: identifier __attribute__
pr43783.c:1:22: punctuator (
pr43783.c:1:23: punctuator (
pr43783.c:1:24: identifier aligned
pr43783.c:1:31: punctuator (
pr43783.c:1:32: constant 16
pr43783.c:1:34: punctuator )
pr43783.c:1:35: punctuator )
pr43783.c:1:36: punctuator )
pr43783.c:2:1: keyword struct
pr43783.c:2:8: punctuator {
pr43783.c:3:3: keyword unsigned
pr43783.c:3:12: keyword long
pr43783.c:3:17: keyword long
pr43783.c:3:22: identifier w
pr43783.c:3:23: punctuator [
pr43783.c:3:24: constant 3
pr43783.c:3:25: punctuator ]
pr43783.c:3:26: punctuator ;
pr43783.c:4:1: punctuator }
pr43783.c:4:3: identifier UINT192
pr43783.c:4:10: punctuator ;
pr43783.c:6:1: identifier UINT192
pr43783.c:6:9: identifier bid_Kx192
pr43783.c:6:18: punctuator [
pr43783.c:6:19: constant 32
pr43783.c:6:21: punctuator ]
pr43783.c:6:22: punctuator ;
pr43783.c:8:1: keyword extern
pr43783.c:8:8: keyword void
pr43783.c:8:13: identifier abort
pr43783.c:8:19: punctuator (
pr43783.c:8:20: keyword void
pr43783.c:8:24: punctuator )
pr43783.c:8:25: punctuator ;
pr43783.c:10:1: keyword int
pr43783.c:10:5: identifier main
pr43783.c:10:9: punctuator (
pr43783.c:10:10: punctuator )
pr43783.c:11:1: punctuator {
pr43783.c:12:3: keyword int
pr43783.c:12:7: identifier i
pr43783.c:12:9: punctuator =
pr43783.c:12:11: constant 0
pr43783.c:12:12: punctuator ;
pr43783.c:13:3: keyword unsigned
pr43783.c:13:12: keyword long
pr43783.c:13:17: identifier x
pr43783.c:13:19: punctuator =
pr43783.c:13:21: constant 0
pr43783.c:13:22: punctuator ;
pr43783.c:14:3: keyword for
pr43783.c:14:7: punctuator (
pr43783.c:14:8: identifier i
pr43783.c:14:10: punctuator =
pr43783.c:14:12: constant 0
pr43783.c:14:13: punctuator ;
pr43783.c:14:15: identifier i
pr43783.c:14:17: punctuator <
pr43783.c:14:19: constant 32
pr43783.c:14:21: punctuator ;
pr43783.c:14:23: punctuator ++
pr43783.c:14:25: identifier i
pr43783.c:14:26: punctuator )
pr43783.c:15:5: identifier bid_Kx192
pr43783.c:15:14: punctuator [
pr43783.c:15:15: identifier i
pr43783.c:15:16: punctuator ]
pr43783.c:15:17: punctuator .
pr43783.c:15:18: identifier w
pr43783.c:15:19: punctuator [
pr43783.c:15:20: constant 1
pr43783.c:15:21: punctuator ]
pr43783.c:15:23: punctuator =
pr43783.c:15:25: identifier i
pr43783.c:15:27: punctuator ==
pr43783.c:15:30: constant 1
pr43783.c:15:31: punctuator ;
pr43783.c:16:3: keyword for
pr43783.c:16:7: punctuator (
pr43783.c:16:8: identifier i
pr43783.c:16:10: punctuator =
pr43783.c:16:12: constant 0
pr43783.c:16:13: punctuator ;
pr43783.c:16:15: identifier i
pr43783.c:16:17: punctuator <
pr43783.c:16:19: constant 32
pr43783.c:16:21: punctuator ;
pr43783.c:16:23: punctuator ++
pr43783.c:16:25: identifier i
pr43783.c:16:26: punctuator )
pr43783.c:17:5: identifier x
pr43783.c:17:7: punctuator +=
pr43783.c:17:10: identifier bid_Kx192
pr43783.c:17:19: punctuator [
pr43783.c:17:20: constant 1
pr43783.c:17:21: punctuator ]
pr43783.c:17:22: punctuator .
pr43783.c:17:23: identifier w
pr43783.c:17:24: punctuator [
pr43783.c:17:25: constant 1
pr43783.c:17:26: punctuator ]
pr43783.c:17:27: punctuator ;
pr43783.c:18:3: keyword if
pr43783.c:18:6: punctuator (
pr43783.c:18:7: identifier x
pr43783.c:18:9: punctuator !=
pr43783.c:18:12: constant 32
pr43783.c:18:14: punctuator )
pr43783.c:19:5: identifier abort
pr43783.c:19:11: punctuator (
pr43783.c:19:12: punctuator )
pr43783.c:19:13: punctuator ;
pr43783.c:20:3: keyword return
pr43783.c:20:10: constant 0
pr43783.c:20:11: punctuator ;
pr43783.c:21:1: punctuator }
