0
20000503-1.c:1:1: keyword unsigned
20000503-1.c:1:10: keyword long
20000503-1.c:2:1: identifier sub
20000503-1.c:2:5: punctuator (
20000503-1.c:2:6: keyword int
20000503-1.c:2:10: identifier a
20000503-1.c:2:11: punctuator )
20000503-1.c:3:1: punctuator {
20000503-1.c:4:3: keyword return
20000503-1.c:4:10: punctuator (
20000503-1.c:4:11: punctuator (
20000503-1.c:4:12: constant 0
20000503-1.c:4:14: punctuator >
20000503-1.c:4:16: identifier a
20000503-1.c:4:18: punctuator -
20000503-1.c:4:20: constant 2
20000503-1.c:4:21: punctuator )
20000503-1.c:4:23: punctuator ?
20000503-1.c:4:25: constant 0
20000503-1.c:4:27: punctuator :
20000503-1.c:4:29: identifier a
20000503-1.c:4:31: punctuator -
20000503-1.c:4:33: constant 2
20000503-1.c:4:34: punctuator )
20000503-1.c:4:36: punctuator *
20000503-1.c:4:38: keyword sizeof
20000503-1.c:4:45: punctuator (
20000503-1.c:4:46: keyword long
20000503-1.c:4:50: punctuator )
20000503-1.c:4:51: punctuator ;
20000503-1.c:5:1: punctuator }
20000503-1.c:7:1: identifier main
20000503-1.c:7:6: punctuator (
20000503-1.c:7:7: punctuator )
20000503-1.c:8:1: punctuator {
20000503-1.c:9:3: keyword if
20000503-1.c:9:6: punctuator (
20000503-1.c:9:7: identifier sub
20000503-1.c:9:11: punctuator (
20000503-1.c:9:12: constant 0
20000503-1.c:9:13: punctuator )
20000503-1.c:9:15: punctuator !=
20000503-1.c:9:18: constant 0
20000503-1.c:9:19: punctuator )
20000503-1.c:10:5: identifier abort
20000503-1.c:10:11: punctuator (
20000503-1.c:10:12: punctuator )
20000503-1.c:10:13: punctuator ;
20000503-1.c:12:3: identifier exit
20000503-1.c:12:8: punctuator (
20000503-1.c:12:9: constant 0
20000503-1.c:12:10: punctuator )
20000503-1.c:12:11: punctuator ;
20000503-1.c:13:1: punctuator }
