0
memset.c:1:1 keyword extern
memset.c:1:8 keyword void
memset.c:1:13 identifier abort
memset.c:1:19 punctuator (
memset.c:1:20 keyword void
memset.c:1:24 punctuator )
memset.c:1:25 punctuator ;
memset.c:2:1 keyword extern
memset.c:2:8 keyword int
memset.c:2:12 identifier inside_main
memset.c:2:23 punctuator ;
memset.c:4:1 identifier __attribute__
memset.c:4:15 punctuator (
memset.c:4:16 punctuator (
memset.c:4:17 identifier __noinline__
memset.c:4:29 punctuator )
memset.c:4:30 punctuator )
memset.c:5:1 keyword void
memset.c:5:6 punctuator *
memset.c:6:1 identifier memset
memset.c:6:8 punctuator (
memset.c:6:9 keyword void
memset.c:6:14 punctuator *
memset.c:6:15 identifier dst
memset.c:6:18 punctuator ,
memset.c:6:20 keyword int
memset.c:6:24 identifier c
memset.c:6:25 punctuator ,
memset.c:6:27 keyword long
memset.c:6:32 keyword unsigned
memset.c:6:41 keyword int
memset.c:6:45 identifier n
memset.c:6:46 punctuator )
memset.c:7:1 punctuator {
memset.c:8:3 keyword while
memset.c:8:9 punctuator (
memset.c:8:10 identifier n
memset.c:8:11 punctuator --
memset.c:8:14 punctuator !=
memset.c:8:17 constant 0
memset.c:8:18 punctuator )
memset.c:9:5 identifier n
memset.c:9:6 punctuator [
memset.c:9:7 punctuator (
memset.c:9:8 keyword char
memset.c:9:13 punctuator *
memset.c:9:14 punctuator )
memset.c:9:16 identifier dst
memset.c:9:19 punctuator ]
memset.c:9:21 punctuator =
memset.c:9:23 identifier c
memset.c:9:24 punctuator ;
memset.c:10:3 keyword return
memset.c:10:10 identifier dst
memset.c:10:13 punctuator ;
memset.c:11:1 punctuator }
