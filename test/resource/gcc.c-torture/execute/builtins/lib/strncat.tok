0
strncat.c:1:1: keyword extern
strncat.c:1:8: keyword void
strncat.c:1:13: identifier abort
strncat.c:1:18: punctuator (
strncat.c:1:19: keyword void
strncat.c:1:23: punctuator )
strncat.c:1:24: punctuator ;
strncat.c:2:1: keyword extern
strncat.c:2:8: keyword int
strncat.c:2:12: identifier inside_main
strncat.c:2:23: punctuator ;
strncat.c:4:1: keyword typedef
strncat.c:4:9: keyword long
strncat.c:4:14: keyword unsigned
strncat.c:4:23: keyword int
strncat.c:4:27: identifier size_t
strncat.c:4:33: punctuator ;
strncat.c:6:1: identifier __attribute__
strncat.c:6:15: punctuator (
strncat.c:6:16: punctuator (
strncat.c:6:17: identifier __noinline__
strncat.c:6:29: punctuator )
strncat.c:6:30: punctuator )
strncat.c:7:1: keyword char
strncat.c:7:6: punctuator *
strncat.c:8:1: identifier strncat
strncat.c:8:9: punctuator (
strncat.c:8:10: keyword char
strncat.c:8:15: punctuator *
strncat.c:8:16: identifier s1
strncat.c:8:18: punctuator ,
strncat.c:8:20: keyword const
strncat.c:8:26: keyword char
strncat.c:8:31: punctuator *
strncat.c:8:32: identifier s2
strncat.c:8:34: punctuator ,
strncat.c:8:36: identifier size_t
strncat.c:8:43: identifier n
strncat.c:8:44: punctuator )
strncat.c:9:1: punctuator {
strncat.c:10:3: keyword char
strncat.c:10:8: punctuator *
strncat.c:10:9: identifier dest
strncat.c:10:14: punctuator =
strncat.c:10:16: identifier s1
strncat.c:10:18: punctuator ;
strncat.c:11:3: keyword char
strncat.c:11:8: identifier c
strncat.c:11:10: punctuator =
strncat.c:11:12: constant '\0'
strncat.c:11:16: punctuator ;
strncat.c:16:3: keyword while
strncat.c:16:9: punctuator (
strncat.c:16:10: punctuator *
strncat.c:16:11: identifier s1
strncat.c:16:13: punctuator )
strncat.c:16:15: identifier s1
strncat.c:16:17: punctuator ++
strncat.c:16:19: punctuator ;
strncat.c:17:3: identifier c
strncat.c:17:5: punctuator =
strncat.c:17:7: constant '\0'
strncat.c:17:11: punctuator ;
strncat.c:18:3: keyword while
strncat.c:18:9: punctuator (
strncat.c:18:10: identifier n
strncat.c:18:12: punctuator >
strncat.c:18:14: constant 0
strncat.c:18:15: punctuator )
strncat.c:19:5: punctuator {
strncat.c:20:7: identifier c
strncat.c:20:9: punctuator =
strncat.c:20:11: punctuator *
strncat.c:20:12: identifier s2
strncat.c:20:14: punctuator ++
strncat.c:20:16: punctuator ;
strncat.c:21:7: punctuator *
strncat.c:21:8: identifier s1
strncat.c:21:10: punctuator ++
strncat.c:21:13: punctuator =
strncat.c:21:15: identifier c
strncat.c:21:16: punctuator ;
strncat.c:22:7: keyword if
strncat.c:22:10: punctuator (
strncat.c:22:11: identifier c
strncat.c:22:13: punctuator ==
strncat.c:22:16: constant '\0'
strncat.c:22:20: punctuator )
strncat.c:23:2: keyword return
strncat.c:23:9: identifier dest
strncat.c:23:13: punctuator ;
strncat.c:24:7: identifier n
strncat.c:24:8: punctuator --
strncat.c:24:10: punctuator ;
strncat.c:25:5: punctuator }
strncat.c:26:3: keyword if
strncat.c:26:6: punctuator (
strncat.c:26:7: identifier c
strncat.c:26:9: punctuator !=
strncat.c:26:12: constant '\0'
strncat.c:26:16: punctuator )
strncat.c:27:5: punctuator *
strncat.c:27:6: identifier s1
strncat.c:27:9: punctuator =
strncat.c:27:11: constant '\0'
strncat.c:27:15: punctuator ;
strncat.c:28:3: keyword return
strncat.c:28:10: identifier dest
strncat.c:28:14: punctuator ;
strncat.c:29:1: punctuator }
