0
chk.c:1:1: keyword typedef
chk.c:1:9: identifier __builtin_va_list
chk.c:1:27: identifier __gnuc_va_list
chk.c:1:41: punctuator ;
chk.c:2:1: keyword typedef
chk.c:2:9: identifier __gnuc_va_list
chk.c:2:24: identifier va_list
chk.c:2:31: punctuator ;
chk.c:16:1: keyword typedef
chk.c:16:9: keyword unsigned
chk.c:16:18: keyword char
chk.c:16:23: identifier __u_char
chk.c:16:31: punctuator ;
chk.c:17:1: keyword typedef
chk.c:17:9: keyword unsigned
chk.c:17:18: keyword short
chk.c:17:24: keyword int
chk.c:17:28: identifier __u_short
chk.c:17:37: punctuator ;
chk.c:18:1: keyword typedef
chk.c:18:9: keyword unsigned
chk.c:18:18: keyword int
chk.c:18:22: identifier __u_int
chk.c:18:29: punctuator ;
chk.c:19:1: keyword typedef
chk.c:19:9: keyword unsigned
chk.c:19:18: keyword long
chk.c:19:23: keyword int
chk.c:19:27: identifier __u_long
chk.c:19:35: punctuator ;
chk.c:22:1: keyword typedef
chk.c:22:9: keyword signed
chk.c:22:16: keyword char
chk.c:22:21: identifier __int8_t
chk.c:22:29: punctuator ;
chk.c:23:1: keyword typedef
chk.c:23:9: keyword unsigned
chk.c:23:18: keyword char
chk.c:23:23: identifier __uint8_t
chk.c:23:32: punctuator ;
chk.c:24:1: keyword typedef
chk.c:24:9: keyword signed
chk.c:24:16: keyword short
chk.c:24:22: keyword int
chk.c:24:26: identifier __int16_t
chk.c:24:35: punctuator ;
chk.c:25:1: keyword typedef
chk.c:25:9: keyword unsigned
chk.c:25:18: keyword short
chk.c:25:24: keyword int
chk.c:25:28: identifier __uint16_t
chk.c:25:38: punctuator ;
chk.c:26:1: keyword typedef
chk.c:26:9: keyword signed
chk.c:26:16: keyword int
chk.c:26:20: identifier __int32_t
chk.c:26:29: punctuator ;
chk.c:27:1: keyword typedef
chk.c:27:9: keyword unsigned
chk.c:27:18: keyword int
chk.c:27:22: identifier __uint32_t
chk.c:27:32: punctuator ;
chk.c:29:1: keyword typedef
chk.c:29:9: keyword signed
chk.c:29:16: keyword long
chk.c:29:21: keyword int
chk.c:29:25: identifier __int64_t
chk.c:29:34: punctuator ;
chk.c:30:1: keyword typedef
chk.c:30:9: keyword unsigned
chk.c:30:18: keyword long
chk.c:30:23: keyword int
chk.c:30:27: identifier __uint64_t
chk.c:30:37: punctuator ;
chk.c:38:1: keyword typedef
chk.c:38:9: keyword long
chk.c:38:14: keyword int
chk.c:38:18: identifier __quad_t
chk.c:38:26: punctuator ;
chk.c:39:1: keyword typedef
chk.c:39:9: keyword unsigned
chk.c:39:18: keyword long
chk.c:39:23: keyword int
chk.c:39:27: identifier __u_quad_t
chk.c:39:37: punctuator ;
chk.c:42:1: keyword typedef
chk.c:42:9: keyword unsigned
chk.c:42:18: keyword long
chk.c:42:23: keyword int
chk.c:42:27: identifier __dev_t
chk.c:42:34: punctuator ;
chk.c:43:1: keyword typedef
chk.c:43:9: keyword unsigned
chk.c:43:18: keyword int
chk.c:43:22: identifier __uid_t
chk.c:43:29: punctuator ;
chk.c:44:1: keyword typedef
chk.c:44:9: keyword unsigned
chk.c:44:18: keyword int
chk.c:44:22: identifier __gid_t
chk.c:44:29: punctuator ;
chk.c:45:1: keyword typedef
chk.c:45:9: keyword unsigned
chk.c:45:18: keyword long
chk.c:45:23: keyword int
chk.c:45:27: identifier __ino_t
chk.c:45:34: punctuator ;
chk.c:46:1: keyword typedef
chk.c:46:9: keyword unsigned
chk.c:46:18: keyword long
chk.c:46:23: keyword int
chk.c:46:27: identifier __ino64_t
chk.c:46:36: punctuator ;
chk.c:47:1: keyword typedef
chk.c:47:9: keyword unsigned
chk.c:47:18: keyword int
chk.c:47:22: identifier __mode_t
chk.c:47:30: punctuator ;
chk.c:48:1: keyword typedef
chk.c:48:9: keyword unsigned
chk.c:48:18: keyword long
chk.c:48:23: keyword int
chk.c:48:27: identifier __nlink_t
chk.c:48:36: punctuator ;
chk.c:49:1: keyword typedef
chk.c:49:9: keyword long
chk.c:49:14: keyword int
chk.c:49:18: identifier __off_t
chk.c:49:25: punctuator ;
chk.c:50:1: keyword typedef
chk.c:50:9: keyword long
chk.c:50:14: keyword int
chk.c:50:18: identifier __off64_t
chk.c:50:27: punctuator ;
chk.c:51:1: keyword typedef
chk.c:51:9: keyword int
chk.c:51:13: identifier __pid_t
chk.c:51:20: punctuator ;
chk.c:52:1: keyword typedef
chk.c:52:9: keyword struct
chk.c:52:16: punctuator {
chk.c:52:18: keyword int
chk.c:52:22: identifier __val
chk.c:52:27: punctuator [
chk.c:52:28: constant 2
chk.c:52:29: punctuator ]
chk.c:52:30: punctuator ;
chk.c:52:32: punctuator }
chk.c:52:34: identifier __fsid_t
chk.c:52:42: punctuator ;
chk.c:53:1: keyword typedef
chk.c:53:9: keyword long
chk.c:53:14: keyword int
chk.c:53:18: identifier __clock_t
chk.c:53:27: punctuator ;
chk.c:54:1: keyword typedef
chk.c:54:9: keyword unsigned
chk.c:54:18: keyword long
chk.c:54:23: keyword int
chk.c:54:27: identifier __rlim_t
chk.c:54:35: punctuator ;
chk.c:55:1: keyword typedef
chk.c:55:9: keyword unsigned
chk.c:55:18: keyword long
chk.c:55:23: keyword int
chk.c:55:27: identifier __rlim64_t
chk.c:55:37: punctuator ;
chk.c:56:1: keyword typedef
chk.c:56:9: keyword unsigned
chk.c:56:18: keyword int
chk.c:56:22: identifier __id_t
chk.c:56:28: punctuator ;
chk.c:57:1: keyword typedef
chk.c:57:9: keyword long
chk.c:57:14: keyword int
chk.c:57:18: identifier __time_t
chk.c:57:26: punctuator ;
chk.c:58:1: keyword typedef
chk.c:58:9: keyword unsigned
chk.c:58:18: keyword int
chk.c:58:22: identifier __useconds_t
chk.c:58:34: punctuator ;
chk.c:59:1: keyword typedef
chk.c:59:9: keyword long
chk.c:59:14: keyword int
chk.c:59:18: identifier __suseconds_t
chk.c:59:31: punctuator ;
chk.c:61:1: keyword typedef
chk.c:61:9: keyword int
chk.c:61:13: identifier __daddr_t
chk.c:61:22: punctuator ;
chk.c:62:1: keyword typedef
chk.c:62:9: keyword long
chk.c:62:14: keyword int
chk.c:62:18: identifier __swblk_t
chk.c:62:27: punctuator ;
chk.c:63:1: keyword typedef
chk.c:63:9: keyword int
chk.c:63:13: identifier __key_t
chk.c:63:20: punctuator ;
chk.c:66:1: keyword typedef
chk.c:66:9: keyword int
chk.c:66:13: identifier __clockid_t
chk.c:66:24: punctuator ;
chk.c:69:1: keyword typedef
chk.c:69:9: keyword void
chk.c:69:14: punctuator *
chk.c:69:16: identifier __timer_t
chk.c:69:25: punctuator ;
chk.c:72:1: keyword typedef
chk.c:72:9: keyword long
chk.c:72:14: keyword int
chk.c:72:18: identifier __blksize_t
chk.c:72:29: punctuator ;
chk.c:77:1: keyword typedef
chk.c:77:9: keyword long
chk.c:77:14: keyword int
chk.c:77:18: identifier __blkcnt_t
chk.c:77:28: punctuator ;
chk.c:78:1: keyword typedef
chk.c:78:9: keyword long
chk.c:78:14: keyword int
chk.c:78:18: identifier __blkcnt64_t
chk.c:78:30: punctuator ;
chk.c:81:1: keyword typedef
chk.c:81:9: keyword unsigned
chk.c:81:18: keyword long
chk.c:81:23: keyword int
chk.c:81:27: identifier __fsblkcnt_t
chk.c:81:39: punctuator ;
chk.c:82:1: keyword typedef
chk.c:82:9: keyword unsigned
chk.c:82:18: keyword long
chk.c:82:23: keyword int
chk.c:82:27: identifier __fsblkcnt64_t
chk.c:82:41: punctuator ;
chk.c:85:1: keyword typedef
chk.c:85:9: keyword unsigned
chk.c:85:18: keyword long
chk.c:85:23: keyword int
chk.c:85:27: identifier __fsfilcnt_t
chk.c:85:39: punctuator ;
chk.c:86:1: keyword typedef
chk.c:86:9: keyword unsigned
chk.c:86:18: keyword long
chk.c:86:23: keyword int
chk.c:86:27: identifier __fsfilcnt64_t
chk.c:86:41: punctuator ;
chk.c:88:1: keyword typedef
chk.c:88:9: keyword long
chk.c:88:14: keyword int
chk.c:88:18: identifier __ssize_t
chk.c:88:27: punctuator ;
chk.c:92:1: keyword typedef
chk.c:92:9: identifier __off64_t
chk.c:92:19: identifier __loff_t
chk.c:92:27: punctuator ;
chk.c:93:1: keyword typedef
chk.c:93:9: identifier __quad_t
chk.c:93:18: punctuator *
chk.c:93:19: identifier __qaddr_t
chk.c:93:28: punctuator ;
chk.c:94:1: keyword typedef
chk.c:94:9: keyword char
chk.c:94:14: punctuator *
chk.c:94:15: identifier __caddr_t
chk.c:94:24: punctuator ;
chk.c:97:1: keyword typedef
chk.c:97:9: keyword long
chk.c:97:14: keyword int
chk.c:97:18: identifier __intptr_t
chk.c:97:28: punctuator ;
chk.c:100:1: keyword typedef
chk.c:100:9: keyword unsigned
chk.c:100:18: keyword int
chk.c:100:22: identifier __socklen_t
chk.c:100:33: punctuator ;
chk.c:104:1: keyword typedef
chk.c:104:9: identifier __u_char
chk.c:104:18: identifier u_char
chk.c:104:24: punctuator ;
chk.c:105:1: keyword typedef
chk.c:105:9: identifier __u_short
chk.c:105:19: identifier u_short
chk.c:105:26: punctuator ;
chk.c:106:1: keyword typedef
chk.c:106:9: identifier __u_int
chk.c:106:17: identifier u_int
chk.c:106:22: punctuator ;
chk.c:107:1: keyword typedef
chk.c:107:9: identifier __u_long
chk.c:107:18: identifier u_long
chk.c:107:24: punctuator ;
chk.c:108:1: keyword typedef
chk.c:108:9: identifier __quad_t
chk.c:108:18: identifier quad_t
chk.c:108:24: punctuator ;
chk.c:109:1: keyword typedef
chk.c:109:9: identifier __u_quad_t
chk.c:109:20: identifier u_quad_t
chk.c:109:28: punctuator ;
chk.c:110:1: keyword typedef
chk.c:110:9: identifier __fsid_t
chk.c:110:18: identifier fsid_t
chk.c:110:24: punctuator ;
chk.c:115:1: keyword typedef
chk.c:115:9: identifier __loff_t
chk.c:115:18: identifier loff_t
chk.c:115:24: punctuator ;
chk.c:119:1: keyword typedef
chk.c:119:9: identifier __ino_t
chk.c:119:17: identifier ino_t
chk.c:119:22: punctuator ;
chk.c:120:1: keyword typedef
chk.c:120:9: identifier __dev_t
chk.c:120:17: identifier dev_t
chk.c:120:22: punctuator ;
chk.c:125:1: keyword typedef
chk.c:125:9: identifier __gid_t
chk.c:125:17: identifier gid_t
chk.c:125:22: punctuator ;
chk.c:130:1: keyword typedef
chk.c:130:9: identifier __mode_t
chk.c:130:18: identifier mode_t
chk.c:130:24: punctuator ;
chk.c:135:1: keyword typedef
chk.c:135:9: identifier __nlink_t
chk.c:135:19: identifier nlink_t
chk.c:135:26: punctuator ;
chk.c:140:1: keyword typedef
chk.c:140:9: identifier __uid_t
chk.c:140:17: identifier uid_t
chk.c:140:22: punctuator ;
chk.c:146:1: keyword typedef
chk.c:146:9: identifier __off_t
chk.c:146:17: identifier off_t
chk.c:146:22: punctuator ;
chk.c:147:1: keyword typedef
chk.c:147:9: identifier __pid_t
chk.c:147:17: identifier pid_t
chk.c:147:22: punctuator ;
chk.c:153:1: keyword typedef
chk.c:153:9: identifier __id_t
chk.c:153:16: identifier id_t
chk.c:153:20: punctuator ;
chk.c:158:1: keyword typedef
chk.c:158:9: identifier __ssize_t
chk.c:158:19: identifier ssize_t
chk.c:158:26: punctuator ;
chk.c:164:1: keyword typedef
chk.c:164:9: identifier __daddr_t
chk.c:164:19: identifier daddr_t
chk.c:164:26: punctuator ;
chk.c:165:1: keyword typedef
chk.c:165:9: identifier __caddr_t
chk.c:165:19: identifier caddr_t
chk.c:165:26: punctuator ;
chk.c:171:1: keyword typedef
chk.c:171:9: identifier __key_t
chk.c:171:17: identifier key_t
chk.c:171:22: punctuator ;
chk.c:174:1: keyword typedef
chk.c:174:9: identifier __clock_t
chk.c:174:19: identifier clock_t
chk.c:174:26: punctuator ;
chk.c:180:1: keyword typedef
chk.c:180:9: identifier __time_t
chk.c:180:18: identifier time_t
chk.c:180:24: punctuator ;
chk.c:184:1: keyword typedef
chk.c:184:9: identifier __clockid_t
chk.c:184:21: identifier clockid_t
chk.c:184:30: punctuator ;
chk.c:185:1: keyword typedef
chk.c:185:9: identifier __timer_t
chk.c:185:19: identifier timer_t
chk.c:185:26: punctuator ;
chk.c:186:1: keyword typedef
chk.c:186:9: keyword long
chk.c:186:14: keyword unsigned
chk.c:186:23: keyword int
chk.c:186:27: identifier size_t
chk.c:186:33: punctuator ;
chk.c:190:1: keyword typedef
chk.c:190:9: keyword unsigned
chk.c:190:18: keyword long
chk.c:190:23: keyword int
chk.c:190:27: identifier ulong
chk.c:190:32: punctuator ;
chk.c:191:1: keyword typedef
chk.c:191:9: keyword unsigned
chk.c:191:18: keyword short
chk.c:191:24: keyword int
chk.c:191:28: identifier ushort
chk.c:191:34: punctuator ;
chk.c:192:1: keyword typedef
chk.c:192:9: keyword unsigned
chk.c:192:18: keyword int
chk.c:192:22: identifier uint
chk.c:192:26: punctuator ;
chk.c:193:1: keyword typedef
chk.c:193:9: keyword int
chk.c:193:13: identifier int8_t
chk.c:193:20: identifier __attribute__
chk.c:193:34: punctuator (
chk.c:193:35: punctuator (
chk.c:193:36: identifier __mode__
chk.c:193:45: punctuator (
chk.c:193:46: identifier __QI__
chk.c:193:52: punctuator )
chk.c:193:53: punctuator )
chk.c:193:54: punctuator )
chk.c:193:55: punctuator ;
chk.c:194:1: keyword typedef
chk.c:194:9: keyword int
chk.c:194:13: identifier int16_t
chk.c:194:21: identifier __attribute__
chk.c:194:35: punctuator (
chk.c:194:36: punctuator (
chk.c:194:37: identifier __mode__
chk.c:194:46: punctuator (
chk.c:194:47: identifier __HI__
chk.c:194:53: punctuator )
chk.c:194:54: punctuator )
chk.c:194:55: punctuator )
chk.c:194:56: punctuator ;
chk.c:195:1: keyword typedef
chk.c:195:9: keyword int
chk.c:195:13: identifier int32_t
chk.c:195:21: identifier __attribute__
chk.c:195:35: punctuator (
chk.c:195:36: punctuator (
chk.c:195:37: identifier __mode__
chk.c:195:46: punctuator (
chk.c:195:47: identifier __SI__
chk.c:195:53: punctuator )
chk.c:195:54: punctuator )
chk.c:195:55: punctuator )
chk.c:195:56: punctuator ;
chk.c:196:1: keyword typedef
chk.c:196:9: keyword int
chk.c:196:13: identifier int64_t
chk.c:196:21: identifier __attribute__
chk.c:196:35: punctuator (
chk.c:196:36: punctuator (
chk.c:196:37: identifier __mode__
chk.c:196:46: punctuator (
chk.c:196:47: identifier __DI__
chk.c:196:53: punctuator )
chk.c:196:54: punctuator )
chk.c:196:55: punctuator )
chk.c:196:56: punctuator ;
chk.c:199:1: keyword typedef
chk.c:199:9: keyword unsigned
chk.c:199:18: keyword int
chk.c:199:22: identifier u_int8_t
chk.c:199:31: identifier __attribute__
chk.c:199:45: punctuator (
chk.c:199:46: punctuator (
chk.c:199:47: identifier __mode__
chk.c:199:56: punctuator (
chk.c:199:57: identifier __QI__
chk.c:199:63: punctuator )
chk.c:199:64: punctuator )
chk.c:199:65: punctuator )
chk.c:199:66: punctuator ;
chk.c:200:1: keyword typedef
chk.c:200:9: keyword unsigned
chk.c:200:18: keyword int
chk.c:200:22: identifier u_int16_t
chk.c:200:32: identifier __attribute__
chk.c:200:46: punctuator (
chk.c:200:47: punctuator (
chk.c:200:48: identifier __mode__
chk.c:200:57: punctuator (
chk.c:200:58: identifier __HI__
chk.c:200:64: punctuator )
chk.c:200:65: punctuator )
chk.c:200:66: punctuator )
chk.c:200:67: punctuator ;
chk.c:201:1: keyword typedef
chk.c:201:9: keyword unsigned
chk.c:201:18: keyword int
chk.c:201:22: identifier u_int32_t
chk.c:201:32: identifier __attribute__
chk.c:201:46: punctuator (
chk.c:201:47: punctuator (
chk.c:201:48: identifier __mode__
chk.c:201:57: punctuator (
chk.c:201:58: identifier __SI__
chk.c:201:64: punctuator )
chk.c:201:65: punctuator )
chk.c:201:66: punctuator )
chk.c:201:67: punctuator ;
chk.c:202:1: keyword typedef
chk.c:202:9: keyword unsigned
chk.c:202:18: keyword int
chk.c:202:22: identifier u_int64_t
chk.c:202:32: identifier __attribute__
chk.c:202:46: punctuator (
chk.c:202:47: punctuator (
chk.c:202:48: identifier __mode__
chk.c:202:57: punctuator (
chk.c:202:58: identifier __DI__
chk.c:202:64: punctuator )
chk.c:202:65: punctuator )
chk.c:202:66: punctuator )
chk.c:202:67: punctuator ;
chk.c:204:1: keyword typedef
chk.c:204:9: keyword int
chk.c:204:13: identifier register_t
chk.c:204:24: identifier __attribute__
chk.c:204:38: punctuator (
chk.c:204:39: punctuator (
chk.c:204:40: identifier __mode__
chk.c:204:49: punctuator (
chk.c:204:50: identifier __word__
chk.c:204:58: punctuator )
chk.c:204:59: punctuator )
chk.c:204:60: punctuator )
chk.c:204:61: punctuator ;
chk.c:209:1: keyword typedef
chk.c:209:9: keyword int
chk.c:209:13: identifier __sig_atomic_t
chk.c:209:27: punctuator ;
chk.c:214:1: keyword typedef
chk.c:214:9: keyword struct
chk.c:215:3: punctuator {
chk.c:216:5: keyword unsigned
chk.c:216:14: keyword long
chk.c:216:19: keyword int
chk.c:216:23: identifier __val
chk.c:216:28: punctuator [
chk.c:216:29: punctuator (
chk.c:216:30: constant 1024
chk.c:216:35: punctuator /
chk.c:216:37: punctuator (
chk.c:216:38: constant 8
chk.c:216:40: punctuator *
chk.c:216:42: keyword sizeof
chk.c:216:49: punctuator (
chk.c:216:50: keyword unsigned
chk.c:216:59: keyword long
chk.c:216:64: keyword int
chk.c:216:67: punctuator )
chk.c:216:68: punctuator )
chk.c:216:69: punctuator )
chk.c:216:70: punctuator ]
chk.c:216:71: punctuator ;
chk.c:217:3: punctuator }
chk.c:217:5: identifier __sigset_t
chk.c:217:15: punctuator ;
chk.c:221:1: keyword typedef
chk.c:221:9: identifier __sigset_t
chk.c:221:20: identifier sigset_t
chk.c:221:28: punctuator ;
chk.c:227:1: keyword struct
chk.c:227:8: identifier timespec
chk.c:228:3: punctuator {
chk.c:229:5: identifier __time_t
chk.c:229:14: identifier tv_sec
chk.c:229:20: punctuator ;
chk.c:230:5: keyword long
chk.c:230:10: keyword int
chk.c:230:14: identifier tv_nsec
chk.c:230:21: punctuator ;
chk.c:231:3: punctuator }
chk.c:231:4: punctuator ;
chk.c:233:1: keyword struct
chk.c:233:8: identifier timeval
chk.c:234:3: punctuator {
chk.c:235:5: identifier __time_t
chk.c:235:14: identifier tv_sec
chk.c:235:20: punctuator ;
chk.c:236:5: identifier __suseconds_t
chk.c:236:19: identifier tv_usec
chk.c:236:26: punctuator ;
chk.c:237:3: punctuator }
chk.c:237:4: punctuator ;
chk.c:240:1: keyword typedef
chk.c:240:9: identifier __suseconds_t
chk.c:240:23: identifier suseconds_t
chk.c:240:34: punctuator ;
chk.c:246:1: keyword typedef
chk.c:246:9: keyword long
chk.c:246:14: keyword int
chk.c:246:18: identifier __fd_mask
chk.c:246:27: punctuator ;
chk.c:247:1: keyword typedef
chk.c:247:9: keyword struct
chk.c:248:3: punctuator {
chk.c:255:5: identifier __fd_mask
chk.c:255:15: identifier __fds_bits
chk.c:255:25: punctuator [
chk.c:255:26: constant 1024
chk.c:255:31: punctuator /
chk.c:255:33: punctuator (
chk.c:255:34: constant 8
chk.c:255:36: punctuator *
chk.c:255:38: punctuator (
chk.c:255:39: keyword int
chk.c:255:42: punctuator )
chk.c:255:44: keyword sizeof
chk.c:255:51: punctuator (
chk.c:255:52: identifier __fd_mask
chk.c:255:61: punctuator )
chk.c:255:62: punctuator )
chk.c:255:63: punctuator ]
chk.c:255:64: punctuator ;
chk.c:258:3: punctuator }
chk.c:258:5: identifier fd_set
chk.c:258:11: punctuator ;
chk.c:265:1: keyword typedef
chk.c:265:9: identifier __fd_mask
chk.c:265:19: identifier fd_mask
chk.c:265:26: punctuator ;
chk.c:267:1: keyword extern
chk.c:267:8: keyword int
chk.c:267:12: identifier select
chk.c:267:19: punctuator (
chk.c:267:20: keyword int
chk.c:267:24: identifier __nfds
chk.c:267:30: punctuator ,
chk.c:267:32: identifier fd_set
chk.c:267:39: punctuator *
chk.c:267:40: identifier __restrict
chk.c:267:51: identifier __readfds
chk.c:267:60: punctuator ,
chk.c:268:6: identifier fd_set
chk.c:268:13: punctuator *
chk.c:268:14: identifier __restrict
chk.c:268:25: identifier __writefds
chk.c:268:35: punctuator ,
chk.c:269:6: identifier fd_set
chk.c:269:13: punctuator *
chk.c:269:14: identifier __restrict
chk.c:269:25: identifier __exceptfds
chk.c:269:36: punctuator ,
chk.c:270:6: keyword struct
chk.c:270:13: identifier timeval
chk.c:270:21: punctuator *
chk.c:270:22: identifier __restrict
chk.c:270:33: identifier __timeout
chk.c:270:42: punctuator )
chk.c:270:43: punctuator ;
chk.c:271:1: keyword extern
chk.c:271:8: keyword int
chk.c:271:12: identifier pselect
chk.c:271:20: punctuator (
chk.c:271:21: keyword int
chk.c:271:25: identifier __nfds
chk.c:271:31: punctuator ,
chk.c:271:33: identifier fd_set
chk.c:271:40: punctuator *
chk.c:271:41: identifier __restrict
chk.c:271:52: identifier __readfds
chk.c:271:61: punctuator ,
chk.c:272:7: identifier fd_set
chk.c:272:14: punctuator *
chk.c:272:15: identifier __restrict
chk.c:272:26: identifier __writefds
chk.c:272:36: punctuator ,
chk.c:273:7: identifier fd_set
chk.c:273:14: punctuator *
chk.c:273:15: identifier __restrict
chk.c:273:26: identifier __exceptfds
chk.c:273:37: punctuator ,
chk.c:274:7: keyword const
chk.c:274:13: keyword struct
chk.c:274:20: identifier timespec
chk.c:274:29: punctuator *
chk.c:274:30: identifier __restrict
chk.c:274:41: identifier __timeout
chk.c:274:50: punctuator ,
chk.c:275:7: keyword const
chk.c:275:13: identifier __sigset_t
chk.c:275:24: punctuator *
chk.c:275:25: identifier __restrict
chk.c:275:36: identifier __sigmask
chk.c:275:45: punctuator )
chk.c:275:46: punctuator ;
chk.c:281:1: identifier __extension__
chk.c:282:1: keyword extern
chk.c:282:8: keyword unsigned
chk.c:282:17: keyword int
chk.c:282:21: identifier gnu_dev_major
chk.c:282:35: punctuator (
chk.c:282:36: keyword unsigned
chk.c:282:45: keyword long
chk.c:282:50: keyword long
chk.c:282:55: keyword int
chk.c:282:59: identifier __dev
chk.c:282:64: punctuator )
chk.c:283:6: identifier __attribute__
chk.c:283:20: punctuator (
chk.c:283:21: punctuator (
chk.c:283:22: identifier __nothrow__
chk.c:283:34: punctuator ,
chk.c:283:36: identifier __leaf__
chk.c:283:44: punctuator )
chk.c:283:45: punctuator )
chk.c:283:47: identifier __attribute__
chk.c:283:61: punctuator (
chk.c:283:62: punctuator (
chk.c:283:63: identifier __const__
chk.c:283:72: punctuator )
chk.c:283:73: punctuator )
chk.c:283:74: punctuator ;
chk.c:284:1: identifier __extension__
chk.c:285:1: keyword extern
chk.c:285:8: keyword unsigned
chk.c:285:17: keyword int
chk.c:285:21: identifier gnu_dev_minor
chk.c:285:35: punctuator (
chk.c:285:36: keyword unsigned
chk.c:285:45: keyword long
chk.c:285:50: keyword long
chk.c:285:55: keyword int
chk.c:285:59: identifier __dev
chk.c:285:64: punctuator )
chk.c:286:6: identifier __attribute__
chk.c:286:20: punctuator (
chk.c:286:21: punctuator (
chk.c:286:22: identifier __nothrow__
chk.c:286:34: punctuator ,
chk.c:286:36: identifier __leaf__
chk.c:286:44: punctuator )
chk.c:286:45: punctuator )
chk.c:286:47: identifier __attribute__
chk.c:286:61: punctuator (
chk.c:286:62: punctuator (
chk.c:286:63: identifier __const__
chk.c:286:72: punctuator )
chk.c:286:73: punctuator )
chk.c:286:74: punctuator ;
chk.c:287:1: identifier __extension__
chk.c:288:1: keyword extern
chk.c:288:8: keyword unsigned
chk.c:288:17: keyword long
chk.c:288:22: keyword long
chk.c:288:27: keyword int
chk.c:288:31: identifier gnu_dev_makedev
chk.c:288:47: punctuator (
chk.c:288:48: keyword unsigned
chk.c:288:57: keyword int
chk.c:288:61: identifier __major
chk.c:288:68: punctuator ,
chk.c:289:13: keyword unsigned
chk.c:289:22: keyword int
chk.c:289:26: identifier __minor
chk.c:289:33: punctuator )
chk.c:290:6: identifier __attribute__
chk.c:290:20: punctuator (
chk.c:290:21: punctuator (
chk.c:290:22: identifier __nothrow__
chk.c:290:34: punctuator ,
chk.c:290:36: identifier __leaf__
chk.c:290:44: punctuator )
chk.c:290:45: punctuator )
chk.c:290:47: identifier __attribute__
chk.c:290:61: punctuator (
chk.c:290:62: punctuator (
chk.c:290:63: identifier __const__
chk.c:290:72: punctuator )
chk.c:290:73: punctuator )
chk.c:290:74: punctuator ;
chk.c:297:1: keyword typedef
chk.c:297:9: identifier __blksize_t
chk.c:297:21: identifier blksize_t
chk.c:297:30: punctuator ;
chk.c:304:1: keyword typedef
chk.c:304:9: identifier __blkcnt_t
chk.c:304:20: identifier blkcnt_t
chk.c:304:28: punctuator ;
chk.c:308:1: keyword typedef
chk.c:308:9: identifier __fsblkcnt_t
chk.c:308:22: identifier fsblkcnt_t
chk.c:308:32: punctuator ;
chk.c:312:1: keyword typedef
chk.c:312:9: identifier __fsfilcnt_t
chk.c:312:22: identifier fsfilcnt_t
chk.c:312:32: punctuator ;
chk.c:313:1: keyword typedef
chk.c:313:9: keyword unsigned
chk.c:313:18: keyword long
chk.c:313:23: keyword int
chk.c:313:27: identifier pthread_t
chk.c:313:36: punctuator ;
chk.c:316:1: keyword typedef
chk.c:316:9: keyword union
chk.c:317:1: punctuator {
chk.c:318:3: keyword char
chk.c:318:8: identifier __size
chk.c:318:14: punctuator [
chk.c:318:15: constant 56
chk.c:318:17: punctuator ]
chk.c:318:18: punctuator ;
chk.c:319:3: keyword long
chk.c:319:8: keyword int
chk.c:319:12: identifier __align
chk.c:319:19: punctuator ;
chk.c:320:1: punctuator }
chk.c:320:3: identifier pthread_attr_t
chk.c:320:17: punctuator ;
chk.c:324:1: keyword typedef
chk.c:324:9: keyword struct
chk.c:324:16: identifier __pthread_internal_list
chk.c:325:1: punctuator {
chk.c:326:3: keyword struct
chk.c:326:10: identifier __pthread_internal_list
chk.c:326:34: punctuator *
chk.c:326:35: identifier __prev
chk.c:326:41: punctuator ;
chk.c:327:3: keyword struct
chk.c:327:10: identifier __pthread_internal_list
chk.c:327:34: punctuator *
chk.c:327:35: identifier __next
chk.c:327:41: punctuator ;
chk.c:328:1: punctuator }
chk.c:328:3: identifier __pthread_list_t
chk.c:328:19: punctuator ;
chk.c:329:1: keyword typedef
chk.c:329:9: keyword union
chk.c:330:1: punctuator {
chk.c:331:3: keyword struct
chk.c:331:10: identifier __pthread_mutex_s
chk.c:332:3: punctuator {
chk.c:333:5: keyword int
chk.c:333:9: identifier __lock
chk.c:333:15: punctuator ;
chk.c:334:5: keyword unsigned
chk.c:334:14: keyword int
chk.c:334:18: identifier __count
chk.c:334:25: punctuator ;
chk.c:335:5: keyword int
chk.c:335:9: identifier __owner
chk.c:335:16: punctuator ;
chk.c:337:5: keyword unsigned
chk.c:337:14: keyword int
chk.c:337:18: identifier __nusers
chk.c:337:26: punctuator ;
chk.c:341:5: keyword int
chk.c:341:9: identifier __kind
chk.c:341:15: punctuator ;
chk.c:343:5: keyword int
chk.c:343:9: identifier __spins
chk.c:343:16: punctuator ;
chk.c:344:5: identifier __pthread_list_t
chk.c:344:22: identifier __list
chk.c:344:28: punctuator ;
chk.c:345:3: punctuator }
chk.c:345:5: identifier __data
chk.c:345:11: punctuator ;
chk.c:346:3: keyword char
chk.c:346:8: identifier __size
chk.c:346:14: punctuator [
chk.c:346:15: constant 40
chk.c:346:17: punctuator ]
chk.c:346:18: punctuator ;
chk.c:347:3: keyword long
chk.c:347:8: keyword int
chk.c:347:12: identifier __align
chk.c:347:19: punctuator ;
chk.c:348:1: punctuator }
chk.c:348:3: identifier pthread_mutex_t
chk.c:348:18: punctuator ;
chk.c:350:1: keyword typedef
chk.c:350:9: keyword union
chk.c:351:1: punctuator {
chk.c:352:3: keyword char
chk.c:352:8: identifier __size
chk.c:352:14: punctuator [
chk.c:352:15: constant 4
chk.c:352:16: punctuator ]
chk.c:352:17: punctuator ;
chk.c:353:3: keyword int
chk.c:353:7: identifier __align
chk.c:353:14: punctuator ;
chk.c:354:1: punctuator }
chk.c:354:3: identifier pthread_mutexattr_t
chk.c:354:22: punctuator ;
chk.c:359:1: keyword typedef
chk.c:359:9: keyword union
chk.c:360:1: punctuator {
chk.c:361:3: keyword struct
chk.c:362:3: punctuator {
chk.c:363:5: keyword int
chk.c:363:9: identifier __lock
chk.c:363:15: punctuator ;
chk.c:364:5: keyword unsigned
chk.c:364:14: keyword int
chk.c:364:18: identifier __futex
chk.c:364:25: punctuator ;
chk.c:365:5: identifier __extension__
chk.c:365:19: keyword unsigned
chk.c:365:28: keyword long
chk.c:365:33: keyword long
chk.c:365:38: keyword int
chk.c:365:42: identifier __total_seq
chk.c:365:53: punctuator ;
chk.c:366:5: identifier __extension__
chk.c:366:19: keyword unsigned
chk.c:366:28: keyword long
chk.c:366:33: keyword long
chk.c:366:38: keyword int
chk.c:366:42: identifier __wakeup_seq
chk.c:366:54: punctuator ;
chk.c:367:5: identifier __extension__
chk.c:367:19: keyword unsigned
chk.c:367:28: keyword long
chk.c:367:33: keyword long
chk.c:367:38: keyword int
chk.c:367:42: identifier __woken_seq
chk.c:367:53: punctuator ;
chk.c:368:5: keyword void
chk.c:368:10: punctuator *
chk.c:368:11: identifier __mutex
chk.c:368:18: punctuator ;
chk.c:369:5: keyword unsigned
chk.c:369:14: keyword int
chk.c:369:18: identifier __nwaiters
chk.c:369:28: punctuator ;
chk.c:370:5: keyword unsigned
chk.c:370:14: keyword int
chk.c:370:18: identifier __broadcast_seq
chk.c:370:33: punctuator ;
chk.c:371:3: punctuator }
chk.c:371:5: identifier __data
chk.c:371:11: punctuator ;
chk.c:372:3: keyword char
chk.c:372:8: identifier __size
chk.c:372:14: punctuator [
chk.c:372:15: constant 48
chk.c:372:17: punctuator ]
chk.c:372:18: punctuator ;
chk.c:373:3: identifier __extension__
chk.c:373:17: keyword long
chk.c:373:22: keyword long
chk.c:373:27: keyword int
chk.c:373:31: identifier __align
chk.c:373:38: punctuator ;
chk.c:374:1: punctuator }
chk.c:374:3: identifier pthread_cond_t
chk.c:374:17: punctuator ;
chk.c:376:1: keyword typedef
chk.c:376:9: keyword union
chk.c:377:1: punctuator {
chk.c:378:3: keyword char
chk.c:378:8: identifier __size
chk.c:378:14: punctuator [
chk.c:378:15: constant 4
chk.c:378:16: punctuator ]
chk.c:378:17: punctuator ;
chk.c:379:3: keyword int
chk.c:379:7: identifier __align
chk.c:379:14: punctuator ;
chk.c:380:1: punctuator }
chk.c:380:3: identifier pthread_condattr_t
chk.c:380:21: punctuator ;
chk.c:384:1: keyword typedef
chk.c:384:9: keyword unsigned
chk.c:384:18: keyword int
chk.c:384:22: identifier pthread_key_t
chk.c:384:35: punctuator ;
chk.c:388:1: keyword typedef
chk.c:388:9: keyword int
chk.c:388:13: identifier pthread_once_t
chk.c:388:27: punctuator ;
chk.c:394:1: keyword typedef
chk.c:394:9: keyword union
chk.c:395:1: punctuator {
chk.c:397:3: keyword struct
chk.c:398:3: punctuator {
chk.c:399:5: keyword int
chk.c:399:9: identifier __lock
chk.c:399:15: punctuator ;
chk.c:400:5: keyword unsigned
chk.c:400:14: keyword int
chk.c:400:18: identifier __nr_readers
chk.c:400:30: punctuator ;
chk.c:401:5: keyword unsigned
chk.c:401:14: keyword int
chk.c:401:18: identifier __readers_wakeup
chk.c:401:34: punctuator ;
chk.c:402:5: keyword unsigned
chk.c:402:14: keyword int
chk.c:402:18: identifier __writer_wakeup
chk.c:402:33: punctuator ;
chk.c:403:5: keyword unsigned
chk.c:403:14: keyword int
chk.c:403:18: identifier __nr_readers_queued
chk.c:403:37: punctuator ;
chk.c:404:5: keyword unsigned
chk.c:404:14: keyword int
chk.c:404:18: identifier __nr_writers_queued
chk.c:404:37: punctuator ;
chk.c:405:5: keyword int
chk.c:405:9: identifier __writer
chk.c:405:17: punctuator ;
chk.c:406:5: keyword int
chk.c:406:9: identifier __shared
chk.c:406:17: punctuator ;
chk.c:407:5: keyword unsigned
chk.c:407:14: keyword long
chk.c:407:19: keyword int
chk.c:407:23: identifier __pad1
chk.c:407:29: punctuator ;
chk.c:408:5: keyword unsigned
chk.c:408:14: keyword long
chk.c:408:19: keyword int
chk.c:408:23: identifier __pad2
chk.c:408:29: punctuator ;
chk.c:411:5: keyword unsigned
chk.c:411:14: keyword int
chk.c:411:18: identifier __flags
chk.c:411:25: punctuator ;
chk.c:412:3: punctuator }
chk.c:412:5: identifier __data
chk.c:412:11: punctuator ;
chk.c:413:3: keyword char
chk.c:413:8: identifier __size
chk.c:413:14: punctuator [
chk.c:413:15: constant 56
chk.c:413:17: punctuator ]
chk.c:413:18: punctuator ;
chk.c:414:3: keyword long
chk.c:414:8: keyword int
chk.c:414:12: identifier __align
chk.c:414:19: punctuator ;
chk.c:415:1: punctuator }
chk.c:415:3: identifier pthread_rwlock_t
chk.c:415:19: punctuator ;
chk.c:417:1: keyword typedef
chk.c:417:9: keyword union
chk.c:418:1: punctuator {
chk.c:419:3: keyword char
chk.c:419:8: identifier __size
chk.c:419:14: punctuator [
chk.c:419:15: constant 8
chk.c:419:16: punctuator ]
chk.c:419:17: punctuator ;
chk.c:420:3: keyword long
chk.c:420:8: keyword int
chk.c:420:12: identifier __align
chk.c:420:19: punctuator ;
chk.c:421:1: punctuator }
chk.c:421:3: identifier pthread_rwlockattr_t
chk.c:421:23: punctuator ;
chk.c:427:1: keyword typedef
chk.c:427:9: keyword volatile
chk.c:427:18: keyword int
chk.c:427:22: identifier pthread_spinlock_t
chk.c:427:40: punctuator ;
chk.c:432:1: keyword typedef
chk.c:432:9: keyword union
chk.c:433:1: punctuator {
chk.c:434:3: keyword char
chk.c:434:8: identifier __size
chk.c:434:14: punctuator [
chk.c:434:15: constant 32
chk.c:434:17: punctuator ]
chk.c:434:18: punctuator ;
chk.c:435:3: keyword long
chk.c:435:8: keyword int
chk.c:435:12: identifier __align
chk.c:435:19: punctuator ;
chk.c:436:1: punctuator }
chk.c:436:3: identifier pthread_barrier_t
chk.c:436:20: punctuator ;
chk.c:438:1: keyword typedef
chk.c:438:9: keyword union
chk.c:439:1: punctuator {
chk.c:440:3: keyword char
chk.c:440:8: identifier __size
chk.c:440:14: punctuator [
chk.c:440:15: constant 4
chk.c:440:16: punctuator ]
chk.c:440:17: punctuator ;
chk.c:441:3: keyword int
chk.c:441:7: identifier __align
chk.c:441:14: punctuator ;
chk.c:442:1: punctuator }
chk.c:442:3: identifier pthread_barrierattr_t
chk.c:442:24: punctuator ;
chk.c:448:1: keyword extern
chk.c:448:8: keyword void
chk.c:448:13: identifier abort
chk.c:448:19: punctuator (
chk.c:448:20: keyword void
chk.c:448:24: punctuator )
chk.c:448:25: punctuator ;
chk.c:450:1: keyword extern
chk.c:450:8: keyword int
chk.c:450:12: identifier inside_main
chk.c:450:23: punctuator ;
chk.c:451:1: keyword void
chk.c:451:6: punctuator *
chk.c:451:7: identifier chk_fail_buf
chk.c:451:19: punctuator [
chk.c:451:20: constant 256
chk.c:451:23: punctuator ]
chk.c:451:25: identifier __attribute__
chk.c:451:38: punctuator (
chk.c:451:39: punctuator (
chk.c:451:40: identifier aligned
chk.c:451:48: punctuator (
chk.c:451:49: constant 16
chk.c:451:51: punctuator )
chk.c:451:52: punctuator )
chk.c:451:53: punctuator )
chk.c:451:54: punctuator ;
chk.c:452:1: keyword volatile
chk.c:452:10: keyword int
chk.c:452:14: identifier chk_fail_allowed
chk.c:452:30: punctuator ,
chk.c:452:32: identifier chk_calls
chk.c:452:41: punctuator ;
chk.c:453:1: keyword volatile
chk.c:453:10: keyword int
chk.c:453:14: identifier memcpy_disallowed
chk.c:453:31: punctuator ,
chk.c:453:33: identifier mempcpy_disallowed
chk.c:453:51: punctuator ,
chk.c:453:53: identifier memmove_disallowed
chk.c:453:71: punctuator ;
chk.c:454:1: keyword volatile
chk.c:454:10: keyword int
chk.c:454:14: identifier memset_disallowed
chk.c:454:31: punctuator ,
chk.c:454:33: identifier strcpy_disallowed
chk.c:454:50: punctuator ,
chk.c:454:52: identifier stpcpy_disallowed
chk.c:454:69: punctuator ;
chk.c:455:1: keyword volatile
chk.c:455:10: keyword int
chk.c:455:14: identifier strncpy_disallowed
chk.c:455:32: punctuator ,
chk.c:455:34: identifier stpncpy_disallowed
chk.c:455:52: punctuator ,
chk.c:455:54: identifier strcat_disallowed
chk.c:455:71: punctuator ;
chk.c:456:1: keyword volatile
chk.c:456:10: keyword int
chk.c:456:14: identifier strncat_disallowed
chk.c:456:32: punctuator ,
chk.c:456:34: identifier sprintf_disallowed
chk.c:456:52: punctuator ,
chk.c:456:54: identifier vsprintf_disallowed
chk.c:456:73: punctuator ;
chk.c:457:1: keyword volatile
chk.c:457:10: keyword int
chk.c:457:14: identifier snprintf_disallowed
chk.c:457:33: punctuator ,
chk.c:457:35: identifier vsnprintf_disallowed
chk.c:457:55: punctuator ;
chk.c:458:1: keyword extern
chk.c:458:8: keyword long
chk.c:458:13: keyword unsigned
chk.c:458:22: keyword int
chk.c:458:26: identifier strlen
chk.c:458:33: punctuator (
chk.c:458:34: keyword const
chk.c:458:40: keyword char
chk.c:458:45: punctuator *
chk.c:458:46: punctuator )
chk.c:458:47: punctuator ;
chk.c:459:1: keyword extern
chk.c:459:8: keyword int
chk.c:459:12: identifier vsprintf
chk.c:459:21: punctuator (
chk.c:459:22: keyword char
chk.c:459:27: punctuator *
chk.c:459:28: punctuator ,
chk.c:459:30: keyword const
chk.c:459:36: keyword char
chk.c:459:41: punctuator *
chk.c:459:42: punctuator ,
chk.c:459:44: identifier va_list
chk.c:459:51: punctuator )
chk.c:459:52: punctuator ;
chk.c:461:1: keyword void
chk.c:461:6: identifier __attribute__
chk.c:461:19: punctuator (
chk.c:461:20: punctuator (
chk.c:461:21: identifier noreturn
chk.c:461:29: punctuator )
chk.c:461:30: punctuator )
chk.c:462:1: identifier __chk_fail
chk.c:462:12: punctuator (
chk.c:462:13: keyword void
chk.c:462:17: punctuator )
chk.c:463:1: punctuator {
chk.c:464:3: keyword if
chk.c:464:6: punctuator (
chk.c:464:7: identifier chk_fail_allowed
chk.c:464:23: punctuator )
chk.c:465:5: identifier __builtin_longjmp
chk.c:465:23: punctuator (
chk.c:465:24: identifier chk_fail_buf
chk.c:465:36: punctuator ,
chk.c:465:38: constant 1
chk.c:465:39: punctuator )
chk.c:465:40: punctuator ;
chk.c:466:3: identifier abort
chk.c:466:9: punctuator (
chk.c:466:10: punctuator )
chk.c:466:11: punctuator ;
chk.c:467:1: punctuator }
chk.c:469:1: keyword void
chk.c:469:6: punctuator *
chk.c:470:1: identifier memcpy
chk.c:470:8: punctuator (
chk.c:470:9: keyword void
chk.c:470:14: punctuator *
chk.c:470:15: identifier dst
chk.c:470:18: punctuator ,
chk.c:470:20: keyword const
chk.c:470:26: keyword void
chk.c:470:31: punctuator *
chk.c:470:32: identifier src
chk.c:470:35: punctuator ,
chk.c:470:37: keyword long
chk.c:470:42: keyword unsigned
chk.c:470:51: keyword int
chk.c:470:55: identifier n
chk.c:470:56: punctuator )
chk.c:471:1: punctuator {
chk.c:472:3: keyword const
chk.c:472:9: keyword char
chk.c:472:14: punctuator *
chk.c:472:15: identifier srcp
chk.c:472:19: punctuator ;
chk.c:473:3: keyword char
chk.c:473:8: punctuator *
chk.c:473:9: identifier dstp
chk.c:473:13: punctuator ;
chk.c:480:3: identifier srcp
chk.c:480:8: punctuator =
chk.c:480:10: identifier src
chk.c:480:13: punctuator ;
chk.c:481:3: identifier dstp
chk.c:481:8: punctuator =
chk.c:481:10: identifier dst
chk.c:481:13: punctuator ;
chk.c:482:3: keyword while
chk.c:482:9: punctuator (
chk.c:482:10: identifier n
chk.c:482:11: punctuator --
chk.c:482:14: punctuator !=
chk.c:482:17: constant 0
chk.c:482:18: punctuator )
chk.c:483:5: punctuator *
chk.c:483:6: identifier dstp
chk.c:483:10: punctuator ++
chk.c:483:13: punctuator =
chk.c:483:15: punctuator *
chk.c:483:16: identifier srcp
chk.c:483:20: punctuator ++
chk.c:483:22: punctuator ;
chk.c:485:3: keyword return
chk.c:485:10: identifier dst
chk.c:485:13: punctuator ;
chk.c:486:1: punctuator }
chk.c:488:1: keyword void
chk.c:488:6: punctuator *
chk.c:489:1: identifier __memcpy_chk
chk.c:489:14: punctuator (
chk.c:489:15: keyword void
chk.c:489:20: punctuator *
chk.c:489:21: identifier dst
chk.c:489:24: punctuator ,
chk.c:489:26: keyword const
chk.c:489:32: keyword void
chk.c:489:37: punctuator *
chk.c:489:38: identifier src
chk.c:489:41: punctuator ,
chk.c:489:43: keyword long
chk.c:489:48: keyword unsigned
chk.c:489:57: keyword int
chk.c:489:61: identifier n
chk.c:489:62: punctuator ,
chk.c:489:64: keyword long
chk.c:489:69: keyword unsigned
chk.c:489:78: keyword int
chk.c:489:82: identifier size
chk.c:489:86: punctuator )
chk.c:490:1: punctuator {
chk.c:492:3: keyword if
chk.c:492:6: punctuator (
chk.c:492:7: identifier size
chk.c:492:12: punctuator ==
chk.c:492:15: punctuator (
chk.c:492:16: keyword long
chk.c:492:21: keyword unsigned
chk.c:492:30: keyword int
chk.c:492:33: punctuator )
chk.c:492:35: punctuator -
chk.c:492:36: constant 1
chk.c:492:37: punctuator )
chk.c:493:5: identifier abort
chk.c:493:11: punctuator (
chk.c:493:12: punctuator )
chk.c:493:13: punctuator ;
chk.c:494:3: punctuator ++
chk.c:494:5: identifier chk_calls
chk.c:494:14: punctuator ;
chk.c:495:3: keyword if
chk.c:495:6: punctuator (
chk.c:495:7: identifier n
chk.c:495:9: punctuator >
chk.c:495:11: identifier size
chk.c:495:15: punctuator )
chk.c:496:5: identifier __chk_fail
chk.c:496:16: punctuator (
chk.c:496:17: punctuator )
chk.c:496:18: punctuator ;
chk.c:497:3: keyword return
chk.c:497:10: identifier memcpy
chk.c:497:17: punctuator (
chk.c:497:18: identifier dst
chk.c:497:21: punctuator ,
chk.c:497:23: identifier src
chk.c:497:26: punctuator ,
chk.c:497:28: identifier n
chk.c:497:29: punctuator )
chk.c:497:30: punctuator ;
chk.c:498:1: punctuator }
chk.c:500:1: keyword void
chk.c:500:6: punctuator *
chk.c:501:1: identifier mempcpy
chk.c:501:9: punctuator (
chk.c:501:10: keyword void
chk.c:501:15: punctuator *
chk.c:501:16: identifier dst
chk.c:501:19: punctuator ,
chk.c:501:21: keyword const
chk.c:501:27: keyword void
chk.c:501:32: punctuator *
chk.c:501:33: identifier src
chk.c:501:36: punctuator ,
chk.c:501:38: keyword long
chk.c:501:43: keyword unsigned
chk.c:501:52: keyword int
chk.c:501:56: identifier n
chk.c:501:57: punctuator )
chk.c:502:1: punctuator {
chk.c:503:3: keyword const
chk.c:503:9: keyword char
chk.c:503:14: punctuator *
chk.c:503:15: identifier srcp
chk.c:503:19: punctuator ;
chk.c:504:3: keyword char
chk.c:504:8: punctuator *
chk.c:504:9: identifier dstp
chk.c:504:13: punctuator ;
chk.c:511:3: identifier srcp
chk.c:511:8: punctuator =
chk.c:511:10: identifier src
chk.c:511:13: punctuator ;
chk.c:512:3: identifier dstp
chk.c:512:8: punctuator =
chk.c:512:10: identifier dst
chk.c:512:13: punctuator ;
chk.c:513:3: keyword while
chk.c:513:9: punctuator (
chk.c:513:10: identifier n
chk.c:513:11: punctuator --
chk.c:513:14: punctuator !=
chk.c:513:17: constant 0
chk.c:513:18: punctuator )
chk.c:514:5: punctuator *
chk.c:514:6: identifier dstp
chk.c:514:10: punctuator ++
chk.c:514:13: punctuator =
chk.c:514:15: punctuator *
chk.c:514:16: identifier srcp
chk.c:514:20: punctuator ++
chk.c:514:22: punctuator ;
chk.c:516:3: keyword return
chk.c:516:10: identifier dstp
chk.c:516:14: punctuator ;
chk.c:517:1: punctuator }
chk.c:519:1: keyword void
chk.c:519:6: punctuator *
chk.c:520:1: identifier __mempcpy_chk
chk.c:520:15: punctuator (
chk.c:520:16: keyword void
chk.c:520:21: punctuator *
chk.c:520:22: identifier dst
chk.c:520:25: punctuator ,
chk.c:520:27: keyword const
chk.c:520:33: keyword void
chk.c:520:38: punctuator *
chk.c:520:39: identifier src
chk.c:520:42: punctuator ,
chk.c:520:44: keyword long
chk.c:520:49: keyword unsigned
chk.c:520:58: keyword int
chk.c:520:62: identifier n
chk.c:520:63: punctuator ,
chk.c:520:65: keyword long
chk.c:520:70: keyword unsigned
chk.c:520:79: keyword int
chk.c:520:83: identifier size
chk.c:520:87: punctuator )
chk.c:521:1: punctuator {
chk.c:523:3: keyword if
chk.c:523:6: punctuator (
chk.c:523:7: identifier size
chk.c:523:12: punctuator ==
chk.c:523:15: punctuator (
chk.c:523:16: keyword long
chk.c:523:21: keyword unsigned
chk.c:523:30: keyword int
chk.c:523:33: punctuator )
chk.c:523:35: punctuator -
chk.c:523:36: constant 1
chk.c:523:37: punctuator )
chk.c:524:5: identifier abort
chk.c:524:11: punctuator (
chk.c:524:12: punctuator )
chk.c:524:13: punctuator ;
chk.c:525:3: punctuator ++
chk.c:525:5: identifier chk_calls
chk.c:525:14: punctuator ;
chk.c:526:3: keyword if
chk.c:526:6: punctuator (
chk.c:526:7: identifier n
chk.c:526:9: punctuator >
chk.c:526:11: identifier size
chk.c:526:15: punctuator )
chk.c:527:5: identifier __chk_fail
chk.c:527:16: punctuator (
chk.c:527:17: punctuator )
chk.c:527:18: punctuator ;
chk.c:528:3: keyword return
chk.c:528:10: identifier mempcpy
chk.c:528:18: punctuator (
chk.c:528:19: identifier dst
chk.c:528:22: punctuator ,
chk.c:528:24: identifier src
chk.c:528:27: punctuator ,
chk.c:528:29: identifier n
chk.c:528:30: punctuator )
chk.c:528:31: punctuator ;
chk.c:529:1: punctuator }
chk.c:531:1: keyword void
chk.c:531:6: punctuator *
chk.c:532:1: identifier memmove
chk.c:532:9: punctuator (
chk.c:532:10: keyword void
chk.c:532:15: punctuator *
chk.c:532:16: identifier dst
chk.c:532:19: punctuator ,
chk.c:532:21: keyword const
chk.c:532:27: keyword void
chk.c:532:32: punctuator *
chk.c:532:33: identifier src
chk.c:532:36: punctuator ,
chk.c:532:38: keyword long
chk.c:532:43: keyword unsigned
chk.c:532:52: keyword int
chk.c:532:56: identifier n
chk.c:532:57: punctuator )
chk.c:533:1: punctuator {
chk.c:534:3: keyword const
chk.c:534:9: keyword char
chk.c:534:14: punctuator *
chk.c:534:15: identifier srcp
chk.c:534:19: punctuator ;
chk.c:535:3: keyword char
chk.c:535:8: punctuator *
chk.c:535:9: identifier dstp
chk.c:535:13: punctuator ;
chk.c:542:3: identifier srcp
chk.c:542:8: punctuator =
chk.c:542:10: identifier src
chk.c:542:13: punctuator ;
chk.c:543:3: identifier dstp
chk.c:543:8: punctuator =
chk.c:543:10: identifier dst
chk.c:543:13: punctuator ;
chk.c:544:3: keyword if
chk.c:544:6: punctuator (
chk.c:544:7: identifier srcp
chk.c:544:12: punctuator <
chk.c:544:14: identifier dstp
chk.c:544:18: punctuator )
chk.c:545:5: keyword while
chk.c:545:11: punctuator (
chk.c:545:12: identifier n
chk.c:545:13: punctuator --
chk.c:545:16: punctuator !=
chk.c:545:19: constant 0
chk.c:545:20: punctuator )
chk.c:546:7: identifier dstp
chk.c:546:11: punctuator [
chk.c:546:12: identifier n
chk.c:546:13: punctuator ]
chk.c:546:15: punctuator =
chk.c:546:17: identifier srcp
chk.c:546:21: punctuator [
chk.c:546:22: identifier n
chk.c:546:23: punctuator ]
chk.c:546:24: punctuator ;
chk.c:547:3: keyword else
chk.c:548:5: keyword while
chk.c:548:11: punctuator (
chk.c:548:12: identifier n
chk.c:548:13: punctuator --
chk.c:548:16: punctuator !=
chk.c:548:19: constant 0
chk.c:548:20: punctuator )
chk.c:549:7: punctuator *
chk.c:549:8: identifier dstp
chk.c:549:12: punctuator ++
chk.c:549:15: punctuator =
chk.c:549:17: punctuator *
chk.c:549:18: identifier srcp
chk.c:549:22: punctuator ++
chk.c:549:24: punctuator ;
chk.c:551:3: keyword return
chk.c:551:10: identifier dst
chk.c:551:13: punctuator ;
chk.c:552:1: punctuator }
chk.c:554:1: keyword void
chk.c:554:6: punctuator *
chk.c:555:1: identifier __memmove_chk
chk.c:555:15: punctuator (
chk.c:555:16: keyword void
chk.c:555:21: punctuator *
chk.c:555:22: identifier dst
chk.c:555:25: punctuator ,
chk.c:555:27: keyword const
chk.c:555:33: keyword void
chk.c:555:38: punctuator *
chk.c:555:39: identifier src
chk.c:555:42: punctuator ,
chk.c:555:44: keyword long
chk.c:555:49: keyword unsigned
chk.c:555:58: keyword int
chk.c:555:62: identifier n
chk.c:555:63: punctuator ,
chk.c:555:65: keyword long
chk.c:555:70: keyword unsigned
chk.c:555:79: keyword int
chk.c:555:83: identifier size
chk.c:555:87: punctuator )
chk.c:556:1: punctuator {
chk.c:558:3: keyword if
chk.c:558:6: punctuator (
chk.c:558:7: identifier size
chk.c:558:12: punctuator ==
chk.c:558:15: punctuator (
chk.c:558:16: keyword long
chk.c:558:21: keyword unsigned
chk.c:558:30: keyword int
chk.c:558:33: punctuator )
chk.c:558:35: punctuator -
chk.c:558:36: constant 1
chk.c:558:37: punctuator )
chk.c:559:5: identifier abort
chk.c:559:11: punctuator (
chk.c:559:12: punctuator )
chk.c:559:13: punctuator ;
chk.c:560:3: punctuator ++
chk.c:560:5: identifier chk_calls
chk.c:560:14: punctuator ;
chk.c:561:3: keyword if
chk.c:561:6: punctuator (
chk.c:561:7: identifier n
chk.c:561:9: punctuator >
chk.c:561:11: identifier size
chk.c:561:15: punctuator )
chk.c:562:5: identifier __chk_fail
chk.c:562:16: punctuator (
chk.c:562:17: punctuator )
chk.c:562:18: punctuator ;
chk.c:563:3: keyword return
chk.c:563:10: identifier memmove
chk.c:563:18: punctuator (
chk.c:563:19: identifier dst
chk.c:563:22: punctuator ,
chk.c:563:24: identifier src
chk.c:563:27: punctuator ,
chk.c:563:29: identifier n
chk.c:563:30: punctuator )
chk.c:563:31: punctuator ;
chk.c:564:1: punctuator }
chk.c:566:1: keyword void
chk.c:566:6: punctuator *
chk.c:567:1: identifier memset
chk.c:567:8: punctuator (
chk.c:567:9: keyword void
chk.c:567:14: punctuator *
chk.c:567:15: identifier dst
chk.c:567:18: punctuator ,
chk.c:567:20: keyword int
chk.c:567:24: identifier c
chk.c:567:25: punctuator ,
chk.c:567:27: keyword long
chk.c:567:32: keyword unsigned
chk.c:567:41: keyword int
chk.c:567:45: identifier n
chk.c:567:46: punctuator )
chk.c:568:1: punctuator {
chk.c:576:3: keyword while
chk.c:576:9: punctuator (
chk.c:576:10: identifier n
chk.c:576:11: punctuator --
chk.c:576:14: punctuator !=
chk.c:576:17: constant 0
chk.c:576:18: punctuator )
chk.c:577:5: identifier n
chk.c:577:6: punctuator [
chk.c:577:7: punctuator (
chk.c:577:8: keyword char
chk.c:577:13: punctuator *
chk.c:577:14: punctuator )
chk.c:577:16: identifier dst
chk.c:577:19: punctuator ]
chk.c:577:21: punctuator =
chk.c:577:23: identifier c
chk.c:577:24: punctuator ;
chk.c:579:3: keyword return
chk.c:579:10: identifier dst
chk.c:579:13: punctuator ;
chk.c:580:1: punctuator }
chk.c:582:1: keyword void
chk.c:582:6: punctuator *
chk.c:583:1: identifier __memset_chk
chk.c:583:14: punctuator (
chk.c:583:15: keyword void
chk.c:583:20: punctuator *
chk.c:583:21: identifier dst
chk.c:583:24: punctuator ,
chk.c:583:26: keyword int
chk.c:583:30: identifier c
chk.c:583:31: punctuator ,
chk.c:583:33: keyword long
chk.c:583:38: keyword unsigned
chk.c:583:47: keyword int
chk.c:583:51: identifier n
chk.c:583:52: punctuator ,
chk.c:583:54: keyword long
chk.c:583:59: keyword unsigned
chk.c:583:68: keyword int
chk.c:583:72: identifier size
chk.c:583:76: punctuator )
chk.c:584:1: punctuator {
chk.c:586:3: keyword if
chk.c:586:6: punctuator (
chk.c:586:7: identifier size
chk.c:586:12: punctuator ==
chk.c:586:15: punctuator (
chk.c:586:16: keyword long
chk.c:586:21: keyword unsigned
chk.c:586:30: keyword int
chk.c:586:33: punctuator )
chk.c:586:35: punctuator -
chk.c:586:36: constant 1
chk.c:586:37: punctuator )
chk.c:587:5: identifier abort
chk.c:587:11: punctuator (
chk.c:587:12: punctuator )
chk.c:587:13: punctuator ;
chk.c:588:3: punctuator ++
chk.c:588:5: identifier chk_calls
chk.c:588:14: punctuator ;
chk.c:589:3: keyword if
chk.c:589:6: punctuator (
chk.c:589:7: identifier n
chk.c:589:9: punctuator >
chk.c:589:11: identifier size
chk.c:589:15: punctuator )
chk.c:590:5: identifier __chk_fail
chk.c:590:16: punctuator (
chk.c:590:17: punctuator )
chk.c:590:18: punctuator ;
chk.c:591:3: keyword return
chk.c:591:10: identifier memset
chk.c:591:17: punctuator (
chk.c:591:18: identifier dst
chk.c:591:21: punctuator ,
chk.c:591:23: identifier c
chk.c:591:24: punctuator ,
chk.c:591:26: identifier n
chk.c:591:27: punctuator )
chk.c:591:28: punctuator ;
chk.c:592:1: punctuator }
chk.c:594:1: keyword char
chk.c:594:6: punctuator *
chk.c:595:1: identifier strcpy
chk.c:595:8: punctuator (
chk.c:595:9: keyword char
chk.c:595:14: punctuator *
chk.c:595:15: identifier d
chk.c:595:16: punctuator ,
chk.c:595:18: keyword const
chk.c:595:24: keyword char
chk.c:595:29: punctuator *
chk.c:595:30: identifier s
chk.c:595:31: punctuator )
chk.c:596:1: punctuator {
chk.c:597:3: keyword char
chk.c:597:8: punctuator *
chk.c:597:9: identifier r
chk.c:597:11: punctuator =
chk.c:597:13: identifier d
chk.c:597:14: punctuator ;
chk.c:602:3: keyword while
chk.c:602:9: punctuator (
chk.c:602:10: punctuator (
chk.c:602:11: punctuator *
chk.c:602:12: identifier d
chk.c:602:13: punctuator ++
chk.c:602:16: punctuator =
chk.c:602:18: punctuator *
chk.c:602:19: identifier s
chk.c:602:20: punctuator ++
chk.c:602:22: punctuator )
chk.c:602:23: punctuator )
chk.c:602:24: punctuator ;
chk.c:603:3: keyword return
chk.c:603:10: identifier r
chk.c:603:11: punctuator ;
chk.c:604:1: punctuator }
chk.c:606:1: keyword char
chk.c:606:6: punctuator *
chk.c:607:1: identifier __strcpy_chk
chk.c:607:14: punctuator (
chk.c:607:15: keyword char
chk.c:607:20: punctuator *
chk.c:607:21: identifier d
chk.c:607:22: punctuator ,
chk.c:607:24: keyword const
chk.c:607:30: keyword char
chk.c:607:35: punctuator *
chk.c:607:36: identifier s
chk.c:607:37: punctuator ,
chk.c:607:39: keyword long
chk.c:607:44: keyword unsigned
chk.c:607:53: keyword int
chk.c:607:57: identifier size
chk.c:607:61: punctuator )
chk.c:608:1: punctuator {
chk.c:610:3: keyword if
chk.c:610:6: punctuator (
chk.c:610:7: identifier size
chk.c:610:12: punctuator ==
chk.c:610:15: punctuator (
chk.c:610:16: keyword long
chk.c:610:21: keyword unsigned
chk.c:610:30: keyword int
chk.c:610:33: punctuator )
chk.c:610:35: punctuator -
chk.c:610:36: constant 1
chk.c:610:37: punctuator )
chk.c:611:5: identifier abort
chk.c:611:11: punctuator (
chk.c:611:12: punctuator )
chk.c:611:13: punctuator ;
chk.c:612:3: punctuator ++
chk.c:612:5: identifier chk_calls
chk.c:612:14: punctuator ;
chk.c:613:3: keyword if
chk.c:613:6: punctuator (
chk.c:613:7: identifier strlen
chk.c:613:14: punctuator (
chk.c:613:15: identifier s
chk.c:613:16: punctuator )
chk.c:613:18: punctuator >=
chk.c:613:21: identifier size
chk.c:613:25: punctuator )
chk.c:614:5: identifier __chk_fail
chk.c:614:16: punctuator (
chk.c:614:17: punctuator )
chk.c:614:18: punctuator ;
chk.c:615:3: keyword return
chk.c:615:10: identifier strcpy
chk.c:615:17: punctuator (
chk.c:615:18: identifier d
chk.c:615:19: punctuator ,
chk.c:615:21: identifier s
chk.c:615:22: punctuator )
chk.c:615:23: punctuator ;
chk.c:616:1: punctuator }
chk.c:618:1: keyword char
chk.c:618:6: punctuator *
chk.c:619:1: identifier stpcpy
chk.c:619:8: punctuator (
chk.c:619:9: keyword char
chk.c:619:14: punctuator *
chk.c:619:15: identifier dst
chk.c:619:18: punctuator ,
chk.c:619:20: keyword const
chk.c:619:26: keyword char
chk.c:619:31: punctuator *
chk.c:619:32: identifier src
chk.c:619:35: punctuator )
chk.c:620:1: punctuator {
chk.c:626:3: keyword while
chk.c:626:9: punctuator (
chk.c:626:10: punctuator *
chk.c:626:11: identifier src
chk.c:626:15: punctuator !=
chk.c:626:18: constant 0
chk.c:626:19: punctuator )
chk.c:627:5: punctuator *
chk.c:627:6: identifier dst
chk.c:627:9: punctuator ++
chk.c:627:12: punctuator =
chk.c:627:14: punctuator *
chk.c:627:15: identifier src
chk.c:627:18: punctuator ++
chk.c:627:20: punctuator ;
chk.c:629:3: punctuator *
chk.c:629:4: identifier dst
chk.c:629:8: punctuator =
chk.c:629:10: constant 0
chk.c:629:11: punctuator ;
chk.c:630:3: keyword return
chk.c:630:10: identifier dst
chk.c:630:13: punctuator ;
chk.c:631:1: punctuator }
chk.c:633:1: keyword char
chk.c:633:6: punctuator *
chk.c:634:1: identifier __stpcpy_chk
chk.c:634:14: punctuator (
chk.c:634:15: keyword char
chk.c:634:20: punctuator *
chk.c:634:21: identifier d
chk.c:634:22: punctuator ,
chk.c:634:24: keyword const
chk.c:634:30: keyword char
chk.c:634:35: punctuator *
chk.c:634:36: identifier s
chk.c:634:37: punctuator ,
chk.c:634:39: keyword long
chk.c:634:44: keyword unsigned
chk.c:634:53: keyword int
chk.c:634:57: identifier size
chk.c:634:61: punctuator )
chk.c:635:1: punctuator {
chk.c:637:3: keyword if
chk.c:637:6: punctuator (
chk.c:637:7: identifier size
chk.c:637:12: punctuator ==
chk.c:637:15: punctuator (
chk.c:637:16: keyword long
chk.c:637:21: keyword unsigned
chk.c:637:30: keyword int
chk.c:637:33: punctuator )
chk.c:637:35: punctuator -
chk.c:637:36: constant 1
chk.c:637:37: punctuator )
chk.c:638:5: identifier abort
chk.c:638:11: punctuator (
chk.c:638:12: punctuator )
chk.c:638:13: punctuator ;
chk.c:639:3: punctuator ++
chk.c:639:5: identifier chk_calls
chk.c:639:14: punctuator ;
chk.c:640:3: keyword if
chk.c:640:6: punctuator (
chk.c:640:7: identifier strlen
chk.c:640:14: punctuator (
chk.c:640:15: identifier s
chk.c:640:16: punctuator )
chk.c:640:18: punctuator >=
chk.c:640:21: identifier size
chk.c:640:25: punctuator )
chk.c:641:5: identifier __chk_fail
chk.c:641:16: punctuator (
chk.c:641:17: punctuator )
chk.c:641:18: punctuator ;
chk.c:642:3: keyword return
chk.c:642:10: identifier stpcpy
chk.c:642:17: punctuator (
chk.c:642:18: identifier d
chk.c:642:19: punctuator ,
chk.c:642:21: identifier s
chk.c:642:22: punctuator )
chk.c:642:23: punctuator ;
chk.c:643:1: punctuator }
chk.c:645:1: keyword char
chk.c:645:6: punctuator *
chk.c:646:1: identifier stpncpy
chk.c:646:9: punctuator (
chk.c:646:10: keyword char
chk.c:646:15: punctuator *
chk.c:646:16: identifier dst
chk.c:646:19: punctuator ,
chk.c:646:21: keyword const
chk.c:646:27: keyword char
chk.c:646:32: punctuator *
chk.c:646:33: identifier src
chk.c:646:36: punctuator ,
chk.c:646:38: keyword long
chk.c:646:43: keyword unsigned
chk.c:646:52: keyword int
chk.c:646:56: identifier n
chk.c:646:57: punctuator )
chk.c:647:1: punctuator {
chk.c:653:3: keyword for
chk.c:653:7: punctuator (
chk.c:653:8: punctuator ;
chk.c:653:10: punctuator *
chk.c:653:11: identifier src
chk.c:653:15: punctuator &&
chk.c:653:18: identifier n
chk.c:653:19: punctuator ;
chk.c:653:21: identifier n
chk.c:653:22: punctuator --
chk.c:653:24: punctuator )
chk.c:654:5: punctuator *
chk.c:654:6: identifier dst
chk.c:654:9: punctuator ++
chk.c:654:12: punctuator =
chk.c:654:14: punctuator *
chk.c:654:15: identifier src
chk.c:654:18: punctuator ++
chk.c:654:20: punctuator ;
chk.c:656:3: keyword char
chk.c:656:8: punctuator *
chk.c:656:9: identifier ret
chk.c:656:13: punctuator =
chk.c:656:15: identifier dst
chk.c:656:18: punctuator ;
chk.c:658:3: keyword while
chk.c:658:9: punctuator (
chk.c:658:10: identifier n
chk.c:658:11: punctuator --
chk.c:658:13: punctuator )
chk.c:659:5: punctuator *
chk.c:659:6: identifier dst
chk.c:659:9: punctuator ++
chk.c:659:12: punctuator =
chk.c:659:14: constant 0
chk.c:659:15: punctuator ;
chk.c:661:3: keyword return
chk.c:661:10: identifier ret
chk.c:661:13: punctuator ;
chk.c:662:1: punctuator }
chk.c:665:1: keyword char
chk.c:665:6: punctuator *
chk.c:666:1: identifier __stpncpy_chk
chk.c:666:15: punctuator (
chk.c:666:16: keyword char
chk.c:666:21: punctuator *
chk.c:666:22: identifier s1
chk.c:666:24: punctuator ,
chk.c:666:26: keyword const
chk.c:666:32: keyword char
chk.c:666:37: punctuator *
chk.c:666:38: identifier s2
chk.c:666:40: punctuator ,
chk.c:666:42: keyword long
chk.c:666:47: keyword unsigned
chk.c:666:56: keyword int
chk.c:666:60: identifier n
chk.c:666:61: punctuator ,
chk.c:666:63: keyword long
chk.c:666:68: keyword unsigned
chk.c:666:77: keyword int
chk.c:666:81: identifier size
chk.c:666:85: punctuator )
chk.c:667:1: punctuator {
chk.c:669:3: keyword if
chk.c:669:6: punctuator (
chk.c:669:7: identifier size
chk.c:669:12: punctuator ==
chk.c:669:15: punctuator (
chk.c:669:16: keyword long
chk.c:669:21: keyword unsigned
chk.c:669:30: keyword int
chk.c:669:33: punctuator )
chk.c:669:35: punctuator -
chk.c:669:36: constant 1
chk.c:669:37: punctuator )
chk.c:670:5: identifier abort
chk.c:670:11: punctuator (
chk.c:670:12: punctuator )
chk.c:670:13: punctuator ;
chk.c:671:3: punctuator ++
chk.c:671:5: identifier chk_calls
chk.c:671:14: punctuator ;
chk.c:672:3: keyword if
chk.c:672:6: punctuator (
chk.c:672:7: identifier n
chk.c:672:9: punctuator >
chk.c:672:11: identifier size
chk.c:672:15: punctuator )
chk.c:673:5: identifier __chk_fail
chk.c:673:16: punctuator (
chk.c:673:17: punctuator )
chk.c:673:18: punctuator ;
chk.c:674:3: keyword return
chk.c:674:10: identifier stpncpy
chk.c:674:18: punctuator (
chk.c:674:19: identifier s1
chk.c:674:21: punctuator ,
chk.c:674:23: identifier s2
chk.c:674:25: punctuator ,
chk.c:674:27: identifier n
chk.c:674:28: punctuator )
chk.c:674:29: punctuator ;
chk.c:675:1: punctuator }
chk.c:677:1: keyword char
chk.c:677:6: punctuator *
chk.c:678:1: identifier strncpy
chk.c:678:9: punctuator (
chk.c:678:10: keyword char
chk.c:678:15: punctuator *
chk.c:678:16: identifier s1
chk.c:678:18: punctuator ,
chk.c:678:20: keyword const
chk.c:678:26: keyword char
chk.c:678:31: punctuator *
chk.c:678:32: identifier s2
chk.c:678:34: punctuator ,
chk.c:678:36: keyword long
chk.c:678:41: keyword unsigned
chk.c:678:50: keyword int
chk.c:678:54: identifier n
chk.c:678:55: punctuator )
chk.c:679:1: punctuator {
chk.c:680:3: keyword char
chk.c:680:8: punctuator *
chk.c:680:9: identifier dest
chk.c:680:14: punctuator =
chk.c:680:16: identifier s1
chk.c:680:18: punctuator ;
chk.c:685:3: keyword for
chk.c:685:7: punctuator (
chk.c:685:8: punctuator ;
chk.c:685:10: punctuator *
chk.c:685:11: identifier s2
chk.c:685:14: punctuator &&
chk.c:685:17: identifier n
chk.c:685:18: punctuator ;
chk.c:685:20: identifier n
chk.c:685:21: punctuator --
chk.c:685:23: punctuator )
chk.c:686:5: punctuator *
chk.c:686:6: identifier s1
chk.c:686:8: punctuator ++
chk.c:686:11: punctuator =
chk.c:686:13: punctuator *
chk.c:686:14: identifier s2
chk.c:686:16: punctuator ++
chk.c:686:18: punctuator ;
chk.c:687:3: keyword while
chk.c:687:9: punctuator (
chk.c:687:10: identifier n
chk.c:687:11: punctuator --
chk.c:687:13: punctuator )
chk.c:688:5: punctuator *
chk.c:688:6: identifier s1
chk.c:688:8: punctuator ++
chk.c:688:11: punctuator =
chk.c:688:13: constant 0
chk.c:688:14: punctuator ;
chk.c:689:3: keyword return
chk.c:689:10: identifier dest
chk.c:689:14: punctuator ;
chk.c:690:1: punctuator }
chk.c:692:1: keyword char
chk.c:692:6: punctuator *
chk.c:693:1: identifier __strncpy_chk
chk.c:693:15: punctuator (
chk.c:693:16: keyword char
chk.c:693:21: punctuator *
chk.c:693:22: identifier s1
chk.c:693:24: punctuator ,
chk.c:693:26: keyword const
chk.c:693:32: keyword char
chk.c:693:37: punctuator *
chk.c:693:38: identifier s2
chk.c:693:40: punctuator ,
chk.c:693:42: keyword long
chk.c:693:47: keyword unsigned
chk.c:693:56: keyword int
chk.c:693:60: identifier n
chk.c:693:61: punctuator ,
chk.c:693:63: keyword long
chk.c:693:68: keyword unsigned
chk.c:693:77: keyword int
chk.c:693:81: identifier size
chk.c:693:85: punctuator )
chk.c:694:1: punctuator {
chk.c:696:3: keyword if
chk.c:696:6: punctuator (
chk.c:696:7: identifier size
chk.c:696:12: punctuator ==
chk.c:696:15: punctuator (
chk.c:696:16: keyword long
chk.c:696:21: keyword unsigned
chk.c:696:30: keyword int
chk.c:696:33: punctuator )
chk.c:696:35: punctuator -
chk.c:696:36: constant 1
chk.c:696:37: punctuator )
chk.c:697:5: identifier abort
chk.c:697:11: punctuator (
chk.c:697:12: punctuator )
chk.c:697:13: punctuator ;
chk.c:698:3: punctuator ++
chk.c:698:5: identifier chk_calls
chk.c:698:14: punctuator ;
chk.c:699:3: keyword if
chk.c:699:6: punctuator (
chk.c:699:7: identifier n
chk.c:699:9: punctuator >
chk.c:699:11: identifier size
chk.c:699:15: punctuator )
chk.c:700:5: identifier __chk_fail
chk.c:700:16: punctuator (
chk.c:700:17: punctuator )
chk.c:700:18: punctuator ;
chk.c:701:3: keyword return
chk.c:701:10: identifier strncpy
chk.c:701:18: punctuator (
chk.c:701:19: identifier s1
chk.c:701:21: punctuator ,
chk.c:701:23: identifier s2
chk.c:701:25: punctuator ,
chk.c:701:27: identifier n
chk.c:701:28: punctuator )
chk.c:701:29: punctuator ;
chk.c:702:1: punctuator }
chk.c:704:1: keyword char
chk.c:704:6: punctuator *
chk.c:705:1: identifier strcat
chk.c:705:8: punctuator (
chk.c:705:9: keyword char
chk.c:705:14: punctuator *
chk.c:705:15: identifier dst
chk.c:705:18: punctuator ,
chk.c:705:20: keyword const
chk.c:705:26: keyword char
chk.c:705:31: punctuator *
chk.c:705:32: identifier src
chk.c:705:35: punctuator )
chk.c:706:1: punctuator {
chk.c:707:3: keyword char
chk.c:707:8: punctuator *
chk.c:707:9: identifier p
chk.c:707:11: punctuator =
chk.c:707:13: identifier dst
chk.c:707:16: punctuator ;
chk.c:714:3: keyword while
chk.c:714:9: punctuator (
chk.c:714:10: punctuator *
chk.c:714:11: identifier p
chk.c:714:12: punctuator )
chk.c:715:5: identifier p
chk.c:715:6: punctuator ++
chk.c:715:8: punctuator ;
chk.c:716:3: keyword while
chk.c:716:9: punctuator (
chk.c:716:10: punctuator (
chk.c:716:11: punctuator *
chk.c:716:12: identifier p
chk.c:716:13: punctuator ++
chk.c:716:16: punctuator =
chk.c:716:18: punctuator *
chk.c:716:19: identifier src
chk.c:716:22: punctuator ++
chk.c:716:24: punctuator )
chk.c:716:25: punctuator )
chk.c:717:5: punctuator ;
chk.c:718:3: keyword return
chk.c:718:10: identifier dst
chk.c:718:13: punctuator ;
chk.c:719:1: punctuator }
chk.c:721:1: keyword char
chk.c:721:6: punctuator *
chk.c:722:1: identifier __strcat_chk
chk.c:722:14: punctuator (
chk.c:722:15: keyword char
chk.c:722:20: punctuator *
chk.c:722:21: identifier d
chk.c:722:22: punctuator ,
chk.c:722:24: keyword const
chk.c:722:30: keyword char
chk.c:722:35: punctuator *
chk.c:722:36: identifier s
chk.c:722:37: punctuator ,
chk.c:722:39: keyword long
chk.c:722:44: keyword unsigned
chk.c:722:53: keyword int
chk.c:722:57: identifier size
chk.c:722:61: punctuator )
chk.c:723:1: punctuator {
chk.c:725:3: keyword if
chk.c:725:6: punctuator (
chk.c:725:7: identifier size
chk.c:725:12: punctuator ==
chk.c:725:15: punctuator (
chk.c:725:16: keyword long
chk.c:725:21: keyword unsigned
chk.c:725:30: keyword int
chk.c:725:33: punctuator )
chk.c:725:35: punctuator -
chk.c:725:36: constant 1
chk.c:725:37: punctuator )
chk.c:726:5: identifier abort
chk.c:726:11: punctuator (
chk.c:726:12: punctuator )
chk.c:726:13: punctuator ;
chk.c:727:3: punctuator ++
chk.c:727:5: identifier chk_calls
chk.c:727:14: punctuator ;
chk.c:728:3: keyword if
chk.c:728:6: punctuator (
chk.c:728:7: identifier strlen
chk.c:728:14: punctuator (
chk.c:728:15: identifier d
chk.c:728:16: punctuator )
chk.c:728:18: punctuator +
chk.c:728:20: identifier strlen
chk.c:728:27: punctuator (
chk.c:728:28: identifier s
chk.c:728:29: punctuator )
chk.c:728:31: punctuator >=
chk.c:728:34: identifier size
chk.c:728:38: punctuator )
chk.c:729:5: identifier __chk_fail
chk.c:729:16: punctuator (
chk.c:729:17: punctuator )
chk.c:729:18: punctuator ;
chk.c:730:3: keyword return
chk.c:730:10: identifier strcat
chk.c:730:17: punctuator (
chk.c:730:18: identifier d
chk.c:730:19: punctuator ,
chk.c:730:21: identifier s
chk.c:730:22: punctuator )
chk.c:730:23: punctuator ;
chk.c:731:1: punctuator }
chk.c:733:1: keyword char
chk.c:733:6: punctuator *
chk.c:734:1: identifier strncat
chk.c:734:9: punctuator (
chk.c:734:10: keyword char
chk.c:734:15: punctuator *
chk.c:734:16: identifier s1
chk.c:734:18: punctuator ,
chk.c:734:20: keyword const
chk.c:734:26: keyword char
chk.c:734:31: punctuator *
chk.c:734:32: identifier s2
chk.c:734:34: punctuator ,
chk.c:734:36: keyword long
chk.c:734:41: keyword unsigned
chk.c:734:50: keyword int
chk.c:734:54: identifier n
chk.c:734:55: punctuator )
chk.c:735:1: punctuator {
chk.c:736:3: keyword char
chk.c:736:8: punctuator *
chk.c:736:9: identifier dest
chk.c:736:14: punctuator =
chk.c:736:16: identifier s1
chk.c:736:18: punctuator ;
chk.c:737:3: keyword char
chk.c:737:8: identifier c
chk.c:737:9: punctuator ;
chk.c:742:3: keyword while
chk.c:742:9: punctuator (
chk.c:742:10: punctuator *
chk.c:742:11: identifier s1
chk.c:742:13: punctuator )
chk.c:742:15: identifier s1
chk.c:742:17: punctuator ++
chk.c:742:19: punctuator ;
chk.c:743:3: identifier c
chk.c:743:5: punctuator =
chk.c:743:7: constant '\0'
chk.c:743:11: punctuator ;
chk.c:744:3: keyword while
chk.c:744:9: punctuator (
chk.c:744:10: identifier n
chk.c:744:12: punctuator >
chk.c:744:14: constant 0
chk.c:744:15: punctuator )
chk.c:745:5: punctuator {
chk.c:746:7: identifier c
chk.c:746:9: punctuator =
chk.c:746:11: punctuator *
chk.c:746:12: identifier s2
chk.c:746:14: punctuator ++
chk.c:746:16: punctuator ;
chk.c:747:7: punctuator *
chk.c:747:8: identifier s1
chk.c:747:10: punctuator ++
chk.c:747:13: punctuator =
chk.c:747:15: identifier c
chk.c:747:16: punctuator ;
chk.c:748:7: keyword if
chk.c:748:10: punctuator (
chk.c:748:11: identifier c
chk.c:748:13: punctuator ==
chk.c:748:16: constant '\0'
chk.c:748:20: punctuator )
chk.c:749:2: keyword return
chk.c:749:9: identifier dest
chk.c:749:13: punctuator ;
chk.c:750:7: identifier n
chk.c:750:8: punctuator --
chk.c:750:10: punctuator ;
chk.c:751:5: punctuator }
chk.c:752:3: keyword if
chk.c:752:6: punctuator (
chk.c:752:7: identifier c
chk.c:752:9: punctuator !=
chk.c:752:12: constant '\0'
chk.c:752:16: punctuator )
chk.c:753:5: punctuator *
chk.c:753:6: identifier s1
chk.c:753:9: punctuator =
chk.c:753:11: constant '\0'
chk.c:753:15: punctuator ;
chk.c:754:3: keyword return
chk.c:754:10: identifier dest
chk.c:754:14: punctuator ;
chk.c:755:1: punctuator }
chk.c:757:1: keyword char
chk.c:757:6: punctuator *
chk.c:758:1: identifier __strncat_chk
chk.c:758:15: punctuator (
chk.c:758:16: keyword char
chk.c:758:21: punctuator *
chk.c:758:22: identifier d
chk.c:758:23: punctuator ,
chk.c:758:25: keyword const
chk.c:758:31: keyword char
chk.c:758:36: punctuator *
chk.c:758:37: identifier s
chk.c:758:38: punctuator ,
chk.c:758:40: keyword long
chk.c:758:45: keyword unsigned
chk.c:758:54: keyword int
chk.c:758:58: identifier n
chk.c:758:59: punctuator ,
chk.c:758:61: keyword long
chk.c:758:66: keyword unsigned
chk.c:758:75: keyword int
chk.c:758:79: identifier size
chk.c:758:83: punctuator )
chk.c:759:1: punctuator {
chk.c:760:3: keyword long
chk.c:760:8: keyword unsigned
chk.c:760:17: keyword int
chk.c:760:21: identifier len
chk.c:760:25: punctuator =
chk.c:760:27: identifier strlen
chk.c:760:34: punctuator (
chk.c:760:35: identifier d
chk.c:760:36: punctuator )
chk.c:760:37: punctuator ,
chk.c:760:39: identifier n1
chk.c:760:42: punctuator =
chk.c:760:44: identifier n
chk.c:760:45: punctuator ;
chk.c:761:3: keyword const
chk.c:761:9: keyword char
chk.c:761:14: punctuator *
chk.c:761:15: identifier s1
chk.c:761:18: punctuator =
chk.c:761:20: identifier s
chk.c:761:21: punctuator ;
chk.c:764:3: keyword if
chk.c:764:6: punctuator (
chk.c:764:7: identifier size
chk.c:764:12: punctuator ==
chk.c:764:15: punctuator (
chk.c:764:16: keyword long
chk.c:764:21: keyword unsigned
chk.c:764:30: keyword int
chk.c:764:33: punctuator )
chk.c:764:35: punctuator -
chk.c:764:36: constant 1
chk.c:764:37: punctuator )
chk.c:765:5: identifier abort
chk.c:765:11: punctuator (
chk.c:765:12: punctuator )
chk.c:765:13: punctuator ;
chk.c:766:3: punctuator ++
chk.c:766:5: identifier chk_calls
chk.c:766:14: punctuator ;
chk.c:767:3: keyword while
chk.c:767:9: punctuator (
chk.c:767:10: identifier len
chk.c:767:14: punctuator <
chk.c:767:16: identifier size
chk.c:767:21: punctuator &&
chk.c:767:24: identifier n1
chk.c:767:27: punctuator >
chk.c:767:29: constant 0
chk.c:767:30: punctuator )
chk.c:768:5: punctuator {
chk.c:769:7: keyword if
chk.c:769:10: punctuator (
chk.c:769:11: punctuator *
chk.c:769:12: identifier s1
chk.c:769:14: punctuator ++
chk.c:769:17: punctuator ==
chk.c:769:20: constant '\0'
chk.c:769:24: punctuator )
chk.c:770:2: keyword break
chk.c:770:7: punctuator ;
chk.c:771:7: punctuator ++
chk.c:771:9: identifier len
chk.c:771:12: punctuator ;
chk.c:772:7: punctuator --
chk.c:772:9: identifier n1
chk.c:772:11: punctuator ;
chk.c:773:5: punctuator }
chk.c:775:3: keyword if
chk.c:775:6: punctuator (
chk.c:775:7: identifier len
chk.c:775:11: punctuator >=
chk.c:775:14: identifier size
chk.c:775:18: punctuator )
chk.c:776:5: identifier __chk_fail
chk.c:776:16: punctuator (
chk.c:776:17: punctuator )
chk.c:776:18: punctuator ;
chk.c:777:3: keyword return
chk.c:777:10: identifier strncat
chk.c:777:18: punctuator (
chk.c:777:19: identifier d
chk.c:777:20: punctuator ,
chk.c:777:22: identifier s
chk.c:777:23: punctuator ,
chk.c:777:25: identifier n
chk.c:777:26: punctuator )
chk.c:777:27: punctuator ;
chk.c:778:1: punctuator }
chk.c:783:1: keyword static
chk.c:783:8: keyword char
chk.c:783:13: identifier chk_sprintf_buf
chk.c:783:28: punctuator [
chk.c:783:29: constant 4096
chk.c:783:33: punctuator ]
chk.c:783:34: punctuator ;
chk.c:785:1: keyword int
chk.c:786:1: identifier __sprintf_chk
chk.c:786:15: punctuator (
chk.c:786:16: keyword char
chk.c:786:21: punctuator *
chk.c:786:22: identifier str
chk.c:786:25: punctuator ,
chk.c:786:27: keyword int
chk.c:786:31: identifier flag
chk.c:786:35: punctuator ,
chk.c:786:37: keyword long
chk.c:786:42: keyword unsigned
chk.c:786:51: keyword int
chk.c:786:55: identifier size
chk.c:786:59: punctuator ,
chk.c:786:61: keyword const
chk.c:786:67: keyword char
chk.c:786:72: punctuator *
chk.c:786:73: identifier fmt
chk.c:786:76: punctuator ,
chk.c:786:78: punctuator ...
chk.c:786:81: punctuator )
chk.c:787:1: punctuator {
chk.c:788:3: keyword int
chk.c:788:7: identifier ret
chk.c:788:10: punctuator ;
chk.c:789:3: identifier va_list
chk.c:789:11: identifier ap
chk.c:789:13: punctuator ;
chk.c:793:3: keyword if
chk.c:793:6: punctuator (
chk.c:793:7: identifier size
chk.c:793:12: punctuator ==
chk.c:793:15: punctuator (
chk.c:793:16: keyword long
chk.c:793:21: keyword unsigned
chk.c:793:30: keyword int
chk.c:793:33: punctuator )
chk.c:793:35: punctuator -
chk.c:793:36: constant 1
chk.c:793:38: punctuator &&
chk.c:793:41: identifier flag
chk.c:793:46: punctuator ==
chk.c:793:49: constant 0
chk.c:793:50: punctuator )
chk.c:794:5: identifier abort
chk.c:794:11: punctuator (
chk.c:794:12: punctuator )
chk.c:794:13: punctuator ;
chk.c:795:3: punctuator ++
chk.c:795:5: identifier chk_calls
chk.c:795:14: punctuator ;
chk.c:800:3: identifier __builtin_va_start
chk.c:800:21: punctuator (
chk.c:800:22: identifier ap
chk.c:800:24: punctuator ,
chk.c:800:25: identifier fmt
chk.c:800:28: punctuator )
chk.c:800:29: punctuator ;
chk.c:801:3: identifier ret
chk.c:801:7: punctuator =
chk.c:801:9: identifier vsprintf
chk.c:801:18: punctuator (
chk.c:801:19: identifier chk_sprintf_buf
chk.c:801:34: punctuator ,
chk.c:801:36: identifier fmt
chk.c:801:39: punctuator ,
chk.c:801:41: identifier ap
chk.c:801:43: punctuator )
chk.c:801:44: punctuator ;
chk.c:802:3: identifier __builtin_va_end
chk.c:802:19: punctuator (
chk.c:802:20: identifier ap
chk.c:802:22: punctuator )
chk.c:802:23: punctuator ;
chk.c:803:3: keyword if
chk.c:803:6: punctuator (
chk.c:803:7: identifier ret
chk.c:803:11: punctuator >=
chk.c:803:14: constant 0
chk.c:803:15: punctuator )
chk.c:804:5: punctuator {
chk.c:805:7: keyword if
chk.c:805:10: punctuator (
chk.c:805:11: identifier ret
chk.c:805:15: punctuator >=
chk.c:805:18: identifier size
chk.c:805:22: punctuator )
chk.c:806:2: identifier __chk_fail
chk.c:806:13: punctuator (
chk.c:806:14: punctuator )
chk.c:806:15: punctuator ;
chk.c:807:7: identifier memcpy
chk.c:807:14: punctuator (
chk.c:807:15: identifier str
chk.c:807:18: punctuator ,
chk.c:807:20: identifier chk_sprintf_buf
chk.c:807:35: punctuator ,
chk.c:807:37: identifier ret
chk.c:807:41: punctuator +
chk.c:807:43: constant 1
chk.c:807:44: punctuator )
chk.c:807:45: punctuator ;
chk.c:808:5: punctuator }
chk.c:809:3: keyword return
chk.c:809:10: identifier ret
chk.c:809:13: punctuator ;
chk.c:810:1: punctuator }
chk.c:812:1: keyword int
chk.c:813:1: identifier __vsprintf_chk
chk.c:813:16: punctuator (
chk.c:813:17: keyword char
chk.c:813:22: punctuator *
chk.c:813:23: identifier str
chk.c:813:26: punctuator ,
chk.c:813:28: keyword int
chk.c:813:32: identifier flag
chk.c:813:36: punctuator ,
chk.c:813:38: keyword long
chk.c:813:43: keyword unsigned
chk.c:813:52: keyword int
chk.c:813:56: identifier size
chk.c:813:60: punctuator ,
chk.c:813:62: keyword const
chk.c:813:68: keyword char
chk.c:813:73: punctuator *
chk.c:813:74: identifier fmt
chk.c:813:77: punctuator ,
chk.c:814:3: identifier va_list
chk.c:814:11: identifier ap
chk.c:814:13: punctuator )
chk.c:815:1: punctuator {
chk.c:816:3: keyword int
chk.c:816:7: identifier ret
chk.c:816:10: punctuator ;
chk.c:820:3: keyword if
chk.c:820:6: punctuator (
chk.c:820:7: identifier size
chk.c:820:12: punctuator ==
chk.c:820:15: punctuator (
chk.c:820:16: keyword long
chk.c:820:21: keyword unsigned
chk.c:820:30: keyword int
chk.c:820:33: punctuator )
chk.c:820:35: punctuator -
chk.c:820:36: constant 1
chk.c:820:38: punctuator &&
chk.c:820:41: identifier flag
chk.c:820:46: punctuator ==
chk.c:820:49: constant 0
chk.c:820:50: punctuator )
chk.c:821:5: identifier abort
chk.c:821:11: punctuator (
chk.c:821:12: punctuator )
chk.c:821:13: punctuator ;
chk.c:822:3: punctuator ++
chk.c:822:5: identifier chk_calls
chk.c:822:14: punctuator ;
chk.c:827:3: identifier ret
chk.c:827:7: punctuator =
chk.c:827:9: identifier vsprintf
chk.c:827:18: punctuator (
chk.c:827:19: identifier chk_sprintf_buf
chk.c:827:34: punctuator ,
chk.c:827:36: identifier fmt
chk.c:827:39: punctuator ,
chk.c:827:41: identifier ap
chk.c:827:43: punctuator )
chk.c:827:44: punctuator ;
chk.c:828:3: keyword if
chk.c:828:6: punctuator (
chk.c:828:7: identifier ret
chk.c:828:11: punctuator >=
chk.c:828:14: constant 0
chk.c:828:15: punctuator )
chk.c:829:5: punctuator {
chk.c:830:7: keyword if
chk.c:830:10: punctuator (
chk.c:830:11: identifier ret
chk.c:830:15: punctuator >=
chk.c:830:18: identifier size
chk.c:830:22: punctuator )
chk.c:831:2: identifier __chk_fail
chk.c:831:13: punctuator (
chk.c:831:14: punctuator )
chk.c:831:15: punctuator ;
chk.c:832:7: identifier memcpy
chk.c:832:14: punctuator (
chk.c:832:15: identifier str
chk.c:832:18: punctuator ,
chk.c:832:20: identifier chk_sprintf_buf
chk.c:832:35: punctuator ,
chk.c:832:37: identifier ret
chk.c:832:41: punctuator +
chk.c:832:43: constant 1
chk.c:832:44: punctuator )
chk.c:832:45: punctuator ;
chk.c:833:5: punctuator }
chk.c:834:3: keyword return
chk.c:834:10: identifier ret
chk.c:834:13: punctuator ;
chk.c:835:1: punctuator }
chk.c:837:1: keyword int
chk.c:838:1: identifier __snprintf_chk
chk.c:838:16: punctuator (
chk.c:838:17: keyword char
chk.c:838:22: punctuator *
chk.c:838:23: identifier str
chk.c:838:26: punctuator ,
chk.c:838:28: keyword long
chk.c:838:33: keyword unsigned
chk.c:838:42: keyword int
chk.c:838:46: identifier len
chk.c:838:49: punctuator ,
chk.c:838:51: keyword int
chk.c:838:55: identifier flag
chk.c:838:59: punctuator ,
chk.c:838:61: keyword long
chk.c:838:66: keyword unsigned
chk.c:838:75: keyword int
chk.c:838:79: identifier size
chk.c:838:83: punctuator ,
chk.c:839:3: keyword const
chk.c:839:9: keyword char
chk.c:839:14: punctuator *
chk.c:839:15: identifier fmt
chk.c:839:18: punctuator ,
chk.c:839:20: punctuator ...
chk.c:839:23: punctuator )
chk.c:840:1: punctuator {
chk.c:841:3: keyword int
chk.c:841:7: identifier ret
chk.c:841:10: punctuator ;
chk.c:842:3: identifier va_list
chk.c:842:11: identifier ap
chk.c:842:13: punctuator ;
chk.c:846:3: keyword if
chk.c:846:6: punctuator (
chk.c:846:7: identifier size
chk.c:846:12: punctuator ==
chk.c:846:15: punctuator (
chk.c:846:16: keyword long
chk.c:846:21: keyword unsigned
chk.c:846:30: keyword int
chk.c:846:33: punctuator )
chk.c:846:35: punctuator -
chk.c:846:36: constant 1
chk.c:846:38: punctuator &&
chk.c:846:41: identifier flag
chk.c:846:46: punctuator ==
chk.c:846:49: constant 0
chk.c:846:50: punctuator )
chk.c:847:5: identifier abort
chk.c:847:11: punctuator (
chk.c:847:12: punctuator )
chk.c:847:13: punctuator ;
chk.c:848:3: punctuator ++
chk.c:848:5: identifier chk_calls
chk.c:848:14: punctuator ;
chk.c:849:3: keyword if
chk.c:849:6: punctuator (
chk.c:849:7: identifier size
chk.c:849:12: punctuator <
chk.c:849:14: identifier len
chk.c:849:17: punctuator )
chk.c:850:5: identifier __chk_fail
chk.c:850:16: punctuator (
chk.c:850:17: punctuator )
chk.c:850:18: punctuator ;
chk.c:855:3: identifier __builtin_va_start
chk.c:855:21: punctuator (
chk.c:855:22: identifier ap
chk.c:855:24: punctuator ,
chk.c:855:25: identifier fmt
chk.c:855:28: punctuator )
chk.c:855:29: punctuator ;
chk.c:856:3: identifier ret
chk.c:856:7: punctuator =
chk.c:856:9: identifier vsprintf
chk.c:856:18: punctuator (
chk.c:856:19: identifier chk_sprintf_buf
chk.c:856:34: punctuator ,
chk.c:856:36: identifier fmt
chk.c:856:39: punctuator ,
chk.c:856:41: identifier ap
chk.c:856:43: punctuator )
chk.c:856:44: punctuator ;
chk.c:857:3: identifier __builtin_va_end
chk.c:857:19: punctuator (
chk.c:857:20: identifier ap
chk.c:857:22: punctuator )
chk.c:857:23: punctuator ;
chk.c:858:3: keyword if
chk.c:858:6: punctuator (
chk.c:858:7: identifier ret
chk.c:858:11: punctuator >=
chk.c:858:14: constant 0
chk.c:858:15: punctuator )
chk.c:859:5: punctuator {
chk.c:860:7: keyword if
chk.c:860:10: punctuator (
chk.c:860:11: identifier ret
chk.c:860:15: punctuator <
chk.c:860:17: identifier len
chk.c:860:20: punctuator )
chk.c:861:2: identifier memcpy
chk.c:861:9: punctuator (
chk.c:861:10: identifier str
chk.c:861:13: punctuator ,
chk.c:861:15: identifier chk_sprintf_buf
chk.c:861:30: punctuator ,
chk.c:861:32: identifier ret
chk.c:861:36: punctuator +
chk.c:861:38: constant 1
chk.c:861:39: punctuator )
chk.c:861:40: punctuator ;
chk.c:862:7: keyword else
chk.c:863:2: punctuator {
chk.c:864:4: identifier memcpy
chk.c:864:11: punctuator (
chk.c:864:12: identifier str
chk.c:864:15: punctuator ,
chk.c:864:17: identifier chk_sprintf_buf
chk.c:864:32: punctuator ,
chk.c:864:34: identifier len
chk.c:864:38: punctuator -
chk.c:864:40: constant 1
chk.c:864:41: punctuator )
chk.c:864:42: punctuator ;
chk.c:865:4: identifier str
chk.c:865:7: punctuator [
chk.c:865:8: identifier len
chk.c:865:12: punctuator -
chk.c:865:14: constant 1
chk.c:865:15: punctuator ]
chk.c:865:17: punctuator =
chk.c:865:19: constant '\0'
chk.c:865:23: punctuator ;
chk.c:866:2: punctuator }
chk.c:867:5: punctuator }
chk.c:868:3: keyword return
chk.c:868:10: identifier ret
chk.c:868:13: punctuator ;
chk.c:869:1: punctuator }
chk.c:871:1: keyword int
chk.c:872:1: identifier __vsnprintf_chk
chk.c:872:17: punctuator (
chk.c:872:18: keyword char
chk.c:872:23: punctuator *
chk.c:872:24: identifier str
chk.c:872:27: punctuator ,
chk.c:872:29: keyword long
chk.c:872:34: keyword unsigned
chk.c:872:43: keyword int
chk.c:872:47: identifier len
chk.c:872:50: punctuator ,
chk.c:872:52: keyword int
chk.c:872:56: identifier flag
chk.c:872:60: punctuator ,
chk.c:872:62: keyword long
chk.c:872:67: keyword unsigned
chk.c:872:76: keyword int
chk.c:872:80: identifier size
chk.c:872:84: punctuator ,
chk.c:873:4: keyword const
chk.c:873:10: keyword char
chk.c:873:15: punctuator *
chk.c:873:16: identifier fmt
chk.c:873:19: punctuator ,
chk.c:873:21: identifier va_list
chk.c:873:29: identifier ap
chk.c:873:31: punctuator )
chk.c:874:1: punctuator {
chk.c:875:3: keyword int
chk.c:875:7: identifier ret
chk.c:875:10: punctuator ;
chk.c:879:3: keyword if
chk.c:879:6: punctuator (
chk.c:879:7: identifier size
chk.c:879:12: punctuator ==
chk.c:879:15: punctuator (
chk.c:879:16: keyword long
chk.c:879:21: keyword unsigned
chk.c:879:30: keyword int
chk.c:879:33: punctuator )
chk.c:879:35: punctuator -
chk.c:879:36: constant 1
chk.c:879:38: punctuator &&
chk.c:879:41: identifier flag
chk.c:879:46: punctuator ==
chk.c:879:49: constant 0
chk.c:879:50: punctuator )
chk.c:880:5: identifier abort
chk.c:880:11: punctuator (
chk.c:880:12: punctuator )
chk.c:880:13: punctuator ;
chk.c:881:3: punctuator ++
chk.c:881:5: identifier chk_calls
chk.c:881:14: punctuator ;
chk.c:882:3: keyword if
chk.c:882:6: punctuator (
chk.c:882:7: identifier size
chk.c:882:12: punctuator <
chk.c:882:14: identifier len
chk.c:882:17: punctuator )
chk.c:883:5: identifier __chk_fail
chk.c:883:16: punctuator (
chk.c:883:17: punctuator )
chk.c:883:18: punctuator ;
chk.c:888:3: identifier ret
chk.c:888:7: punctuator =
chk.c:888:9: identifier vsprintf
chk.c:888:18: punctuator (
chk.c:888:19: identifier chk_sprintf_buf
chk.c:888:34: punctuator ,
chk.c:888:36: identifier fmt
chk.c:888:39: punctuator ,
chk.c:888:41: identifier ap
chk.c:888:43: punctuator )
chk.c:888:44: punctuator ;
chk.c:889:3: keyword if
chk.c:889:6: punctuator (
chk.c:889:7: identifier ret
chk.c:889:11: punctuator >=
chk.c:889:14: constant 0
chk.c:889:15: punctuator )
chk.c:890:5: punctuator {
chk.c:891:7: keyword if
chk.c:891:10: punctuator (
chk.c:891:11: identifier ret
chk.c:891:15: punctuator <
chk.c:891:17: identifier len
chk.c:891:20: punctuator )
chk.c:892:2: identifier memcpy
chk.c:892:9: punctuator (
chk.c:892:10: identifier str
chk.c:892:13: punctuator ,
chk.c:892:15: identifier chk_sprintf_buf
chk.c:892:30: punctuator ,
chk.c:892:32: identifier ret
chk.c:892:36: punctuator +
chk.c:892:38: constant 1
chk.c:892:39: punctuator )
chk.c:892:40: punctuator ;
chk.c:893:7: keyword else
chk.c:894:2: punctuator {
chk.c:895:4: identifier memcpy
chk.c:895:11: punctuator (
chk.c:895:12: identifier str
chk.c:895:15: punctuator ,
chk.c:895:17: identifier chk_sprintf_buf
chk.c:895:32: punctuator ,
chk.c:895:34: identifier len
chk.c:895:38: punctuator -
chk.c:895:40: constant 1
chk.c:895:41: punctuator )
chk.c:895:42: punctuator ;
chk.c:896:4: identifier str
chk.c:896:7: punctuator [
chk.c:896:8: identifier len
chk.c:896:12: punctuator -
chk.c:896:14: constant 1
chk.c:896:15: punctuator ]
chk.c:896:17: punctuator =
chk.c:896:19: constant '\0'
chk.c:896:23: punctuator ;
chk.c:897:2: punctuator }
chk.c:898:5: punctuator }
chk.c:899:3: keyword return
chk.c:899:10: identifier ret
chk.c:899:13: punctuator ;
chk.c:900:1: punctuator }
chk.c:902:1: keyword int
chk.c:903:1: identifier snprintf
chk.c:903:10: punctuator (
chk.c:903:11: keyword char
chk.c:903:16: punctuator *
chk.c:903:17: identifier str
chk.c:903:20: punctuator ,
chk.c:903:22: keyword long
chk.c:903:27: keyword unsigned
chk.c:903:36: keyword int
chk.c:903:40: identifier len
chk.c:903:43: punctuator ,
chk.c:903:45: keyword const
chk.c:903:51: keyword char
chk.c:903:56: punctuator *
chk.c:903:57: identifier fmt
chk.c:903:60: punctuator ,
chk.c:903:62: punctuator ...
chk.c:903:65: punctuator )
chk.c:904:1: punctuator {
chk.c:905:3: keyword int
chk.c:905:7: identifier ret
chk.c:905:10: punctuator ;
chk.c:906:3: identifier va_list
chk.c:906:11: identifier ap
chk.c:906:13: punctuator ;
chk.c:912:3: identifier __builtin_va_start
chk.c:912:21: punctuator (
chk.c:912:22: identifier ap
chk.c:912:24: punctuator ,
chk.c:912:25: identifier fmt
chk.c:912:28: punctuator )
chk.c:912:29: punctuator ;
chk.c:913:3: identifier ret
chk.c:913:7: punctuator =
chk.c:913:9: identifier vsprintf
chk.c:913:18: punctuator (
chk.c:913:19: identifier chk_sprintf_buf
chk.c:913:34: punctuator ,
chk.c:913:36: identifier fmt
chk.c:913:39: punctuator ,
chk.c:913:41: identifier ap
chk.c:913:43: punctuator )
chk.c:913:44: punctuator ;
chk.c:914:3: identifier __builtin_va_end
chk.c:914:19: punctuator (
chk.c:914:20: identifier ap
chk.c:914:22: punctuator )
chk.c:914:23: punctuator ;
chk.c:915:3: keyword if
chk.c:915:6: punctuator (
chk.c:915:7: identifier ret
chk.c:915:11: punctuator >=
chk.c:915:14: constant 0
chk.c:915:15: punctuator )
chk.c:916:5: punctuator {
chk.c:917:7: keyword if
chk.c:917:10: punctuator (
chk.c:917:11: identifier ret
chk.c:917:15: punctuator <
chk.c:917:17: identifier len
chk.c:917:20: punctuator )
chk.c:918:2: identifier memcpy
chk.c:918:9: punctuator (
chk.c:918:10: identifier str
chk.c:918:13: punctuator ,
chk.c:918:15: identifier chk_sprintf_buf
chk.c:918:30: punctuator ,
chk.c:918:32: identifier ret
chk.c:918:36: punctuator +
chk.c:918:38: constant 1
chk.c:918:39: punctuator )
chk.c:918:40: punctuator ;
chk.c:919:7: keyword else
chk.c:919:12: keyword if
chk.c:919:15: punctuator (
chk.c:919:16: identifier len
chk.c:919:19: punctuator )
chk.c:920:2: punctuator {
chk.c:921:4: identifier memcpy
chk.c:921:11: punctuator (
chk.c:921:12: identifier str
chk.c:921:15: punctuator ,
chk.c:921:17: identifier chk_sprintf_buf
chk.c:921:32: punctuator ,
chk.c:921:34: identifier len
chk.c:921:38: punctuator -
chk.c:921:40: constant 1
chk.c:921:41: punctuator )
chk.c:921:42: punctuator ;
chk.c:922:4: identifier str
chk.c:922:7: punctuator [
chk.c:922:8: identifier len
chk.c:922:12: punctuator -
chk.c:922:14: constant 1
chk.c:922:15: punctuator ]
chk.c:922:17: punctuator =
chk.c:922:19: constant '\0'
chk.c:922:23: punctuator ;
chk.c:923:2: punctuator }
chk.c:924:5: punctuator }
chk.c:925:3: keyword return
chk.c:925:10: identifier ret
chk.c:925:13: punctuator ;
chk.c:926:1: punctuator }
chk.c:930:1: keyword int
chk.c:931:1: identifier vsnprintf
chk.c:931:11: punctuator (
chk.c:931:12: keyword char
chk.c:931:17: punctuator *
chk.c:931:18: identifier str
chk.c:931:21: punctuator ,
chk.c:931:23: keyword long
chk.c:931:28: keyword unsigned
chk.c:931:37: keyword int
chk.c:931:41: identifier len
chk.c:931:44: punctuator ,
chk.c:931:46: keyword const
chk.c:931:52: keyword char
chk.c:931:57: punctuator *
chk.c:931:58: identifier fmt
chk.c:931:61: punctuator ,
chk.c:931:63: identifier va_list
chk.c:931:71: identifier ap
chk.c:931:73: punctuator )
chk.c:932:1: punctuator {
chk.c:933:3: keyword int
chk.c:933:7: identifier ret
chk.c:933:10: punctuator ;
chk.c:939:3: identifier ret
chk.c:939:7: punctuator =
chk.c:939:9: identifier vsprintf
chk.c:939:18: punctuator (
chk.c:939:19: identifier chk_sprintf_buf
chk.c:939:34: punctuator ,
chk.c:939:36: identifier fmt
chk.c:939:39: punctuator ,
chk.c:939:41: identifier ap
chk.c:939:43: punctuator )
chk.c:939:44: punctuator ;
chk.c:940:3: keyword if
chk.c:940:6: punctuator (
chk.c:940:7: identifier ret
chk.c:940:11: punctuator >=
chk.c:940:14: constant 0
chk.c:940:15: punctuator )
chk.c:941:5: punctuator {
chk.c:942:7: keyword if
chk.c:942:10: punctuator (
chk.c:942:11: identifier ret
chk.c:942:15: punctuator <
chk.c:942:17: identifier len
chk.c:942:20: punctuator )
chk.c:943:2: identifier memcpy
chk.c:943:9: punctuator (
chk.c:943:10: identifier str
chk.c:943:13: punctuator ,
chk.c:943:15: identifier chk_sprintf_buf
chk.c:943:30: punctuator ,
chk.c:943:32: identifier ret
chk.c:943:36: punctuator +
chk.c:943:38: constant 1
chk.c:943:39: punctuator )
chk.c:943:40: punctuator ;
chk.c:944:7: keyword else
chk.c:944:12: keyword if
chk.c:944:15: punctuator (
chk.c:944:16: identifier len
chk.c:944:19: punctuator )
chk.c:945:2: punctuator {
chk.c:946:4: identifier memcpy
chk.c:946:11: punctuator (
chk.c:946:12: identifier str
chk.c:946:15: punctuator ,
chk.c:946:17: identifier chk_sprintf_buf
chk.c:946:32: punctuator ,
chk.c:946:34: identifier len
chk.c:946:38: punctuator -
chk.c:946:40: constant 1
chk.c:946:41: punctuator )
chk.c:946:42: punctuator ;
chk.c:947:4: identifier str
chk.c:947:7: punctuator [
chk.c:947:8: identifier len
chk.c:947:12: punctuator -
chk.c:947:14: constant 1
chk.c:947:15: punctuator ]
chk.c:947:17: punctuator =
chk.c:947:19: constant '\0'
chk.c:947:23: punctuator ;
chk.c:948:2: punctuator }
chk.c:949:5: punctuator }
chk.c:950:3: keyword return
chk.c:950:10: identifier ret
chk.c:950:13: punctuator ;
chk.c:951:1: punctuator }
