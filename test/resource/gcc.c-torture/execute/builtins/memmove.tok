0
memmove.c:7:1: keyword extern
memmove.c:7:8: keyword void
memmove.c:7:13: identifier abort
memmove.c:7:19: punctuator (
memmove.c:7:20: keyword void
memmove.c:7:24: punctuator )
memmove.c:7:25: punctuator ;
memmove.c:8:1: keyword typedef
memmove.c:8:9: keyword long
memmove.c:8:14: keyword unsigned
memmove.c:8:23: keyword int
memmove.c:8:27: identifier size_t
memmove.c:8:33: punctuator ;
memmove.c:9:1: keyword extern
memmove.c:9:8: keyword void
memmove.c:9:13: punctuator *
memmove.c:9:14: identifier memmove
memmove.c:9:22: punctuator (
memmove.c:9:23: keyword void
memmove.c:9:28: punctuator *
memmove.c:9:29: punctuator ,
memmove.c:9:31: keyword const
memmove.c:9:37: keyword void
memmove.c:9:42: punctuator *
memmove.c:9:43: punctuator ,
memmove.c:9:45: identifier size_t
memmove.c:9:51: punctuator )
memmove.c:9:52: punctuator ;
memmove.c:10:1: keyword extern
memmove.c:10:8: keyword void
memmove.c:10:13: identifier bcopy
memmove.c:10:19: punctuator (
memmove.c:10:20: keyword const
memmove.c:10:26: keyword void
memmove.c:10:31: punctuator *
memmove.c:10:32: punctuator ,
memmove.c:10:34: keyword void
memmove.c:10:39: punctuator *
memmove.c:10:40: punctuator ,
memmove.c:10:42: identifier size_t
memmove.c:10:48: punctuator )
memmove.c:10:49: punctuator ;
memmove.c:11:1: keyword extern
memmove.c:11:8: keyword int
memmove.c:11:12: identifier memcmp
memmove.c:11:19: punctuator (
memmove.c:11:20: keyword const
memmove.c:11:26: keyword void
memmove.c:11:31: punctuator *
memmove.c:11:32: punctuator ,
memmove.c:11:34: keyword const
memmove.c:11:40: keyword void
memmove.c:11:45: punctuator *
memmove.c:11:46: punctuator ,
memmove.c:11:48: identifier size_t
memmove.c:11:54: punctuator )
memmove.c:11:55: punctuator ;
memmove.c:13:1: keyword const
memmove.c:13:7: keyword char
memmove.c:13:12: identifier s1
memmove.c:13:14: punctuator [
memmove.c:13:15: punctuator ]
memmove.c:13:17: punctuator =
memmove.c:13:19: string-literal "123"
memmove.c:13:24: punctuator ;
memmove.c:14:1: keyword char
memmove.c:14:6: identifier p
memmove.c:14:7: punctuator [
memmove.c:14:8: constant 32
memmove.c:14:10: punctuator ]
memmove.c:14:12: punctuator =
memmove.c:14:14: string-literal ""
memmove.c:14:16: punctuator ;
memmove.c:16:1: keyword static
memmove.c:16:8: keyword const
memmove.c:16:14: keyword struct
memmove.c:16:21: identifier foo
memmove.c:17:1: punctuator {
memmove.c:18:3: keyword char
memmove.c:18:8: punctuator *
memmove.c:18:9: identifier s
memmove.c:18:10: punctuator ;
memmove.c:19:3: keyword double
memmove.c:19:10: identifier d
memmove.c:19:11: punctuator ;
memmove.c:20:3: keyword long
memmove.c:20:8: identifier l
memmove.c:20:9: punctuator ;
memmove.c:21:1: punctuator }
memmove.c:21:3: identifier foo
memmove.c:21:6: punctuator [
memmove.c:21:7: punctuator ]
memmove.c:21:9: punctuator =
memmove.c:22:1: punctuator {
memmove.c:23:3: punctuator {
memmove.c:23:5: string-literal "hello world1"
memmove.c:23:19: punctuator ,
memmove.c:23:21: constant 3.14159
memmove.c:23:28: punctuator ,
memmove.c:23:30: constant 101L
memmove.c:23:35: punctuator }
memmove.c:23:36: punctuator ,
memmove.c:24:3: punctuator {
memmove.c:24:5: string-literal "hello world2"
memmove.c:24:19: punctuator ,
memmove.c:24:21: constant 3.14159
memmove.c:24:28: punctuator ,
memmove.c:24:30: constant 102L
memmove.c:24:35: punctuator }
memmove.c:24:36: punctuator ,
memmove.c:25:3: punctuator {
memmove.c:25:5: string-literal "hello world3"
memmove.c:25:19: punctuator ,
memmove.c:25:21: constant 3.14159
memmove.c:25:28: punctuator ,
memmove.c:25:30: constant 103L
memmove.c:25:35: punctuator }
memmove.c:25:36: punctuator ,
memmove.c:26:3: punctuator {
memmove.c:26:5: string-literal "hello world4"
memmove.c:26:19: punctuator ,
memmove.c:26:21: constant 3.14159
memmove.c:26:28: punctuator ,
memmove.c:26:30: constant 104L
memmove.c:26:35: punctuator }
memmove.c:26:36: punctuator ,
memmove.c:27:3: punctuator {
memmove.c:27:5: string-literal "hello world5"
memmove.c:27:19: punctuator ,
memmove.c:27:21: constant 3.14159
memmove.c:27:28: punctuator ,
memmove.c:27:30: constant 105L
memmove.c:27:35: punctuator }
memmove.c:27:36: punctuator ,
memmove.c:28:3: punctuator {
memmove.c:28:5: string-literal "hello world6"
memmove.c:28:19: punctuator ,
memmove.c:28:21: constant 3.14159
memmove.c:28:28: punctuator ,
memmove.c:28:30: constant 106L
memmove.c:28:35: punctuator }
memmove.c:29:1: punctuator }
memmove.c:29:2: punctuator ;
memmove.c:31:1: keyword static
memmove.c:31:8: keyword const
memmove.c:31:14: keyword struct
memmove.c:31:21: identifier bar
memmove.c:32:1: punctuator {
memmove.c:33:3: keyword char
memmove.c:33:8: punctuator *
memmove.c:33:9: identifier s
memmove.c:33:10: punctuator ;
memmove.c:34:3: keyword const
memmove.c:34:9: keyword struct
memmove.c:34:16: identifier foo
memmove.c:34:20: identifier f
memmove.c:34:21: punctuator [
memmove.c:34:22: constant 3
memmove.c:34:23: punctuator ]
memmove.c:34:24: punctuator ;
memmove.c:35:1: punctuator }
memmove.c:35:3: identifier bar
memmove.c:35:6: punctuator [
memmove.c:35:7: punctuator ]
memmove.c:35:9: punctuator =
memmove.c:36:1: punctuator {
memmove.c:37:3: punctuator {
memmove.c:38:5: string-literal "hello world10"
memmove.c:38:20: punctuator ,
memmove.c:39:5: punctuator {
memmove.c:40:7: punctuator {
memmove.c:40:9: string-literal "hello1"
memmove.c:40:17: punctuator ,
memmove.c:40:19: constant 3.14159
memmove.c:40:26: punctuator ,
memmove.c:40:28: constant 201L
memmove.c:40:33: punctuator }
memmove.c:40:34: punctuator ,
memmove.c:41:7: punctuator {
memmove.c:41:9: string-literal "hello2"
memmove.c:41:17: punctuator ,
memmove.c:41:19: constant 3.14159
memmove.c:41:26: punctuator ,
memmove.c:41:28: constant 202L
memmove.c:41:33: punctuator }
memmove.c:41:34: punctuator ,
memmove.c:42:7: punctuator {
memmove.c:42:9: string-literal "hello3"
memmove.c:42:17: punctuator ,
memmove.c:42:19: constant 3.14159
memmove.c:42:26: punctuator ,
memmove.c:42:28: constant 203L
memmove.c:42:33: punctuator }
memmove.c:42:34: punctuator ,
memmove.c:43:5: punctuator }
memmove.c:44:3: punctuator }
memmove.c:44:4: punctuator ,
memmove.c:45:3: punctuator {
memmove.c:46:5: string-literal "hello world11"
memmove.c:46:20: punctuator ,
memmove.c:47:5: punctuator {
memmove.c:48:7: punctuator {
memmove.c:48:9: string-literal "hello4"
memmove.c:48:17: punctuator ,
memmove.c:48:19: constant 3.14159
memmove.c:48:26: punctuator ,
memmove.c:48:28: constant 204L
memmove.c:48:33: punctuator }
memmove.c:48:34: punctuator ,
memmove.c:49:7: punctuator {
memmove.c:49:9: string-literal "hello5"
memmove.c:49:17: punctuator ,
memmove.c:49:19: constant 3.14159
memmove.c:49:26: punctuator ,
memmove.c:49:28: constant 205L
memmove.c:49:33: punctuator }
memmove.c:49:34: punctuator ,
memmove.c:50:7: punctuator {
memmove.c:50:9: string-literal "hello6"
memmove.c:50:17: punctuator ,
memmove.c:50:19: constant 3.14159
memmove.c:50:26: punctuator ,
memmove.c:50:28: constant 206L
memmove.c:50:33: punctuator }
memmove.c:50:34: punctuator ,
memmove.c:51:5: punctuator }
memmove.c:52:3: punctuator }
memmove.c:53:1: punctuator }
memmove.c:53:2: punctuator ;
memmove.c:55:1: keyword static
memmove.c:55:8: keyword const
memmove.c:55:14: keyword int
memmove.c:55:18: identifier baz
memmove.c:55:21: punctuator [
memmove.c:55:22: punctuator ]
memmove.c:55:24: punctuator =
memmove.c:55:26: punctuator {
memmove.c:55:28: constant 1
memmove.c:55:29: punctuator ,
memmove.c:55:31: constant 2
memmove.c:55:32: punctuator ,
memmove.c:55:34: constant 3
memmove.c:55:35: punctuator ,
memmove.c:55:37: constant 4
memmove.c:55:38: punctuator ,
memmove.c:55:40: constant 5
memmove.c:55:41: punctuator ,
memmove.c:55:43: constant 6
memmove.c:55:44: punctuator ,
memmove.c:55:46: constant 7
memmove.c:55:47: punctuator ,
memmove.c:55:49: constant 8
memmove.c:55:50: punctuator ,
memmove.c:55:52: constant 9
memmove.c:55:53: punctuator ,
memmove.c:55:55: constant 0
memmove.c:55:57: punctuator }
memmove.c:55:58: punctuator ;
memmove.c:57:1: keyword void
memmove.c:58:1: identifier main_test
memmove.c:58:11: punctuator (
memmove.c:58:12: keyword void
memmove.c:58:16: punctuator )
memmove.c:59:1: punctuator {
memmove.c:60:3: keyword const
memmove.c:60:9: keyword char
memmove.c:60:14: punctuator *
memmove.c:60:15: identifier s
memmove.c:60:16: punctuator ;
memmove.c:61:3: keyword struct
memmove.c:61:10: identifier foo
memmove.c:61:14: identifier f1
memmove.c:61:16: punctuator [
memmove.c:61:17: keyword sizeof
memmove.c:61:24: identifier foo
memmove.c:61:27: punctuator /
memmove.c:61:28: keyword sizeof
memmove.c:61:34: punctuator *
memmove.c:61:35: identifier foo
memmove.c:61:38: punctuator ]
memmove.c:61:39: punctuator ;
memmove.c:62:3: keyword struct
memmove.c:62:10: identifier bar
memmove.c:62:14: identifier b1
memmove.c:62:16: punctuator [
memmove.c:62:17: keyword sizeof
memmove.c:62:24: identifier bar
memmove.c:62:27: punctuator /
memmove.c:62:28: keyword sizeof
memmove.c:62:34: punctuator *
memmove.c:62:35: identifier bar
memmove.c:62:38: punctuator ]
memmove.c:62:39: punctuator ;
memmove.c:63:3: keyword int
memmove.c:63:7: identifier bz
memmove.c:63:9: punctuator [
memmove.c:63:10: keyword sizeof
memmove.c:63:17: identifier baz
memmove.c:63:20: punctuator /
memmove.c:63:21: keyword sizeof
memmove.c:63:27: punctuator *
memmove.c:63:28: identifier baz
memmove.c:63:31: punctuator ]
memmove.c:63:32: punctuator ;
memmove.c:65:3: keyword if
memmove.c:65:6: punctuator (
memmove.c:65:7: identifier memmove
memmove.c:65:15: punctuator (
memmove.c:65:16: identifier f1
memmove.c:65:18: punctuator ,
memmove.c:65:20: identifier foo
memmove.c:65:23: punctuator ,
memmove.c:65:25: keyword sizeof
memmove.c:65:32: punctuator (
memmove.c:65:33: identifier foo
memmove.c:65:36: punctuator )
memmove.c:65:37: punctuator )
memmove.c:65:39: punctuator !=
memmove.c:65:42: identifier f1
memmove.c:65:45: punctuator ||
memmove.c:65:48: identifier memcmp
memmove.c:65:55: punctuator (
memmove.c:65:56: identifier f1
memmove.c:65:58: punctuator ,
memmove.c:65:60: identifier foo
memmove.c:65:63: punctuator ,
memmove.c:65:65: keyword sizeof
memmove.c:65:72: punctuator (
memmove.c:65:73: identifier foo
memmove.c:65:76: punctuator )
memmove.c:65:77: punctuator )
memmove.c:65:78: punctuator )
memmove.c:66:5: identifier abort
memmove.c:66:11: punctuator (
memmove.c:66:12: punctuator )
memmove.c:66:13: punctuator ;
memmove.c:67:3: keyword if
memmove.c:67:6: punctuator (
memmove.c:67:7: identifier memmove
memmove.c:67:15: punctuator (
memmove.c:67:16: identifier b1
memmove.c:67:18: punctuator ,
memmove.c:67:20: identifier bar
memmove.c:67:23: punctuator ,
memmove.c:67:25: keyword sizeof
memmove.c:67:32: punctuator (
memmove.c:67:33: identifier bar
memmove.c:67:36: punctuator )
memmove.c:67:37: punctuator )
memmove.c:67:39: punctuator !=
memmove.c:67:42: identifier b1
memmove.c:67:45: punctuator ||
memmove.c:67:48: identifier memcmp
memmove.c:67:55: punctuator (
memmove.c:67:56: identifier b1
memmove.c:67:58: punctuator ,
memmove.c:67:60: identifier bar
memmove.c:67:63: punctuator ,
memmove.c:67:65: keyword sizeof
memmove.c:67:72: punctuator (
memmove.c:67:73: identifier bar
memmove.c:67:76: punctuator )
memmove.c:67:77: punctuator )
memmove.c:67:78: punctuator )
memmove.c:68:5: identifier abort
memmove.c:68:11: punctuator (
memmove.c:68:12: punctuator )
memmove.c:68:13: punctuator ;
memmove.c:69:3: identifier bcopy
memmove.c:69:9: punctuator (
memmove.c:69:10: identifier baz
memmove.c:69:13: punctuator ,
memmove.c:69:15: identifier bz
memmove.c:69:17: punctuator ,
memmove.c:69:19: keyword sizeof
memmove.c:69:26: punctuator (
memmove.c:69:27: identifier baz
memmove.c:69:30: punctuator )
memmove.c:69:31: punctuator )
memmove.c:69:32: punctuator ;
memmove.c:70:3: keyword if
memmove.c:70:6: punctuator (
memmove.c:70:7: identifier memcmp
memmove.c:70:14: punctuator (
memmove.c:70:15: identifier bz
memmove.c:70:17: punctuator ,
memmove.c:70:19: identifier baz
memmove.c:70:22: punctuator ,
memmove.c:70:24: keyword sizeof
memmove.c:70:31: punctuator (
memmove.c:70:32: identifier baz
memmove.c:70:35: punctuator )
memmove.c:70:36: punctuator )
memmove.c:70:37: punctuator )
memmove.c:71:5: identifier abort
memmove.c:71:11: punctuator (
memmove.c:71:12: punctuator )
memmove.c:71:13: punctuator ;
memmove.c:73:3: keyword if
memmove.c:73:6: punctuator (
memmove.c:73:7: identifier memmove
memmove.c:73:15: punctuator (
memmove.c:73:16: identifier p
memmove.c:73:17: punctuator ,
memmove.c:73:19: string-literal "abcde"
memmove.c:73:26: punctuator ,
memmove.c:73:28: constant 6
memmove.c:73:29: punctuator )
memmove.c:73:31: punctuator !=
memmove.c:73:34: identifier p
memmove.c:73:36: punctuator ||
memmove.c:73:39: identifier memcmp
memmove.c:73:46: punctuator (
memmove.c:73:47: identifier p
memmove.c:73:48: punctuator ,
memmove.c:73:50: string-literal "abcde"
memmove.c:73:57: punctuator ,
memmove.c:73:59: constant 6
memmove.c:73:60: punctuator )
memmove.c:73:61: punctuator )
memmove.c:74:5: identifier abort
memmove.c:74:11: punctuator (
memmove.c:74:12: punctuator )
memmove.c:74:13: punctuator ;
memmove.c:75:3: identifier s
memmove.c:75:5: punctuator =
memmove.c:75:7: identifier s1
memmove.c:75:9: punctuator ;
memmove.c:76:3: keyword if
memmove.c:76:6: punctuator (
memmove.c:76:7: identifier memmove
memmove.c:76:15: punctuator (
memmove.c:76:16: identifier p
memmove.c:76:18: punctuator +
memmove.c:76:20: constant 2
memmove.c:76:21: punctuator ,
memmove.c:76:23: punctuator ++
memmove.c:76:25: identifier s
memmove.c:76:26: punctuator ,
memmove.c:76:28: constant 0
memmove.c:76:29: punctuator )
memmove.c:76:31: punctuator !=
memmove.c:76:34: identifier p
memmove.c:76:36: punctuator +
memmove.c:76:38: constant 2
memmove.c:76:40: punctuator ||
memmove.c:76:43: identifier memcmp
memmove.c:76:50: punctuator (
memmove.c:76:51: identifier p
memmove.c:76:52: punctuator ,
memmove.c:76:54: string-literal "abcde"
memmove.c:76:61: punctuator ,
memmove.c:76:63: constant 6
memmove.c:76:64: punctuator )
memmove.c:76:66: punctuator ||
memmove.c:76:69: identifier s
memmove.c:76:71: punctuator !=
memmove.c:76:74: identifier s1
memmove.c:76:77: punctuator +
memmove.c:76:79: constant 1
memmove.c:76:80: punctuator )
memmove.c:77:5: identifier abort
memmove.c:77:11: punctuator (
memmove.c:77:12: punctuator )
memmove.c:77:13: punctuator ;
memmove.c:78:3: keyword if
memmove.c:78:6: punctuator (
memmove.c:78:7: identifier __builtin_memmove
memmove.c:78:25: punctuator (
memmove.c:78:26: identifier p
memmove.c:78:28: punctuator +
memmove.c:78:30: constant 3
memmove.c:78:31: punctuator ,
memmove.c:78:33: string-literal ""
memmove.c:78:35: punctuator ,
memmove.c:78:37: constant 1
memmove.c:78:38: punctuator )
memmove.c:78:40: punctuator !=
memmove.c:78:43: identifier p
memmove.c:78:45: punctuator +
memmove.c:78:47: constant 3
memmove.c:78:49: punctuator ||
memmove.c:78:52: identifier memcmp
memmove.c:78:59: punctuator (
memmove.c:78:60: identifier p
memmove.c:78:61: punctuator ,
memmove.c:78:63: string-literal "abc\0e"
memmove.c:78:71: punctuator ,
memmove.c:78:73: constant 6
memmove.c:78:74: punctuator )
memmove.c:78:75: punctuator )
memmove.c:79:5: identifier abort
memmove.c:79:11: punctuator (
memmove.c:79:12: punctuator )
memmove.c:79:13: punctuator ;
memmove.c:80:3: identifier bcopy
memmove.c:80:9: punctuator (
memmove.c:80:10: string-literal "fghijk"
memmove.c:80:18: punctuator ,
memmove.c:80:20: identifier p
memmove.c:80:22: punctuator +
memmove.c:80:24: constant 2
memmove.c:80:25: punctuator ,
memmove.c:80:27: constant 4
memmove.c:80:28: punctuator )
memmove.c:80:29: punctuator ;
memmove.c:81:3: keyword if
memmove.c:81:6: punctuator (
memmove.c:81:7: identifier memcmp
memmove.c:81:14: punctuator (
memmove.c:81:15: identifier p
memmove.c:81:16: punctuator ,
memmove.c:81:18: string-literal "abfghi"
memmove.c:81:26: punctuator ,
memmove.c:81:28: constant 7
memmove.c:81:29: punctuator )
memmove.c:81:30: punctuator )
memmove.c:82:5: identifier abort
memmove.c:82:11: punctuator (
memmove.c:82:12: punctuator )
memmove.c:82:13: punctuator ;
memmove.c:83:3: identifier s
memmove.c:83:5: punctuator =
memmove.c:83:7: identifier s1
memmove.c:83:10: punctuator +
memmove.c:83:12: constant 1
memmove.c:83:13: punctuator ;
memmove.c:84:3: identifier bcopy
memmove.c:84:9: punctuator (
memmove.c:84:10: identifier s
memmove.c:84:11: punctuator ++
memmove.c:84:13: punctuator ,
memmove.c:84:15: identifier p
memmove.c:84:17: punctuator +
memmove.c:84:19: constant 1
memmove.c:84:20: punctuator ,
memmove.c:84:22: constant 0
memmove.c:84:23: punctuator )
memmove.c:84:24: punctuator ;
memmove.c:85:3: keyword if
memmove.c:85:6: punctuator (
memmove.c:85:7: identifier memcmp
memmove.c:85:14: punctuator (
memmove.c:85:15: identifier p
memmove.c:85:16: punctuator ,
memmove.c:85:18: string-literal "abfghi"
memmove.c:85:26: punctuator ,
memmove.c:85:28: constant 7
memmove.c:85:29: punctuator )
memmove.c:85:31: punctuator ||
memmove.c:85:34: identifier s
memmove.c:85:36: punctuator !=
memmove.c:85:39: identifier s1
memmove.c:85:42: punctuator +
memmove.c:85:44: constant 2
memmove.c:85:45: punctuator )
memmove.c:86:5: identifier abort
memmove.c:86:11: punctuator (
memmove.c:86:12: punctuator )
memmove.c:86:13: punctuator ;
memmove.c:87:3: identifier __builtin_bcopy
memmove.c:87:19: punctuator (
memmove.c:87:20: string-literal "ABCDE"
memmove.c:87:27: punctuator ,
memmove.c:87:29: identifier p
memmove.c:87:31: punctuator +
memmove.c:87:33: constant 4
memmove.c:87:34: punctuator ,
memmove.c:87:36: constant 1
memmove.c:87:37: punctuator )
memmove.c:87:38: punctuator ;
memmove.c:88:3: keyword if
memmove.c:88:6: punctuator (
memmove.c:88:7: identifier memcmp
memmove.c:88:14: punctuator (
memmove.c:88:15: identifier p
memmove.c:88:16: punctuator ,
memmove.c:88:18: string-literal "abfgAi"
memmove.c:88:26: punctuator ,
memmove.c:88:28: constant 7
memmove.c:88:29: punctuator )
memmove.c:88:30: punctuator )
memmove.c:89:5: identifier abort
memmove.c:89:11: punctuator (
memmove.c:89:12: punctuator )
memmove.c:89:13: punctuator ;
memmove.c:90:1: punctuator }
