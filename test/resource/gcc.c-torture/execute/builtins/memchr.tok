0
memchr.c:8:1: keyword extern
memchr.c:8:8: keyword void
memchr.c:8:13: identifier abort
memchr.c:8:19: punctuator (
memchr.c:8:20: keyword void
memchr.c:8:24: punctuator )
memchr.c:8:25: punctuator ;
memchr.c:9:1: keyword typedef
memchr.c:9:9: keyword long
memchr.c:9:14: keyword unsigned
memchr.c:9:23: keyword int
memchr.c:9:27: identifier size_t
memchr.c:9:33: punctuator ;
memchr.c:10:1: keyword extern
memchr.c:10:8: keyword void
memchr.c:10:13: punctuator *
memchr.c:10:14: identifier memchr
memchr.c:10:21: punctuator (
memchr.c:10:22: keyword const
memchr.c:10:28: keyword void
memchr.c:10:33: punctuator *
memchr.c:10:34: punctuator ,
memchr.c:10:36: keyword int
memchr.c:10:39: punctuator ,
memchr.c:10:41: identifier size_t
memchr.c:10:47: punctuator )
memchr.c:10:48: punctuator ;
memchr.c:12:1: keyword void
memchr.c:13:1: identifier main_test
memchr.c:13:11: punctuator (
memchr.c:13:12: keyword void
memchr.c:13:16: punctuator )
memchr.c:14:1: punctuator {
memchr.c:15:3: keyword const
memchr.c:15:9: keyword char
memchr.c:15:13: punctuator *
memchr.c:15:15: keyword const
memchr.c:15:21: identifier foo1
memchr.c:15:26: punctuator =
memchr.c:15:28: string-literal "hello world"
memchr.c:15:41: punctuator ;
memchr.c:17:3: keyword if
memchr.c:17:6: punctuator (
memchr.c:17:7: identifier memchr
memchr.c:17:14: punctuator (
memchr.c:17:15: identifier foo1
memchr.c:17:19: punctuator ,
memchr.c:17:21: constant 'x'
memchr.c:17:24: punctuator ,
memchr.c:17:26: constant 11
memchr.c:17:28: punctuator )
memchr.c:17:29: punctuator )
memchr.c:18:5: identifier abort
memchr.c:18:11: punctuator (
memchr.c:18:12: punctuator )
memchr.c:18:13: punctuator ;
memchr.c:19:3: keyword if
memchr.c:19:6: punctuator (
memchr.c:19:7: identifier memchr
memchr.c:19:14: punctuator (
memchr.c:19:15: identifier foo1
memchr.c:19:19: punctuator ,
memchr.c:19:21: constant 'o'
memchr.c:19:24: punctuator ,
memchr.c:19:26: constant 11
memchr.c:19:28: punctuator )
memchr.c:19:30: punctuator !=
memchr.c:19:33: identifier foo1
memchr.c:19:38: punctuator +
memchr.c:19:40: constant 4
memchr.c:19:41: punctuator )
memchr.c:20:5: identifier abort
memchr.c:20:11: punctuator (
memchr.c:20:12: punctuator )
memchr.c:20:13: punctuator ;
memchr.c:21:3: keyword if
memchr.c:21:6: punctuator (
memchr.c:21:7: identifier memchr
memchr.c:21:14: punctuator (
memchr.c:21:15: identifier foo1
memchr.c:21:19: punctuator ,
memchr.c:21:21: constant 'w'
memchr.c:21:24: punctuator ,
memchr.c:21:26: constant 2
memchr.c:21:27: punctuator )
memchr.c:21:28: punctuator )
memchr.c:22:5: identifier abort
memchr.c:22:11: punctuator (
memchr.c:22:12: punctuator )
memchr.c:22:13: punctuator ;
memchr.c:23:3: keyword if
memchr.c:23:6: punctuator (
memchr.c:23:7: identifier memchr
memchr.c:23:14: punctuator (
memchr.c:23:15: identifier foo1
memchr.c:23:20: punctuator +
memchr.c:23:22: constant 5
memchr.c:23:23: punctuator ,
memchr.c:23:25: constant 'o'
memchr.c:23:28: punctuator ,
memchr.c:23:30: constant 6
memchr.c:23:31: punctuator )
memchr.c:23:33: punctuator !=
memchr.c:23:36: identifier foo1
memchr.c:23:41: punctuator +
memchr.c:23:43: constant 7
memchr.c:23:44: punctuator )
memchr.c:24:5: identifier abort
memchr.c:24:11: punctuator (
memchr.c:24:12: punctuator )
memchr.c:24:13: punctuator ;
memchr.c:25:3: keyword if
memchr.c:25:6: punctuator (
memchr.c:25:7: identifier memchr
memchr.c:25:14: punctuator (
memchr.c:25:15: identifier foo1
memchr.c:25:19: punctuator ,
memchr.c:25:21: constant 'd'
memchr.c:25:24: punctuator ,
memchr.c:25:26: constant 11
memchr.c:25:28: punctuator )
memchr.c:25:30: punctuator !=
memchr.c:25:33: identifier foo1
memchr.c:25:38: punctuator +
memchr.c:25:40: constant 10
memchr.c:25:42: punctuator )
memchr.c:26:5: identifier abort
memchr.c:26:11: punctuator (
memchr.c:26:12: punctuator )
memchr.c:26:13: punctuator ;
memchr.c:27:3: keyword if
memchr.c:27:6: punctuator (
memchr.c:27:7: identifier memchr
memchr.c:27:14: punctuator (
memchr.c:27:15: identifier foo1
memchr.c:27:19: punctuator ,
memchr.c:27:21: constant 'd'
memchr.c:27:24: punctuator ,
memchr.c:27:26: constant 10
memchr.c:27:28: punctuator )
memchr.c:27:29: punctuator )
memchr.c:28:5: identifier abort
memchr.c:28:11: punctuator (
memchr.c:28:12: punctuator )
memchr.c:28:13: punctuator ;
memchr.c:29:3: keyword if
memchr.c:29:6: punctuator (
memchr.c:29:7: identifier memchr
memchr.c:29:14: punctuator (
memchr.c:29:15: identifier foo1
memchr.c:29:19: punctuator ,
memchr.c:29:21: constant '\0'
memchr.c:29:25: punctuator ,
memchr.c:29:27: constant 11
memchr.c:29:29: punctuator )
memchr.c:29:30: punctuator )
memchr.c:30:5: identifier abort
memchr.c:30:11: punctuator (
memchr.c:30:12: punctuator )
memchr.c:30:13: punctuator ;
memchr.c:31:3: keyword if
memchr.c:31:6: punctuator (
memchr.c:31:7: identifier memchr
memchr.c:31:14: punctuator (
memchr.c:31:15: identifier foo1
memchr.c:31:19: punctuator ,
memchr.c:31:21: constant '\0'
memchr.c:31:25: punctuator ,
memchr.c:31:27: constant 12
memchr.c:31:29: punctuator )
memchr.c:31:31: punctuator !=
memchr.c:31:34: identifier foo1
memchr.c:31:39: punctuator +
memchr.c:31:41: constant 11
memchr.c:31:43: punctuator )
memchr.c:32:5: identifier abort
memchr.c:32:11: punctuator (
memchr.c:32:12: punctuator )
memchr.c:32:13: punctuator ;
memchr.c:36:3: keyword if
memchr.c:36:6: punctuator (
memchr.c:36:7: identifier __builtin_memchr
memchr.c:36:24: punctuator (
memchr.c:36:25: identifier foo1
memchr.c:36:29: punctuator ,
memchr.c:36:31: constant 'r'
memchr.c:36:34: punctuator ,
memchr.c:36:36: constant 11
memchr.c:36:38: punctuator )
memchr.c:36:40: punctuator !=
memchr.c:36:43: identifier foo1
memchr.c:36:48: punctuator +
memchr.c:36:50: constant 8
memchr.c:36:51: punctuator )
memchr.c:37:5: identifier abort
memchr.c:37:11: punctuator (
memchr.c:37:12: punctuator )
memchr.c:37:13: punctuator ;
memchr.c:38:1: punctuator }
