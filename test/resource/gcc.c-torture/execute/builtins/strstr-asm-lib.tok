0
strstr-asm-lib.c:1:1: keyword extern
strstr-asm-lib.c:1:8: keyword void
strstr-asm-lib.c:1:13: identifier abort
strstr-asm-lib.c:1:19: punctuator (
strstr-asm-lib.c:1:20: keyword void
strstr-asm-lib.c:1:24: punctuator )
strstr-asm-lib.c:1:25: punctuator ;
strstr-asm-lib.c:2:1: keyword typedef
strstr-asm-lib.c:2:9: keyword long
strstr-asm-lib.c:2:14: keyword unsigned
strstr-asm-lib.c:2:23: keyword int
strstr-asm-lib.c:2:27: identifier size_t
strstr-asm-lib.c:2:33: punctuator ;
strstr-asm-lib.c:3:1: keyword extern
strstr-asm-lib.c:3:8: identifier size_t
strstr-asm-lib.c:3:15: identifier strlen
strstr-asm-lib.c:3:21: punctuator (
strstr-asm-lib.c:3:22: keyword const
strstr-asm-lib.c:3:28: keyword char
strstr-asm-lib.c:3:33: punctuator *
strstr-asm-lib.c:3:34: punctuator )
strstr-asm-lib.c:3:35: punctuator ;
strstr-asm-lib.c:4:1: keyword extern
strstr-asm-lib.c:4:8: keyword char
strstr-asm-lib.c:4:13: punctuator *
strstr-asm-lib.c:4:14: identifier strchr
strstr-asm-lib.c:4:20: punctuator (
strstr-asm-lib.c:4:21: keyword const
strstr-asm-lib.c:4:27: keyword char
strstr-asm-lib.c:4:32: punctuator *
strstr-asm-lib.c:4:33: punctuator ,
strstr-asm-lib.c:4:35: keyword int
strstr-asm-lib.c:4:38: punctuator )
strstr-asm-lib.c:4:39: punctuator ;
strstr-asm-lib.c:5:1: keyword extern
strstr-asm-lib.c:5:8: keyword int
strstr-asm-lib.c:5:12: identifier strcmp
strstr-asm-lib.c:5:18: punctuator (
strstr-asm-lib.c:5:19: keyword const
strstr-asm-lib.c:5:25: keyword char
strstr-asm-lib.c:5:30: punctuator *
strstr-asm-lib.c:5:31: punctuator ,
strstr-asm-lib.c:5:33: keyword const
strstr-asm-lib.c:5:39: keyword char
strstr-asm-lib.c:5:44: punctuator *
strstr-asm-lib.c:5:45: punctuator )
strstr-asm-lib.c:5:46: punctuator ;
strstr-asm-lib.c:6:1: keyword extern
strstr-asm-lib.c:6:8: keyword int
strstr-asm-lib.c:6:12: identifier strncmp
strstr-asm-lib.c:6:19: punctuator (
strstr-asm-lib.c:6:20: keyword const
strstr-asm-lib.c:6:26: keyword char
strstr-asm-lib.c:6:31: punctuator *
strstr-asm-lib.c:6:32: punctuator ,
strstr-asm-lib.c:6:34: keyword const
strstr-asm-lib.c:6:40: keyword char
strstr-asm-lib.c:6:45: punctuator *
strstr-asm-lib.c:6:46: punctuator ,
strstr-asm-lib.c:6:48: identifier size_t
strstr-asm-lib.c:6:54: punctuator )
strstr-asm-lib.c:6:55: punctuator ;
strstr-asm-lib.c:7:1: keyword extern
strstr-asm-lib.c:7:8: keyword int
strstr-asm-lib.c:7:12: identifier inside_main
strstr-asm-lib.c:7:23: punctuator ;
strstr-asm-lib.c:8:1: keyword extern
strstr-asm-lib.c:8:8: keyword const
strstr-asm-lib.c:8:14: keyword char
strstr-asm-lib.c:8:19: punctuator *
strstr-asm-lib.c:8:20: identifier p
strstr-asm-lib.c:8:21: punctuator ;
strstr-asm-lib.c:10:1: identifier __attribute__
strstr-asm-lib.c:10:15: punctuator (
strstr-asm-lib.c:10:16: punctuator (
strstr-asm-lib.c:10:17: identifier used
strstr-asm-lib.c:10:21: punctuator )
strstr-asm-lib.c:10:22: punctuator )
strstr-asm-lib.c:11:1: keyword char
strstr-asm-lib.c:11:6: punctuator *
strstr-asm-lib.c:12:1: identifier my_strstr
strstr-asm-lib.c:12:11: punctuator (
strstr-asm-lib.c:12:12: keyword const
strstr-asm-lib.c:12:18: keyword char
strstr-asm-lib.c:12:23: punctuator *
strstr-asm-lib.c:12:24: identifier s1
strstr-asm-lib.c:12:26: punctuator ,
strstr-asm-lib.c:12:28: keyword const
strstr-asm-lib.c:12:34: keyword char
strstr-asm-lib.c:12:39: punctuator *
strstr-asm-lib.c:12:40: identifier s2
strstr-asm-lib.c:12:42: punctuator )
strstr-asm-lib.c:13:1: punctuator {
strstr-asm-lib.c:14:3: keyword const
strstr-asm-lib.c:14:9: identifier size_t
strstr-asm-lib.c:14:16: identifier len
strstr-asm-lib.c:14:20: punctuator =
strstr-asm-lib.c:14:22: identifier strlen
strstr-asm-lib.c:14:29: punctuator (
strstr-asm-lib.c:14:30: identifier s2
strstr-asm-lib.c:14:32: punctuator )
strstr-asm-lib.c:14:33: punctuator ;
strstr-asm-lib.c:15:3: keyword if
strstr-asm-lib.c:15:6: punctuator (
strstr-asm-lib.c:15:7: identifier len
strstr-asm-lib.c:15:11: punctuator ==
strstr-asm-lib.c:15:14: constant 0
strstr-asm-lib.c:15:15: punctuator )
strstr-asm-lib.c:16:5: keyword return
strstr-asm-lib.c:16:12: punctuator (
strstr-asm-lib.c:16:13: keyword char
strstr-asm-lib.c:16:18: punctuator *
strstr-asm-lib.c:16:19: punctuator )
strstr-asm-lib.c:16:21: identifier s1
strstr-asm-lib.c:16:23: punctuator ;
strstr-asm-lib.c:17:3: keyword for
strstr-asm-lib.c:17:7: punctuator (
strstr-asm-lib.c:17:8: identifier s1
strstr-asm-lib.c:17:11: punctuator =
strstr-asm-lib.c:17:13: identifier strchr
strstr-asm-lib.c:17:20: punctuator (
strstr-asm-lib.c:17:21: identifier s1
strstr-asm-lib.c:17:23: punctuator ,
strstr-asm-lib.c:17:25: punctuator *
strstr-asm-lib.c:17:26: identifier s2
strstr-asm-lib.c:17:28: punctuator )
strstr-asm-lib.c:17:29: punctuator ;
strstr-asm-lib.c:17:31: identifier s1
strstr-asm-lib.c:17:33: punctuator ;
strstr-asm-lib.c:17:35: identifier s1
strstr-asm-lib.c:17:38: punctuator =
strstr-asm-lib.c:17:40: identifier strchr
strstr-asm-lib.c:17:47: punctuator (
strstr-asm-lib.c:17:48: identifier s1
strstr-asm-lib.c:17:51: punctuator +
strstr-asm-lib.c:17:53: constant 1
strstr-asm-lib.c:17:54: punctuator ,
strstr-asm-lib.c:17:56: punctuator *
strstr-asm-lib.c:17:57: identifier s2
strstr-asm-lib.c:17:59: punctuator )
strstr-asm-lib.c:17:60: punctuator )
strstr-asm-lib.c:18:5: keyword if
strstr-asm-lib.c:18:8: punctuator (
strstr-asm-lib.c:18:9: identifier strncmp
strstr-asm-lib.c:18:17: punctuator (
strstr-asm-lib.c:18:18: identifier s1
strstr-asm-lib.c:18:20: punctuator ,
strstr-asm-lib.c:18:22: identifier s2
strstr-asm-lib.c:18:24: punctuator ,
strstr-asm-lib.c:18:26: identifier len
strstr-asm-lib.c:18:29: punctuator )
strstr-asm-lib.c:18:31: punctuator ==
strstr-asm-lib.c:18:34: constant 0
strstr-asm-lib.c:18:35: punctuator )
strstr-asm-lib.c:19:7: keyword return
strstr-asm-lib.c:19:14: punctuator (
strstr-asm-lib.c:19:15: keyword char
strstr-asm-lib.c:19:20: punctuator *
strstr-asm-lib.c:19:21: punctuator )
strstr-asm-lib.c:19:23: identifier s1
strstr-asm-lib.c:19:25: punctuator ;
strstr-asm-lib.c:20:3: keyword return
strstr-asm-lib.c:20:10: punctuator (
strstr-asm-lib.c:20:11: keyword char
strstr-asm-lib.c:20:16: punctuator *
strstr-asm-lib.c:20:17: punctuator )
strstr-asm-lib.c:20:19: constant 0
strstr-asm-lib.c:20:20: punctuator ;
strstr-asm-lib.c:21:1: punctuator }
strstr-asm-lib.c:23:1: keyword char
strstr-asm-lib.c:23:6: punctuator *
strstr-asm-lib.c:24:1: identifier strstr
strstr-asm-lib.c:24:8: punctuator (
strstr-asm-lib.c:24:9: keyword const
strstr-asm-lib.c:24:15: keyword char
strstr-asm-lib.c:24:20: punctuator *
strstr-asm-lib.c:24:21: identifier s1
strstr-asm-lib.c:24:23: punctuator ,
strstr-asm-lib.c:24:25: keyword const
strstr-asm-lib.c:24:31: keyword char
strstr-asm-lib.c:24:36: punctuator *
strstr-asm-lib.c:24:37: identifier s2
strstr-asm-lib.c:24:39: punctuator )
strstr-asm-lib.c:25:1: punctuator {
strstr-asm-lib.c:26:3: keyword if
strstr-asm-lib.c:26:6: punctuator (
strstr-asm-lib.c:26:7: identifier inside_main
strstr-asm-lib.c:26:18: punctuator )
strstr-asm-lib.c:27:5: identifier abort
strstr-asm-lib.c:27:11: punctuator (
strstr-asm-lib.c:27:12: punctuator )
strstr-asm-lib.c:27:13: punctuator ;
strstr-asm-lib.c:29:3: keyword return
strstr-asm-lib.c:29:10: identifier my_strstr
strstr-asm-lib.c:29:20: punctuator (
strstr-asm-lib.c:29:21: identifier s1
strstr-asm-lib.c:29:23: punctuator ,
strstr-asm-lib.c:29:25: identifier s2
strstr-asm-lib.c:29:27: punctuator )
strstr-asm-lib.c:29:28: punctuator ;
strstr-asm-lib.c:30:1: punctuator }
