0
strcat.c:8:1: keyword extern
strcat.c:8:8: keyword int
strcat.c:8:12: identifier inside_main
strcat.c:8:23: punctuator ;
strcat.c:9:1: keyword extern
strcat.c:9:8: keyword void
strcat.c:9:13: identifier abort
strcat.c:9:19: punctuator (
strcat.c:9:20: keyword void
strcat.c:9:24: punctuator )
strcat.c:9:25: punctuator ;
strcat.c:10:1: keyword typedef
strcat.c:10:9: keyword long
strcat.c:10:14: keyword unsigned
strcat.c:10:23: keyword int
strcat.c:10:27: identifier size_t
strcat.c:10:33: punctuator ;
strcat.c:11:1: keyword extern
strcat.c:11:8: keyword char
strcat.c:11:13: punctuator *
strcat.c:11:14: identifier strcat
strcat.c:11:21: punctuator (
strcat.c:11:22: keyword char
strcat.c:11:27: punctuator *
strcat.c:11:28: punctuator ,
strcat.c:11:30: keyword const
strcat.c:11:36: keyword char
strcat.c:11:41: punctuator *
strcat.c:11:42: punctuator )
strcat.c:11:43: punctuator ;
strcat.c:12:1: keyword extern
strcat.c:12:8: keyword char
strcat.c:12:13: punctuator *
strcat.c:12:14: identifier strcpy
strcat.c:12:21: punctuator (
strcat.c:12:22: keyword char
strcat.c:12:27: punctuator *
strcat.c:12:28: punctuator ,
strcat.c:12:30: keyword const
strcat.c:12:36: keyword char
strcat.c:12:41: punctuator *
strcat.c:12:42: punctuator )
strcat.c:12:43: punctuator ;
strcat.c:13:1: keyword extern
strcat.c:13:8: keyword void
strcat.c:13:13: punctuator *
strcat.c:13:14: identifier memset
strcat.c:13:21: punctuator (
strcat.c:13:22: keyword void
strcat.c:13:27: punctuator *
strcat.c:13:28: punctuator ,
strcat.c:13:30: keyword int
strcat.c:13:33: punctuator ,
strcat.c:13:35: identifier size_t
strcat.c:13:41: punctuator )
strcat.c:13:42: punctuator ;
strcat.c:14:1: keyword extern
strcat.c:14:8: keyword int
strcat.c:14:12: identifier memcmp
strcat.c:14:19: punctuator (
strcat.c:14:20: keyword const
strcat.c:14:26: keyword void
strcat.c:14:31: punctuator *
strcat.c:14:32: punctuator ,
strcat.c:14:34: keyword const
strcat.c:14:40: keyword void
strcat.c:14:45: punctuator *
strcat.c:14:46: punctuator ,
strcat.c:14:48: identifier size_t
strcat.c:14:54: punctuator )
strcat.c:14:55: punctuator ;
strcat.c:18:1: keyword void
strcat.c:18:6: identifier main_test
strcat.c:18:16: punctuator (
strcat.c:18:17: keyword void
strcat.c:18:21: punctuator )
strcat.c:19:1: punctuator {
strcat.c:20:3: keyword const
strcat.c:20:9: keyword char
strcat.c:20:14: punctuator *
strcat.c:20:15: keyword const
strcat.c:20:21: identifier s1
strcat.c:20:24: punctuator =
strcat.c:20:26: string-literal "hello world"
strcat.c:20:39: punctuator ;
strcat.c:21:3: keyword const
strcat.c:21:9: keyword char
strcat.c:21:14: punctuator *
strcat.c:21:15: keyword const
strcat.c:21:21: identifier s2
strcat.c:21:24: punctuator =
strcat.c:21:26: string-literal ""
strcat.c:21:28: punctuator ;
strcat.c:22:3: keyword char
strcat.c:22:8: identifier dst
strcat.c:22:11: punctuator [
strcat.c:22:12: constant 64
strcat.c:22:14: punctuator ]
strcat.c:22:15: punctuator ,
strcat.c:22:17: punctuator *
strcat.c:22:18: identifier d2
strcat.c:22:20: punctuator ;
strcat.c:24:3: keyword do
strcat.c:24:6: punctuator {
strcat.c:24:8: identifier memset
strcat.c:24:15: punctuator (
strcat.c:24:16: identifier dst
strcat.c:24:19: punctuator ,
strcat.c:24:21: constant 'X'
strcat.c:24:24: punctuator ,
strcat.c:24:26: keyword sizeof
strcat.c:24:33: punctuator (
strcat.c:24:34: identifier dst
strcat.c:24:37: punctuator )
strcat.c:24:38: punctuator )
strcat.c:24:39: punctuator ;
strcat.c:24:41: identifier strcpy
strcat.c:24:48: punctuator (
strcat.c:24:49: identifier dst
strcat.c:24:52: punctuator ,
strcat.c:24:54: punctuator (
strcat.c:24:55: identifier s1
strcat.c:24:57: punctuator )
strcat.c:24:58: punctuator )
strcat.c:24:59: punctuator ;
strcat.c:24:61: punctuator }
strcat.c:24:63: keyword while
strcat.c:24:69: punctuator (
strcat.c:24:70: constant 0
strcat.c:24:71: punctuator )
strcat.c:24:72: punctuator ;
strcat.c:25:3: keyword if
strcat.c:25:6: punctuator (
strcat.c:25:7: identifier strcat
strcat.c:25:14: punctuator (
strcat.c:25:15: identifier dst
strcat.c:25:18: punctuator ,
strcat.c:25:20: string-literal ""
strcat.c:25:22: punctuator )
strcat.c:25:24: punctuator !=
strcat.c:25:27: identifier dst
strcat.c:25:31: punctuator ||
strcat.c:25:34: identifier memcmp
strcat.c:25:41: punctuator (
strcat.c:25:42: identifier dst
strcat.c:25:45: punctuator ,
strcat.c:25:47: string-literal "hello world\0XXX"
strcat.c:25:65: punctuator ,
strcat.c:25:67: constant 15
strcat.c:25:69: punctuator )
strcat.c:25:70: punctuator )
strcat.c:26:5: identifier abort
strcat.c:26:10: punctuator (
strcat.c:26:11: punctuator )
strcat.c:26:12: punctuator ;
strcat.c:27:3: keyword do
strcat.c:27:6: punctuator {
strcat.c:27:8: identifier memset
strcat.c:27:15: punctuator (
strcat.c:27:16: identifier dst
strcat.c:27:19: punctuator ,
strcat.c:27:21: constant 'X'
strcat.c:27:24: punctuator ,
strcat.c:27:26: keyword sizeof
strcat.c:27:33: punctuator (
strcat.c:27:34: identifier dst
strcat.c:27:37: punctuator )
strcat.c:27:38: punctuator )
strcat.c:27:39: punctuator ;
strcat.c:27:41: identifier strcpy
strcat.c:27:48: punctuator (
strcat.c:27:49: identifier dst
strcat.c:27:52: punctuator ,
strcat.c:27:54: punctuator (
strcat.c:27:55: identifier s1
strcat.c:27:57: punctuator )
strcat.c:27:58: punctuator )
strcat.c:27:59: punctuator ;
strcat.c:27:61: punctuator }
strcat.c:27:63: keyword while
strcat.c:27:69: punctuator (
strcat.c:27:70: constant 0
strcat.c:27:71: punctuator )
strcat.c:27:72: punctuator ;
strcat.c:28:3: keyword if
strcat.c:28:6: punctuator (
strcat.c:28:7: identifier strcat
strcat.c:28:14: punctuator (
strcat.c:28:15: identifier dst
strcat.c:28:18: punctuator ,
strcat.c:28:20: identifier s2
strcat.c:28:22: punctuator )
strcat.c:28:24: punctuator !=
strcat.c:28:27: identifier dst
strcat.c:28:31: punctuator ||
strcat.c:28:34: identifier memcmp
strcat.c:28:41: punctuator (
strcat.c:28:42: identifier dst
strcat.c:28:45: punctuator ,
strcat.c:28:47: string-literal "hello world\0XXX"
strcat.c:28:65: punctuator ,
strcat.c:28:67: constant 15
strcat.c:28:69: punctuator )
strcat.c:28:70: punctuator )
strcat.c:29:5: identifier abort
strcat.c:29:10: punctuator (
strcat.c:29:11: punctuator )
strcat.c:29:12: punctuator ;
strcat.c:30:3: keyword do
strcat.c:30:6: punctuator {
strcat.c:30:8: identifier memset
strcat.c:30:15: punctuator (
strcat.c:30:16: identifier dst
strcat.c:30:19: punctuator ,
strcat.c:30:21: constant 'X'
strcat.c:30:24: punctuator ,
strcat.c:30:26: keyword sizeof
strcat.c:30:33: punctuator (
strcat.c:30:34: identifier dst
strcat.c:30:37: punctuator )
strcat.c:30:38: punctuator )
strcat.c:30:39: punctuator ;
strcat.c:30:41: identifier strcpy
strcat.c:30:48: punctuator (
strcat.c:30:49: identifier dst
strcat.c:30:52: punctuator ,
strcat.c:30:54: punctuator (
strcat.c:30:55: identifier s1
strcat.c:30:57: punctuator )
strcat.c:30:58: punctuator )
strcat.c:30:59: punctuator ;
strcat.c:30:61: punctuator }
strcat.c:30:63: keyword while
strcat.c:30:69: punctuator (
strcat.c:30:70: constant 0
strcat.c:30:71: punctuator )
strcat.c:30:72: punctuator ;
strcat.c:30:74: identifier d2
strcat.c:30:77: punctuator =
strcat.c:30:79: identifier dst
strcat.c:30:82: punctuator ;
strcat.c:31:3: keyword if
strcat.c:31:6: punctuator (
strcat.c:31:7: identifier strcat
strcat.c:31:14: punctuator (
strcat.c:31:15: punctuator ++
strcat.c:31:17: identifier d2
strcat.c:31:19: punctuator ,
strcat.c:31:21: identifier s2
strcat.c:31:23: punctuator )
strcat.c:31:25: punctuator !=
strcat.c:31:28: identifier dst
strcat.c:31:31: punctuator +
strcat.c:31:32: constant 1
strcat.c:31:34: punctuator ||
strcat.c:31:37: identifier d2
strcat.c:31:40: punctuator !=
strcat.c:31:43: identifier dst
strcat.c:31:46: punctuator +
strcat.c:31:47: constant 1
strcat.c:32:7: punctuator ||
strcat.c:32:10: identifier memcmp
strcat.c:32:17: punctuator (
strcat.c:32:18: identifier dst
strcat.c:32:21: punctuator ,
strcat.c:32:23: string-literal "hello world\0XXX"
strcat.c:32:41: punctuator ,
strcat.c:32:43: constant 15
strcat.c:32:45: punctuator )
strcat.c:32:46: punctuator )
strcat.c:33:5: identifier abort
strcat.c:33:10: punctuator (
strcat.c:33:11: punctuator )
strcat.c:33:12: punctuator ;
strcat.c:34:3: keyword do
strcat.c:34:6: punctuator {
strcat.c:34:8: identifier memset
strcat.c:34:15: punctuator (
strcat.c:34:16: identifier dst
strcat.c:34:19: punctuator ,
strcat.c:34:21: constant 'X'
strcat.c:34:24: punctuator ,
strcat.c:34:26: keyword sizeof
strcat.c:34:33: punctuator (
strcat.c:34:34: identifier dst
strcat.c:34:37: punctuator )
strcat.c:34:38: punctuator )
strcat.c:34:39: punctuator ;
strcat.c:34:41: identifier strcpy
strcat.c:34:48: punctuator (
strcat.c:34:49: identifier dst
strcat.c:34:52: punctuator ,
strcat.c:34:54: punctuator (
strcat.c:34:55: identifier s1
strcat.c:34:57: punctuator )
strcat.c:34:58: punctuator )
strcat.c:34:59: punctuator ;
strcat.c:34:61: punctuator }
strcat.c:34:63: keyword while
strcat.c:34:69: punctuator (
strcat.c:34:70: constant 0
strcat.c:34:71: punctuator )
strcat.c:34:72: punctuator ;
strcat.c:34:74: identifier d2
strcat.c:34:77: punctuator =
strcat.c:34:79: identifier dst
strcat.c:34:82: punctuator ;
strcat.c:35:3: keyword if
strcat.c:35:6: punctuator (
strcat.c:35:7: identifier strcat
strcat.c:35:14: punctuator (
strcat.c:35:15: punctuator ++
strcat.c:35:17: identifier d2
strcat.c:35:19: punctuator +
strcat.c:35:20: constant 5
strcat.c:35:21: punctuator ,
strcat.c:35:23: identifier s2
strcat.c:35:25: punctuator )
strcat.c:35:27: punctuator !=
strcat.c:35:30: identifier dst
strcat.c:35:33: punctuator +
strcat.c:35:34: constant 6
strcat.c:35:36: punctuator ||
strcat.c:35:39: identifier d2
strcat.c:35:42: punctuator !=
strcat.c:35:45: identifier dst
strcat.c:35:48: punctuator +
strcat.c:35:49: constant 1
strcat.c:36:7: punctuator ||
strcat.c:36:10: identifier memcmp
strcat.c:36:17: punctuator (
strcat.c:36:18: identifier dst
strcat.c:36:21: punctuator ,
strcat.c:36:23: string-literal "hello world\0XXX"
strcat.c:36:41: punctuator ,
strcat.c:36:43: constant 15
strcat.c:36:45: punctuator )
strcat.c:36:46: punctuator )
strcat.c:37:5: identifier abort
strcat.c:37:10: punctuator (
strcat.c:37:11: punctuator )
strcat.c:37:12: punctuator ;
strcat.c:38:3: keyword do
strcat.c:38:6: punctuator {
strcat.c:38:8: identifier memset
strcat.c:38:15: punctuator (
strcat.c:38:16: identifier dst
strcat.c:38:19: punctuator ,
strcat.c:38:21: constant 'X'
strcat.c:38:24: punctuator ,
strcat.c:38:26: keyword sizeof
strcat.c:38:33: punctuator (
strcat.c:38:34: identifier dst
strcat.c:38:37: punctuator )
strcat.c:38:38: punctuator )
strcat.c:38:39: punctuator ;
strcat.c:38:41: identifier strcpy
strcat.c:38:48: punctuator (
strcat.c:38:49: identifier dst
strcat.c:38:52: punctuator ,
strcat.c:38:54: punctuator (
strcat.c:38:55: identifier s1
strcat.c:38:57: punctuator )
strcat.c:38:58: punctuator )
strcat.c:38:59: punctuator ;
strcat.c:38:61: punctuator }
strcat.c:38:63: keyword while
strcat.c:38:69: punctuator (
strcat.c:38:70: constant 0
strcat.c:38:71: punctuator )
strcat.c:38:72: punctuator ;
strcat.c:38:74: identifier d2
strcat.c:38:77: punctuator =
strcat.c:38:79: identifier dst
strcat.c:38:82: punctuator ;
strcat.c:39:3: keyword if
strcat.c:39:6: punctuator (
strcat.c:39:7: identifier strcat
strcat.c:39:14: punctuator (
strcat.c:39:15: punctuator ++
strcat.c:39:17: identifier d2
strcat.c:39:19: punctuator +
strcat.c:39:20: constant 5
strcat.c:39:21: punctuator ,
strcat.c:39:23: identifier s1
strcat.c:39:25: punctuator +
strcat.c:39:26: constant 11
strcat.c:39:28: punctuator )
strcat.c:39:30: punctuator !=
strcat.c:39:33: identifier dst
strcat.c:39:36: punctuator +
strcat.c:39:37: constant 6
strcat.c:39:39: punctuator ||
strcat.c:39:42: identifier d2
strcat.c:39:45: punctuator !=
strcat.c:39:48: identifier dst
strcat.c:39:51: punctuator +
strcat.c:39:52: constant 1
strcat.c:40:7: punctuator ||
strcat.c:40:10: identifier memcmp
strcat.c:40:17: punctuator (
strcat.c:40:18: identifier dst
strcat.c:40:21: punctuator ,
strcat.c:40:23: string-literal "hello world\0XXX"
strcat.c:40:41: punctuator ,
strcat.c:40:43: constant 15
strcat.c:40:45: punctuator )
strcat.c:40:46: punctuator )
strcat.c:41:5: identifier abort
strcat.c:41:10: punctuator (
strcat.c:41:11: punctuator )
strcat.c:41:12: punctuator ;
strcat.c:42:3: keyword do
strcat.c:42:6: punctuator {
strcat.c:42:8: identifier memset
strcat.c:42:15: punctuator (
strcat.c:42:16: identifier dst
strcat.c:42:19: punctuator ,
strcat.c:42:21: constant 'X'
strcat.c:42:24: punctuator ,
strcat.c:42:26: keyword sizeof
strcat.c:42:33: punctuator (
strcat.c:42:34: identifier dst
strcat.c:42:37: punctuator )
strcat.c:42:38: punctuator )
strcat.c:42:39: punctuator ;
strcat.c:42:41: identifier strcpy
strcat.c:42:48: punctuator (
strcat.c:42:49: identifier dst
strcat.c:42:52: punctuator ,
strcat.c:42:54: punctuator (
strcat.c:42:55: identifier s1
strcat.c:42:57: punctuator )
strcat.c:42:58: punctuator )
strcat.c:42:59: punctuator ;
strcat.c:42:61: punctuator }
strcat.c:42:63: keyword while
strcat.c:42:69: punctuator (
strcat.c:42:70: constant 0
strcat.c:42:71: punctuator )
strcat.c:42:72: punctuator ;
strcat.c:43:3: keyword if
strcat.c:43:6: punctuator (
strcat.c:43:7: identifier strcat
strcat.c:43:14: punctuator (
strcat.c:43:15: identifier dst
strcat.c:43:18: punctuator ,
strcat.c:43:20: string-literal " 1111"
strcat.c:43:27: punctuator )
strcat.c:43:29: punctuator !=
strcat.c:43:32: identifier dst
strcat.c:44:7: punctuator ||
strcat.c:44:10: identifier memcmp
strcat.c:44:17: punctuator (
strcat.c:44:18: identifier dst
strcat.c:44:21: punctuator ,
strcat.c:44:23: string-literal "hello world 1111\0XXX"
strcat.c:44:46: punctuator ,
strcat.c:44:48: constant 20
strcat.c:44:50: punctuator )
strcat.c:44:51: punctuator )
strcat.c:45:5: identifier abort
strcat.c:45:10: punctuator (
strcat.c:45:11: punctuator )
strcat.c:45:12: punctuator ;
strcat.c:47:3: keyword do
strcat.c:47:6: punctuator {
strcat.c:47:8: identifier memset
strcat.c:47:15: punctuator (
strcat.c:47:16: identifier dst
strcat.c:47:19: punctuator ,
strcat.c:47:21: constant 'X'
strcat.c:47:24: punctuator ,
strcat.c:47:26: keyword sizeof
strcat.c:47:33: punctuator (
strcat.c:47:34: identifier dst
strcat.c:47:37: punctuator )
strcat.c:47:38: punctuator )
strcat.c:47:39: punctuator ;
strcat.c:47:41: identifier strcpy
strcat.c:47:48: punctuator (
strcat.c:47:49: identifier dst
strcat.c:47:52: punctuator ,
strcat.c:47:54: punctuator (
strcat.c:47:55: identifier s1
strcat.c:47:57: punctuator )
strcat.c:47:58: punctuator )
strcat.c:47:59: punctuator ;
strcat.c:47:61: punctuator }
strcat.c:47:63: keyword while
strcat.c:47:69: punctuator (
strcat.c:47:70: constant 0
strcat.c:47:71: punctuator )
strcat.c:47:72: punctuator ;
strcat.c:48:3: keyword if
strcat.c:48:6: punctuator (
strcat.c:48:7: identifier strcat
strcat.c:48:14: punctuator (
strcat.c:48:15: identifier dst
strcat.c:48:18: punctuator +
strcat.c:48:19: constant 5
strcat.c:48:20: punctuator ,
strcat.c:48:22: string-literal " 2222"
strcat.c:48:29: punctuator )
strcat.c:48:31: punctuator !=
strcat.c:48:34: identifier dst
strcat.c:48:37: punctuator +
strcat.c:48:38: constant 5
strcat.c:49:7: punctuator ||
strcat.c:49:10: identifier memcmp
strcat.c:49:17: punctuator (
strcat.c:49:18: identifier dst
strcat.c:49:21: punctuator ,
strcat.c:49:23: string-literal "hello world 2222\0XXX"
strcat.c:49:46: punctuator ,
strcat.c:49:48: constant 20
strcat.c:49:50: punctuator )
strcat.c:49:51: punctuator )
strcat.c:50:5: identifier abort
strcat.c:50:10: punctuator (
strcat.c:50:11: punctuator )
strcat.c:50:12: punctuator ;
strcat.c:52:3: keyword do
strcat.c:52:6: punctuator {
strcat.c:52:8: identifier memset
strcat.c:52:15: punctuator (
strcat.c:52:16: identifier dst
strcat.c:52:19: punctuator ,
strcat.c:52:21: constant 'X'
strcat.c:52:24: punctuator ,
strcat.c:52:26: keyword sizeof
strcat.c:52:33: punctuator (
strcat.c:52:34: identifier dst
strcat.c:52:37: punctuator )
strcat.c:52:38: punctuator )
strcat.c:52:39: punctuator ;
strcat.c:52:41: identifier strcpy
strcat.c:52:48: punctuator (
strcat.c:52:49: identifier dst
strcat.c:52:52: punctuator ,
strcat.c:52:54: punctuator (
strcat.c:52:55: identifier s1
strcat.c:52:57: punctuator )
strcat.c:52:58: punctuator )
strcat.c:52:59: punctuator ;
strcat.c:52:61: punctuator }
strcat.c:52:63: keyword while
strcat.c:52:69: punctuator (
strcat.c:52:70: constant 0
strcat.c:52:71: punctuator )
strcat.c:52:72: punctuator ;
strcat.c:52:74: identifier d2
strcat.c:52:77: punctuator =
strcat.c:52:79: identifier dst
strcat.c:52:82: punctuator ;
strcat.c:53:3: keyword if
strcat.c:53:6: punctuator (
strcat.c:53:7: identifier strcat
strcat.c:53:14: punctuator (
strcat.c:53:15: punctuator ++
strcat.c:53:17: identifier d2
strcat.c:53:19: punctuator +
strcat.c:53:20: constant 5
strcat.c:53:21: punctuator ,
strcat.c:53:23: string-literal " 3333"
strcat.c:53:30: punctuator )
strcat.c:53:32: punctuator !=
strcat.c:53:35: identifier dst
strcat.c:53:38: punctuator +
strcat.c:53:39: constant 6
strcat.c:53:41: punctuator ||
strcat.c:53:44: identifier d2
strcat.c:53:47: punctuator !=
strcat.c:53:50: identifier dst
strcat.c:53:53: punctuator +
strcat.c:53:54: constant 1
strcat.c:54:7: punctuator ||
strcat.c:54:10: identifier memcmp
strcat.c:54:17: punctuator (
strcat.c:54:18: identifier dst
strcat.c:54:21: punctuator ,
strcat.c:54:23: string-literal "hello world 3333\0XXX"
strcat.c:54:46: punctuator ,
strcat.c:54:48: constant 20
strcat.c:54:50: punctuator )
strcat.c:54:51: punctuator )
strcat.c:55:5: identifier abort
strcat.c:55:10: punctuator (
strcat.c:55:11: punctuator )
strcat.c:55:12: punctuator ;
strcat.c:57:3: keyword do
strcat.c:57:6: punctuator {
strcat.c:57:8: identifier memset
strcat.c:57:15: punctuator (
strcat.c:57:16: identifier dst
strcat.c:57:19: punctuator ,
strcat.c:57:21: constant 'X'
strcat.c:57:24: punctuator ,
strcat.c:57:26: keyword sizeof
strcat.c:57:33: punctuator (
strcat.c:57:34: identifier dst
strcat.c:57:37: punctuator )
strcat.c:57:38: punctuator )
strcat.c:57:39: punctuator ;
strcat.c:57:41: identifier strcpy
strcat.c:57:48: punctuator (
strcat.c:57:49: identifier dst
strcat.c:57:52: punctuator ,
strcat.c:57:54: punctuator (
strcat.c:57:55: identifier s1
strcat.c:57:57: punctuator )
strcat.c:57:58: punctuator )
strcat.c:57:59: punctuator ;
strcat.c:57:61: punctuator }
strcat.c:57:63: keyword while
strcat.c:57:69: punctuator (
strcat.c:57:70: constant 0
strcat.c:57:71: punctuator )
strcat.c:57:72: punctuator ;
strcat.c:58:3: identifier strcat
strcat.c:58:10: punctuator (
strcat.c:58:11: identifier strcat
strcat.c:58:18: punctuator (
strcat.c:58:19: identifier strcat
strcat.c:58:26: punctuator (
strcat.c:58:27: identifier strcat
strcat.c:58:34: punctuator (
strcat.c:58:35: identifier strcat
strcat.c:58:42: punctuator (
strcat.c:58:43: identifier strcat
strcat.c:58:50: punctuator (
strcat.c:58:51: identifier dst
strcat.c:58:54: punctuator ,
strcat.c:58:56: string-literal ": this "
strcat.c:58:65: punctuator )
strcat.c:58:66: punctuator ,
strcat.c:58:68: string-literal ""
strcat.c:58:70: punctuator )
strcat.c:58:71: punctuator ,
strcat.c:59:7: string-literal "is "
strcat.c:59:12: punctuator )
strcat.c:59:13: punctuator ,
strcat.c:59:15: string-literal "a "
strcat.c:59:19: punctuator )
strcat.c:59:20: punctuator ,
strcat.c:59:22: string-literal "test"
strcat.c:59:28: punctuator )
strcat.c:59:29: punctuator ,
strcat.c:59:31: string-literal "."
strcat.c:59:34: punctuator )
strcat.c:59:35: punctuator ;
strcat.c:60:3: keyword if
strcat.c:60:6: punctuator (
strcat.c:60:7: identifier memcmp
strcat.c:60:14: punctuator (
strcat.c:60:15: identifier dst
strcat.c:60:18: punctuator ,
strcat.c:60:20: string-literal "hello world: this is a test.\0X"
strcat.c:60:53: punctuator ,
strcat.c:60:55: constant 30
strcat.c:60:57: punctuator )
strcat.c:60:58: punctuator )
strcat.c:61:5: identifier abort
strcat.c:61:10: punctuator (
strcat.c:61:11: punctuator )
strcat.c:61:12: punctuator ;
strcat.c:64:3: identifier inside_main
strcat.c:64:15: punctuator =
strcat.c:64:17: constant 1
strcat.c:64:18: punctuator ;
strcat.c:69:3: keyword do
strcat.c:69:6: punctuator {
strcat.c:69:8: identifier memset
strcat.c:69:15: punctuator (
strcat.c:69:16: identifier dst
strcat.c:69:19: punctuator ,
strcat.c:69:21: constant 'X'
strcat.c:69:24: punctuator ,
strcat.c:69:26: keyword sizeof
strcat.c:69:33: punctuator (
strcat.c:69:34: identifier dst
strcat.c:69:37: punctuator )
strcat.c:69:38: punctuator )
strcat.c:69:39: punctuator ;
strcat.c:69:41: identifier strcpy
strcat.c:69:48: punctuator (
strcat.c:69:49: identifier dst
strcat.c:69:52: punctuator ,
strcat.c:69:54: punctuator (
strcat.c:69:55: identifier s1
strcat.c:69:57: punctuator )
strcat.c:69:58: punctuator )
strcat.c:69:59: punctuator ;
strcat.c:69:61: punctuator }
strcat.c:69:63: keyword while
strcat.c:69:69: punctuator (
strcat.c:69:70: constant 0
strcat.c:69:71: punctuator )
strcat.c:69:72: punctuator ;
strcat.c:70:3: keyword if
strcat.c:70:6: punctuator (
strcat.c:70:7: identifier __builtin_strcat
strcat.c:70:24: punctuator (
strcat.c:70:25: identifier dst
strcat.c:70:28: punctuator ,
strcat.c:70:30: string-literal ""
strcat.c:70:32: punctuator )
strcat.c:70:34: punctuator !=
strcat.c:70:37: identifier dst
strcat.c:70:41: punctuator ||
strcat.c:70:44: identifier memcmp
strcat.c:70:51: punctuator (
strcat.c:70:52: identifier dst
strcat.c:70:55: punctuator ,
strcat.c:70:57: string-literal "hello world\0XXX"
strcat.c:70:75: punctuator ,
strcat.c:70:77: constant 15
strcat.c:70:79: punctuator )
strcat.c:70:80: punctuator )
strcat.c:71:5: identifier abort
strcat.c:71:10: punctuator (
strcat.c:71:11: punctuator )
strcat.c:71:12: punctuator ;
strcat.c:72:1: punctuator }
