0
strspn-lib.c:1:1: keyword extern
strspn-lib.c:1:8: keyword void
strspn-lib.c:1:13: identifier abort
strspn-lib.c:1:19: punctuator (
strspn-lib.c:1:20: keyword void
strspn-lib.c:1:24: punctuator )
strspn-lib.c:1:25: punctuator ;
strspn-lib.c:2:1: keyword extern
strspn-lib.c:2:8: keyword int
strspn-lib.c:2:12: identifier inside_main
strspn-lib.c:2:23: punctuator ;
strspn-lib.c:4:1: identifier __attribute__
strspn-lib.c:4:15: punctuator (
strspn-lib.c:4:16: punctuator (
strspn-lib.c:4:17: identifier __noinline__
strspn-lib.c:4:29: punctuator )
strspn-lib.c:4:30: punctuator )
strspn-lib.c:5:1: keyword long
strspn-lib.c:5:6: keyword unsigned
strspn-lib.c:5:15: keyword int
strspn-lib.c:6:1: identifier strcspn
strspn-lib.c:6:9: punctuator (
strspn-lib.c:6:10: keyword const
strspn-lib.c:6:16: keyword char
strspn-lib.c:6:21: punctuator *
strspn-lib.c:6:22: identifier s1
strspn-lib.c:6:24: punctuator ,
strspn-lib.c:6:26: keyword const
strspn-lib.c:6:32: keyword char
strspn-lib.c:6:37: punctuator *
strspn-lib.c:6:38: identifier s2
strspn-lib.c:6:40: punctuator )
strspn-lib.c:7:1: punctuator {
strspn-lib.c:8:3: keyword const
strspn-lib.c:8:9: keyword char
strspn-lib.c:8:14: punctuator *
strspn-lib.c:8:15: identifier p
strspn-lib.c:8:16: punctuator ,
strspn-lib.c:8:18: punctuator *
strspn-lib.c:8:19: identifier q
strspn-lib.c:8:20: punctuator ;
strspn-lib.c:15:3: keyword for
strspn-lib.c:15:7: punctuator (
strspn-lib.c:15:8: identifier p
strspn-lib.c:15:10: punctuator =
strspn-lib.c:15:12: identifier s1
strspn-lib.c:15:14: punctuator ;
strspn-lib.c:15:16: punctuator *
strspn-lib.c:15:17: identifier p
strspn-lib.c:15:18: punctuator ;
strspn-lib.c:15:20: identifier p
strspn-lib.c:15:21: punctuator ++
strspn-lib.c:15:23: punctuator )
strspn-lib.c:16:5: punctuator {
strspn-lib.c:17:7: keyword for
strspn-lib.c:17:11: punctuator (
strspn-lib.c:17:12: identifier q
strspn-lib.c:17:14: punctuator =
strspn-lib.c:17:16: identifier s2
strspn-lib.c:17:18: punctuator ;
strspn-lib.c:17:20: punctuator *
strspn-lib.c:17:21: identifier q
strspn-lib.c:17:22: punctuator ;
strspn-lib.c:17:24: identifier q
strspn-lib.c:17:25: punctuator ++
strspn-lib.c:17:27: punctuator )
strspn-lib.c:18:2: keyword if
strspn-lib.c:18:5: punctuator (
strspn-lib.c:18:6: punctuator *
strspn-lib.c:18:7: identifier p
strspn-lib.c:18:9: punctuator ==
strspn-lib.c:18:12: punctuator *
strspn-lib.c:18:13: identifier q
strspn-lib.c:18:14: punctuator )
strspn-lib.c:19:4: keyword goto
strspn-lib.c:19:9: identifier proceed
strspn-lib.c:19:16: punctuator ;
strspn-lib.c:20:7: keyword break
strspn-lib.c:20:12: punctuator ;
strspn-lib.c:22:5: identifier proceed
strspn-lib.c:22:12: punctuator :
strspn-lib.c:22:13: punctuator ;
strspn-lib.c:23:5: punctuator }
strspn-lib.c:24:3: keyword return
strspn-lib.c:24:10: identifier p
strspn-lib.c:24:12: punctuator -
strspn-lib.c:24:14: identifier s1
strspn-lib.c:24:16: punctuator ;
strspn-lib.c:25:1: punctuator }
