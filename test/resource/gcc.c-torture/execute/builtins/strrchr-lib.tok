0
strrchr-lib.c:1:1: keyword extern
strrchr-lib.c:1:8: keyword void
strrchr-lib.c:1:13: identifier abort
strrchr-lib.c:1:19: punctuator (
strrchr-lib.c:1:20: keyword void
strrchr-lib.c:1:24: punctuator )
strrchr-lib.c:1:25: punctuator ;
strrchr-lib.c:2:1: keyword extern
strrchr-lib.c:2:8: keyword int
strrchr-lib.c:2:12: identifier inside_main
strrchr-lib.c:2:23: punctuator ;
strrchr-lib.c:4:1: identifier __attribute__
strrchr-lib.c:4:15: punctuator (
strrchr-lib.c:4:16: punctuator (
strrchr-lib.c:4:17: identifier __noinline__
strrchr-lib.c:4:29: punctuator )
strrchr-lib.c:4:30: punctuator )
strrchr-lib.c:5:1: keyword char
strrchr-lib.c:5:6: punctuator *
strrchr-lib.c:6:1: identifier strrchr
strrchr-lib.c:6:9: punctuator (
strrchr-lib.c:6:10: keyword const
strrchr-lib.c:6:16: keyword char
strrchr-lib.c:6:21: punctuator *
strrchr-lib.c:6:22: identifier s
strrchr-lib.c:6:23: punctuator ,
strrchr-lib.c:6:25: keyword int
strrchr-lib.c:6:29: identifier c
strrchr-lib.c:6:30: punctuator )
strrchr-lib.c:7:1: punctuator {
strrchr-lib.c:8:3: keyword long
strrchr-lib.c:8:8: keyword unsigned
strrchr-lib.c:8:17: keyword int
strrchr-lib.c:8:21: identifier i
strrchr-lib.c:8:22: punctuator ;
strrchr-lib.c:15:3: identifier i
strrchr-lib.c:15:5: punctuator =
strrchr-lib.c:15:7: constant 0
strrchr-lib.c:15:8: punctuator ;
strrchr-lib.c:16:3: keyword while
strrchr-lib.c:16:9: punctuator (
strrchr-lib.c:16:10: identifier s
strrchr-lib.c:16:11: punctuator [
strrchr-lib.c:16:12: identifier i
strrchr-lib.c:16:13: punctuator ]
strrchr-lib.c:16:15: punctuator !=
strrchr-lib.c:16:18: constant 0
strrchr-lib.c:16:19: punctuator )
strrchr-lib.c:17:5: identifier i
strrchr-lib.c:17:6: punctuator ++
strrchr-lib.c:17:8: punctuator ;
strrchr-lib.c:19:3: keyword do
strrchr-lib.c:20:5: keyword if
strrchr-lib.c:20:8: punctuator (
strrchr-lib.c:20:9: identifier s
strrchr-lib.c:20:10: punctuator [
strrchr-lib.c:20:11: identifier i
strrchr-lib.c:20:12: punctuator ]
strrchr-lib.c:20:14: punctuator ==
strrchr-lib.c:20:17: identifier c
strrchr-lib.c:20:18: punctuator )
strrchr-lib.c:21:7: keyword return
strrchr-lib.c:21:14: punctuator (
strrchr-lib.c:21:15: keyword char
strrchr-lib.c:21:20: punctuator *
strrchr-lib.c:21:21: punctuator )
strrchr-lib.c:21:23: identifier s
strrchr-lib.c:21:25: punctuator +
strrchr-lib.c:21:27: identifier i
strrchr-lib.c:21:28: punctuator ;
strrchr-lib.c:22:3: keyword while
strrchr-lib.c:22:9: punctuator (
strrchr-lib.c:22:10: identifier i
strrchr-lib.c:22:11: punctuator --
strrchr-lib.c:22:14: punctuator !=
strrchr-lib.c:22:17: constant 0
strrchr-lib.c:22:18: punctuator )
strrchr-lib.c:22:19: punctuator ;
strrchr-lib.c:24:3: keyword return
strrchr-lib.c:24:10: constant 0
strrchr-lib.c:24:11: punctuator ;
strrchr-lib.c:25:1: punctuator }
strrchr-lib.c:27:1: identifier __attribute__
strrchr-lib.c:27:15: punctuator (
strrchr-lib.c:27:16: punctuator (
strrchr-lib.c:27:17: identifier __noinline__
strrchr-lib.c:27:29: punctuator )
strrchr-lib.c:27:30: punctuator )
strrchr-lib.c:28:1: keyword char
strrchr-lib.c:28:6: punctuator *
strrchr-lib.c:29:1: identifier rindex
strrchr-lib.c:29:8: punctuator (
strrchr-lib.c:29:9: keyword const
strrchr-lib.c:29:15: keyword char
strrchr-lib.c:29:20: punctuator *
strrchr-lib.c:29:21: identifier s
strrchr-lib.c:29:22: punctuator ,
strrchr-lib.c:29:24: keyword int
strrchr-lib.c:29:28: identifier c
strrchr-lib.c:29:29: punctuator )
strrchr-lib.c:30:1: punctuator {
strrchr-lib.c:31:3: keyword return
strrchr-lib.c:31:10: identifier strrchr
strrchr-lib.c:31:18: punctuator (
strrchr-lib.c:31:19: identifier s
strrchr-lib.c:31:20: punctuator ,
strrchr-lib.c:31:22: identifier c
strrchr-lib.c:31:23: punctuator )
strrchr-lib.c:31:24: punctuator ;
strrchr-lib.c:32:1: punctuator }
