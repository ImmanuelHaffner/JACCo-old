0
memops-asm.c:1:1: keyword typedef
memops-asm.c:1:9: keyword long
memops-asm.c:1:14: keyword unsigned
memops-asm.c:1:23: keyword int
memops-asm.c:1:27: identifier size_t
memops-asm.c:1:33: punctuator ;
memops-asm.c:2:1: keyword extern
memops-asm.c:2:8: keyword void
memops-asm.c:2:13: identifier abort
memops-asm.c:2:19: punctuator (
memops-asm.c:2:20: keyword void
memops-asm.c:2:24: punctuator )
memops-asm.c:2:25: punctuator ;
memops-asm.c:3:1: keyword extern
memops-asm.c:3:8: keyword void
memops-asm.c:3:13: punctuator *
memops-asm.c:3:14: identifier memcpy
memops-asm.c:3:21: punctuator (
memops-asm.c:3:22: keyword void
memops-asm.c:3:27: punctuator *
memops-asm.c:3:28: punctuator ,
memops-asm.c:3:30: keyword const
memops-asm.c:3:36: keyword void
memops-asm.c:3:41: punctuator *
memops-asm.c:3:42: punctuator ,
memops-asm.c:3:44: identifier size_t
memops-asm.c:3:50: punctuator )
memops-asm.c:4:3: identifier __asm
memops-asm.c:4:9: punctuator (
memops-asm.c:4:10: string-literal ""
memops-asm.c:4:13: string-literal "my_memcpy"
memops-asm.c:4:24: punctuator )
memops-asm.c:4:25: punctuator ;
memops-asm.c:5:1: keyword extern
memops-asm.c:5:8: keyword void
memops-asm.c:5:13: identifier bcopy
memops-asm.c:5:19: punctuator (
memops-asm.c:5:20: keyword const
memops-asm.c:5:26: keyword void
memops-asm.c:5:31: punctuator *
memops-asm.c:5:32: punctuator ,
memops-asm.c:5:34: keyword void
memops-asm.c:5:39: punctuator *
memops-asm.c:5:40: punctuator ,
memops-asm.c:5:42: identifier size_t
memops-asm.c:5:48: punctuator )
memops-asm.c:6:3: identifier __asm
memops-asm.c:6:9: punctuator (
memops-asm.c:6:10: string-literal ""
memops-asm.c:6:13: string-literal "my_bcopy"
memops-asm.c:6:23: punctuator )
memops-asm.c:6:24: punctuator ;
memops-asm.c:7:1: keyword extern
memops-asm.c:7:8: keyword void
memops-asm.c:7:13: punctuator *
memops-asm.c:7:14: identifier memset
memops-asm.c:7:21: punctuator (
memops-asm.c:7:22: keyword void
memops-asm.c:7:27: punctuator *
memops-asm.c:7:28: punctuator ,
memops-asm.c:7:30: keyword int
memops-asm.c:7:33: punctuator ,
memops-asm.c:7:35: identifier size_t
memops-asm.c:7:41: punctuator )
memops-asm.c:8:3: identifier __asm
memops-asm.c:8:9: punctuator (
memops-asm.c:8:10: string-literal ""
memops-asm.c:8:13: string-literal "my_memset"
memops-asm.c:8:24: punctuator )
memops-asm.c:8:25: punctuator ;
memops-asm.c:9:1: keyword extern
memops-asm.c:9:8: keyword void
memops-asm.c:9:13: identifier bzero
memops-asm.c:9:19: punctuator (
memops-asm.c:9:20: keyword void
memops-asm.c:9:25: punctuator *
memops-asm.c:9:26: punctuator ,
memops-asm.c:9:28: identifier size_t
memops-asm.c:9:34: punctuator )
memops-asm.c:10:3: identifier __asm
memops-asm.c:10:9: punctuator (
memops-asm.c:10:10: string-literal ""
memops-asm.c:10:13: string-literal "my_bzero"
memops-asm.c:10:23: punctuator )
memops-asm.c:10:24: punctuator ;
memops-asm.c:11:1: keyword extern
memops-asm.c:11:8: keyword int
memops-asm.c:11:12: identifier memcmp
memops-asm.c:11:19: punctuator (
memops-asm.c:11:20: keyword const
memops-asm.c:11:26: keyword void
memops-asm.c:11:31: punctuator *
memops-asm.c:11:32: punctuator ,
memops-asm.c:11:34: keyword const
memops-asm.c:11:40: keyword void
memops-asm.c:11:45: punctuator *
memops-asm.c:11:46: punctuator ,
memops-asm.c:11:48: identifier size_t
memops-asm.c:11:54: punctuator )
memops-asm.c:11:55: punctuator ;
memops-asm.c:13:1: keyword struct
memops-asm.c:13:8: identifier A
memops-asm.c:13:10: punctuator {
memops-asm.c:13:12: keyword char
memops-asm.c:13:17: identifier c
memops-asm.c:13:18: punctuator [
memops-asm.c:13:19: constant 32
memops-asm.c:13:21: punctuator ]
memops-asm.c:13:22: punctuator ;
memops-asm.c:13:24: punctuator }
memops-asm.c:13:26: identifier a
memops-asm.c:13:28: punctuator =
memops-asm.c:13:30: punctuator {
memops-asm.c:13:32: string-literal "foobar"
memops-asm.c:13:41: punctuator }
memops-asm.c:13:42: punctuator ;
memops-asm.c:14:1: keyword char
memops-asm.c:14:6: identifier x
memops-asm.c:14:7: punctuator [
memops-asm.c:14:8: constant 64
memops-asm.c:14:10: punctuator ]
memops-asm.c:14:12: punctuator =
memops-asm.c:14:14: string-literal "foobar"
memops-asm.c:14:22: punctuator ,
memops-asm.c:14:24: identifier y
memops-asm.c:14:25: punctuator [
memops-asm.c:14:26: constant 64
memops-asm.c:14:28: punctuator ]
memops-asm.c:14:29: punctuator ;
memops-asm.c:15:1: keyword int
memops-asm.c:15:5: identifier i
memops-asm.c:15:7: punctuator =
memops-asm.c:15:9: constant 39
memops-asm.c:15:11: punctuator ,
memops-asm.c:15:13: identifier j
memops-asm.c:15:15: punctuator =
memops-asm.c:15:17: constant 6
memops-asm.c:15:18: punctuator ,
memops-asm.c:15:20: identifier k
memops-asm.c:15:22: punctuator =
memops-asm.c:15:24: constant 4
memops-asm.c:15:25: punctuator ;
memops-asm.c:17:1: keyword extern
memops-asm.c:17:8: keyword int
memops-asm.c:17:12: identifier inside_main
memops-asm.c:17:23: punctuator ;
memops-asm.c:19:1: keyword void
memops-asm.c:20:1: identifier main_test
memops-asm.c:20:11: punctuator (
memops-asm.c:20:12: keyword void
memops-asm.c:20:16: punctuator )
memops-asm.c:21:1: punctuator {
memops-asm.c:22:3: keyword struct
memops-asm.c:22:10: identifier A
memops-asm.c:22:12: identifier b
memops-asm.c:22:14: punctuator =
memops-asm.c:22:16: identifier a
memops-asm.c:22:17: punctuator ;
memops-asm.c:23:3: keyword struct
memops-asm.c:23:10: identifier A
memops-asm.c:23:12: identifier c
memops-asm.c:23:14: punctuator =
memops-asm.c:23:16: punctuator {
memops-asm.c:23:18: punctuator {
memops-asm.c:23:20: constant 'x'
memops-asm.c:23:24: punctuator }
memops-asm.c:23:26: punctuator }
memops-asm.c:23:27: punctuator ;
memops-asm.c:25:3: identifier inside_main
memops-asm.c:25:15: punctuator =
memops-asm.c:25:17: constant 1
memops-asm.c:25:18: punctuator ;
memops-asm.c:27:3: keyword if
memops-asm.c:27:6: punctuator (
memops-asm.c:27:7: identifier memcmp
memops-asm.c:27:14: punctuator (
memops-asm.c:27:15: identifier b
memops-asm.c:27:16: punctuator .
memops-asm.c:27:17: identifier c
memops-asm.c:27:18: punctuator ,
memops-asm.c:27:20: identifier x
memops-asm.c:27:21: punctuator ,
memops-asm.c:27:23: constant 32
memops-asm.c:27:25: punctuator )
memops-asm.c:27:27: punctuator ||
memops-asm.c:27:30: identifier c
memops-asm.c:27:31: punctuator .
memops-asm.c:27:32: identifier c
memops-asm.c:27:33: punctuator [
memops-asm.c:27:34: constant 0
memops-asm.c:27:35: punctuator ]
memops-asm.c:27:37: punctuator !=
memops-asm.c:27:40: constant 'x'
memops-asm.c:27:44: punctuator ||
memops-asm.c:27:47: identifier memcmp
memops-asm.c:27:54: punctuator (
memops-asm.c:27:55: identifier c
memops-asm.c:27:56: punctuator .
memops-asm.c:27:57: identifier c
memops-asm.c:27:59: punctuator +
memops-asm.c:27:61: constant 1
memops-asm.c:27:62: punctuator ,
memops-asm.c:27:64: identifier x
memops-asm.c:27:66: punctuator +
memops-asm.c:27:68: constant 32
memops-asm.c:27:70: punctuator ,
memops-asm.c:27:72: constant 31
memops-asm.c:27:74: punctuator )
memops-asm.c:27:75: punctuator )
memops-asm.c:28:5: identifier abort
memops-asm.c:28:11: punctuator (
memops-asm.c:28:12: punctuator )
memops-asm.c:28:13: punctuator ;
memops-asm.c:29:3: keyword if
memops-asm.c:29:6: punctuator (
memops-asm.c:29:7: identifier __builtin_memcpy
memops-asm.c:29:24: punctuator (
memops-asm.c:29:25: identifier y
memops-asm.c:29:26: punctuator ,
memops-asm.c:29:28: identifier x
memops-asm.c:29:29: punctuator ,
memops-asm.c:29:31: identifier i
memops-asm.c:29:32: punctuator )
memops-asm.c:29:34: punctuator !=
memops-asm.c:29:37: identifier y
memops-asm.c:29:39: punctuator ||
memops-asm.c:29:42: identifier memcmp
memops-asm.c:29:49: punctuator (
memops-asm.c:29:50: identifier x
memops-asm.c:29:51: punctuator ,
memops-asm.c:29:53: identifier y
memops-asm.c:29:54: punctuator ,
memops-asm.c:29:56: constant 64
memops-asm.c:29:58: punctuator )
memops-asm.c:29:59: punctuator )
memops-asm.c:30:5: identifier abort
memops-asm.c:30:11: punctuator (
memops-asm.c:30:12: punctuator )
memops-asm.c:30:13: punctuator ;
memops-asm.c:31:3: keyword if
memops-asm.c:31:6: punctuator (
memops-asm.c:31:7: identifier memcpy
memops-asm.c:31:14: punctuator (
memops-asm.c:31:15: identifier y
memops-asm.c:31:17: punctuator +
memops-asm.c:31:19: constant 6
memops-asm.c:31:20: punctuator ,
memops-asm.c:31:22: identifier x
memops-asm.c:31:23: punctuator ,
memops-asm.c:31:25: identifier j
memops-asm.c:31:26: punctuator )
memops-asm.c:31:28: punctuator !=
memops-asm.c:31:31: identifier y
memops-asm.c:31:33: punctuator +
memops-asm.c:31:35: constant 6
memops-asm.c:32:7: punctuator ||
memops-asm.c:32:10: identifier memcmp
memops-asm.c:32:17: punctuator (
memops-asm.c:32:18: identifier x
memops-asm.c:32:19: punctuator ,
memops-asm.c:32:21: identifier y
memops-asm.c:32:22: punctuator ,
memops-asm.c:32:24: constant 6
memops-asm.c:32:25: punctuator )
memops-asm.c:32:27: punctuator ||
memops-asm.c:32:30: identifier memcmp
memops-asm.c:32:37: punctuator (
memops-asm.c:32:38: identifier x
memops-asm.c:32:39: punctuator ,
memops-asm.c:32:41: identifier y
memops-asm.c:32:43: punctuator +
memops-asm.c:32:45: constant 6
memops-asm.c:32:46: punctuator ,
memops-asm.c:32:48: constant 58
memops-asm.c:32:50: punctuator )
memops-asm.c:32:51: punctuator )
memops-asm.c:33:5: identifier abort
memops-asm.c:33:11: punctuator (
memops-asm.c:33:12: punctuator )
memops-asm.c:33:13: punctuator ;
memops-asm.c:34:3: keyword if
memops-asm.c:34:6: punctuator (
memops-asm.c:34:7: identifier __builtin_memset
memops-asm.c:34:24: punctuator (
memops-asm.c:34:25: identifier y
memops-asm.c:34:27: punctuator +
memops-asm.c:34:29: constant 2
memops-asm.c:34:30: punctuator ,
memops-asm.c:34:32: constant 'X'
memops-asm.c:34:35: punctuator ,
memops-asm.c:34:37: identifier k
memops-asm.c:34:38: punctuator )
memops-asm.c:34:40: punctuator !=
memops-asm.c:34:43: identifier y
memops-asm.c:34:45: punctuator +
memops-asm.c:34:47: constant 2
memops-asm.c:35:7: punctuator ||
memops-asm.c:35:10: identifier memcmp
memops-asm.c:35:17: punctuator (
memops-asm.c:35:18: identifier y
memops-asm.c:35:19: punctuator ,
memops-asm.c:35:21: string-literal "foXXXXfoobar"
memops-asm.c:35:35: punctuator ,
memops-asm.c:35:37: constant 13
memops-asm.c:35:39: punctuator )
memops-asm.c:35:40: punctuator )
memops-asm.c:36:5: identifier abort
memops-asm.c:36:11: punctuator (
memops-asm.c:36:12: punctuator )
memops-asm.c:36:13: punctuator ;
memops-asm.c:37:3: identifier bcopy
memops-asm.c:37:9: punctuator (
memops-asm.c:37:10: identifier y
memops-asm.c:37:12: punctuator +
memops-asm.c:37:14: constant 1
memops-asm.c:37:15: punctuator ,
memops-asm.c:37:17: identifier y
memops-asm.c:37:19: punctuator +
memops-asm.c:37:21: constant 2
memops-asm.c:37:22: punctuator ,
memops-asm.c:37:24: constant 6
memops-asm.c:37:25: punctuator )
memops-asm.c:37:26: punctuator ;
memops-asm.c:38:3: keyword if
memops-asm.c:38:6: punctuator (
memops-asm.c:38:7: identifier memcmp
memops-asm.c:38:14: punctuator (
memops-asm.c:38:15: identifier y
memops-asm.c:38:16: punctuator ,
memops-asm.c:38:18: string-literal "fooXXXXfobar"
memops-asm.c:38:32: punctuator ,
memops-asm.c:38:34: constant 13
memops-asm.c:38:36: punctuator )
memops-asm.c:38:37: punctuator )
memops-asm.c:39:5: identifier abort
memops-asm.c:39:11: punctuator (
memops-asm.c:39:12: punctuator )
memops-asm.c:39:13: punctuator ;
memops-asm.c:40:3: identifier __builtin_bzero
memops-asm.c:40:19: punctuator (
memops-asm.c:40:20: identifier y
memops-asm.c:40:22: punctuator +
memops-asm.c:40:24: constant 4
memops-asm.c:40:25: punctuator ,
memops-asm.c:40:27: constant 2
memops-asm.c:40:28: punctuator )
memops-asm.c:40:29: punctuator ;
memops-asm.c:41:3: keyword if
memops-asm.c:41:6: punctuator (
memops-asm.c:41:7: identifier memcmp
memops-asm.c:41:14: punctuator (
memops-asm.c:41:15: identifier y
memops-asm.c:41:16: punctuator ,
memops-asm.c:41:18: string-literal "fooX\0\0Xfobar"
memops-asm.c:41:34: punctuator ,
memops-asm.c:41:36: constant 13
memops-asm.c:41:38: punctuator )
memops-asm.c:41:39: punctuator )
memops-asm.c:42:5: identifier abort
memops-asm.c:42:11: punctuator (
memops-asm.c:42:12: punctuator )
memops-asm.c:42:13: punctuator ;
memops-asm.c:43:1: punctuator }
