0
mzero5.c:2:1: keyword static
mzero5.c:2:8: keyword double
mzero5.c:2:15: identifier zero
mzero5.c:2:20: punctuator =
mzero5.c:2:22: constant 0.0
mzero5.c:2:25: punctuator ;
mzero5.c:4:1: keyword int
mzero5.c:5:1: identifier negzero_check
mzero5.c:5:15: punctuator (
mzero5.c:5:16: keyword double
mzero5.c:5:23: identifier d
mzero5.c:5:24: punctuator )
mzero5.c:6:1: punctuator {
mzero5.c:7:3: keyword if
mzero5.c:7:6: punctuator (
mzero5.c:7:7: identifier d
mzero5.c:7:9: punctuator ==
mzero5.c:7:12: constant 0
mzero5.c:7:13: punctuator )
mzero5.c:8:5: keyword return
mzero5.c:8:12: punctuator !
mzero5.c:8:13: punctuator !
mzero5.c:8:14: identifier memcmp
mzero5.c:8:21: punctuator (
mzero5.c:8:22: punctuator (
mzero5.c:8:23: keyword void
mzero5.c:8:28: punctuator *
mzero5.c:8:29: punctuator )
mzero5.c:8:30: punctuator &
mzero5.c:8:31: identifier zero
mzero5.c:8:35: punctuator ,
mzero5.c:8:37: punctuator (
mzero5.c:8:38: keyword void
mzero5.c:8:43: punctuator *
mzero5.c:8:44: punctuator )
mzero5.c:8:45: punctuator &
mzero5.c:8:46: identifier d
mzero5.c:8:47: punctuator ,
mzero5.c:8:49: keyword sizeof
mzero5.c:8:56: punctuator (
mzero5.c:8:57: keyword double
mzero5.c:8:63: punctuator )
mzero5.c:8:64: punctuator )
mzero5.c:8:65: punctuator ;
mzero5.c:9:3: keyword return
mzero5.c:9:10: constant 0
mzero5.c:9:11: punctuator ;
mzero5.c:10:1: punctuator }
mzero5.c:12:1: keyword int
mzero5.c:13:1: identifier sub
mzero5.c:13:5: punctuator (
mzero5.c:13:6: keyword double
mzero5.c:13:13: identifier d
mzero5.c:13:14: punctuator ,
mzero5.c:13:16: keyword double
mzero5.c:13:23: identifier e
mzero5.c:13:24: punctuator )
mzero5.c:14:1: punctuator {
mzero5.c:15:3: keyword if
mzero5.c:15:6: punctuator (
mzero5.c:15:7: identifier d
mzero5.c:15:9: punctuator ==
mzero5.c:15:12: constant 0.0
mzero5.c:15:16: punctuator &&
mzero5.c:15:19: identifier e
mzero5.c:15:21: punctuator ==
mzero5.c:15:24: constant 0.0
mzero5.c:16:7: punctuator &&
mzero5.c:16:10: identifier negzero_check
mzero5.c:16:24: punctuator (
mzero5.c:16:25: identifier d
mzero5.c:16:26: punctuator )
mzero5.c:16:28: punctuator ==
mzero5.c:16:31: constant 0
mzero5.c:16:33: punctuator &&
mzero5.c:16:36: identifier negzero_check
mzero5.c:16:50: punctuator (
mzero5.c:16:51: identifier e
mzero5.c:16:52: punctuator )
mzero5.c:16:54: punctuator ==
mzero5.c:16:57: constant 0
mzero5.c:16:58: punctuator )
mzero5.c:17:5: keyword return
mzero5.c:17:12: constant 1
mzero5.c:17:13: punctuator ;
mzero5.c:18:3: keyword else
mzero5.c:19:5: keyword return
mzero5.c:19:12: constant 0
mzero5.c:19:13: punctuator ;
mzero5.c:20:1: punctuator }
mzero5.c:22:1: keyword int
mzero5.c:23:1: identifier main
mzero5.c:23:6: punctuator (
mzero5.c:23:7: keyword void
mzero5.c:23:11: punctuator )
mzero5.c:24:1: punctuator {
mzero5.c:25:3: keyword double
mzero5.c:25:10: identifier minus_zero
mzero5.c:25:21: punctuator =
mzero5.c:25:23: punctuator -
mzero5.c:25:24: constant 0.0
mzero5.c:25:27: punctuator ;
mzero5.c:26:3: keyword if
mzero5.c:26:6: punctuator (
mzero5.c:26:7: identifier sub
mzero5.c:26:11: punctuator (
mzero5.c:26:12: identifier minus_zero
mzero5.c:26:22: punctuator ,
mzero5.c:26:24: constant 0
mzero5.c:26:25: punctuator )
mzero5.c:26:26: punctuator )
mzero5.c:27:5: identifier abort
mzero5.c:27:11: punctuator (
mzero5.c:27:12: punctuator )
mzero5.c:27:13: punctuator ;
mzero5.c:28:3: keyword return
mzero5.c:28:10: constant 0
mzero5.c:28:11: punctuator ;
mzero5.c:29:1: punctuator }
