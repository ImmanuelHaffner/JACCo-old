0
pr50310.c:3:1: keyword extern
pr50310.c:3:8: keyword void
pr50310.c:3:13: identifier abort
pr50310.c:3:19: punctuator (
pr50310.c:3:20: keyword void
pr50310.c:3:24: punctuator )
pr50310.c:3:25: punctuator ;
pr50310.c:4:1: keyword double
pr50310.c:4:8: identifier s1
pr50310.c:4:10: punctuator [
pr50310.c:4:11: constant 4
pr50310.c:4:12: punctuator ]
pr50310.c:4:13: punctuator ,
pr50310.c:4:15: identifier s2
pr50310.c:4:17: punctuator [
pr50310.c:4:18: constant 4
pr50310.c:4:19: punctuator ]
pr50310.c:4:20: punctuator ,
pr50310.c:4:22: identifier s3
pr50310.c:4:24: punctuator [
pr50310.c:4:25: constant 64
pr50310.c:4:27: punctuator ]
pr50310.c:4:28: punctuator ;
pr50310.c:6:1: keyword void
pr50310.c:7:1: identifier foo
pr50310.c:7:5: punctuator (
pr50310.c:7:6: keyword void
pr50310.c:7:10: punctuator )
pr50310.c:8:1: punctuator {
pr50310.c:9:3: keyword int
pr50310.c:9:7: identifier i
pr50310.c:9:8: punctuator ;
pr50310.c:10:3: keyword for
pr50310.c:10:7: punctuator (
pr50310.c:10:8: identifier i
pr50310.c:10:10: punctuator =
pr50310.c:10:12: constant 0
pr50310.c:10:13: punctuator ;
pr50310.c:10:15: identifier i
pr50310.c:10:17: punctuator <
pr50310.c:10:19: constant 4
pr50310.c:10:20: punctuator ;
pr50310.c:10:22: identifier i
pr50310.c:10:23: punctuator ++
pr50310.c:10:25: punctuator )
pr50310.c:11:5: identifier s3
pr50310.c:11:7: punctuator [
pr50310.c:11:8: constant 0
pr50310.c:11:10: punctuator *
pr50310.c:11:12: constant 4
pr50310.c:11:14: punctuator +
pr50310.c:11:16: identifier i
pr50310.c:11:17: punctuator ]
pr50310.c:11:19: punctuator =
pr50310.c:11:21: identifier __builtin_isgreater
pr50310.c:11:41: punctuator (
pr50310.c:11:42: identifier s1
pr50310.c:11:44: punctuator [
pr50310.c:11:45: identifier i
pr50310.c:11:46: punctuator ]
pr50310.c:11:47: punctuator ,
pr50310.c:11:49: identifier s2
pr50310.c:11:51: punctuator [
pr50310.c:11:52: identifier i
pr50310.c:11:53: punctuator ]
pr50310.c:11:54: punctuator )
pr50310.c:11:56: punctuator ?
pr50310.c:11:58: punctuator -
pr50310.c:11:59: constant 1.0
pr50310.c:11:63: punctuator :
pr50310.c:11:65: constant 0.0
pr50310.c:11:68: punctuator ;
pr50310.c:12:3: keyword for
pr50310.c:12:7: punctuator (
pr50310.c:12:8: identifier i
pr50310.c:12:10: punctuator =
pr50310.c:12:12: constant 0
pr50310.c:12:13: punctuator ;
pr50310.c:12:15: identifier i
pr50310.c:12:17: punctuator <
pr50310.c:12:19: constant 4
pr50310.c:12:20: punctuator ;
pr50310.c:12:22: identifier i
pr50310.c:12:23: punctuator ++
pr50310.c:12:25: punctuator )
pr50310.c:13:5: identifier s3
pr50310.c:13:7: punctuator [
pr50310.c:13:8: constant 1
pr50310.c:13:10: punctuator *
pr50310.c:13:12: constant 4
pr50310.c:13:14: punctuator +
pr50310.c:13:16: identifier i
pr50310.c:13:17: punctuator ]
pr50310.c:13:19: punctuator =
pr50310.c:13:21: punctuator (
pr50310.c:13:22: punctuator !
pr50310.c:13:23: identifier __builtin_isgreater
pr50310.c:13:43: punctuator (
pr50310.c:13:44: identifier s1
pr50310.c:13:46: punctuator [
pr50310.c:13:47: identifier i
pr50310.c:13:48: punctuator ]
pr50310.c:13:49: punctuator ,
pr50310.c:13:51: identifier s2
pr50310.c:13:53: punctuator [
pr50310.c:13:54: identifier i
pr50310.c:13:55: punctuator ]
pr50310.c:13:56: punctuator )
pr50310.c:13:57: punctuator )
pr50310.c:13:59: punctuator ?
pr50310.c:13:61: punctuator -
pr50310.c:13:62: constant 1.0
pr50310.c:13:66: punctuator :
pr50310.c:13:68: constant 0.0
pr50310.c:13:71: punctuator ;
pr50310.c:14:3: keyword for
pr50310.c:14:7: punctuator (
pr50310.c:14:8: identifier i
pr50310.c:14:10: punctuator =
pr50310.c:14:12: constant 0
pr50310.c:14:13: punctuator ;
pr50310.c:14:15: identifier i
pr50310.c:14:17: punctuator <
pr50310.c:14:19: constant 4
pr50310.c:14:20: punctuator ;
pr50310.c:14:22: identifier i
pr50310.c:14:23: punctuator ++
pr50310.c:14:25: punctuator )
pr50310.c:15:5: identifier s3
pr50310.c:15:7: punctuator [
pr50310.c:15:8: constant 2
pr50310.c:15:10: punctuator *
pr50310.c:15:12: constant 4
pr50310.c:15:14: punctuator +
pr50310.c:15:16: identifier i
pr50310.c:15:17: punctuator ]
pr50310.c:15:19: punctuator =
pr50310.c:15:21: identifier __builtin_isgreaterequal
pr50310.c:15:46: punctuator (
pr50310.c:15:47: identifier s1
pr50310.c:15:49: punctuator [
pr50310.c:15:50: identifier i
pr50310.c:15:51: punctuator ]
pr50310.c:15:52: punctuator ,
pr50310.c:15:54: identifier s2
pr50310.c:15:56: punctuator [
pr50310.c:15:57: identifier i
pr50310.c:15:58: punctuator ]
pr50310.c:15:59: punctuator )
pr50310.c:15:61: punctuator ?
pr50310.c:15:63: punctuator -
pr50310.c:15:64: constant 1.0
pr50310.c:15:68: punctuator :
pr50310.c:15:70: constant 0.0
pr50310.c:15:73: punctuator ;
pr50310.c:16:3: keyword for
pr50310.c:16:7: punctuator (
pr50310.c:16:8: identifier i
pr50310.c:16:10: punctuator =
pr50310.c:16:12: constant 0
pr50310.c:16:13: punctuator ;
pr50310.c:16:15: identifier i
pr50310.c:16:17: punctuator <
pr50310.c:16:19: constant 4
pr50310.c:16:20: punctuator ;
pr50310.c:16:22: identifier i
pr50310.c:16:23: punctuator ++
pr50310.c:16:25: punctuator )
pr50310.c:17:5: identifier s3
pr50310.c:17:7: punctuator [
pr50310.c:17:8: constant 3
pr50310.c:17:10: punctuator *
pr50310.c:17:12: constant 4
pr50310.c:17:14: punctuator +
pr50310.c:17:16: identifier i
pr50310.c:17:17: punctuator ]
pr50310.c:17:19: punctuator =
pr50310.c:17:21: punctuator (
pr50310.c:17:22: punctuator !
pr50310.c:17:23: identifier __builtin_isgreaterequal
pr50310.c:17:48: punctuator (
pr50310.c:17:49: identifier s1
pr50310.c:17:51: punctuator [
pr50310.c:17:52: identifier i
pr50310.c:17:53: punctuator ]
pr50310.c:17:54: punctuator ,
pr50310.c:17:56: identifier s2
pr50310.c:17:58: punctuator [
pr50310.c:17:59: identifier i
pr50310.c:17:60: punctuator ]
pr50310.c:17:61: punctuator )
pr50310.c:17:62: punctuator )
pr50310.c:17:64: punctuator ?
pr50310.c:17:66: punctuator -
pr50310.c:17:67: constant 1.0
pr50310.c:17:71: punctuator :
pr50310.c:17:73: constant 0.0
pr50310.c:17:76: punctuator ;
pr50310.c:18:3: keyword for
pr50310.c:18:7: punctuator (
pr50310.c:18:8: identifier i
pr50310.c:18:10: punctuator =
pr50310.c:18:12: constant 0
pr50310.c:18:13: punctuator ;
pr50310.c:18:15: identifier i
pr50310.c:18:17: punctuator <
pr50310.c:18:19: constant 4
pr50310.c:18:20: punctuator ;
pr50310.c:18:22: identifier i
pr50310.c:18:23: punctuator ++
pr50310.c:18:25: punctuator )
pr50310.c:19:5: identifier s3
pr50310.c:19:7: punctuator [
pr50310.c:19:8: constant 4
pr50310.c:19:10: punctuator *
pr50310.c:19:12: constant 4
pr50310.c:19:14: punctuator +
pr50310.c:19:16: identifier i
pr50310.c:19:17: punctuator ]
pr50310.c:19:19: punctuator =
pr50310.c:19:21: identifier __builtin_isless
pr50310.c:19:38: punctuator (
pr50310.c:19:39: identifier s1
pr50310.c:19:41: punctuator [
pr50310.c:19:42: identifier i
pr50310.c:19:43: punctuator ]
pr50310.c:19:44: punctuator ,
pr50310.c:19:46: identifier s2
pr50310.c:19:48: punctuator [
pr50310.c:19:49: identifier i
pr50310.c:19:50: punctuator ]
pr50310.c:19:51: punctuator )
pr50310.c:19:53: punctuator ?
pr50310.c:19:55: punctuator -
pr50310.c:19:56: constant 1.0
pr50310.c:19:60: punctuator :
pr50310.c:19:62: constant 0.0
pr50310.c:19:65: punctuator ;
pr50310.c:20:3: keyword for
pr50310.c:20:7: punctuator (
pr50310.c:20:8: identifier i
pr50310.c:20:10: punctuator =
pr50310.c:20:12: constant 0
pr50310.c:20:13: punctuator ;
pr50310.c:20:15: identifier i
pr50310.c:20:17: punctuator <
pr50310.c:20:19: constant 4
pr50310.c:20:20: punctuator ;
pr50310.c:20:22: identifier i
pr50310.c:20:23: punctuator ++
pr50310.c:20:25: punctuator )
pr50310.c:21:5: identifier s3
pr50310.c:21:7: punctuator [
pr50310.c:21:8: constant 5
pr50310.c:21:10: punctuator *
pr50310.c:21:12: constant 4
pr50310.c:21:14: punctuator +
pr50310.c:21:16: identifier i
pr50310.c:21:17: punctuator ]
pr50310.c:21:19: punctuator =
pr50310.c:21:21: punctuator (
pr50310.c:21:22: punctuator !
pr50310.c:21:23: identifier __builtin_isless
pr50310.c:21:40: punctuator (
pr50310.c:21:41: identifier s1
pr50310.c:21:43: punctuator [
pr50310.c:21:44: identifier i
pr50310.c:21:45: punctuator ]
pr50310.c:21:46: punctuator ,
pr50310.c:21:48: identifier s2
pr50310.c:21:50: punctuator [
pr50310.c:21:51: identifier i
pr50310.c:21:52: punctuator ]
pr50310.c:21:53: punctuator )
pr50310.c:21:54: punctuator )
pr50310.c:21:56: punctuator ?
pr50310.c:21:58: punctuator -
pr50310.c:21:59: constant 1.0
pr50310.c:21:63: punctuator :
pr50310.c:21:65: constant 0.0
pr50310.c:21:68: punctuator ;
pr50310.c:22:3: keyword for
pr50310.c:22:7: punctuator (
pr50310.c:22:8: identifier i
pr50310.c:22:10: punctuator =
pr50310.c:22:12: constant 0
pr50310.c:22:13: punctuator ;
pr50310.c:22:15: identifier i
pr50310.c:22:17: punctuator <
pr50310.c:22:19: constant 4
pr50310.c:22:20: punctuator ;
pr50310.c:22:22: identifier i
pr50310.c:22:23: punctuator ++
pr50310.c:22:25: punctuator )
pr50310.c:23:5: identifier s3
pr50310.c:23:7: punctuator [
pr50310.c:23:8: constant 6
pr50310.c:23:10: punctuator *
pr50310.c:23:12: constant 4
pr50310.c:23:14: punctuator +
pr50310.c:23:16: identifier i
pr50310.c:23:17: punctuator ]
pr50310.c:23:19: punctuator =
pr50310.c:23:21: identifier __builtin_islessequal
pr50310.c:23:43: punctuator (
pr50310.c:23:44: identifier s1
pr50310.c:23:46: punctuator [
pr50310.c:23:47: identifier i
pr50310.c:23:48: punctuator ]
pr50310.c:23:49: punctuator ,
pr50310.c:23:51: identifier s2
pr50310.c:23:53: punctuator [
pr50310.c:23:54: identifier i
pr50310.c:23:55: punctuator ]
pr50310.c:23:56: punctuator )
pr50310.c:23:58: punctuator ?
pr50310.c:23:60: punctuator -
pr50310.c:23:61: constant 1.0
pr50310.c:23:65: punctuator :
pr50310.c:23:67: constant 0.0
pr50310.c:23:70: punctuator ;
pr50310.c:24:3: keyword for
pr50310.c:24:7: punctuator (
pr50310.c:24:8: identifier i
pr50310.c:24:10: punctuator =
pr50310.c:24:12: constant 0
pr50310.c:24:13: punctuator ;
pr50310.c:24:15: identifier i
pr50310.c:24:17: punctuator <
pr50310.c:24:19: constant 4
pr50310.c:24:20: punctuator ;
pr50310.c:24:22: identifier i
pr50310.c:24:23: punctuator ++
pr50310.c:24:25: punctuator )
pr50310.c:25:5: identifier s3
pr50310.c:25:7: punctuator [
pr50310.c:25:8: constant 7
pr50310.c:25:10: punctuator *
pr50310.c:25:12: constant 4
pr50310.c:25:14: punctuator +
pr50310.c:25:16: identifier i
pr50310.c:25:17: punctuator ]
pr50310.c:25:19: punctuator =
pr50310.c:25:21: punctuator (
pr50310.c:25:22: punctuator !
pr50310.c:25:23: identifier __builtin_islessequal
pr50310.c:25:45: punctuator (
pr50310.c:25:46: identifier s1
pr50310.c:25:48: punctuator [
pr50310.c:25:49: identifier i
pr50310.c:25:50: punctuator ]
pr50310.c:25:51: punctuator ,
pr50310.c:25:53: identifier s2
pr50310.c:25:55: punctuator [
pr50310.c:25:56: identifier i
pr50310.c:25:57: punctuator ]
pr50310.c:25:58: punctuator )
pr50310.c:25:59: punctuator )
pr50310.c:25:61: punctuator ?
pr50310.c:25:63: punctuator -
pr50310.c:25:64: constant 1.0
pr50310.c:25:68: punctuator :
pr50310.c:25:70: constant 0.0
pr50310.c:25:73: punctuator ;
pr50310.c:26:3: keyword for
pr50310.c:26:7: punctuator (
pr50310.c:26:8: identifier i
pr50310.c:26:10: punctuator =
pr50310.c:26:12: constant 0
pr50310.c:26:13: punctuator ;
pr50310.c:26:15: identifier i
pr50310.c:26:17: punctuator <
pr50310.c:26:19: constant 4
pr50310.c:26:20: punctuator ;
pr50310.c:26:22: identifier i
pr50310.c:26:23: punctuator ++
pr50310.c:26:25: punctuator )
pr50310.c:27:5: identifier s3
pr50310.c:27:7: punctuator [
pr50310.c:27:8: constant 8
pr50310.c:27:10: punctuator *
pr50310.c:27:12: constant 4
pr50310.c:27:14: punctuator +
pr50310.c:27:16: identifier i
pr50310.c:27:17: punctuator ]
pr50310.c:27:19: punctuator =
pr50310.c:27:21: identifier __builtin_islessgreater
pr50310.c:27:45: punctuator (
pr50310.c:27:46: identifier s1
pr50310.c:27:48: punctuator [
pr50310.c:27:49: identifier i
pr50310.c:27:50: punctuator ]
pr50310.c:27:51: punctuator ,
pr50310.c:27:53: identifier s2
pr50310.c:27:55: punctuator [
pr50310.c:27:56: identifier i
pr50310.c:27:57: punctuator ]
pr50310.c:27:58: punctuator )
pr50310.c:27:60: punctuator ?
pr50310.c:27:62: punctuator -
pr50310.c:27:63: constant 1.0
pr50310.c:27:67: punctuator :
pr50310.c:27:69: constant 0.0
pr50310.c:27:72: punctuator ;
pr50310.c:28:3: keyword for
pr50310.c:28:7: punctuator (
pr50310.c:28:8: identifier i
pr50310.c:28:10: punctuator =
pr50310.c:28:12: constant 0
pr50310.c:28:13: punctuator ;
pr50310.c:28:15: identifier i
pr50310.c:28:17: punctuator <
pr50310.c:28:19: constant 4
pr50310.c:28:20: punctuator ;
pr50310.c:28:22: identifier i
pr50310.c:28:23: punctuator ++
pr50310.c:28:25: punctuator )
pr50310.c:29:5: identifier s3
pr50310.c:29:7: punctuator [
pr50310.c:29:8: constant 9
pr50310.c:29:10: punctuator *
pr50310.c:29:12: constant 4
pr50310.c:29:14: punctuator +
pr50310.c:29:16: identifier i
pr50310.c:29:17: punctuator ]
pr50310.c:29:19: punctuator =
pr50310.c:29:21: punctuator (
pr50310.c:29:22: punctuator !
pr50310.c:29:23: identifier __builtin_islessgreater
pr50310.c:29:47: punctuator (
pr50310.c:29:48: identifier s1
pr50310.c:29:50: punctuator [
pr50310.c:29:51: identifier i
pr50310.c:29:52: punctuator ]
pr50310.c:29:53: punctuator ,
pr50310.c:29:55: identifier s2
pr50310.c:29:57: punctuator [
pr50310.c:29:58: identifier i
pr50310.c:29:59: punctuator ]
pr50310.c:29:60: punctuator )
pr50310.c:29:61: punctuator )
pr50310.c:29:63: punctuator ?
pr50310.c:29:65: punctuator -
pr50310.c:29:66: constant 1.0
pr50310.c:29:70: punctuator :
pr50310.c:29:72: constant 0.0
pr50310.c:29:75: punctuator ;
pr50310.c:30:3: keyword for
pr50310.c:30:7: punctuator (
pr50310.c:30:8: identifier i
pr50310.c:30:10: punctuator =
pr50310.c:30:12: constant 0
pr50310.c:30:13: punctuator ;
pr50310.c:30:15: identifier i
pr50310.c:30:17: punctuator <
pr50310.c:30:19: constant 4
pr50310.c:30:20: punctuator ;
pr50310.c:30:22: identifier i
pr50310.c:30:23: punctuator ++
pr50310.c:30:25: punctuator )
pr50310.c:31:5: identifier s3
pr50310.c:31:7: punctuator [
pr50310.c:31:8: constant 10
pr50310.c:31:11: punctuator *
pr50310.c:31:13: constant 4
pr50310.c:31:15: punctuator +
pr50310.c:31:17: identifier i
pr50310.c:31:18: punctuator ]
pr50310.c:31:20: punctuator =
pr50310.c:31:22: identifier __builtin_isunordered
pr50310.c:31:44: punctuator (
pr50310.c:31:45: identifier s1
pr50310.c:31:47: punctuator [
pr50310.c:31:48: identifier i
pr50310.c:31:49: punctuator ]
pr50310.c:31:50: punctuator ,
pr50310.c:31:52: identifier s2
pr50310.c:31:54: punctuator [
pr50310.c:31:55: identifier i
pr50310.c:31:56: punctuator ]
pr50310.c:31:57: punctuator )
pr50310.c:31:59: punctuator ?
pr50310.c:31:61: punctuator -
pr50310.c:31:62: constant 1.0
pr50310.c:31:66: punctuator :
pr50310.c:31:68: constant 0.0
pr50310.c:31:71: punctuator ;
pr50310.c:32:3: keyword for
pr50310.c:32:7: punctuator (
pr50310.c:32:8: identifier i
pr50310.c:32:10: punctuator =
pr50310.c:32:12: constant 0
pr50310.c:32:13: punctuator ;
pr50310.c:32:15: identifier i
pr50310.c:32:17: punctuator <
pr50310.c:32:19: constant 4
pr50310.c:32:20: punctuator ;
pr50310.c:32:22: identifier i
pr50310.c:32:23: punctuator ++
pr50310.c:32:25: punctuator )
pr50310.c:33:5: identifier s3
pr50310.c:33:7: punctuator [
pr50310.c:33:8: constant 11
pr50310.c:33:11: punctuator *
pr50310.c:33:13: constant 4
pr50310.c:33:15: punctuator +
pr50310.c:33:17: identifier i
pr50310.c:33:18: punctuator ]
pr50310.c:33:20: punctuator =
pr50310.c:33:22: punctuator (
pr50310.c:33:23: punctuator !
pr50310.c:33:24: identifier __builtin_isunordered
pr50310.c:33:46: punctuator (
pr50310.c:33:47: identifier s1
pr50310.c:33:49: punctuator [
pr50310.c:33:50: identifier i
pr50310.c:33:51: punctuator ]
pr50310.c:33:52: punctuator ,
pr50310.c:33:54: identifier s2
pr50310.c:33:56: punctuator [
pr50310.c:33:57: identifier i
pr50310.c:33:58: punctuator ]
pr50310.c:33:59: punctuator )
pr50310.c:33:60: punctuator )
pr50310.c:33:62: punctuator ?
pr50310.c:33:64: punctuator -
pr50310.c:33:65: constant 1.0
pr50310.c:33:69: punctuator :
pr50310.c:33:71: constant 0.0
pr50310.c:33:74: punctuator ;
pr50310.c:34:3: keyword for
pr50310.c:34:7: punctuator (
pr50310.c:34:8: identifier i
pr50310.c:34:10: punctuator =
pr50310.c:34:12: constant 0
pr50310.c:34:13: punctuator ;
pr50310.c:34:15: identifier i
pr50310.c:34:17: punctuator <
pr50310.c:34:19: constant 4
pr50310.c:34:20: punctuator ;
pr50310.c:34:22: identifier i
pr50310.c:34:23: punctuator ++
pr50310.c:34:25: punctuator )
pr50310.c:35:5: identifier s3
pr50310.c:35:7: punctuator [
pr50310.c:35:8: constant 12
pr50310.c:35:11: punctuator *
pr50310.c:35:13: constant 4
pr50310.c:35:15: punctuator +
pr50310.c:35:17: identifier i
pr50310.c:35:18: punctuator ]
pr50310.c:35:20: punctuator =
pr50310.c:35:22: identifier s1
pr50310.c:35:24: punctuator [
pr50310.c:35:25: identifier i
pr50310.c:35:26: punctuator ]
pr50310.c:35:28: punctuator >
pr50310.c:35:30: identifier s2
pr50310.c:35:32: punctuator [
pr50310.c:35:33: identifier i
pr50310.c:35:34: punctuator ]
pr50310.c:35:36: punctuator ?
pr50310.c:35:38: punctuator -
pr50310.c:35:39: constant 1.0
pr50310.c:35:43: punctuator :
pr50310.c:35:45: constant 0.0
pr50310.c:35:48: punctuator ;
pr50310.c:36:3: keyword for
pr50310.c:36:7: punctuator (
pr50310.c:36:8: identifier i
pr50310.c:36:10: punctuator =
pr50310.c:36:12: constant 0
pr50310.c:36:13: punctuator ;
pr50310.c:36:15: identifier i
pr50310.c:36:17: punctuator <
pr50310.c:36:19: constant 4
pr50310.c:36:20: punctuator ;
pr50310.c:36:22: identifier i
pr50310.c:36:23: punctuator ++
pr50310.c:36:25: punctuator )
pr50310.c:37:5: identifier s3
pr50310.c:37:7: punctuator [
pr50310.c:37:8: constant 13
pr50310.c:37:11: punctuator *
pr50310.c:37:13: constant 4
pr50310.c:37:15: punctuator +
pr50310.c:37:17: identifier i
pr50310.c:37:18: punctuator ]
pr50310.c:37:20: punctuator =
pr50310.c:37:22: identifier s1
pr50310.c:37:24: punctuator [
pr50310.c:37:25: identifier i
pr50310.c:37:26: punctuator ]
pr50310.c:37:28: punctuator <=
pr50310.c:37:31: identifier s2
pr50310.c:37:33: punctuator [
pr50310.c:37:34: identifier i
pr50310.c:37:35: punctuator ]
pr50310.c:37:37: punctuator ?
pr50310.c:37:39: punctuator -
pr50310.c:37:40: constant 1.0
pr50310.c:37:44: punctuator :
pr50310.c:37:46: constant 0.0
pr50310.c:37:49: punctuator ;
pr50310.c:38:3: keyword for
pr50310.c:38:7: punctuator (
pr50310.c:38:8: identifier i
pr50310.c:38:10: punctuator =
pr50310.c:38:12: constant 0
pr50310.c:38:13: punctuator ;
pr50310.c:38:15: identifier i
pr50310.c:38:17: punctuator <
pr50310.c:38:19: constant 4
pr50310.c:38:20: punctuator ;
pr50310.c:38:22: identifier i
pr50310.c:38:23: punctuator ++
pr50310.c:38:25: punctuator )
pr50310.c:39:5: identifier s3
pr50310.c:39:7: punctuator [
pr50310.c:39:8: constant 14
pr50310.c:39:11: punctuator *
pr50310.c:39:13: constant 4
pr50310.c:39:15: punctuator +
pr50310.c:39:17: identifier i
pr50310.c:39:18: punctuator ]
pr50310.c:39:20: punctuator =
pr50310.c:39:22: identifier s1
pr50310.c:39:24: punctuator [
pr50310.c:39:25: identifier i
pr50310.c:39:26: punctuator ]
pr50310.c:39:28: punctuator <
pr50310.c:39:30: identifier s2
pr50310.c:39:32: punctuator [
pr50310.c:39:33: identifier i
pr50310.c:39:34: punctuator ]
pr50310.c:39:36: punctuator ?
pr50310.c:39:38: punctuator -
pr50310.c:39:39: constant 1.0
pr50310.c:39:43: punctuator :
pr50310.c:39:45: constant 0.0
pr50310.c:39:48: punctuator ;
pr50310.c:40:3: keyword for
pr50310.c:40:7: punctuator (
pr50310.c:40:8: identifier i
pr50310.c:40:10: punctuator =
pr50310.c:40:12: constant 0
pr50310.c:40:13: punctuator ;
pr50310.c:40:15: identifier i
pr50310.c:40:17: punctuator <
pr50310.c:40:19: constant 4
pr50310.c:40:20: punctuator ;
pr50310.c:40:22: identifier i
pr50310.c:40:23: punctuator ++
pr50310.c:40:25: punctuator )
pr50310.c:41:5: identifier s3
pr50310.c:41:7: punctuator [
pr50310.c:41:8: constant 15
pr50310.c:41:11: punctuator *
pr50310.c:41:13: constant 4
pr50310.c:41:15: punctuator +
pr50310.c:41:17: identifier i
pr50310.c:41:18: punctuator ]
pr50310.c:41:20: punctuator =
pr50310.c:41:22: identifier s1
pr50310.c:41:24: punctuator [
pr50310.c:41:25: identifier i
pr50310.c:41:26: punctuator ]
pr50310.c:41:28: punctuator >=
pr50310.c:41:31: identifier s2
pr50310.c:41:33: punctuator [
pr50310.c:41:34: identifier i
pr50310.c:41:35: punctuator ]
pr50310.c:41:37: punctuator ?
pr50310.c:41:39: punctuator -
pr50310.c:41:40: constant 1.0
pr50310.c:41:44: punctuator :
pr50310.c:41:46: constant 0.0
pr50310.c:41:49: punctuator ;
pr50310.c:42:1: punctuator }
pr50310.c:44:1: keyword int
pr50310.c:45:1: identifier main
pr50310.c:45:6: punctuator (
pr50310.c:45:7: punctuator )
pr50310.c:46:1: punctuator {
pr50310.c:47:3: keyword int
pr50310.c:47:7: identifier i
pr50310.c:47:8: punctuator ;
pr50310.c:48:3: identifier s1
pr50310.c:48:5: punctuator [
pr50310.c:48:6: constant 0
pr50310.c:48:7: punctuator ]
pr50310.c:48:9: punctuator =
pr50310.c:48:11: constant 5.0
pr50310.c:48:14: punctuator ;
pr50310.c:49:3: identifier s1
pr50310.c:49:5: punctuator [
pr50310.c:49:6: constant 1
pr50310.c:49:7: punctuator ]
pr50310.c:49:9: punctuator =
pr50310.c:49:11: constant 6.0
pr50310.c:49:14: punctuator ;
pr50310.c:50:3: identifier s1
pr50310.c:50:5: punctuator [
pr50310.c:50:6: constant 2
pr50310.c:50:7: punctuator ]
pr50310.c:50:9: punctuator =
pr50310.c:50:11: constant 5.0
pr50310.c:50:14: punctuator ;
pr50310.c:51:3: identifier s1
pr50310.c:51:5: punctuator [
pr50310.c:51:6: constant 3
pr50310.c:51:7: punctuator ]
pr50310.c:51:9: punctuator =
pr50310.c:51:11: identifier __builtin_nan
pr50310.c:51:25: punctuator (
pr50310.c:51:26: string-literal ""
pr50310.c:51:28: punctuator )
pr50310.c:51:29: punctuator ;
pr50310.c:52:3: identifier s2
pr50310.c:52:5: punctuator [
pr50310.c:52:6: constant 0
pr50310.c:52:7: punctuator ]
pr50310.c:52:9: punctuator =
pr50310.c:52:11: constant 6.0
pr50310.c:52:14: punctuator ;
pr50310.c:53:3: identifier s2
pr50310.c:53:5: punctuator [
pr50310.c:53:6: constant 1
pr50310.c:53:7: punctuator ]
pr50310.c:53:9: punctuator =
pr50310.c:53:11: constant 5.0
pr50310.c:53:14: punctuator ;
pr50310.c:54:3: identifier s2
pr50310.c:54:5: punctuator [
pr50310.c:54:6: constant 2
pr50310.c:54:7: punctuator ]
pr50310.c:54:9: punctuator =
pr50310.c:54:11: constant 5.0
pr50310.c:54:14: punctuator ;
pr50310.c:55:3: identifier s2
pr50310.c:55:5: punctuator [
pr50310.c:55:6: constant 3
pr50310.c:55:7: punctuator ]
pr50310.c:55:9: punctuator =
pr50310.c:55:11: constant 5.0
pr50310.c:55:14: punctuator ;
pr50310.c:56:3: identifier asm
pr50310.c:56:7: keyword volatile
pr50310.c:56:16: punctuator (
pr50310.c:56:17: string-literal ""
pr50310.c:56:20: punctuator :
pr50310.c:56:22: punctuator :
pr50310.c:56:24: punctuator :
pr50310.c:56:26: string-literal "memory"
pr50310.c:56:34: punctuator )
pr50310.c:56:35: punctuator ;
pr50310.c:57:3: identifier foo
pr50310.c:57:7: punctuator (
pr50310.c:57:8: punctuator )
pr50310.c:57:9: punctuator ;
pr50310.c:58:3: identifier asm
pr50310.c:58:7: keyword volatile
pr50310.c:58:16: punctuator (
pr50310.c:58:17: string-literal ""
pr50310.c:58:20: punctuator :
pr50310.c:58:22: punctuator :
pr50310.c:58:24: punctuator :
pr50310.c:58:26: string-literal "memory"
pr50310.c:58:34: punctuator )
pr50310.c:58:35: punctuator ;
pr50310.c:59:3: keyword for
pr50310.c:59:7: punctuator (
pr50310.c:59:8: identifier i
pr50310.c:59:10: punctuator =
pr50310.c:59:12: constant 0
pr50310.c:59:13: punctuator ;
pr50310.c:59:15: identifier i
pr50310.c:59:17: punctuator <
pr50310.c:59:19: constant 16
pr50310.c:59:22: punctuator *
pr50310.c:59:24: constant 4
pr50310.c:59:25: punctuator ;
pr50310.c:59:27: identifier i
pr50310.c:59:28: punctuator ++
pr50310.c:59:30: punctuator )
pr50310.c:60:5: keyword if
pr50310.c:60:8: punctuator (
pr50310.c:60:9: identifier i
pr50310.c:60:11: punctuator >=
pr50310.c:60:14: constant 12
pr50310.c:60:17: punctuator *
pr50310.c:60:19: constant 4
pr50310.c:60:21: punctuator &&
pr50310.c:60:24: punctuator (
pr50310.c:60:25: identifier i
pr50310.c:60:27: punctuator &
pr50310.c:60:29: constant 3
pr50310.c:60:30: punctuator )
pr50310.c:60:32: punctuator ==
pr50310.c:60:35: constant 3
pr50310.c:60:36: punctuator )
pr50310.c:61:7: punctuator {
pr50310.c:62:2: keyword if
pr50310.c:62:5: punctuator (
pr50310.c:62:6: identifier s3
pr50310.c:62:8: punctuator [
pr50310.c:62:9: identifier i
pr50310.c:62:10: punctuator ]
pr50310.c:62:12: punctuator !=
pr50310.c:62:15: constant 0.0
pr50310.c:62:18: punctuator )
pr50310.c:62:20: identifier abort
pr50310.c:62:26: punctuator (
pr50310.c:62:27: punctuator )
pr50310.c:62:28: punctuator ;
pr50310.c:63:7: punctuator }
pr50310.c:64:5: keyword else
pr50310.c:65:7: punctuator {
pr50310.c:66:9: keyword static
pr50310.c:66:16: keyword int
pr50310.c:66:20: identifier masks
pr50310.c:66:25: punctuator [
pr50310.c:66:26: punctuator ]
pr50310.c:66:28: punctuator =
pr50310.c:66:30: punctuator {
pr50310.c:66:32: constant 2
pr50310.c:66:33: punctuator ,
pr50310.c:66:35: constant 2
pr50310.c:66:36: punctuator |
pr50310.c:66:37: constant 4
pr50310.c:66:38: punctuator ,
pr50310.c:66:40: constant 1
pr50310.c:66:41: punctuator ,
pr50310.c:66:43: constant 1
pr50310.c:66:44: punctuator |
pr50310.c:66:45: constant 4
pr50310.c:66:46: punctuator ,
pr50310.c:66:48: constant 1
pr50310.c:66:49: punctuator |
pr50310.c:66:50: constant 2
pr50310.c:66:51: punctuator ,
pr50310.c:66:53: constant 8
pr50310.c:66:54: punctuator ,
pr50310.c:66:56: constant 2
pr50310.c:66:57: punctuator ,
pr50310.c:66:59: constant 1
pr50310.c:66:61: punctuator }
pr50310.c:66:62: punctuator ;
pr50310.c:67:9: keyword if
pr50310.c:67:12: punctuator (
pr50310.c:67:13: identifier s3
pr50310.c:67:15: punctuator [
pr50310.c:67:16: identifier i
pr50310.c:67:17: punctuator ]
pr50310.c:68:6: punctuator !=
pr50310.c:68:9: punctuator (
pr50310.c:68:10: punctuator (
pr50310.c:68:11: punctuator (
pr50310.c:68:12: constant 1
pr50310.c:68:14: punctuator <<
pr50310.c:68:17: punctuator (
pr50310.c:68:18: identifier i
pr50310.c:68:20: punctuator &
pr50310.c:68:22: constant 3
pr50310.c:68:23: punctuator )
pr50310.c:68:24: punctuator )
pr50310.c:68:26: punctuator &
pr50310.c:68:28: punctuator (
pr50310.c:68:29: punctuator (
pr50310.c:68:30: identifier i
pr50310.c:68:32: punctuator &
pr50310.c:68:34: constant 4
pr50310.c:68:35: punctuator )
pr50310.c:68:37: punctuator ?
pr50310.c:68:39: punctuator ~
pr50310.c:68:40: identifier masks
pr50310.c:68:45: punctuator [
pr50310.c:68:46: identifier i
pr50310.c:68:48: punctuator /
pr50310.c:68:50: constant 8
pr50310.c:68:51: punctuator ]
pr50310.c:68:53: punctuator :
pr50310.c:68:55: identifier masks
pr50310.c:68:60: punctuator [
pr50310.c:68:61: identifier i
pr50310.c:68:63: punctuator /
pr50310.c:68:65: constant 8
pr50310.c:68:66: punctuator ]
pr50310.c:68:67: punctuator )
pr50310.c:68:68: punctuator )
pr50310.c:69:3: punctuator ?
pr50310.c:69:5: punctuator -
pr50310.c:69:6: constant 1.0
pr50310.c:69:10: punctuator :
pr50310.c:69:12: constant 0.0
pr50310.c:69:15: punctuator )
pr50310.c:69:16: punctuator )
pr50310.c:70:4: identifier abort
pr50310.c:70:10: punctuator (
pr50310.c:70:11: punctuator )
pr50310.c:70:12: punctuator ;
pr50310.c:71:7: punctuator }
pr50310.c:72:3: keyword return
pr50310.c:72:10: constant 0
pr50310.c:72:11: punctuator ;
pr50310.c:73:1: punctuator }
