0
981001-1.c:3:1 keyword unsigned
981001-1.c:3:10 keyword long
981001-1.c:3:15 identifier flg
981001-1.c:3:19 punctuator =
981001-1.c:3:21 constant 0
981001-1.c:3:22 punctuator ;
981001-1.c:5:1 keyword long
981001-1.c:5:6 identifier sub
981001-1.c:5:10 punctuator (
981001-1.c:5:11 keyword int
981001-1.c:5:15 identifier n
981001-1.c:5:16 punctuator )
981001-1.c:6:1 punctuator {
981001-1.c:7:3 keyword int
981001-1.c:7:7 identifier a
981001-1.c:7:8 punctuator ,
981001-1.c:7:10 identifier b
981001-1.c:7:12 punctuator ;
981001-1.c:9:3 keyword if
981001-1.c:9:6 punctuator (
981001-1.c:9:7 identifier n
981001-1.c:9:9 punctuator >=
981001-1.c:9:12 constant 2
981001-1.c:9:13 punctuator )
981001-1.c:10:5 punctuator {
981001-1.c:11:7 keyword if
981001-1.c:11:10 punctuator (
981001-1.c:11:11 identifier n
981001-1.c:11:13 punctuator %
981001-1.c:11:15 constant 2
981001-1.c:11:17 punctuator ==
981001-1.c:11:20 constant 0
981001-1.c:11:21 punctuator )
981001-1.c:12:2 punctuator {
981001-1.c:13:4 identifier a
981001-1.c:13:6 punctuator =
981001-1.c:13:8 identifier sub
981001-1.c:13:12 punctuator (
981001-1.c:13:13 identifier n
981001-1.c:13:15 punctuator /
981001-1.c:13:17 constant 2
981001-1.c:13:18 punctuator )
981001-1.c:13:19 punctuator ;
981001-1.c:15:4 keyword return
981001-1.c:15:11 punctuator (
981001-1.c:15:12 identifier a
981001-1.c:15:14 punctuator +
981001-1.c:15:16 constant 2
981001-1.c:15:18 punctuator *
981001-1.c:15:20 identifier sub
981001-1.c:15:24 punctuator (
981001-1.c:15:25 identifier n
981001-1.c:15:27 punctuator /
981001-1.c:15:29 constant 2
981001-1.c:15:31 punctuator -
981001-1.c:15:33 constant 1
981001-1.c:15:34 punctuator )
981001-1.c:15:35 punctuator )
981001-1.c:15:37 punctuator *
981001-1.c:15:39 identifier a
981001-1.c:15:40 punctuator ;
981001-1.c:16:2 punctuator }
981001-1.c:17:7 keyword else
981001-1.c:18:2 punctuator {
981001-1.c:19:4 identifier a
981001-1.c:19:6 punctuator =
981001-1.c:19:8 identifier sub
981001-1.c:19:12 punctuator (
981001-1.c:19:13 identifier n
981001-1.c:19:15 punctuator /
981001-1.c:19:17 constant 2
981001-1.c:19:19 punctuator +
981001-1.c:19:21 constant 1
981001-1.c:19:22 punctuator )
981001-1.c:19:23 punctuator ;
981001-1.c:20:4 identifier b
981001-1.c:20:6 punctuator =
981001-1.c:20:8 identifier sub
981001-1.c:20:12 punctuator (
981001-1.c:20:13 identifier n
981001-1.c:20:15 punctuator /
981001-1.c:20:17 constant 2
981001-1.c:20:18 punctuator )
981001-1.c:20:19 punctuator ;
981001-1.c:22:4 keyword return
981001-1.c:22:11 identifier a
981001-1.c:22:13 punctuator *
981001-1.c:22:15 identifier a
981001-1.c:22:17 punctuator +
981001-1.c:22:19 identifier b
981001-1.c:22:21 punctuator *
981001-1.c:22:23 identifier b
981001-1.c:22:24 punctuator ;
981001-1.c:23:2 punctuator }
981001-1.c:24:5 punctuator }
981001-1.c:25:3 keyword else
981001-1.c:26:5 keyword return
981001-1.c:26:12 punctuator (
981001-1.c:26:13 keyword long
981001-1.c:26:17 punctuator )
981001-1.c:26:19 identifier n
981001-1.c:26:20 punctuator ;
981001-1.c:27:1 punctuator }
981001-1.c:29:1 keyword int
981001-1.c:29:5 identifier main
981001-1.c:29:10 punctuator (
981001-1.c:29:11 keyword void
981001-1.c:29:15 punctuator )
981001-1.c:30:1 punctuator {
981001-1.c:31:3 keyword if
981001-1.c:31:6 punctuator (
981001-1.c:31:7 identifier sub
981001-1.c:31:11 punctuator (
981001-1.c:31:12 constant 30
981001-1.c:31:14 punctuator )
981001-1.c:31:16 punctuator !=
981001-1.c:31:19 constant 832040L
981001-1.c:31:26 punctuator )
981001-1.c:32:5 identifier flg
981001-1.c:32:9 punctuator |=
981001-1.c:32:12 constant 0x100L
981001-1.c:32:18 punctuator ;
981001-1.c:34:3 keyword if
981001-1.c:34:6 punctuator (
981001-1.c:34:7 identifier flg
981001-1.c:34:10 punctuator )
981001-1.c:35:5 identifier abort
981001-1.c:35:11 punctuator (
981001-1.c:35:12 punctuator )
981001-1.c:35:13 punctuator ;
981001-1.c:37:3 identifier exit
981001-1.c:37:8 punctuator (
981001-1.c:37:9 constant 0
981001-1.c:37:10 punctuator )
981001-1.c:37:11 punctuator ;
981001-1.c:38:1 punctuator }
