0
941110-1.c:1:1: identifier f
941110-1.c:1:3: punctuator (
941110-1.c:1:4: keyword const
941110-1.c:1:10: keyword int
941110-1.c:1:14: identifier x
941110-1.c:1:15: punctuator )
941110-1.c:2:1: punctuator {
941110-1.c:3:3: keyword int
941110-1.c:3:7: identifier y
941110-1.c:3:9: punctuator =
941110-1.c:3:11: constant 0
941110-1.c:3:12: punctuator ;
941110-1.c:4:3: identifier y
941110-1.c:4:5: punctuator =
941110-1.c:4:7: identifier x
941110-1.c:4:9: punctuator ?
941110-1.c:4:11: identifier y
941110-1.c:4:13: punctuator :
941110-1.c:4:15: punctuator -
941110-1.c:4:16: identifier y
941110-1.c:4:17: punctuator ;
941110-1.c:5:3: punctuator {
941110-1.c:6:5: keyword const
941110-1.c:6:11: keyword int
941110-1.c:6:15: punctuator *
941110-1.c:6:16: identifier p
941110-1.c:6:18: punctuator =
941110-1.c:6:20: punctuator &
941110-1.c:6:21: identifier x
941110-1.c:6:22: punctuator ;
941110-1.c:7:3: punctuator }
941110-1.c:8:3: keyword return
941110-1.c:8:10: identifier y
941110-1.c:8:11: punctuator ;
941110-1.c:9:1: punctuator }
941110-1.c:11:1: identifier main
941110-1.c:11:6: punctuator (
941110-1.c:11:7: punctuator )
941110-1.c:12:1: punctuator {
941110-1.c:13:3: keyword if
941110-1.c:13:6: punctuator (
941110-1.c:13:7: identifier f
941110-1.c:13:9: punctuator (
941110-1.c:13:10: constant 0
941110-1.c:13:11: punctuator )
941110-1.c:13:12: punctuator )
941110-1.c:14:5: identifier abort
941110-1.c:14:11: punctuator (
941110-1.c:14:12: punctuator )
941110-1.c:14:13: punctuator ;
941110-1.c:15:3: identifier exit
941110-1.c:15:8: punctuator (
941110-1.c:15:9: constant 0
941110-1.c:15:10: punctuator )
941110-1.c:15:11: punctuator ;
941110-1.c:16:1: punctuator }
