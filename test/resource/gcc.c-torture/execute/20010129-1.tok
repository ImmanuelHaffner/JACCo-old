0
20010129-1.c:1:1: keyword long
20010129-1.c:1:6: identifier baz1
20010129-1.c:1:11: punctuator (
20010129-1.c:1:12: keyword void
20010129-1.c:1:17: punctuator *
20010129-1.c:1:18: identifier a
20010129-1.c:1:19: punctuator )
20010129-1.c:2:1: punctuator {
20010129-1.c:3:3: keyword static
20010129-1.c:3:10: keyword long
20010129-1.c:3:15: identifier l
20010129-1.c:3:16: punctuator ;
20010129-1.c:4:3: keyword return
20010129-1.c:4:10: identifier l
20010129-1.c:4:11: punctuator ++
20010129-1.c:4:13: punctuator ;
20010129-1.c:5:1: punctuator }
20010129-1.c:7:1: keyword int
20010129-1.c:7:5: identifier baz2
20010129-1.c:7:10: punctuator (
20010129-1.c:7:11: keyword const
20010129-1.c:7:17: keyword char
20010129-1.c:7:22: punctuator *
20010129-1.c:7:23: identifier a
20010129-1.c:7:24: punctuator )
20010129-1.c:8:1: punctuator {
20010129-1.c:9:3: keyword return
20010129-1.c:9:10: constant 0
20010129-1.c:9:11: punctuator ;
20010129-1.c:10:1: punctuator }
20010129-1.c:12:1: keyword int
20010129-1.c:12:5: identifier baz3
20010129-1.c:12:10: punctuator (
20010129-1.c:12:11: keyword int
20010129-1.c:12:15: identifier i
20010129-1.c:12:16: punctuator )
20010129-1.c:13:1: punctuator {
20010129-1.c:14:3: keyword if
20010129-1.c:14:6: punctuator (
20010129-1.c:14:7: punctuator !
20010129-1.c:14:8: identifier i
20010129-1.c:14:9: punctuator )
20010129-1.c:15:5: identifier abort
20010129-1.c:15:11: punctuator (
20010129-1.c:15:12: punctuator )
20010129-1.c:15:13: punctuator ;
20010129-1.c:16:3: keyword return
20010129-1.c:16:10: constant 1
20010129-1.c:16:11: punctuator ;
20010129-1.c:17:1: punctuator }
20010129-1.c:19:1: keyword void
20010129-1.c:19:6: punctuator *
20010129-1.c:19:7: punctuator *
20010129-1.c:19:8: identifier bar
20010129-1.c:19:11: punctuator ;
20010129-1.c:21:1: keyword int
20010129-1.c:21:5: identifier foo
20010129-1.c:21:9: punctuator (
20010129-1.c:21:10: keyword void
20010129-1.c:21:15: punctuator *
20010129-1.c:21:16: identifier a
20010129-1.c:21:17: punctuator ,
20010129-1.c:21:19: keyword long
20010129-1.c:21:24: identifier b
20010129-1.c:21:25: punctuator ,
20010129-1.c:21:27: keyword int
20010129-1.c:21:31: identifier c
20010129-1.c:21:32: punctuator )
20010129-1.c:22:1: punctuator {
20010129-1.c:23:3: keyword int
20010129-1.c:23:7: identifier d
20010129-1.c:23:9: punctuator =
20010129-1.c:23:11: constant 0
20010129-1.c:23:12: punctuator ,
20010129-1.c:23:14: identifier e
20010129-1.c:23:15: punctuator ,
20010129-1.c:23:17: identifier f
20010129-1.c:23:19: punctuator =
20010129-1.c:23:21: constant 0
20010129-1.c:23:22: punctuator ,
20010129-1.c:23:24: identifier i
20010129-1.c:23:25: punctuator ;
20010129-1.c:24:3: keyword char
20010129-1.c:24:8: identifier g
20010129-1.c:24:9: punctuator [
20010129-1.c:24:10: constant 256
20010129-1.c:24:13: punctuator ]
20010129-1.c:24:14: punctuator ;
20010129-1.c:25:3: keyword void
20010129-1.c:25:8: punctuator *
20010129-1.c:25:9: punctuator *
20010129-1.c:25:10: identifier h
20010129-1.c:25:11: punctuator ;
20010129-1.c:27:3: identifier g
20010129-1.c:27:4: punctuator [
20010129-1.c:27:5: constant 0
20010129-1.c:27:6: punctuator ]
20010129-1.c:27:8: punctuator =
20010129-1.c:27:10: constant '\n'
20010129-1.c:27:14: punctuator ;
20010129-1.c:28:3: identifier g
20010129-1.c:28:4: punctuator [
20010129-1.c:28:5: constant 1
20010129-1.c:28:6: punctuator ]
20010129-1.c:28:8: punctuator =
20010129-1.c:28:10: constant 0
20010129-1.c:28:11: punctuator ;
20010129-1.c:30:3: keyword while
20010129-1.c:30:9: punctuator (
20010129-1.c:30:10: identifier baz1
20010129-1.c:30:15: punctuator (
20010129-1.c:30:16: identifier a
20010129-1.c:30:17: punctuator )
20010129-1.c:30:19: punctuator <
20010129-1.c:30:21: identifier b
20010129-1.c:30:22: punctuator )
20010129-1.c:30:24: punctuator {
20010129-1.c:31:5: keyword if
20010129-1.c:31:8: punctuator (
20010129-1.c:31:9: identifier g
20010129-1.c:31:10: punctuator [
20010129-1.c:31:11: constant 0
20010129-1.c:31:12: punctuator ]
20010129-1.c:31:14: punctuator !=
20010129-1.c:31:17: constant ' '
20010129-1.c:31:21: punctuator &&
20010129-1.c:31:24: identifier g
20010129-1.c:31:25: punctuator [
20010129-1.c:31:26: constant 0
20010129-1.c:31:27: punctuator ]
20010129-1.c:31:29: punctuator !=
20010129-1.c:31:32: constant '\t'
20010129-1.c:31:36: punctuator )
20010129-1.c:31:38: punctuator {
20010129-1.c:32:7: identifier f
20010129-1.c:32:9: punctuator =
20010129-1.c:32:11: constant 1
20010129-1.c:32:12: punctuator ;
20010129-1.c:33:7: identifier e
20010129-1.c:33:9: punctuator =
20010129-1.c:33:11: constant 0
20010129-1.c:33:12: punctuator ;
20010129-1.c:34:7: keyword if
20010129-1.c:34:10: punctuator (
20010129-1.c:34:11: punctuator !
20010129-1.c:34:12: identifier d
20010129-1.c:34:14: punctuator &&
20010129-1.c:34:17: identifier baz2
20010129-1.c:34:22: punctuator (
20010129-1.c:34:23: identifier g
20010129-1.c:34:24: punctuator )
20010129-1.c:34:26: punctuator ==
20010129-1.c:34:29: constant 0
20010129-1.c:34:30: punctuator )
20010129-1.c:34:32: punctuator {
20010129-1.c:35:2: keyword if
20010129-1.c:35:5: punctuator (
20010129-1.c:35:6: punctuator (
20010129-1.c:35:7: identifier c
20010129-1.c:35:9: punctuator &
20010129-1.c:35:11: constant 0x10
20010129-1.c:35:15: punctuator )
20010129-1.c:35:17: punctuator ==
20010129-1.c:35:20: constant 0
20010129-1.c:35:21: punctuator )
20010129-1.c:36:4: keyword continue
20010129-1.c:36:12: punctuator ;
20010129-1.c:37:2: identifier e
20010129-1.c:37:4: punctuator =
20010129-1.c:37:6: identifier d
20010129-1.c:37:8: punctuator =
20010129-1.c:37:10: constant 1
20010129-1.c:37:11: punctuator ;
20010129-1.c:38:7: punctuator }
20010129-1.c:39:7: keyword if
20010129-1.c:39:10: punctuator (
20010129-1.c:39:11: punctuator !
20010129-1.c:39:12: punctuator (
20010129-1.c:39:13: punctuator (
20010129-1.c:39:14: identifier c
20010129-1.c:39:16: punctuator &
20010129-1.c:39:18: constant 0x10
20010129-1.c:39:22: punctuator )
20010129-1.c:39:24: punctuator &&
20010129-1.c:39:27: punctuator (
20010129-1.c:39:28: identifier c
20010129-1.c:39:30: punctuator &
20010129-1.c:39:32: constant 0x4000
20010129-1.c:39:38: punctuator )
20010129-1.c:39:40: punctuator &&
20010129-1.c:39:43: identifier e
20010129-1.c:39:44: punctuator )
20010129-1.c:39:46: punctuator &&
20010129-1.c:39:49: punctuator (
20010129-1.c:39:50: identifier c
20010129-1.c:39:52: punctuator &
20010129-1.c:39:54: constant 2
20010129-1.c:39:55: punctuator )
20010129-1.c:39:56: punctuator )
20010129-1.c:40:2: keyword continue
20010129-1.c:40:10: punctuator ;
20010129-1.c:41:7: keyword if
20010129-1.c:41:10: punctuator (
20010129-1.c:41:11: punctuator (
20010129-1.c:41:12: identifier c
20010129-1.c:41:14: punctuator &
20010129-1.c:41:16: constant 0x2000
20010129-1.c:41:22: punctuator )
20010129-1.c:41:24: punctuator &&
20010129-1.c:41:27: identifier baz2
20010129-1.c:41:32: punctuator (
20010129-1.c:41:33: identifier g
20010129-1.c:41:34: punctuator )
20010129-1.c:41:36: punctuator ==
20010129-1.c:41:39: constant 0
20010129-1.c:41:40: punctuator )
20010129-1.c:42:2: keyword continue
20010129-1.c:42:10: punctuator ;
20010129-1.c:43:7: keyword if
20010129-1.c:43:10: punctuator (
20010129-1.c:43:11: punctuator (
20010129-1.c:43:12: identifier c
20010129-1.c:43:14: punctuator &
20010129-1.c:43:16: constant 0x1408
20010129-1.c:43:22: punctuator )
20010129-1.c:43:24: punctuator &&
20010129-1.c:43:27: identifier baz2
20010129-1.c:43:32: punctuator (
20010129-1.c:43:33: identifier g
20010129-1.c:43:34: punctuator )
20010129-1.c:43:36: punctuator ==
20010129-1.c:43:39: constant 0
20010129-1.c:43:40: punctuator )
20010129-1.c:44:2: keyword continue
20010129-1.c:44:10: punctuator ;
20010129-1.c:45:7: keyword if
20010129-1.c:45:10: punctuator (
20010129-1.c:45:11: punctuator (
20010129-1.c:45:12: identifier c
20010129-1.c:45:14: punctuator &
20010129-1.c:45:16: constant 0x200
20010129-1.c:45:21: punctuator )
20010129-1.c:45:23: punctuator &&
20010129-1.c:45:26: identifier baz2
20010129-1.c:45:31: punctuator (
20010129-1.c:45:32: identifier g
20010129-1.c:45:33: punctuator )
20010129-1.c:45:35: punctuator ==
20010129-1.c:45:38: constant 0
20010129-1.c:45:39: punctuator )
20010129-1.c:46:2: keyword continue
20010129-1.c:46:10: punctuator ;
20010129-1.c:47:7: keyword if
20010129-1.c:47:10: punctuator (
20010129-1.c:47:11: identifier c
20010129-1.c:47:13: punctuator &
20010129-1.c:47:15: constant 0x80
20010129-1.c:47:19: punctuator )
20010129-1.c:47:21: punctuator {
20010129-1.c:48:2: keyword for
20010129-1.c:48:6: punctuator (
20010129-1.c:48:7: identifier h
20010129-1.c:48:9: punctuator =
20010129-1.c:48:11: identifier bar
20010129-1.c:48:14: punctuator ,
20010129-1.c:48:16: identifier i
20010129-1.c:48:18: punctuator =
20010129-1.c:48:20: constant 0
20010129-1.c:48:21: punctuator ;
20010129-1.c:48:23: identifier h
20010129-1.c:48:24: punctuator ;
20010129-1.c:48:26: identifier h
20010129-1.c:48:28: punctuator =
20010129-1.c:48:30: punctuator (
20010129-1.c:48:31: keyword void
20010129-1.c:48:36: punctuator *
20010129-1.c:48:37: punctuator *
20010129-1.c:48:38: punctuator )
20010129-1.c:48:39: punctuator *
20010129-1.c:48:40: identifier h
20010129-1.c:48:41: punctuator ,
20010129-1.c:48:43: identifier i
20010129-1.c:48:44: punctuator ++
20010129-1.c:48:46: punctuator )
20010129-1.c:49:4: keyword if
20010129-1.c:49:7: punctuator (
20010129-1.c:49:8: identifier baz3
20010129-1.c:49:13: punctuator (
20010129-1.c:49:14: identifier i
20010129-1.c:49:15: punctuator )
20010129-1.c:49:16: punctuator )
20010129-1.c:50:6: keyword break
20010129-1.c:50:11: punctuator ;
20010129-1.c:51:7: punctuator }
20010129-1.c:52:7: identifier f
20010129-1.c:52:9: punctuator =
20010129-1.c:52:11: constant 0
20010129-1.c:52:12: punctuator ;
20010129-1.c:53:5: punctuator }
20010129-1.c:54:3: punctuator }
20010129-1.c:55:3: keyword return
20010129-1.c:55:10: constant 0
20010129-1.c:55:11: punctuator ;
20010129-1.c:56:1: punctuator }
20010129-1.c:58:1: keyword int
20010129-1.c:58:5: identifier main
20010129-1.c:58:10: punctuator (
20010129-1.c:58:11: punctuator )
20010129-1.c:59:1: punctuator {
20010129-1.c:60:3: keyword void
20010129-1.c:60:8: punctuator *
20010129-1.c:60:9: identifier n
20010129-1.c:60:11: punctuator =
20010129-1.c:60:13: constant 0
20010129-1.c:60:14: punctuator ;
20010129-1.c:61:3: identifier bar
20010129-1.c:61:7: punctuator =
20010129-1.c:61:9: punctuator &
20010129-1.c:61:10: identifier n
20010129-1.c:61:11: punctuator ;
20010129-1.c:62:3: identifier foo
20010129-1.c:62:7: punctuator (
20010129-1.c:62:8: punctuator &
20010129-1.c:62:9: identifier n
20010129-1.c:62:10: punctuator ,
20010129-1.c:62:12: constant 1
20010129-1.c:62:13: punctuator ,
20010129-1.c:62:15: constant 0xc811
20010129-1.c:62:21: punctuator )
20010129-1.c:62:22: punctuator ;
20010129-1.c:63:3: identifier exit
20010129-1.c:63:8: punctuator (
20010129-1.c:63:9: constant 0
20010129-1.c:63:10: punctuator )
20010129-1.c:63:11: punctuator ;
20010129-1.c:64:1: punctuator }
