0
pr53465.c:3:1: keyword extern
pr53465.c:3:8: keyword void
pr53465.c:3:13: identifier abort
pr53465.c:3:19: punctuator (
pr53465.c:3:20: punctuator )
pr53465.c:3:21: punctuator ;
pr53465.c:5:1: keyword static
pr53465.c:5:8: keyword const
pr53465.c:5:14: keyword int
pr53465.c:5:18: identifier a
pr53465.c:5:19: punctuator [
pr53465.c:5:20: punctuator ]
pr53465.c:5:22: punctuator =
pr53465.c:5:24: punctuator {
pr53465.c:5:26: constant 1
pr53465.c:5:27: punctuator ,
pr53465.c:5:29: constant 2
pr53465.c:5:31: punctuator }
pr53465.c:5:32: punctuator ;
pr53465.c:7:1: keyword void
pr53465.c:8:1: identifier foo
pr53465.c:8:5: punctuator (
pr53465.c:8:6: keyword const
pr53465.c:8:12: keyword int
pr53465.c:8:16: punctuator *
pr53465.c:8:17: identifier x
pr53465.c:8:18: punctuator ,
pr53465.c:8:20: keyword int
pr53465.c:8:24: identifier y
pr53465.c:8:25: punctuator )
pr53465.c:9:1: punctuator {
pr53465.c:10:3: keyword int
pr53465.c:10:7: identifier i
pr53465.c:10:8: punctuator ;
pr53465.c:11:3: keyword int
pr53465.c:11:7: identifier b
pr53465.c:11:9: punctuator =
pr53465.c:11:11: constant 0
pr53465.c:11:12: punctuator ;
pr53465.c:12:3: keyword int
pr53465.c:12:7: identifier c
pr53465.c:12:8: punctuator ;
pr53465.c:13:3: keyword for
pr53465.c:13:7: punctuator (
pr53465.c:13:8: identifier i
pr53465.c:13:10: punctuator =
pr53465.c:13:12: constant 0
pr53465.c:13:13: punctuator ;
pr53465.c:13:15: identifier i
pr53465.c:13:17: punctuator <
pr53465.c:13:19: identifier y
pr53465.c:13:20: punctuator ;
pr53465.c:13:22: identifier i
pr53465.c:13:23: punctuator ++
pr53465.c:13:25: punctuator )
pr53465.c:14:5: punctuator {
pr53465.c:15:7: keyword int
pr53465.c:15:11: identifier d
pr53465.c:15:13: punctuator =
pr53465.c:15:15: identifier x
pr53465.c:15:16: punctuator [
pr53465.c:15:17: identifier i
pr53465.c:15:18: punctuator ]
pr53465.c:15:19: punctuator ;
pr53465.c:16:7: keyword if
pr53465.c:16:10: punctuator (
pr53465.c:16:11: identifier d
pr53465.c:16:13: punctuator ==
pr53465.c:16:16: constant 0
pr53465.c:16:17: punctuator )
pr53465.c:17:2: keyword break
pr53465.c:17:7: punctuator ;
pr53465.c:18:7: keyword if
pr53465.c:18:10: punctuator (
pr53465.c:18:11: identifier b
pr53465.c:18:13: punctuator &&
pr53465.c:18:16: identifier d
pr53465.c:18:18: punctuator <=
pr53465.c:18:21: identifier c
pr53465.c:18:22: punctuator )
pr53465.c:19:2: identifier abort
pr53465.c:19:8: punctuator (
pr53465.c:19:9: punctuator )
pr53465.c:19:10: punctuator ;
pr53465.c:20:7: identifier c
pr53465.c:20:9: punctuator =
pr53465.c:20:11: identifier d
pr53465.c:20:12: punctuator ;
pr53465.c:21:7: identifier b
pr53465.c:21:9: punctuator =
pr53465.c:21:11: constant 1
pr53465.c:21:12: punctuator ;
pr53465.c:22:5: punctuator }
pr53465.c:23:1: punctuator }
pr53465.c:25:1: keyword int
pr53465.c:26:1: identifier main
pr53465.c:26:6: punctuator (
pr53465.c:26:7: punctuator )
pr53465.c:27:1: punctuator {
pr53465.c:28:3: identifier foo
pr53465.c:28:7: punctuator (
pr53465.c:28:8: identifier a
pr53465.c:28:9: punctuator ,
pr53465.c:28:11: constant 2
pr53465.c:28:12: punctuator )
pr53465.c:28:13: punctuator ;
pr53465.c:29:3: keyword return
pr53465.c:29:10: constant 0
pr53465.c:29:11: punctuator ;
pr53465.c:30:1: punctuator }
