0
20001203-2.c:1:1: keyword struct
20001203-2.c:1:8: identifier obstack
20001203-2.c:2:1: punctuator {
20001203-2.c:3:3: keyword long
20001203-2.c:3:8: identifier chunk_size
20001203-2.c:3:18: punctuator ;
20001203-2.c:4:3: keyword struct
20001203-2.c:4:10: identifier _obstack_chunk
20001203-2.c:4:25: punctuator *
20001203-2.c:4:26: identifier chunk
20001203-2.c:4:31: punctuator ;
20001203-2.c:5:3: keyword char
20001203-2.c:5:8: punctuator *
20001203-2.c:5:9: identifier object_base
20001203-2.c:5:20: punctuator ;
20001203-2.c:6:3: keyword char
20001203-2.c:6:8: punctuator *
20001203-2.c:6:9: identifier next_free
20001203-2.c:6:18: punctuator ;
20001203-2.c:7:3: keyword char
20001203-2.c:7:8: punctuator *
20001203-2.c:7:9: identifier chunk_limit
20001203-2.c:7:20: punctuator ;
20001203-2.c:8:3: keyword int
20001203-2.c:8:7: identifier alignment_mask
20001203-2.c:8:21: punctuator ;
20001203-2.c:9:3: keyword unsigned
20001203-2.c:9:12: identifier maybe_empty_object
20001203-2.c:9:30: punctuator ;
20001203-2.c:10:1: punctuator }
20001203-2.c:10:2: punctuator ;
20001203-2.c:12:1: keyword struct
20001203-2.c:12:8: identifier objfile
20001203-2.c:13:3: punctuator {
20001203-2.c:14:5: keyword struct
20001203-2.c:14:12: identifier objfile
20001203-2.c:14:20: punctuator *
20001203-2.c:14:21: identifier next
20001203-2.c:14:25: punctuator ;
20001203-2.c:15:5: keyword struct
20001203-2.c:15:12: identifier obstack
20001203-2.c:15:20: identifier type_obstack
20001203-2.c:15:32: punctuator ;
20001203-2.c:16:3: punctuator }
20001203-2.c:16:4: punctuator ;
20001203-2.c:18:1: keyword struct
20001203-2.c:18:8: identifier type
20001203-2.c:19:3: punctuator {
20001203-2.c:20:5: keyword unsigned
20001203-2.c:20:14: identifier length
20001203-2.c:20:20: punctuator ;
20001203-2.c:21:5: keyword struct
20001203-2.c:21:12: identifier objfile
20001203-2.c:21:20: punctuator *
20001203-2.c:21:21: identifier objfile
20001203-2.c:21:28: punctuator ;
20001203-2.c:22:5: keyword short
20001203-2.c:22:11: identifier nfields
20001203-2.c:22:18: punctuator ;
20001203-2.c:23:5: keyword struct
20001203-2.c:23:12: identifier field
20001203-2.c:24:7: punctuator {
20001203-2.c:25:9: keyword union
20001203-2.c:25:15: identifier field_location
20001203-2.c:26:11: punctuator {
20001203-2.c:27:13: keyword int
20001203-2.c:27:17: identifier bitpos
20001203-2.c:27:23: punctuator ;
20001203-2.c:28:13: keyword unsigned
20001203-2.c:28:22: keyword long
20001203-2.c:28:27: identifier physaddr
20001203-2.c:28:35: punctuator ;
20001203-2.c:29:13: keyword char
20001203-2.c:29:18: punctuator *
20001203-2.c:29:19: identifier physname
20001203-2.c:29:27: punctuator ;
20001203-2.c:30:11: punctuator }
20001203-2.c:31:9: identifier loc
20001203-2.c:31:12: punctuator ;
20001203-2.c:32:9: keyword int
20001203-2.c:32:13: identifier bitsize
20001203-2.c:32:20: punctuator ;
20001203-2.c:33:9: keyword struct
20001203-2.c:33:16: identifier type
20001203-2.c:33:21: punctuator *
20001203-2.c:33:22: identifier type
20001203-2.c:33:26: punctuator ;
20001203-2.c:34:9: keyword char
20001203-2.c:34:14: punctuator *
20001203-2.c:34:15: identifier name
20001203-2.c:34:19: punctuator ;
20001203-2.c:35:7: punctuator }
20001203-2.c:36:6: punctuator *
20001203-2.c:36:7: identifier fields
20001203-2.c:36:13: punctuator ;
20001203-2.c:37:3: punctuator }
20001203-2.c:37:4: punctuator ;
20001203-2.c:39:1: keyword struct
20001203-2.c:39:8: identifier type
20001203-2.c:39:13: punctuator *
20001203-2.c:39:14: identifier alloc_type
20001203-2.c:39:25: punctuator (
20001203-2.c:39:26: keyword void
20001203-2.c:39:30: punctuator )
20001203-2.c:39:31: punctuator ;
20001203-2.c:40:1: keyword void
20001203-2.c:40:6: punctuator *
20001203-2.c:40:8: identifier xmalloc
20001203-2.c:40:16: punctuator (
20001203-2.c:40:17: keyword unsigned
20001203-2.c:40:26: keyword int
20001203-2.c:40:30: identifier z
20001203-2.c:40:31: punctuator )
20001203-2.c:40:32: punctuator ;
20001203-2.c:41:1: keyword void
20001203-2.c:41:6: identifier _obstack_newchunk
20001203-2.c:41:24: punctuator (
20001203-2.c:41:25: keyword struct
20001203-2.c:41:32: identifier obstack
20001203-2.c:41:40: punctuator *
20001203-2.c:41:41: identifier o
20001203-2.c:41:42: punctuator ,
20001203-2.c:41:44: keyword int
20001203-2.c:41:48: identifier i
20001203-2.c:41:49: punctuator )
20001203-2.c:41:50: punctuator ;
20001203-2.c:42:1: keyword void
20001203-2.c:42:6: identifier get_discrete_bounds
20001203-2.c:42:26: punctuator (
20001203-2.c:42:27: keyword long
20001203-2.c:42:32: keyword long
20001203-2.c:42:37: punctuator *
20001203-2.c:42:38: identifier lowp
20001203-2.c:42:42: punctuator ,
20001203-2.c:42:44: keyword long
20001203-2.c:42:49: keyword long
20001203-2.c:42:54: punctuator *
20001203-2.c:42:55: identifier highp
20001203-2.c:42:60: punctuator )
20001203-2.c:42:61: punctuator ;
20001203-2.c:44:1: keyword extern
20001203-2.c:44:8: keyword void
20001203-2.c:44:13: punctuator *
20001203-2.c:44:14: identifier memset
20001203-2.c:44:20: punctuator (
20001203-2.c:44:21: keyword void
20001203-2.c:44:26: punctuator *
20001203-2.c:44:27: punctuator ,
20001203-2.c:44:29: keyword int
20001203-2.c:44:32: punctuator ,
20001203-2.c:44:34: keyword long
20001203-2.c:44:39: keyword unsigned
20001203-2.c:44:48: keyword int
20001203-2.c:44:51: punctuator )
20001203-2.c:44:52: punctuator ;
20001203-2.c:46:1: keyword struct
20001203-2.c:46:8: identifier type
20001203-2.c:46:13: punctuator *
20001203-2.c:47:1: identifier create_array_type
20001203-2.c:47:19: punctuator (
20001203-2.c:47:20: keyword struct
20001203-2.c:47:27: identifier type
20001203-2.c:47:32: punctuator *
20001203-2.c:47:33: identifier result_type
20001203-2.c:47:44: punctuator ,
20001203-2.c:47:46: keyword struct
20001203-2.c:47:53: identifier type
20001203-2.c:47:58: punctuator *
20001203-2.c:47:59: identifier element_type
20001203-2.c:47:71: punctuator )
20001203-2.c:48:1: punctuator {
20001203-2.c:49:3: keyword long
20001203-2.c:49:8: keyword long
20001203-2.c:49:13: identifier low_bound
20001203-2.c:49:22: punctuator ,
20001203-2.c:49:24: identifier high_bound
20001203-2.c:49:34: punctuator ;
20001203-2.c:50:3: keyword if
20001203-2.c:50:6: punctuator (
20001203-2.c:50:7: identifier result_type
20001203-2.c:50:19: punctuator ==
20001203-2.c:50:22: punctuator (
20001203-2.c:50:23: punctuator (
20001203-2.c:50:24: keyword void
20001203-2.c:50:29: punctuator *
20001203-2.c:50:30: punctuator )
20001203-2.c:50:31: constant 0
20001203-2.c:50:32: punctuator )
20001203-2.c:50:33: punctuator )
20001203-2.c:51:5: punctuator {
20001203-2.c:52:7: identifier result_type
20001203-2.c:52:19: punctuator =
20001203-2.c:52:21: identifier alloc_type
20001203-2.c:52:32: punctuator (
20001203-2.c:52:33: punctuator )
20001203-2.c:52:34: punctuator ;
20001203-2.c:53:5: punctuator }
20001203-2.c:54:3: identifier get_discrete_bounds
20001203-2.c:54:23: punctuator (
20001203-2.c:54:24: punctuator &
20001203-2.c:54:25: identifier low_bound
20001203-2.c:54:34: punctuator ,
20001203-2.c:54:36: punctuator &
20001203-2.c:54:37: identifier high_bound
20001203-2.c:54:47: punctuator )
20001203-2.c:54:48: punctuator ;
20001203-2.c:55:3: punctuator (
20001203-2.c:55:4: identifier result_type
20001203-2.c:55:15: punctuator )
20001203-2.c:55:16: punctuator ->
20001203-2.c:55:18: identifier length
20001203-2.c:55:25: punctuator =
20001203-2.c:56:5: punctuator (
20001203-2.c:56:6: identifier element_type
20001203-2.c:56:18: punctuator )
20001203-2.c:56:19: punctuator ->
20001203-2.c:56:21: identifier length
20001203-2.c:56:28: punctuator *
20001203-2.c:56:30: punctuator (
20001203-2.c:56:31: identifier high_bound
20001203-2.c:56:42: punctuator -
20001203-2.c:56:44: identifier low_bound
20001203-2.c:56:54: punctuator +
20001203-2.c:56:56: constant 1
20001203-2.c:56:57: punctuator )
20001203-2.c:56:58: punctuator ;
20001203-2.c:57:3: punctuator (
20001203-2.c:57:4: identifier result_type
20001203-2.c:57:15: punctuator )
20001203-2.c:57:16: punctuator ->
20001203-2.c:57:18: identifier nfields
20001203-2.c:57:26: punctuator =
20001203-2.c:57:28: constant 1
20001203-2.c:57:29: punctuator ;
20001203-2.c:58:3: punctuator (
20001203-2.c:58:4: identifier result_type
20001203-2.c:58:15: punctuator )
20001203-2.c:58:16: punctuator ->
20001203-2.c:58:18: identifier fields
20001203-2.c:58:25: punctuator =
20001203-2.c:59:5: punctuator (
20001203-2.c:59:6: keyword struct
20001203-2.c:59:13: identifier field
20001203-2.c:59:19: punctuator *
20001203-2.c:59:20: punctuator )
20001203-2.c:59:22: punctuator (
20001203-2.c:59:23: punctuator (
20001203-2.c:59:24: identifier result_type
20001203-2.c:59:35: punctuator )
20001203-2.c:59:36: punctuator ->
20001203-2.c:59:38: identifier objfile
20001203-2.c:59:46: punctuator !=
20001203-2.c:59:49: punctuator (
20001203-2.c:59:50: punctuator (
20001203-2.c:59:51: keyword void
20001203-2.c:59:56: punctuator *
20001203-2.c:59:57: punctuator )
20001203-2.c:59:58: constant 0
20001203-2.c:59:59: punctuator )
20001203-2.c:60:9: punctuator ?
20001203-2.c:60:11: punctuator (
20001203-2.c:61:9: punctuator {
20001203-2.c:62:4: keyword struct
20001203-2.c:62:11: identifier obstack
20001203-2.c:62:19: punctuator *
20001203-2.c:62:20: identifier __h
20001203-2.c:62:24: punctuator =
20001203-2.c:63:6: punctuator (
20001203-2.c:63:7: punctuator &
20001203-2.c:63:8: punctuator (
20001203-2.c:63:9: identifier result_type
20001203-2.c:63:20: punctuator )
20001203-2.c:63:21: punctuator ->
20001203-2.c:63:23: identifier objfile
20001203-2.c:63:31: punctuator ->
20001203-2.c:63:34: identifier type_obstack
20001203-2.c:63:46: punctuator )
20001203-2.c:63:47: punctuator ;
20001203-2.c:64:4: punctuator {
20001203-2.c:65:6: keyword struct
20001203-2.c:65:13: identifier obstack
20001203-2.c:65:21: punctuator *
20001203-2.c:65:22: identifier __o
20001203-2.c:65:26: punctuator =
20001203-2.c:65:28: punctuator (
20001203-2.c:65:29: identifier __h
20001203-2.c:65:32: punctuator )
20001203-2.c:65:33: punctuator ;
20001203-2.c:66:6: keyword int
20001203-2.c:66:10: identifier __len
20001203-2.c:66:16: punctuator =
20001203-2.c:66:18: punctuator (
20001203-2.c:66:19: punctuator (
20001203-2.c:66:20: keyword sizeof
20001203-2.c:66:27: punctuator (
20001203-2.c:66:28: keyword struct
20001203-2.c:66:35: identifier field
20001203-2.c:66:40: punctuator )
20001203-2.c:66:41: punctuator )
20001203-2.c:66:42: punctuator )
20001203-2.c:66:43: punctuator ;
20001203-2.c:67:6: keyword if
20001203-2.c:67:9: punctuator (
20001203-2.c:67:10: identifier __o
20001203-2.c:67:13: punctuator ->
20001203-2.c:67:15: identifier chunk_limit
20001203-2.c:67:27: punctuator -
20001203-2.c:67:29: identifier __o
20001203-2.c:67:32: punctuator ->
20001203-2.c:67:34: identifier next_free
20001203-2.c:67:44: punctuator <
20001203-2.c:67:46: identifier __len
20001203-2.c:67:51: punctuator )
20001203-2.c:68:8: identifier _obstack_newchunk
20001203-2.c:68:26: punctuator (
20001203-2.c:68:27: identifier __o
20001203-2.c:68:30: punctuator ,
20001203-2.c:68:32: identifier __len
20001203-2.c:68:37: punctuator )
20001203-2.c:68:38: punctuator ;
20001203-2.c:69:6: identifier __o
20001203-2.c:69:9: punctuator ->
20001203-2.c:69:11: identifier next_free
20001203-2.c:69:21: punctuator +=
20001203-2.c:69:24: identifier __len
20001203-2.c:69:29: punctuator ;
20001203-2.c:69:31: punctuator (
20001203-2.c:69:32: keyword void
20001203-2.c:69:36: punctuator )
20001203-2.c:69:38: constant 0
20001203-2.c:69:39: punctuator ;
20001203-2.c:70:4: punctuator }
20001203-2.c:70:5: punctuator ;
20001203-2.c:71:4: punctuator (
20001203-2.c:71:5: punctuator {
20001203-2.c:72:6: keyword struct
20001203-2.c:72:13: identifier obstack
20001203-2.c:72:21: punctuator *
20001203-2.c:72:22: identifier __o1
20001203-2.c:72:27: punctuator =
20001203-2.c:72:29: punctuator (
20001203-2.c:72:30: identifier __h
20001203-2.c:72:33: punctuator )
20001203-2.c:72:34: punctuator ;
20001203-2.c:73:6: keyword void
20001203-2.c:73:11: punctuator *
20001203-2.c:73:12: identifier value
20001203-2.c:73:17: punctuator ;
20001203-2.c:74:6: identifier value
20001203-2.c:74:12: punctuator =
20001203-2.c:74:14: punctuator (
20001203-2.c:74:15: keyword void
20001203-2.c:74:20: punctuator *
20001203-2.c:74:21: punctuator )
20001203-2.c:74:23: identifier __o1
20001203-2.c:74:27: punctuator ->
20001203-2.c:74:29: identifier object_base
20001203-2.c:74:40: punctuator ;
20001203-2.c:75:6: keyword if
20001203-2.c:75:9: punctuator (
20001203-2.c:75:10: identifier __o1
20001203-2.c:75:14: punctuator ->
20001203-2.c:75:16: identifier next_free
20001203-2.c:75:26: punctuator ==
20001203-2.c:75:29: identifier value
20001203-2.c:75:34: punctuator )
20001203-2.c:76:8: identifier __o1
20001203-2.c:76:12: punctuator ->
20001203-2.c:76:14: identifier maybe_empty_object
20001203-2.c:76:33: punctuator =
20001203-2.c:76:35: constant 1
20001203-2.c:76:36: punctuator ;
20001203-2.c:77:6: identifier __o1
20001203-2.c:77:10: punctuator ->
20001203-2.c:77:12: identifier next_free
20001203-2.c:77:22: punctuator =
20001203-2.c:77:24: punctuator (
20001203-2.c:77:25: punctuator (
20001203-2.c:77:26: punctuator (
20001203-2.c:77:27: punctuator (
20001203-2.c:77:28: punctuator (
20001203-2.c:77:29: identifier __o1
20001203-2.c:77:33: punctuator ->
20001203-2.c:77:35: identifier next_free
20001203-2.c:77:44: punctuator )
20001203-2.c:77:46: punctuator -
20001203-2.c:77:48: punctuator (
20001203-2.c:77:49: keyword char
20001203-2.c:77:54: punctuator *
20001203-2.c:77:55: punctuator )
20001203-2.c:77:57: constant 0
20001203-2.c:77:58: punctuator )
20001203-2.c:78:13: punctuator +
20001203-2.c:78:14: identifier __o1
20001203-2.c:78:18: punctuator ->
20001203-2.c:78:20: identifier alignment_mask
20001203-2.c:78:34: punctuator )
20001203-2.c:79:12: punctuator &
20001203-2.c:79:14: punctuator ~
20001203-2.c:79:16: punctuator (
20001203-2.c:79:17: identifier __o1
20001203-2.c:79:21: punctuator ->
20001203-2.c:79:23: identifier alignment_mask
20001203-2.c:79:37: punctuator )
20001203-2.c:79:38: punctuator )
20001203-2.c:80:11: punctuator +
20001203-2.c:80:13: punctuator (
20001203-2.c:80:14: keyword char
20001203-2.c:80:19: punctuator *
20001203-2.c:80:20: punctuator )
20001203-2.c:80:22: constant 0
20001203-2.c:80:23: punctuator )
20001203-2.c:80:24: punctuator ;
20001203-2.c:81:6: keyword if
20001203-2.c:81:9: punctuator (
20001203-2.c:81:10: identifier __o1
20001203-2.c:81:14: punctuator ->
20001203-2.c:81:16: identifier next_free
20001203-2.c:81:26: punctuator -
20001203-2.c:81:28: punctuator (
20001203-2.c:81:29: keyword char
20001203-2.c:81:34: punctuator *
20001203-2.c:81:35: punctuator )
20001203-2.c:81:36: identifier __o1
20001203-2.c:81:40: punctuator ->
20001203-2.c:81:42: identifier chunk
20001203-2.c:82:10: punctuator >
20001203-2.c:82:12: identifier __o1
20001203-2.c:82:16: punctuator ->
20001203-2.c:82:18: identifier chunk_limit
20001203-2.c:82:30: punctuator -
20001203-2.c:82:32: punctuator (
20001203-2.c:82:33: keyword char
20001203-2.c:82:38: punctuator *
20001203-2.c:82:39: punctuator )
20001203-2.c:82:40: identifier __o1
20001203-2.c:82:44: punctuator ->
20001203-2.c:82:46: identifier chunk
20001203-2.c:82:51: punctuator )
20001203-2.c:83:8: identifier __o1
20001203-2.c:83:12: punctuator ->
20001203-2.c:83:14: identifier next_free
20001203-2.c:83:24: punctuator =
20001203-2.c:83:26: identifier __o1
20001203-2.c:83:30: punctuator ->
20001203-2.c:83:32: identifier chunk_limit
20001203-2.c:83:43: punctuator ;
20001203-2.c:84:6: identifier __o1
20001203-2.c:84:10: punctuator ->
20001203-2.c:84:12: identifier object_base
20001203-2.c:84:24: punctuator =
20001203-2.c:84:26: identifier __o1
20001203-2.c:84:30: punctuator ->
20001203-2.c:84:32: identifier next_free
20001203-2.c:84:41: punctuator ;
20001203-2.c:85:6: identifier value
20001203-2.c:85:11: punctuator ;
20001203-2.c:86:4: punctuator }
20001203-2.c:86:5: punctuator )
20001203-2.c:86:6: punctuator ;
20001203-2.c:87:9: punctuator }
20001203-2.c:87:10: punctuator )
20001203-2.c:87:12: punctuator :
20001203-2.c:87:14: identifier xmalloc
20001203-2.c:87:22: punctuator (
20001203-2.c:87:23: keyword sizeof
20001203-2.c:87:30: punctuator (
20001203-2.c:87:31: keyword struct
20001203-2.c:87:38: identifier field
20001203-2.c:87:43: punctuator )
20001203-2.c:87:44: punctuator )
20001203-2.c:87:45: punctuator )
20001203-2.c:87:46: punctuator ;
20001203-2.c:88:3: keyword return
20001203-2.c:88:10: punctuator (
20001203-2.c:88:11: identifier result_type
20001203-2.c:88:22: punctuator )
20001203-2.c:88:23: punctuator ;
20001203-2.c:89:1: punctuator }
20001203-2.c:91:1: keyword struct
20001203-2.c:91:8: identifier type
20001203-2.c:91:13: punctuator *
20001203-2.c:92:1: identifier alloc_type
20001203-2.c:92:12: punctuator (
20001203-2.c:92:13: keyword void
20001203-2.c:92:17: punctuator )
20001203-2.c:93:1: punctuator {
20001203-2.c:94:3: identifier abort
20001203-2.c:94:9: punctuator (
20001203-2.c:94:10: punctuator )
20001203-2.c:94:11: punctuator ;
20001203-2.c:95:1: punctuator }
20001203-2.c:96:1: keyword void
20001203-2.c:96:6: punctuator *
20001203-2.c:96:8: identifier xmalloc
20001203-2.c:96:16: punctuator (
20001203-2.c:96:17: keyword unsigned
20001203-2.c:96:26: keyword int
20001203-2.c:96:30: identifier z
20001203-2.c:96:31: punctuator )
20001203-2.c:97:1: punctuator {
20001203-2.c:98:3: keyword return
20001203-2.c:98:10: constant 0
20001203-2.c:98:11: punctuator ;
20001203-2.c:99:1: punctuator }
20001203-2.c:100:1: keyword void
20001203-2.c:100:6: identifier _obstack_newchunk
20001203-2.c:100:24: punctuator (
20001203-2.c:100:25: keyword struct
20001203-2.c:100:32: identifier obstack
20001203-2.c:100:40: punctuator *
20001203-2.c:100:41: identifier o
20001203-2.c:100:42: punctuator ,
20001203-2.c:100:44: keyword int
20001203-2.c:100:48: identifier i
20001203-2.c:100:49: punctuator )
20001203-2.c:101:1: punctuator {
20001203-2.c:102:3: identifier abort
20001203-2.c:102:9: punctuator (
20001203-2.c:102:10: punctuator )
20001203-2.c:102:11: punctuator ;
20001203-2.c:103:1: punctuator }
20001203-2.c:104:1: keyword void
20001203-2.c:105:1: identifier get_discrete_bounds
20001203-2.c:105:21: punctuator (
20001203-2.c:105:22: keyword long
20001203-2.c:105:27: keyword long
20001203-2.c:105:32: punctuator *
20001203-2.c:105:33: identifier lowp
20001203-2.c:105:37: punctuator ,
20001203-2.c:105:39: keyword long
20001203-2.c:105:44: keyword long
20001203-2.c:105:49: punctuator *
20001203-2.c:105:50: identifier highp
20001203-2.c:105:55: punctuator )
20001203-2.c:106:1: punctuator {
20001203-2.c:107:3: punctuator *
20001203-2.c:107:4: identifier lowp
20001203-2.c:107:9: punctuator =
20001203-2.c:107:11: constant 0
20001203-2.c:107:12: punctuator ;
20001203-2.c:108:3: punctuator *
20001203-2.c:108:4: identifier highp
20001203-2.c:108:10: punctuator =
20001203-2.c:108:12: constant 2
20001203-2.c:108:13: punctuator ;
20001203-2.c:109:1: punctuator }
20001203-2.c:111:1: keyword int
20001203-2.c:111:5: identifier main
20001203-2.c:111:9: punctuator (
20001203-2.c:111:10: keyword void
20001203-2.c:111:14: punctuator )
20001203-2.c:112:1: punctuator {
20001203-2.c:113:3: keyword struct
20001203-2.c:113:10: identifier type
20001203-2.c:113:15: identifier element_type
20001203-2.c:113:27: punctuator ;
20001203-2.c:114:3: keyword struct
20001203-2.c:114:10: identifier type
20001203-2.c:114:15: identifier result_type
20001203-2.c:114:26: punctuator ;
20001203-2.c:116:3: identifier memset
20001203-2.c:116:10: punctuator (
20001203-2.c:116:11: punctuator &
20001203-2.c:116:12: identifier element_type
20001203-2.c:116:24: punctuator ,
20001203-2.c:116:26: constant 0
20001203-2.c:116:27: punctuator ,
20001203-2.c:116:29: keyword sizeof
20001203-2.c:116:36: punctuator (
20001203-2.c:116:37: keyword struct
20001203-2.c:116:44: identifier type
20001203-2.c:116:48: punctuator )
20001203-2.c:116:49: punctuator )
20001203-2.c:116:50: punctuator ;
20001203-2.c:117:3: identifier memset
20001203-2.c:117:10: punctuator (
20001203-2.c:117:11: punctuator &
20001203-2.c:117:12: identifier result_type
20001203-2.c:117:23: punctuator ,
20001203-2.c:117:25: constant 0
20001203-2.c:117:26: punctuator ,
20001203-2.c:117:28: keyword sizeof
20001203-2.c:117:35: punctuator (
20001203-2.c:117:36: keyword struct
20001203-2.c:117:43: identifier type
20001203-2.c:117:47: punctuator )
20001203-2.c:117:48: punctuator )
20001203-2.c:117:49: punctuator ;
20001203-2.c:118:3: identifier element_type
20001203-2.c:118:15: punctuator .
20001203-2.c:118:16: identifier length
20001203-2.c:118:23: punctuator =
20001203-2.c:118:25: constant 4
20001203-2.c:118:26: punctuator ;
20001203-2.c:119:3: identifier create_array_type
20001203-2.c:119:21: punctuator (
20001203-2.c:119:22: punctuator &
20001203-2.c:119:23: identifier result_type
20001203-2.c:119:34: punctuator ,
20001203-2.c:119:36: punctuator &
20001203-2.c:119:37: identifier element_type
20001203-2.c:119:49: punctuator )
20001203-2.c:119:50: punctuator ;
20001203-2.c:120:3: keyword if
20001203-2.c:120:6: punctuator (
20001203-2.c:120:7: identifier result_type
20001203-2.c:120:18: punctuator .
20001203-2.c:120:19: identifier length
20001203-2.c:120:26: punctuator !=
20001203-2.c:120:29: constant 12
20001203-2.c:120:31: punctuator )
20001203-2.c:121:5: identifier abort
20001203-2.c:121:11: punctuator (
20001203-2.c:121:12: punctuator )
20001203-2.c:121:13: punctuator ;
20001203-2.c:122:3: identifier exit
20001203-2.c:122:8: punctuator (
20001203-2.c:122:9: constant 0
20001203-2.c:122:10: punctuator )
20001203-2.c:122:11: punctuator ;
20001203-2.c:123:1: punctuator }
