0
align-nest.c:2:1: keyword void
align-nest.c:2:6: identifier foo
align-nest.c:2:9: punctuator (
align-nest.c:2:10: keyword int
align-nest.c:2:14: identifier n
align-nest.c:2:15: punctuator )
align-nest.c:3:1: punctuator {
align-nest.c:4:3: keyword typedef
align-nest.c:4:11: keyword struct
align-nest.c:5:3: punctuator {
align-nest.c:6:5: keyword int
align-nest.c:6:9: identifier value
align-nest.c:6:14: punctuator ;
align-nest.c:7:3: punctuator }
align-nest.c:7:5: identifier myint
align-nest.c:7:10: punctuator ;
align-nest.c:9:3: keyword struct
align-nest.c:9:10: identifier S
align-nest.c:10:3: punctuator {
align-nest.c:11:5: keyword int
align-nest.c:11:9: identifier i
align-nest.c:11:10: punctuator [
align-nest.c:11:11: identifier n
align-nest.c:11:12: punctuator ]
align-nest.c:11:13: punctuator ;
align-nest.c:12:5: keyword unsigned
align-nest.c:12:14: keyword int
align-nest.c:12:18: identifier b
align-nest.c:12:19: punctuator :
align-nest.c:12:20: constant 1
align-nest.c:12:21: punctuator ;
align-nest.c:13:5: identifier myint
align-nest.c:13:11: identifier mi
align-nest.c:13:13: punctuator ;
align-nest.c:14:3: punctuator }
align-nest.c:14:5: identifier __attribute__
align-nest.c:14:19: punctuator (
align-nest.c:14:20: punctuator (
align-nest.c:14:21: identifier packed
align-nest.c:14:27: punctuator )
align-nest.c:14:28: punctuator )
align-nest.c:14:30: identifier __attribute__
align-nest.c:14:44: punctuator (
align-nest.c:14:45: punctuator (
align-nest.c:14:46: identifier aligned
align-nest.c:14:54: punctuator (
align-nest.c:14:55: constant 4
align-nest.c:14:56: punctuator )
align-nest.c:14:57: punctuator )
align-nest.c:14:58: punctuator )
align-nest.c:14:59: punctuator ;
align-nest.c:16:3: keyword struct
align-nest.c:16:10: identifier S
align-nest.c:16:12: identifier s
align-nest.c:16:13: punctuator [
align-nest.c:16:14: constant 2
align-nest.c:16:15: punctuator ]
align-nest.c:16:16: punctuator ;
align-nest.c:17:3: keyword int
align-nest.c:17:7: identifier k
align-nest.c:17:8: punctuator ;
align-nest.c:19:3: keyword for
align-nest.c:19:7: punctuator (
align-nest.c:19:8: identifier k
align-nest.c:19:10: punctuator =
align-nest.c:19:12: constant 0
align-nest.c:19:13: punctuator ;
align-nest.c:19:15: identifier k
align-nest.c:19:17: punctuator <
align-nest.c:19:19: constant 2
align-nest.c:19:20: punctuator ;
align-nest.c:19:22: identifier k
align-nest.c:19:24: punctuator ++
align-nest.c:19:26: punctuator )
align-nest.c:20:5: identifier s
align-nest.c:20:6: punctuator [
align-nest.c:20:7: identifier k
align-nest.c:20:8: punctuator ]
align-nest.c:20:9: punctuator .
align-nest.c:20:10: identifier mi
align-nest.c:20:12: punctuator .
align-nest.c:20:13: identifier value
align-nest.c:20:19: punctuator =
align-nest.c:20:21: constant 0
align-nest.c:20:22: punctuator ;
align-nest.c:21:1: punctuator }
align-nest.c:23:1: keyword int
align-nest.c:23:5: identifier main
align-nest.c:23:10: punctuator (
align-nest.c:23:11: punctuator )
align-nest.c:24:1: punctuator {
align-nest.c:25:3: identifier foo
align-nest.c:25:7: punctuator (
align-nest.c:25:8: constant 2
align-nest.c:25:9: punctuator )
align-nest.c:25:10: punctuator ;
align-nest.c:26:3: keyword return
align-nest.c:26:10: constant 0
align-nest.c:26:11: punctuator ;
align-nest.c:27:1: punctuator }
