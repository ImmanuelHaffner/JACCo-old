0
20080604-1.c:1:1: keyword struct
20080604-1.c:1:8: identifier barstruct
20080604-1.c:1:18: punctuator {
20080604-1.c:1:20: keyword char
20080604-1.c:1:25: keyword const
20080604-1.c:1:30: punctuator *
20080604-1.c:1:32: identifier some_string
20080604-1.c:1:43: punctuator ;
20080604-1.c:1:45: punctuator }
20080604-1.c:1:47: identifier x
20080604-1.c:1:48: punctuator ;
20080604-1.c:2:1: keyword extern
20080604-1.c:2:8: keyword void
20080604-1.c:2:13: identifier abort
20080604-1.c:2:19: punctuator (
20080604-1.c:2:20: keyword void
20080604-1.c:2:24: punctuator )
20080604-1.c:2:25: punctuator ;
20080604-1.c:3:1: keyword void
20080604-1.c:3:6: identifier __attribute__
20080604-1.c:3:19: punctuator (
20080604-1.c:3:20: punctuator (
20080604-1.c:3:21: identifier noinline
20080604-1.c:3:29: punctuator )
20080604-1.c:3:30: punctuator )
20080604-1.c:4:1: identifier foo
20080604-1.c:4:4: punctuator (
20080604-1.c:4:5: keyword void
20080604-1.c:4:9: punctuator )
20080604-1.c:5:1: punctuator {
20080604-1.c:6:3: keyword if
20080604-1.c:6:6: punctuator (
20080604-1.c:6:7: punctuator !
20080604-1.c:6:8: identifier x
20080604-1.c:6:9: punctuator .
20080604-1.c:6:10: identifier some_string
20080604-1.c:6:21: punctuator )
20080604-1.c:7:5: identifier abort
20080604-1.c:7:11: punctuator (
20080604-1.c:7:12: punctuator )
20080604-1.c:7:13: punctuator ;
20080604-1.c:8:1: punctuator }
20080604-1.c:9:1: keyword void
20080604-1.c:9:6: identifier baz
20080604-1.c:9:9: punctuator (
20080604-1.c:9:10: keyword int
20080604-1.c:9:14: identifier b
20080604-1.c:9:15: punctuator )
20080604-1.c:10:1: punctuator {
20080604-1.c:11:3: keyword struct
20080604-1.c:11:10: identifier barstruct
20080604-1.c:11:20: identifier bar
20080604-1.c:11:23: punctuator ;
20080604-1.c:12:3: keyword struct
20080604-1.c:12:10: identifier barstruct
20080604-1.c:12:19: punctuator *
20080604-1.c:12:21: identifier barptr
20080604-1.c:12:27: punctuator ;
20080604-1.c:13:3: keyword if
20080604-1.c:13:6: punctuator (
20080604-1.c:13:7: identifier b
20080604-1.c:13:8: punctuator )
20080604-1.c:14:5: identifier barptr
20080604-1.c:14:12: punctuator =
20080604-1.c:14:14: punctuator &
20080604-1.c:14:15: identifier bar
20080604-1.c:14:18: punctuator ;
20080604-1.c:15:3: keyword else
20080604-1.c:16:5: punctuator {
20080604-1.c:17:7: identifier barptr
20080604-1.c:17:14: punctuator =
20080604-1.c:17:16: punctuator &
20080604-1.c:17:17: identifier x
20080604-1.c:17:19: punctuator +
20080604-1.c:17:21: constant 1
20080604-1.c:17:22: punctuator ;
20080604-1.c:18:7: identifier barptr
20080604-1.c:18:14: punctuator =
20080604-1.c:18:16: identifier barptr
20080604-1.c:18:23: punctuator -
20080604-1.c:18:25: constant 1
20080604-1.c:18:26: punctuator ;
20080604-1.c:19:5: punctuator }
20080604-1.c:20:3: identifier barptr
20080604-1.c:20:9: punctuator ->
20080604-1.c:20:11: identifier some_string
20080604-1.c:20:23: punctuator =
20080604-1.c:20:25: string-literal "Everything OK"
20080604-1.c:20:40: punctuator ;
20080604-1.c:21:3: identifier foo
20080604-1.c:21:6: punctuator (
20080604-1.c:21:7: punctuator )
20080604-1.c:21:8: punctuator ;
20080604-1.c:22:3: identifier barptr
20080604-1.c:22:9: punctuator ->
20080604-1.c:22:11: identifier some_string
20080604-1.c:22:23: punctuator =
20080604-1.c:22:25: string-literal "Everything OK"
20080604-1.c:22:40: punctuator ;
20080604-1.c:23:1: punctuator }
20080604-1.c:24:1: keyword int
20080604-1.c:24:5: identifier main
20080604-1.c:24:9: punctuator (
20080604-1.c:24:10: punctuator )
20080604-1.c:25:1: punctuator {
20080604-1.c:26:3: identifier x
20080604-1.c:26:4: punctuator .
20080604-1.c:26:5: identifier some_string
20080604-1.c:26:17: punctuator =
20080604-1.c:26:19: punctuator (
20080604-1.c:26:20: keyword void
20080604-1.c:26:25: punctuator *
20080604-1.c:26:26: punctuator )
20080604-1.c:26:27: constant 0
20080604-1.c:26:28: punctuator ;
20080604-1.c:27:3: identifier baz
20080604-1.c:27:6: punctuator (
20080604-1.c:27:7: constant 0
20080604-1.c:27:8: punctuator )
20080604-1.c:27:9: punctuator ;
20080604-1.c:28:3: keyword if
20080604-1.c:28:6: punctuator (
20080604-1.c:28:7: punctuator !
20080604-1.c:28:8: identifier x
20080604-1.c:28:9: punctuator .
20080604-1.c:28:10: identifier some_string
20080604-1.c:28:21: punctuator )
20080604-1.c:29:5: identifier abort
20080604-1.c:29:11: punctuator (
20080604-1.c:29:12: punctuator )
20080604-1.c:29:13: punctuator ;
20080604-1.c:30:3: keyword return
20080604-1.c:30:10: constant 0
20080604-1.c:30:11: punctuator ;
20080604-1.c:31:1: punctuator }
