0
20010116-1.c:3:1: keyword extern
20010116-1.c:3:8: keyword void
20010116-1.c:3:13: identifier abort
20010116-1.c:3:19: punctuator (
20010116-1.c:3:20: keyword void
20010116-1.c:3:24: punctuator )
20010116-1.c:3:25: punctuator ;
20010116-1.c:4:1: keyword extern
20010116-1.c:4:8: keyword void
20010116-1.c:4:13: identifier exit
20010116-1.c:4:18: punctuator (
20010116-1.c:4:19: keyword int
20010116-1.c:4:22: punctuator )
20010116-1.c:4:23: punctuator ;
20010116-1.c:5:1: keyword extern
20010116-1.c:5:8: keyword void
20010116-1.c:5:13: identifier ok
20010116-1.c:5:16: punctuator (
20010116-1.c:5:17: keyword int
20010116-1.c:5:20: punctuator )
20010116-1.c:5:21: punctuator ;
20010116-1.c:7:1: keyword typedef
20010116-1.c:7:9: keyword struct
20010116-1.c:8:1: punctuator {
20010116-1.c:9:3: keyword int
20010116-1.c:9:7: identifier x
20010116-1.c:9:8: punctuator ,
20010116-1.c:9:10: identifier y
20010116-1.c:9:11: punctuator ,
20010116-1.c:9:13: identifier z
20010116-1.c:9:14: punctuator ;
20010116-1.c:10:1: punctuator }
20010116-1.c:10:3: identifier Data
20010116-1.c:10:7: punctuator ;
20010116-1.c:12:1: keyword void
20010116-1.c:12:6: identifier find
20010116-1.c:12:11: punctuator (
20010116-1.c:12:12: identifier Data
20010116-1.c:12:17: punctuator *
20010116-1.c:12:18: identifier first
20010116-1.c:12:23: punctuator ,
20010116-1.c:12:25: identifier Data
20010116-1.c:12:30: punctuator *
20010116-1.c:12:31: identifier last
20010116-1.c:12:35: punctuator )
20010116-1.c:13:1: punctuator {
20010116-1.c:14:3: keyword int
20010116-1.c:14:7: identifier i
20010116-1.c:14:8: punctuator ;
20010116-1.c:15:3: keyword for
20010116-1.c:15:7: punctuator (
20010116-1.c:15:8: identifier i
20010116-1.c:15:10: punctuator =
20010116-1.c:15:12: punctuator (
20010116-1.c:15:13: identifier last
20010116-1.c:15:18: punctuator -
20010116-1.c:15:20: identifier first
20010116-1.c:15:25: punctuator )
20010116-1.c:15:27: punctuator >>
20010116-1.c:15:30: constant 2
20010116-1.c:15:31: punctuator ;
20010116-1.c:15:33: identifier i
20010116-1.c:15:35: punctuator >
20010116-1.c:15:37: constant 0
20010116-1.c:15:38: punctuator ;
20010116-1.c:15:40: punctuator --
20010116-1.c:15:42: identifier i
20010116-1.c:15:43: punctuator )
20010116-1.c:16:5: identifier ok
20010116-1.c:16:7: punctuator (
20010116-1.c:16:8: identifier i
20010116-1.c:16:9: punctuator )
20010116-1.c:16:10: punctuator ;
20010116-1.c:17:3: identifier abort
20010116-1.c:17:9: punctuator (
20010116-1.c:17:10: punctuator )
20010116-1.c:17:11: punctuator ;
20010116-1.c:18:1: punctuator }
20010116-1.c:20:1: keyword void
20010116-1.c:20:6: identifier ok
20010116-1.c:20:8: punctuator (
20010116-1.c:20:9: keyword int
20010116-1.c:20:13: identifier i
20010116-1.c:20:14: punctuator )
20010116-1.c:21:1: punctuator {
20010116-1.c:22:3: keyword if
20010116-1.c:22:6: punctuator (
20010116-1.c:22:7: identifier i
20010116-1.c:22:9: punctuator !=
20010116-1.c:22:12: constant 1
20010116-1.c:22:13: punctuator )
20010116-1.c:23:5: identifier abort
20010116-1.c:23:11: punctuator (
20010116-1.c:23:12: punctuator )
20010116-1.c:23:13: punctuator ;
20010116-1.c:24:3: identifier exit
20010116-1.c:24:8: punctuator (
20010116-1.c:24:9: constant 0
20010116-1.c:24:10: punctuator )
20010116-1.c:24:11: punctuator ;
20010116-1.c:25:1: punctuator }
20010116-1.c:27:1: keyword int
20010116-1.c:28:1: identifier main
20010116-1.c:28:6: punctuator (
20010116-1.c:28:7: punctuator )
20010116-1.c:29:1: punctuator {
20010116-1.c:30:3: identifier Data
20010116-1.c:30:8: identifier DataList
20010116-1.c:30:16: punctuator [
20010116-1.c:30:17: constant 4
20010116-1.c:30:18: punctuator ]
20010116-1.c:30:19: punctuator ;
20010116-1.c:31:3: identifier find
20010116-1.c:31:8: punctuator (
20010116-1.c:31:9: identifier DataList
20010116-1.c:31:18: punctuator +
20010116-1.c:31:20: constant 0
20010116-1.c:31:21: punctuator ,
20010116-1.c:31:23: identifier DataList
20010116-1.c:31:32: punctuator +
20010116-1.c:31:34: constant 4
20010116-1.c:31:35: punctuator )
20010116-1.c:31:36: punctuator ;
20010116-1.c:32:1: punctuator }
