0
920731-1.c:1:1: identifier f
920731-1.c:1:2: punctuator (
920731-1.c:1:3: identifier x
920731-1.c:1:4: punctuator )
920731-1.c:1:5: punctuator {
920731-1.c:1:6: keyword int
920731-1.c:1:10: identifier i
920731-1.c:1:11: punctuator ;
920731-1.c:1:12: keyword for
920731-1.c:1:15: punctuator (
920731-1.c:1:16: identifier i
920731-1.c:1:17: punctuator =
920731-1.c:1:18: constant 0
920731-1.c:1:19: punctuator ;
920731-1.c:1:20: identifier i
920731-1.c:1:21: punctuator <
920731-1.c:1:22: constant 8
920731-1.c:1:23: punctuator &&
920731-1.c:1:25: punctuator (
920731-1.c:1:26: identifier x
920731-1.c:1:27: punctuator &
920731-1.c:1:28: constant 1
920731-1.c:1:29: punctuator )
920731-1.c:1:30: punctuator ==
920731-1.c:1:32: constant 0
920731-1.c:1:33: punctuator ;
920731-1.c:1:34: identifier x
920731-1.c:1:35: punctuator >>=
920731-1.c:1:38: constant 1
920731-1.c:1:39: punctuator ,
920731-1.c:1:40: identifier i
920731-1.c:1:41: punctuator ++
920731-1.c:1:43: punctuator )
920731-1.c:1:44: punctuator ;
920731-1.c:1:45: keyword return
920731-1.c:1:52: identifier i
920731-1.c:1:53: punctuator ;
920731-1.c:1:54: punctuator }
920731-1.c:2:1: identifier main
920731-1.c:2:5: punctuator (
920731-1.c:2:6: punctuator )
920731-1.c:2:7: punctuator {
920731-1.c:2:8: keyword if
920731-1.c:2:10: punctuator (
920731-1.c:2:11: identifier f
920731-1.c:2:12: punctuator (
920731-1.c:2:13: constant 4
920731-1.c:2:14: punctuator )
920731-1.c:2:15: punctuator !=
920731-1.c:2:17: constant 2
920731-1.c:2:18: punctuator )
920731-1.c:2:19: identifier abort
920731-1.c:2:24: punctuator (
920731-1.c:2:25: punctuator )
920731-1.c:2:26: punctuator ;
920731-1.c:2:27: identifier exit
920731-1.c:2:31: punctuator (
920731-1.c:2:32: constant 0
920731-1.c:2:33: punctuator )
920731-1.c:2:34: punctuator ;
920731-1.c:2:35: punctuator }
