0
loop-15.c:3:1: keyword void
loop-15.c:4:1: identifier foo
loop-15.c:4:5: punctuator (
loop-15.c:4:6: keyword unsigned
loop-15.c:4:15: keyword long
loop-15.c:4:20: punctuator *
loop-15.c:4:21: identifier start
loop-15.c:4:26: punctuator ,
loop-15.c:4:28: keyword unsigned
loop-15.c:4:37: keyword long
loop-15.c:4:42: punctuator *
loop-15.c:4:43: identifier end
loop-15.c:4:46: punctuator )
loop-15.c:5:1: punctuator {
loop-15.c:6:3: keyword unsigned
loop-15.c:6:12: keyword long
loop-15.c:6:17: punctuator *
loop-15.c:6:18: identifier temp
loop-15.c:6:23: punctuator =
loop-15.c:6:25: identifier end
loop-15.c:6:29: punctuator -
loop-15.c:6:31: constant 1
loop-15.c:6:32: punctuator ;
loop-15.c:8:3: keyword while
loop-15.c:8:9: punctuator (
loop-15.c:8:10: identifier end
loop-15.c:8:14: punctuator >
loop-15.c:8:16: identifier start
loop-15.c:8:21: punctuator )
loop-15.c:9:5: punctuator *
loop-15.c:9:6: identifier end
loop-15.c:9:9: punctuator --
loop-15.c:9:12: punctuator =
loop-15.c:9:14: punctuator *
loop-15.c:9:15: identifier temp
loop-15.c:9:19: punctuator --
loop-15.c:9:21: punctuator ;
loop-15.c:10:1: punctuator }
loop-15.c:12:1: keyword int
loop-15.c:13:1: identifier main
loop-15.c:13:6: punctuator (
loop-15.c:13:7: keyword void
loop-15.c:13:11: punctuator )
loop-15.c:14:1: punctuator {
loop-15.c:15:3: keyword unsigned
loop-15.c:15:12: keyword long
loop-15.c:15:17: identifier a
loop-15.c:15:18: punctuator [
loop-15.c:15:19: constant 5
loop-15.c:15:20: punctuator ]
loop-15.c:15:21: punctuator ;
loop-15.c:16:3: keyword int
loop-15.c:16:7: identifier start
loop-15.c:16:12: punctuator ,
loop-15.c:16:14: identifier end
loop-15.c:16:17: punctuator ,
loop-15.c:16:19: identifier k
loop-15.c:16:20: punctuator ;
loop-15.c:18:3: keyword for
loop-15.c:18:7: punctuator (
loop-15.c:18:8: identifier start
loop-15.c:18:14: punctuator =
loop-15.c:18:16: constant 0
loop-15.c:18:17: punctuator ;
loop-15.c:18:19: identifier start
loop-15.c:18:25: punctuator <
loop-15.c:18:27: constant 5
loop-15.c:18:28: punctuator ;
loop-15.c:18:30: identifier start
loop-15.c:18:35: punctuator ++
loop-15.c:18:37: punctuator )
loop-15.c:19:5: keyword for
loop-15.c:19:9: punctuator (
loop-15.c:19:10: identifier end
loop-15.c:19:14: punctuator =
loop-15.c:19:16: constant 0
loop-15.c:19:17: punctuator ;
loop-15.c:19:19: identifier end
loop-15.c:19:23: punctuator <
loop-15.c:19:25: constant 5
loop-15.c:19:26: punctuator ;
loop-15.c:19:28: identifier end
loop-15.c:19:31: punctuator ++
loop-15.c:19:33: punctuator )
loop-15.c:20:7: punctuator {
loop-15.c:21:2: keyword for
loop-15.c:21:6: punctuator (
loop-15.c:21:7: identifier k
loop-15.c:21:9: punctuator =
loop-15.c:21:11: constant 0
loop-15.c:21:12: punctuator ;
loop-15.c:21:14: identifier k
loop-15.c:21:16: punctuator <
loop-15.c:21:18: constant 5
loop-15.c:21:19: punctuator ;
loop-15.c:21:21: identifier k
loop-15.c:21:22: punctuator ++
loop-15.c:21:24: punctuator )
loop-15.c:22:4: identifier a
loop-15.c:22:5: punctuator [
loop-15.c:22:6: identifier k
loop-15.c:22:7: punctuator ]
loop-15.c:22:9: punctuator =
loop-15.c:22:11: identifier k
loop-15.c:22:12: punctuator ;
loop-15.c:24:2: identifier foo
loop-15.c:24:6: punctuator (
loop-15.c:24:7: identifier a
loop-15.c:24:9: punctuator +
loop-15.c:24:11: identifier start
loop-15.c:24:16: punctuator ,
loop-15.c:24:18: identifier a
loop-15.c:24:20: punctuator +
loop-15.c:24:22: identifier end
loop-15.c:24:25: punctuator )
loop-15.c:24:26: punctuator ;
loop-15.c:26:2: keyword for
loop-15.c:26:6: punctuator (
loop-15.c:26:7: identifier k
loop-15.c:26:9: punctuator =
loop-15.c:26:11: constant 0
loop-15.c:26:12: punctuator ;
loop-15.c:26:14: identifier k
loop-15.c:26:16: punctuator <=
loop-15.c:26:19: identifier start
loop-15.c:26:24: punctuator ;
loop-15.c:26:26: identifier k
loop-15.c:26:27: punctuator ++
loop-15.c:26:29: punctuator )
loop-15.c:27:4: keyword if
loop-15.c:27:7: punctuator (
loop-15.c:27:8: identifier a
loop-15.c:27:9: punctuator [
loop-15.c:27:10: identifier k
loop-15.c:27:11: punctuator ]
loop-15.c:27:13: punctuator !=
loop-15.c:27:16: identifier k
loop-15.c:27:17: punctuator )
loop-15.c:28:6: identifier abort
loop-15.c:28:12: punctuator (
loop-15.c:28:13: punctuator )
loop-15.c:28:14: punctuator ;
loop-15.c:30:2: keyword for
loop-15.c:30:6: punctuator (
loop-15.c:30:7: identifier k
loop-15.c:30:9: punctuator =
loop-15.c:30:11: identifier start
loop-15.c:30:17: punctuator +
loop-15.c:30:19: constant 1
loop-15.c:30:20: punctuator ;
loop-15.c:30:22: identifier k
loop-15.c:30:24: punctuator <=
loop-15.c:30:27: identifier end
loop-15.c:30:30: punctuator ;
loop-15.c:30:32: identifier k
loop-15.c:30:33: punctuator ++
loop-15.c:30:35: punctuator )
loop-15.c:31:4: keyword if
loop-15.c:31:7: punctuator (
loop-15.c:31:8: identifier a
loop-15.c:31:9: punctuator [
loop-15.c:31:10: identifier k
loop-15.c:31:11: punctuator ]
loop-15.c:31:13: punctuator !=
loop-15.c:31:16: identifier k
loop-15.c:31:18: punctuator -
loop-15.c:31:20: constant 1
loop-15.c:31:21: punctuator )
loop-15.c:32:6: identifier abort
loop-15.c:32:12: punctuator (
loop-15.c:32:13: punctuator )
loop-15.c:32:14: punctuator ;
loop-15.c:34:2: keyword for
loop-15.c:34:6: punctuator (
loop-15.c:34:7: identifier k
loop-15.c:34:9: punctuator =
loop-15.c:34:11: identifier end
loop-15.c:34:15: punctuator +
loop-15.c:34:17: constant 1
loop-15.c:34:18: punctuator ;
loop-15.c:34:20: identifier k
loop-15.c:34:22: punctuator <
loop-15.c:34:24: constant 5
loop-15.c:34:25: punctuator ;
loop-15.c:34:27: identifier k
loop-15.c:34:28: punctuator ++
loop-15.c:34:30: punctuator )
loop-15.c:35:4: keyword if
loop-15.c:35:7: punctuator (
loop-15.c:35:8: identifier a
loop-15.c:35:9: punctuator [
loop-15.c:35:10: identifier k
loop-15.c:35:11: punctuator ]
loop-15.c:35:13: punctuator !=
loop-15.c:35:16: identifier k
loop-15.c:35:17: punctuator )
loop-15.c:36:6: identifier abort
loop-15.c:36:12: punctuator (
loop-15.c:36:13: punctuator )
loop-15.c:36:14: punctuator ;
loop-15.c:37:7: punctuator }
loop-15.c:39:3: keyword return
loop-15.c:39:10: constant 0
loop-15.c:39:11: punctuator ;
loop-15.c:40:1: punctuator }
