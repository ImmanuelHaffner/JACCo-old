0
20071030-1.c:7:1: keyword extern
20071030-1.c:7:8: keyword void
20071030-1.c:7:13: punctuator *
20071030-1.c:7:14: identifier memset
20071030-1.c:7:21: punctuator (
20071030-1.c:7:22: keyword void
20071030-1.c:7:27: punctuator *
20071030-1.c:7:28: punctuator ,
20071030-1.c:7:30: keyword int
20071030-1.c:7:33: punctuator ,
20071030-1.c:7:35: keyword long
20071030-1.c:7:40: keyword unsigned
20071030-1.c:7:49: keyword int
20071030-1.c:7:52: punctuator )
20071030-1.c:7:53: punctuator ;
20071030-1.c:8:1: keyword extern
20071030-1.c:8:8: keyword void
20071030-1.c:8:13: identifier abort
20071030-1.c:8:19: punctuator (
20071030-1.c:8:20: keyword void
20071030-1.c:8:24: punctuator )
20071030-1.c:8:25: punctuator ;
20071030-1.c:10:1: keyword typedef
20071030-1.c:10:9: keyword struct
20071030-1.c:11:1: punctuator {
20071030-1.c:12:9: keyword unsigned
20071030-1.c:12:18: keyword char
20071030-1.c:12:23: identifier colormod
20071030-1.c:12:31: punctuator ;
20071030-1.c:13:1: punctuator }
20071030-1.c:13:3: identifier entity_state_t
20071030-1.c:13:17: punctuator ;
20071030-1.c:15:1: keyword typedef
20071030-1.c:15:9: keyword struct
20071030-1.c:16:1: punctuator {
20071030-1.c:17:9: keyword int
20071030-1.c:17:13: identifier num_entities
20071030-1.c:17:25: punctuator ;
20071030-1.c:18:9: identifier entity_state_t
20071030-1.c:18:24: punctuator *
20071030-1.c:18:25: identifier entities
20071030-1.c:18:33: punctuator ;
20071030-1.c:19:1: punctuator }
20071030-1.c:19:3: identifier packet_entities_t
20071030-1.c:19:20: punctuator ;
20071030-1.c:21:1: keyword typedef
20071030-1.c:21:9: keyword struct
20071030-1.c:22:1: punctuator {
20071030-1.c:23:9: keyword double
20071030-1.c:23:16: identifier senttime
20071030-1.c:23:24: punctuator ;
20071030-1.c:24:9: keyword float
20071030-1.c:24:15: identifier ping_time
20071030-1.c:24:24: punctuator ;
20071030-1.c:25:9: identifier packet_entities_t
20071030-1.c:25:27: identifier entities
20071030-1.c:25:35: punctuator ;
20071030-1.c:26:1: punctuator }
20071030-1.c:26:3: identifier client_frame_t
20071030-1.c:26:17: punctuator ;
20071030-1.c:28:1: keyword typedef
20071030-1.c:28:9: keyword enum
20071030-1.c:29:1: punctuator {
20071030-1.c:30:9: identifier cs_free
20071030-1.c:30:16: punctuator ,
20071030-1.c:31:9: identifier cs_server
20071030-1.c:31:18: punctuator ,
20071030-1.c:32:9: identifier cs_zombie
20071030-1.c:32:18: punctuator ,
20071030-1.c:33:9: identifier cs_connected
20071030-1.c:33:21: punctuator ,
20071030-1.c:34:9: identifier cs_spawned
20071030-1.c:35:1: punctuator }
20071030-1.c:35:3: identifier sv_client_state_t
20071030-1.c:35:20: punctuator ;
20071030-1.c:37:1: keyword typedef
20071030-1.c:37:9: keyword struct
20071030-1.c:37:16: identifier client_s
20071030-1.c:38:1: punctuator {
20071030-1.c:39:9: identifier sv_client_state_t
20071030-1.c:39:27: identifier state
20071030-1.c:39:32: punctuator ;
20071030-1.c:40:9: keyword int
20071030-1.c:40:13: identifier ping
20071030-1.c:40:17: punctuator ;
20071030-1.c:41:9: identifier client_frame_t
20071030-1.c:41:24: identifier frames
20071030-1.c:41:30: punctuator [
20071030-1.c:41:31: constant 64
20071030-1.c:41:33: punctuator ]
20071030-1.c:41:34: punctuator ;
20071030-1.c:42:1: punctuator }
20071030-1.c:42:3: identifier client_t
20071030-1.c:42:11: punctuator ;
20071030-1.c:44:1: keyword int
20071030-1.c:44:5: identifier CalcPing
20071030-1.c:44:14: punctuator (
20071030-1.c:44:15: identifier client_t
20071030-1.c:44:24: punctuator *
20071030-1.c:44:25: identifier cl
20071030-1.c:44:27: punctuator )
20071030-1.c:45:1: punctuator {
20071030-1.c:46:9: keyword float
20071030-1.c:46:15: identifier ping
20071030-1.c:46:19: punctuator ;
20071030-1.c:47:9: keyword int
20071030-1.c:47:13: identifier count
20071030-1.c:47:18: punctuator ,
20071030-1.c:47:20: identifier i
20071030-1.c:47:21: punctuator ;
20071030-1.c:48:9: keyword register
20071030-1.c:48:18: identifier client_frame_t
20071030-1.c:48:33: punctuator *
20071030-1.c:48:34: identifier frame
20071030-1.c:48:39: punctuator ;
20071030-1.c:50:9: keyword if
20071030-1.c:50:12: punctuator (
20071030-1.c:50:13: identifier cl
20071030-1.c:50:15: punctuator ->
20071030-1.c:50:17: identifier state
20071030-1.c:50:23: punctuator ==
20071030-1.c:50:26: identifier cs_server
20071030-1.c:50:35: punctuator )
20071030-1.c:51:17: keyword return
20071030-1.c:51:24: identifier cl
20071030-1.c:51:26: punctuator ->
20071030-1.c:51:28: identifier ping
20071030-1.c:51:32: punctuator ;
20071030-1.c:52:9: identifier ping
20071030-1.c:52:14: punctuator =
20071030-1.c:52:16: constant 0
20071030-1.c:52:17: punctuator ;
20071030-1.c:53:9: identifier count
20071030-1.c:53:15: punctuator =
20071030-1.c:53:17: constant 0
20071030-1.c:53:18: punctuator ;
20071030-1.c:54:9: keyword for
20071030-1.c:54:13: punctuator (
20071030-1.c:54:14: identifier frame
20071030-1.c:54:20: punctuator =
20071030-1.c:54:22: identifier cl
20071030-1.c:54:24: punctuator ->
20071030-1.c:54:26: identifier frames
20071030-1.c:54:32: punctuator ,
20071030-1.c:54:34: identifier i
20071030-1.c:54:36: punctuator =
20071030-1.c:54:38: constant 0
20071030-1.c:54:39: punctuator ;
20071030-1.c:54:41: identifier i
20071030-1.c:54:43: punctuator <
20071030-1.c:54:45: constant 64
20071030-1.c:54:47: punctuator ;
20071030-1.c:54:49: identifier i
20071030-1.c:54:50: punctuator ++
20071030-1.c:54:52: punctuator ,
20071030-1.c:54:54: identifier frame
20071030-1.c:54:59: punctuator ++
20071030-1.c:54:61: punctuator )
20071030-1.c:54:63: punctuator {
20071030-1.c:55:17: keyword if
20071030-1.c:55:20: punctuator (
20071030-1.c:55:21: identifier frame
20071030-1.c:55:26: punctuator ->
20071030-1.c:55:28: identifier ping_time
20071030-1.c:55:38: punctuator >
20071030-1.c:55:40: constant 0
20071030-1.c:55:41: punctuator )
20071030-1.c:55:43: punctuator {
20071030-1.c:56:25: identifier ping
20071030-1.c:56:30: punctuator +=
20071030-1.c:56:33: identifier frame
20071030-1.c:56:38: punctuator ->
20071030-1.c:56:40: identifier ping_time
20071030-1.c:56:49: punctuator ;
20071030-1.c:57:25: identifier count
20071030-1.c:57:30: punctuator ++
20071030-1.c:57:32: punctuator ;
20071030-1.c:58:17: punctuator }
20071030-1.c:59:9: punctuator }
20071030-1.c:60:9: keyword if
20071030-1.c:60:12: punctuator (
20071030-1.c:60:13: punctuator !
20071030-1.c:60:14: identifier count
20071030-1.c:60:19: punctuator )
20071030-1.c:61:17: keyword return
20071030-1.c:61:24: constant 9999
20071030-1.c:61:28: punctuator ;
20071030-1.c:62:9: identifier ping
20071030-1.c:62:14: punctuator /=
20071030-1.c:62:17: identifier count
20071030-1.c:62:22: punctuator ;
20071030-1.c:64:9: keyword return
20071030-1.c:64:16: identifier ping
20071030-1.c:64:21: punctuator *
20071030-1.c:64:23: constant 1000
20071030-1.c:64:27: punctuator ;
20071030-1.c:65:1: punctuator }
20071030-1.c:67:1: keyword int
20071030-1.c:67:5: identifier main
20071030-1.c:67:9: punctuator (
20071030-1.c:67:10: keyword void
20071030-1.c:67:14: punctuator )
20071030-1.c:68:1: punctuator {
20071030-1.c:69:4: identifier client_t
20071030-1.c:69:13: identifier cl
20071030-1.c:69:15: punctuator ;
20071030-1.c:71:4: identifier memset
20071030-1.c:71:10: punctuator (
20071030-1.c:71:11: punctuator &
20071030-1.c:71:12: identifier cl
20071030-1.c:71:14: punctuator ,
20071030-1.c:71:16: constant 0
20071030-1.c:71:17: punctuator ,
20071030-1.c:71:19: keyword sizeof
20071030-1.c:71:25: punctuator (
20071030-1.c:71:26: identifier cl
20071030-1.c:71:28: punctuator )
20071030-1.c:71:29: punctuator )
20071030-1.c:71:30: punctuator ;
20071030-1.c:73:4: identifier cl
20071030-1.c:73:6: punctuator .
20071030-1.c:73:7: identifier frames
20071030-1.c:73:13: punctuator [
20071030-1.c:73:14: constant 0
20071030-1.c:73:15: punctuator ]
20071030-1.c:73:16: punctuator .
20071030-1.c:73:17: identifier ping_time
20071030-1.c:73:27: punctuator =
20071030-1.c:73:29: constant 1.0f
20071030-1.c:73:33: punctuator ;
20071030-1.c:75:4: keyword if
20071030-1.c:75:7: punctuator (
20071030-1.c:75:8: identifier CalcPing
20071030-1.c:75:16: punctuator (
20071030-1.c:75:17: punctuator &
20071030-1.c:75:18: identifier cl
20071030-1.c:75:20: punctuator )
20071030-1.c:75:22: punctuator !=
20071030-1.c:75:25: constant 1000
20071030-1.c:75:29: punctuator )
20071030-1.c:76:6: identifier abort
20071030-1.c:76:11: punctuator (
20071030-1.c:76:12: punctuator )
20071030-1.c:76:13: punctuator ;
20071030-1.c:78:4: keyword return
20071030-1.c:78:11: constant 0
20071030-1.c:78:12: punctuator ;
20071030-1.c:79:1: punctuator }
