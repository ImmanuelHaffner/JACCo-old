0
ipa-sra-1.c:4:1: keyword struct
ipa-sra-1.c:4:8: identifier bovid
ipa-sra-1.c:5:1: punctuator {
ipa-sra-1.c:6:3: keyword float
ipa-sra-1.c:6:9: identifier red
ipa-sra-1.c:6:12: punctuator ;
ipa-sra-1.c:7:3: keyword int
ipa-sra-1.c:7:7: identifier green
ipa-sra-1.c:7:12: punctuator ;
ipa-sra-1.c:8:3: keyword void
ipa-sra-1.c:8:8: punctuator *
ipa-sra-1.c:8:9: identifier blue
ipa-sra-1.c:8:13: punctuator ;
ipa-sra-1.c:9:1: punctuator }
ipa-sra-1.c:9:2: punctuator ;
ipa-sra-1.c:11:1: keyword static
ipa-sra-1.c:11:8: keyword int
ipa-sra-1.c:12:1: identifier __attribute__
ipa-sra-1.c:12:14: punctuator (
ipa-sra-1.c:12:15: punctuator (
ipa-sra-1.c:12:16: identifier noinline
ipa-sra-1.c:12:24: punctuator )
ipa-sra-1.c:12:25: punctuator )
ipa-sra-1.c:13:1: identifier ox
ipa-sra-1.c:13:4: punctuator (
ipa-sra-1.c:13:5: keyword int
ipa-sra-1.c:13:9: identifier fail
ipa-sra-1.c:13:13: punctuator ,
ipa-sra-1.c:13:15: keyword struct
ipa-sra-1.c:13:22: identifier bovid
ipa-sra-1.c:13:28: punctuator *
ipa-sra-1.c:13:29: identifier cow
ipa-sra-1.c:13:32: punctuator )
ipa-sra-1.c:14:1: punctuator {
ipa-sra-1.c:15:3: keyword int
ipa-sra-1.c:15:7: identifier r
ipa-sra-1.c:15:8: punctuator ;
ipa-sra-1.c:16:3: keyword if
ipa-sra-1.c:16:6: punctuator (
ipa-sra-1.c:16:7: identifier fail
ipa-sra-1.c:16:11: punctuator )
ipa-sra-1.c:17:5: identifier r
ipa-sra-1.c:17:7: punctuator =
ipa-sra-1.c:17:9: identifier cow
ipa-sra-1.c:17:12: punctuator ->
ipa-sra-1.c:17:14: identifier red
ipa-sra-1.c:17:17: punctuator ;
ipa-sra-1.c:18:3: keyword else
ipa-sra-1.c:19:5: identifier r
ipa-sra-1.c:19:7: punctuator =
ipa-sra-1.c:19:9: constant 0
ipa-sra-1.c:19:10: punctuator ;
ipa-sra-1.c:20:3: keyword return
ipa-sra-1.c:20:10: identifier r
ipa-sra-1.c:20:11: punctuator ;
ipa-sra-1.c:21:1: punctuator }
ipa-sra-1.c:23:1: keyword int
ipa-sra-1.c:23:5: identifier main
ipa-sra-1.c:23:10: punctuator (
ipa-sra-1.c:23:11: keyword int
ipa-sra-1.c:23:15: identifier argc
ipa-sra-1.c:23:19: punctuator ,
ipa-sra-1.c:23:21: keyword char
ipa-sra-1.c:23:26: punctuator *
ipa-sra-1.c:23:27: identifier argv
ipa-sra-1.c:23:31: punctuator [
ipa-sra-1.c:23:32: punctuator ]
ipa-sra-1.c:23:33: punctuator )
ipa-sra-1.c:24:1: punctuator {
ipa-sra-1.c:25:3: keyword int
ipa-sra-1.c:25:7: identifier r
ipa-sra-1.c:25:8: punctuator ;
ipa-sra-1.c:27:3: identifier r
ipa-sra-1.c:27:5: punctuator =
ipa-sra-1.c:27:7: identifier ox
ipa-sra-1.c:27:10: punctuator (
ipa-sra-1.c:27:11: punctuator (
ipa-sra-1.c:27:12: identifier argc
ipa-sra-1.c:27:17: punctuator >
ipa-sra-1.c:27:19: constant 2000
ipa-sra-1.c:27:23: punctuator )
ipa-sra-1.c:27:24: punctuator ,
ipa-sra-1.c:27:26: punctuator (
ipa-sra-1.c:27:27: keyword void
ipa-sra-1.c:27:32: punctuator *
ipa-sra-1.c:27:33: punctuator )
ipa-sra-1.c:27:35: constant 0
ipa-sra-1.c:27:36: punctuator )
ipa-sra-1.c:27:37: punctuator ;
ipa-sra-1.c:28:3: keyword return
ipa-sra-1.c:28:10: identifier r
ipa-sra-1.c:28:11: punctuator ;
ipa-sra-1.c:29:1: punctuator }
