0
va-arg-15.c:1:1: keyword typedef
va-arg-15.c:1:9: identifier __builtin_va_list
va-arg-15.c:1:27: identifier __gnuc_va_list
va-arg-15.c:1:41: punctuator ;
va-arg-15.c:2:1: keyword typedef
va-arg-15.c:2:9: identifier __gnuc_va_list
va-arg-15.c:2:24: identifier va_list
va-arg-15.c:2:31: punctuator ;
va-arg-15.c:4:1: keyword void
va-arg-15.c:4:6: identifier vafunction
va-arg-15.c:4:17: punctuator (
va-arg-15.c:4:18: keyword char
va-arg-15.c:4:23: punctuator *
va-arg-15.c:4:24: identifier dummy
va-arg-15.c:4:29: punctuator ,
va-arg-15.c:4:31: punctuator ...
va-arg-15.c:4:34: punctuator )
va-arg-15.c:5:1: punctuator {
va-arg-15.c:6:3: keyword double
va-arg-15.c:6:10: identifier darg
va-arg-15.c:6:14: punctuator ;
va-arg-15.c:7:3: keyword int
va-arg-15.c:7:7: identifier iarg
va-arg-15.c:7:11: punctuator ;
va-arg-15.c:8:3: keyword int
va-arg-15.c:8:7: identifier flag
va-arg-15.c:8:12: punctuator =
va-arg-15.c:8:14: constant 0
va-arg-15.c:8:15: punctuator ;
va-arg-15.c:9:3: keyword int
va-arg-15.c:9:7: identifier i
va-arg-15.c:9:8: punctuator ;
va-arg-15.c:10:3: identifier va_list
va-arg-15.c:10:11: identifier ap
va-arg-15.c:10:13: punctuator ;
va-arg-15.c:12:3: identifier __builtin_va_start
va-arg-15.c:12:21: punctuator (
va-arg-15.c:12:22: identifier ap
va-arg-15.c:12:24: punctuator ,
va-arg-15.c:12:25: identifier dummy
va-arg-15.c:12:30: punctuator )
va-arg-15.c:12:31: punctuator ;
va-arg-15.c:13:3: keyword for
va-arg-15.c:13:7: punctuator (
va-arg-15.c:13:8: identifier i
va-arg-15.c:13:10: punctuator =
va-arg-15.c:13:12: constant 1
va-arg-15.c:13:13: punctuator ;
va-arg-15.c:13:15: identifier i
va-arg-15.c:13:17: punctuator <=
va-arg-15.c:13:20: constant 18
va-arg-15.c:13:22: punctuator ;
va-arg-15.c:13:24: identifier i
va-arg-15.c:13:25: punctuator ++
va-arg-15.c:13:27: punctuator ,
va-arg-15.c:13:29: identifier flag
va-arg-15.c:13:33: punctuator ++
va-arg-15.c:13:35: punctuator )
va-arg-15.c:14:5: punctuator {
va-arg-15.c:15:7: keyword if
va-arg-15.c:15:10: punctuator (
va-arg-15.c:15:11: identifier flag
va-arg-15.c:15:16: punctuator &
va-arg-15.c:15:18: constant 1
va-arg-15.c:15:19: punctuator )
va-arg-15.c:16:2: punctuator {
va-arg-15.c:17:4: identifier darg
va-arg-15.c:17:9: punctuator =
va-arg-15.c:17:11: identifier __builtin_va_arg
va-arg-15.c:17:27: punctuator (
va-arg-15.c:17:28: identifier ap
va-arg-15.c:17:30: punctuator ,
va-arg-15.c:17:31: keyword double
va-arg-15.c:17:37: punctuator )
va-arg-15.c:17:38: punctuator ;
va-arg-15.c:18:4: keyword if
va-arg-15.c:18:7: punctuator (
va-arg-15.c:18:8: identifier darg
va-arg-15.c:18:13: punctuator !=
va-arg-15.c:18:16: punctuator (
va-arg-15.c:18:17: keyword double
va-arg-15.c:18:23: punctuator )
va-arg-15.c:18:24: identifier i
va-arg-15.c:18:25: punctuator )
va-arg-15.c:19:6: identifier abort
va-arg-15.c:19:11: punctuator (
va-arg-15.c:19:12: punctuator )
va-arg-15.c:19:13: punctuator ;
va-arg-15.c:20:2: punctuator }
va-arg-15.c:21:7: keyword else
va-arg-15.c:22:2: punctuator {
va-arg-15.c:23:4: identifier iarg
va-arg-15.c:23:9: punctuator =
va-arg-15.c:23:11: identifier __builtin_va_arg
va-arg-15.c:23:27: punctuator (
va-arg-15.c:23:28: identifier ap
va-arg-15.c:23:30: punctuator ,
va-arg-15.c:23:31: keyword int
va-arg-15.c:23:34: punctuator )
va-arg-15.c:23:35: punctuator ;
va-arg-15.c:24:4: keyword if
va-arg-15.c:24:7: punctuator (
va-arg-15.c:24:8: identifier iarg
va-arg-15.c:24:13: punctuator !=
va-arg-15.c:24:16: identifier i
va-arg-15.c:24:17: punctuator )
va-arg-15.c:25:6: identifier abort
va-arg-15.c:25:11: punctuator (
va-arg-15.c:25:12: punctuator )
va-arg-15.c:25:13: punctuator ;
va-arg-15.c:26:2: punctuator }
va-arg-15.c:27:5: punctuator }
va-arg-15.c:28:5: identifier __builtin_va_end
va-arg-15.c:28:21: punctuator (
va-arg-15.c:28:22: identifier ap
va-arg-15.c:28:24: punctuator )
va-arg-15.c:28:25: punctuator ;
va-arg-15.c:29:1: punctuator }
va-arg-15.c:31:1: keyword int
va-arg-15.c:31:5: identifier main
va-arg-15.c:31:10: punctuator (
va-arg-15.c:31:11: keyword void
va-arg-15.c:31:15: punctuator )
va-arg-15.c:32:1: punctuator {
va-arg-15.c:33:3: identifier vafunction
va-arg-15.c:33:13: punctuator (
va-arg-15.c:33:15: string-literal ""
va-arg-15.c:33:17: punctuator ,
va-arg-15.c:34:2: constant 1
va-arg-15.c:34:3: punctuator ,
va-arg-15.c:34:5: constant 2.
va-arg-15.c:34:7: punctuator ,
va-arg-15.c:35:2: constant 3
va-arg-15.c:35:3: punctuator ,
va-arg-15.c:35:5: constant 4.
va-arg-15.c:35:7: punctuator ,
va-arg-15.c:36:2: constant 5
va-arg-15.c:36:3: punctuator ,
va-arg-15.c:36:5: constant 6.
va-arg-15.c:36:7: punctuator ,
va-arg-15.c:37:2: constant 7
va-arg-15.c:37:3: punctuator ,
va-arg-15.c:37:5: constant 8.
va-arg-15.c:37:7: punctuator ,
va-arg-15.c:38:2: constant 9
va-arg-15.c:38:3: punctuator ,
va-arg-15.c:38:5: constant 10.
va-arg-15.c:38:8: punctuator ,
va-arg-15.c:39:2: constant 11
va-arg-15.c:39:4: punctuator ,
va-arg-15.c:39:6: constant 12.
va-arg-15.c:39:9: punctuator ,
va-arg-15.c:40:2: constant 13
va-arg-15.c:40:4: punctuator ,
va-arg-15.c:40:6: constant 14.
va-arg-15.c:40:9: punctuator ,
va-arg-15.c:41:2: constant 15
va-arg-15.c:41:4: punctuator ,
va-arg-15.c:41:6: constant 16.
va-arg-15.c:41:9: punctuator ,
va-arg-15.c:42:2: constant 17
va-arg-15.c:42:4: punctuator ,
va-arg-15.c:42:6: constant 18.
va-arg-15.c:42:10: punctuator )
va-arg-15.c:42:11: punctuator ;
va-arg-15.c:43:3: identifier exit
va-arg-15.c:43:7: punctuator (
va-arg-15.c:43:8: constant 0
va-arg-15.c:43:9: punctuator )
va-arg-15.c:43:10: punctuator ;
va-arg-15.c:44:3: keyword return
va-arg-15.c:44:10: constant 0
va-arg-15.c:44:11: punctuator ;
va-arg-15.c:45:1: punctuator }
