0
pr35456.c:1:1: keyword extern
pr35456.c:1:8: keyword void
pr35456.c:1:13: identifier abort
pr35456.c:1:19: punctuator (
pr35456.c:1:20: keyword void
pr35456.c:1:24: punctuator )
pr35456.c:1:25: punctuator ;
pr35456.c:3:1: keyword double
pr35456.c:4:1: identifier __attribute__
pr35456.c:4:15: punctuator (
pr35456.c:4:16: punctuator (
pr35456.c:4:17: identifier noinline
pr35456.c:4:25: punctuator )
pr35456.c:4:26: punctuator )
pr35456.c:5:1: identifier not_fabs
pr35456.c:5:10: punctuator (
pr35456.c:5:11: keyword double
pr35456.c:5:18: identifier x
pr35456.c:5:19: punctuator )
pr35456.c:6:1: punctuator {
pr35456.c:7:3: keyword return
pr35456.c:7:10: identifier x
pr35456.c:7:12: punctuator >=
pr35456.c:7:15: constant 0.0
pr35456.c:7:19: punctuator ?
pr35456.c:7:21: identifier x
pr35456.c:7:23: punctuator :
pr35456.c:7:25: punctuator -
pr35456.c:7:26: identifier x
pr35456.c:7:27: punctuator ;
pr35456.c:8:1: punctuator }
pr35456.c:10:1: keyword int
pr35456.c:10:5: identifier main
pr35456.c:10:9: punctuator (
pr35456.c:10:10: punctuator )
pr35456.c:11:1: punctuator {
pr35456.c:12:3: keyword double
pr35456.c:12:10: identifier x
pr35456.c:12:12: punctuator =
pr35456.c:12:14: punctuator -
pr35456.c:12:15: constant 0.0
pr35456.c:12:18: punctuator ;
pr35456.c:13:3: keyword double
pr35456.c:13:10: identifier y
pr35456.c:13:11: punctuator ;
pr35456.c:15:3: identifier y
pr35456.c:15:5: punctuator =
pr35456.c:15:7: identifier not_fabs
pr35456.c:15:16: punctuator (
pr35456.c:15:17: identifier x
pr35456.c:15:18: punctuator )
pr35456.c:15:19: punctuator ;
pr35456.c:17:3: keyword if
pr35456.c:17:6: punctuator (
pr35456.c:17:7: punctuator !
pr35456.c:17:8: identifier __builtin_signbit
pr35456.c:17:26: punctuator (
pr35456.c:17:27: identifier y
pr35456.c:17:28: punctuator )
pr35456.c:17:29: punctuator )
pr35456.c:18:5: identifier abort
pr35456.c:18:10: punctuator (
pr35456.c:18:11: punctuator )
pr35456.c:18:12: punctuator ;
pr35456.c:20:3: keyword return
pr35456.c:20:10: constant 0
pr35456.c:20:11: punctuator ;
pr35456.c:21:1: punctuator }
