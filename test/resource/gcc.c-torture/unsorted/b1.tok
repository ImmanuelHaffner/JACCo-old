0
b1.c:1:1: identifier foo
b1.c:1:5: punctuator (
b1.c:1:6: keyword long
b1.c:1:11: keyword long
b1.c:1:16: identifier x
b1.c:1:17: punctuator )
b1.c:2:1: punctuator {
b1.c:3:3: keyword if
b1.c:3:6: punctuator (
b1.c:3:7: identifier x
b1.c:3:8: punctuator --
b1.c:3:10: punctuator )
b1.c:4:5: keyword return
b1.c:4:12: constant 255
b1.c:4:15: punctuator ;
b1.c:5:3: keyword return
b1.c:5:10: constant 0
b1.c:5:11: punctuator ;
b1.c:6:1: punctuator }
b1.c:8:1: identifier main
b1.c:8:6: punctuator (
b1.c:8:7: punctuator )
b1.c:9:1: punctuator {
b1.c:10:3: identifier printf
b1.c:10:10: punctuator (
b1.c:10:11: string-literal "%d\n"
b1.c:10:17: punctuator ,
b1.c:10:19: identifier foo
b1.c:10:23: punctuator (
b1.c:10:24: constant 0
b1.c:10:25: punctuator )
b1.c:10:26: punctuator )
b1.c:10:27: punctuator ;
b1.c:11:1: punctuator }
