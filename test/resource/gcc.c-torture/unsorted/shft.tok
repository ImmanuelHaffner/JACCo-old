0
shft.c:1:1 identifier foo
shft.c:1:5 punctuator (
shft.c:1:6 identifier a
shft.c:1:7 punctuator )
shft.c:2:6 keyword int
shft.c:2:10 identifier a
shft.c:2:11 punctuator ;
shft.c:3:1 punctuator {
shft.c:4:3 keyword int
shft.c:4:7 identifier b
shft.c:4:9 punctuator =
shft.c:4:11 constant 8
shft.c:4:12 punctuator ;
shft.c:6:3 keyword if
shft.c:6:6 punctuator (
shft.c:6:7 punctuator (
shft.c:6:8 identifier a
shft.c:6:10 punctuator <<
shft.c:6:13 identifier b
shft.c:6:14 punctuator )
shft.c:6:16 punctuator >=
shft.c:6:19 constant 0
shft.c:6:20 punctuator )
shft.c:7:5 keyword return
shft.c:7:12 constant 1
shft.c:7:13 punctuator ;
shft.c:8:3 keyword return
shft.c:8:10 identifier a
shft.c:8:11 punctuator ;
shft.c:9:1 punctuator }
shft.c:11:1 identifier main
shft.c:11:6 punctuator (
shft.c:11:7 punctuator )
shft.c:12:1 punctuator {
shft.c:13:3 keyword if
shft.c:13:6 punctuator (
shft.c:13:7 identifier foo
shft.c:13:11 punctuator (
shft.c:13:12 constant 0x00ffffff
shft.c:13:22 punctuator )
shft.c:13:24 punctuator ==
shft.c:13:27 constant 1
shft.c:13:28 punctuator )
shft.c:14:5 identifier puts
shft.c:14:10 punctuator (
shft.c:14:11 string-literal "y"
shft.c:14:14 punctuator )
shft.c:14:15 punctuator ;
shft.c:15:1 punctuator }
