0
cc.c:1:1: identifier cc8
cc.c:1:5: punctuator (
cc.c:1:6: identifier a
cc.c:1:7: punctuator ,
cc.c:1:9: identifier b
cc.c:1:10: punctuator )
cc.c:2:1: punctuator {
cc.c:3:3: keyword if
cc.c:3:6: punctuator (
cc.c:3:7: identifier a
cc.c:3:9: punctuator <
cc.c:3:11: constant 0
cc.c:3:12: punctuator )
cc.c:4:5: keyword goto
cc.c:4:10: identifier L1
cc.c:4:12: punctuator ;
cc.c:5:5: keyword if
cc.c:5:8: punctuator (
cc.c:5:9: identifier a
cc.c:5:11: punctuator ==
cc.c:5:14: constant 0
cc.c:5:15: punctuator )
cc.c:6:7: keyword goto
cc.c:6:12: identifier L2
cc.c:6:14: punctuator ;
cc.c:7:2: identifier L1
cc.c:7:4: punctuator :
cc.c:7:5: identifier b
cc.c:7:6: punctuator ++
cc.c:7:8: punctuator ;
cc.c:8:2: identifier L2
cc.c:8:4: punctuator :
cc.c:8:5: identifier b
cc.c:8:6: punctuator ++
cc.c:8:8: punctuator ;
cc.c:9:3: keyword return
cc.c:9:10: identifier b
cc.c:9:11: punctuator ;
cc.c:10:1: punctuator }
cc.c:12:1: identifier cc7
cc.c:12:5: punctuator (
cc.c:12:6: identifier a
cc.c:12:7: punctuator )
cc.c:13:6: keyword long
cc.c:13:11: keyword long
cc.c:13:16: identifier a
cc.c:13:17: punctuator ;
cc.c:14:1: punctuator {
cc.c:15:3: keyword if
cc.c:15:6: punctuator (
cc.c:15:7: identifier a
cc.c:15:9: punctuator <
cc.c:15:11: constant 0
cc.c:15:12: punctuator )
cc.c:16:5: keyword return
cc.c:16:12: constant 1
cc.c:16:13: punctuator ;
cc.c:17:3: keyword else
cc.c:18:5: keyword return
cc.c:18:12: constant 0
cc.c:18:13: punctuator ;
cc.c:19:1: punctuator }
cc.c:21:1: identifier cc6
cc.c:21:5: punctuator (
cc.c:21:6: keyword float
cc.c:21:12: identifier a
cc.c:21:13: punctuator ,
cc.c:21:15: keyword double
cc.c:21:22: identifier p
cc.c:21:23: punctuator )
cc.c:22:1: punctuator {
cc.c:23:3: identifier p
cc.c:23:5: punctuator =
cc.c:23:7: identifier a
cc.c:23:8: punctuator ;
cc.c:24:3: keyword if
cc.c:24:6: punctuator (
cc.c:24:7: identifier p
cc.c:24:9: punctuator <
cc.c:24:11: constant 0
cc.c:24:12: punctuator )
cc.c:25:5: keyword return
cc.c:25:12: identifier p
cc.c:25:13: punctuator ;
cc.c:26:3: keyword else
cc.c:27:5: keyword return
cc.c:27:12: identifier p
cc.c:27:14: punctuator +
cc.c:27:16: constant 1
cc.c:27:17: punctuator ;
cc.c:28:1: punctuator }
cc.c:30:1: identifier cc5
cc.c:30:5: punctuator (
cc.c:30:6: identifier p
cc.c:30:7: punctuator ,
cc.c:30:9: identifier a
cc.c:30:10: punctuator )
cc.c:31:6: keyword char
cc.c:31:11: punctuator *
cc.c:31:12: identifier p
cc.c:31:13: punctuator ;
cc.c:32:6: keyword char
cc.c:32:11: identifier a
cc.c:32:12: punctuator ;
cc.c:33:1: punctuator {
cc.c:34:3: identifier p
cc.c:34:4: punctuator [
cc.c:34:5: constant 2
cc.c:34:6: punctuator ]
cc.c:34:8: punctuator =
cc.c:34:10: identifier a
cc.c:34:11: punctuator ;
cc.c:35:3: keyword if
cc.c:35:6: punctuator (
cc.c:35:7: identifier a
cc.c:35:8: punctuator )
cc.c:36:5: keyword return
cc.c:36:12: constant 0
cc.c:36:13: punctuator ;
cc.c:37:3: keyword else
cc.c:38:5: keyword return
cc.c:38:12: constant 1
cc.c:38:13: punctuator ;
cc.c:39:1: punctuator }
cc.c:42:1: identifier cc4
cc.c:42:5: punctuator (
cc.c:42:6: identifier a
cc.c:42:7: punctuator ,
cc.c:42:9: identifier b
cc.c:42:10: punctuator ,
cc.c:42:12: identifier p
cc.c:42:13: punctuator )
cc.c:43:6: keyword int
cc.c:43:10: identifier a
cc.c:43:11: punctuator ,
cc.c:43:13: identifier b
cc.c:43:14: punctuator ;
cc.c:44:6: keyword int
cc.c:44:10: punctuator *
cc.c:44:11: identifier p
cc.c:44:12: punctuator ;
cc.c:45:1: punctuator {
cc.c:46:3: identifier a
cc.c:46:5: punctuator =
cc.c:46:7: punctuator (
cc.c:46:8: keyword int
cc.c:46:12: keyword short
cc.c:46:17: punctuator )
cc.c:46:18: identifier b
cc.c:46:19: punctuator ;
cc.c:47:3: punctuator *
cc.c:47:4: identifier p
cc.c:47:6: punctuator =
cc.c:47:8: identifier a
cc.c:47:9: punctuator ;
cc.c:48:3: keyword if
cc.c:48:6: punctuator (
cc.c:48:7: punctuator (
cc.c:48:8: keyword int
cc.c:48:11: punctuator )
cc.c:48:13: identifier a
cc.c:48:15: punctuator <
cc.c:48:17: constant 0
cc.c:48:18: punctuator )
cc.c:49:5: keyword return
cc.c:49:12: constant 0
cc.c:49:13: punctuator ;
cc.c:50:3: keyword else
cc.c:51:5: keyword return
cc.c:51:12: constant 1
cc.c:51:13: punctuator ;
cc.c:52:1: punctuator }
cc.c:55:1: identifier cc1
cc.c:55:5: punctuator (
cc.c:55:6: identifier a
cc.c:55:7: punctuator ,
cc.c:55:9: identifier b
cc.c:55:10: punctuator )
cc.c:56:1: punctuator {
cc.c:57:3: keyword int
cc.c:57:7: identifier x
cc.c:57:9: punctuator =
cc.c:57:11: constant 0
cc.c:57:12: punctuator ;
cc.c:59:3: keyword if
cc.c:59:6: punctuator (
cc.c:59:7: punctuator (
cc.c:59:8: keyword int
cc.c:59:11: punctuator )
cc.c:59:13: identifier a
cc.c:59:15: punctuator <
cc.c:59:17: punctuator (
cc.c:59:18: keyword int
cc.c:59:21: punctuator )
cc.c:59:23: identifier b
cc.c:59:24: punctuator )
cc.c:60:5: punctuator {
cc.c:61:7: keyword if
cc.c:61:10: punctuator (
cc.c:61:11: punctuator (
cc.c:61:12: keyword unsigned
cc.c:61:20: punctuator )
cc.c:61:22: identifier a
cc.c:61:24: punctuator <
cc.c:61:26: punctuator (
cc.c:61:27: keyword unsigned
cc.c:61:35: punctuator )
cc.c:61:37: identifier b
cc.c:61:38: punctuator )
cc.c:62:2: identifier x
cc.c:62:3: punctuator ++
cc.c:62:5: punctuator ;
cc.c:63:7: identifier x
cc.c:63:8: punctuator ++
cc.c:63:10: punctuator ;
cc.c:64:5: punctuator }
cc.c:66:3: keyword return
cc.c:66:10: identifier x
cc.c:66:11: punctuator ;
cc.c:67:1: punctuator }
cc.c:69:1: identifier cc2
cc.c:69:5: punctuator (
cc.c:69:6: identifier a
cc.c:69:7: punctuator ,
cc.c:69:9: identifier b
cc.c:69:10: punctuator )
cc.c:70:1: punctuator {
cc.c:71:3: keyword int
cc.c:71:7: identifier x
cc.c:71:9: punctuator =
cc.c:71:11: constant 0
cc.c:71:12: punctuator ;
cc.c:73:3: keyword if
cc.c:73:6: punctuator (
cc.c:73:7: punctuator (
cc.c:73:8: keyword int
cc.c:73:11: punctuator )
cc.c:73:13: identifier a
cc.c:73:15: punctuator <=
cc.c:73:18: punctuator (
cc.c:73:19: keyword int
cc.c:73:22: punctuator )
cc.c:73:24: identifier b
cc.c:73:25: punctuator )
cc.c:74:5: punctuator {
cc.c:75:7: keyword if
cc.c:75:10: punctuator (
cc.c:75:11: punctuator (
cc.c:75:12: keyword int
cc.c:75:15: punctuator )
cc.c:75:17: identifier a
cc.c:75:19: punctuator <
cc.c:75:21: punctuator (
cc.c:75:22: keyword int
cc.c:75:25: punctuator )
cc.c:75:27: identifier b
cc.c:75:28: punctuator )
cc.c:76:2: identifier x
cc.c:76:3: punctuator ++
cc.c:76:5: punctuator ;
cc.c:77:7: identifier x
cc.c:77:8: punctuator ++
cc.c:77:10: punctuator ;
cc.c:78:5: punctuator }
cc.c:80:3: keyword return
cc.c:80:10: identifier x
cc.c:80:11: punctuator ;
cc.c:81:1: punctuator }
cc.c:83:1: identifier cc3
cc.c:83:5: punctuator (
cc.c:83:6: identifier a
cc.c:83:7: punctuator ,
cc.c:83:9: identifier b
cc.c:83:10: punctuator )
cc.c:84:1: punctuator {
cc.c:85:3: keyword int
cc.c:85:7: identifier x
cc.c:85:9: punctuator =
cc.c:85:11: constant 0
cc.c:85:12: punctuator ;
cc.c:87:3: identifier a
cc.c:87:5: punctuator +=
cc.c:87:8: identifier b
cc.c:87:9: punctuator ;
cc.c:88:3: keyword if
cc.c:88:6: punctuator (
cc.c:88:7: punctuator (
cc.c:88:8: keyword unsigned
cc.c:88:16: punctuator )
cc.c:88:18: identifier a
cc.c:88:20: punctuator >
cc.c:88:22: constant 0
cc.c:88:23: punctuator )
cc.c:89:5: punctuator {
cc.c:90:7: keyword if
cc.c:90:10: punctuator (
cc.c:90:11: identifier a
cc.c:90:13: punctuator ==
cc.c:90:16: constant 0
cc.c:90:17: punctuator )
cc.c:91:2: identifier x
cc.c:91:3: punctuator ++
cc.c:91:5: punctuator ;
cc.c:92:7: identifier x
cc.c:92:8: punctuator ++
cc.c:92:10: punctuator ;
cc.c:93:5: punctuator }
cc.c:95:3: keyword return
cc.c:95:10: identifier x
cc.c:95:11: punctuator ;
cc.c:96:1: punctuator }
