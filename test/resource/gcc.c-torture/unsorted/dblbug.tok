0
dblbug.c:1:1: keyword union
dblbug.c:1:7: identifier real_extract
dblbug.c:2:1: punctuator {
dblbug.c:3:3: keyword double
dblbug.c:3:10: identifier d
dblbug.c:3:11: punctuator ;
dblbug.c:4:3: keyword int
dblbug.c:4:7: identifier i
dblbug.c:4:8: punctuator [
dblbug.c:4:9: keyword sizeof
dblbug.c:4:16: punctuator (
dblbug.c:4:17: keyword double
dblbug.c:4:24: punctuator )
dblbug.c:4:26: punctuator /
dblbug.c:4:28: keyword sizeof
dblbug.c:4:35: punctuator (
dblbug.c:4:36: keyword int
dblbug.c:4:39: punctuator )
dblbug.c:4:40: punctuator ]
dblbug.c:4:41: punctuator ;
dblbug.c:5:1: punctuator }
dblbug.c:5:2: punctuator ;
dblbug.c:7:1: keyword typedef
dblbug.c:7:9: keyword struct
dblbug.c:8:1: punctuator {
dblbug.c:9:3: keyword int
dblbug.c:9:7: identifier zzzz
dblbug.c:9:11: punctuator ;
dblbug.c:10:1: punctuator }
dblbug.c:10:3: punctuator *
dblbug.c:10:4: identifier rtx
dblbug.c:10:7: punctuator ;
dblbug.c:12:1: identifier rtx
dblbug.c:13:1: identifier immed_real_const_1
dblbug.c:13:20: punctuator (
dblbug.c:13:21: identifier d
dblbug.c:13:22: punctuator )
dblbug.c:14:6: keyword double
dblbug.c:14:13: identifier d
dblbug.c:14:14: punctuator ;
dblbug.c:15:1: punctuator {
dblbug.c:16:3: keyword union
dblbug.c:16:9: identifier real_extract
dblbug.c:16:22: identifier u
dblbug.c:16:23: punctuator ;
dblbug.c:17:3: keyword register
dblbug.c:17:12: identifier rtx
dblbug.c:17:16: identifier r
dblbug.c:17:17: punctuator ;
dblbug.c:19:3: identifier u
dblbug.c:19:4: punctuator .
dblbug.c:19:5: identifier d
dblbug.c:19:7: punctuator =
dblbug.c:19:9: identifier d
dblbug.c:19:10: punctuator ;
dblbug.c:20:3: identifier foo
dblbug.c:20:7: punctuator (
dblbug.c:20:8: punctuator &
dblbug.c:20:9: punctuator (
dblbug.c:20:10: identifier r
dblbug.c:20:11: punctuator ->
dblbug.c:20:13: identifier zzzz
dblbug.c:20:17: punctuator )
dblbug.c:20:18: punctuator ,
dblbug.c:20:20: punctuator &
dblbug.c:20:21: identifier u
dblbug.c:20:22: punctuator )
dblbug.c:20:23: punctuator ;
dblbug.c:21:1: punctuator }
