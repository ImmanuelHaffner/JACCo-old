0
andsparc.c:1:1 identifier foo
andsparc.c:1:5 punctuator (
andsparc.c:1:6 keyword int
andsparc.c:1:10 punctuator *
andsparc.c:1:11 identifier p
andsparc.c:1:12 punctuator )
andsparc.c:2:1 punctuator {
andsparc.c:3:3 keyword int
andsparc.c:3:7 identifier a
andsparc.c:3:8 punctuator ,
andsparc.c:3:10 identifier b
andsparc.c:3:11 punctuator ;
andsparc.c:5:3 identifier a
andsparc.c:5:5 punctuator =
andsparc.c:5:7 constant 123456
andsparc.c:5:13 punctuator ;
andsparc.c:6:3 identifier a
andsparc.c:6:5 punctuator +=
andsparc.c:6:8 identifier p
andsparc.c:6:9 punctuator [
andsparc.c:6:10 constant 0
andsparc.c:6:11 punctuator ]
andsparc.c:6:12 punctuator ;
andsparc.c:7:3 identifier b
andsparc.c:7:5 punctuator =
andsparc.c:7:7 identifier p
andsparc.c:7:8 punctuator [
andsparc.c:7:9 constant 0
andsparc.c:7:10 punctuator ]
andsparc.c:7:11 punctuator ;
andsparc.c:8:3 keyword if
andsparc.c:8:6 punctuator (
andsparc.c:8:7 identifier a
andsparc.c:8:9 punctuator ==
andsparc.c:8:12 constant 0
andsparc.c:8:13 punctuator )
andsparc.c:9:5 keyword return
andsparc.c:9:12 identifier b
andsparc.c:9:13 punctuator ;
andsparc.c:10:3 keyword return
andsparc.c:10:10 constant 1
andsparc.c:10:11 punctuator ;
andsparc.c:11:1 punctuator }
