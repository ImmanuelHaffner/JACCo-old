0
band.c:1:1: identifier foo
band.c:1:5: punctuator (
band.c:1:6: identifier a
band.c:1:7: punctuator )
band.c:2:1: punctuator {
band.c:3:3: keyword return
band.c:3:10: punctuator (
band.c:3:11: identifier a
band.c:3:13: punctuator &
band.c:3:15: punctuator (
band.c:3:16: constant 1
band.c:3:18: punctuator <<
band.c:3:21: constant 31
band.c:3:23: punctuator )
band.c:3:24: punctuator )
band.c:3:26: punctuator !=
band.c:3:29: constant 0
band.c:3:30: punctuator ;
band.c:4:1: punctuator }
band.c:6:1: identifier main
band.c:6:6: punctuator (
band.c:6:7: punctuator )
band.c:7:1: punctuator {
band.c:8:3: keyword if
band.c:8:6: punctuator (
band.c:8:7: identifier foo
band.c:8:11: punctuator (
band.c:8:12: constant 0
band.c:8:13: punctuator )
band.c:8:14: punctuator )
band.c:9:5: identifier puts
band.c:9:10: punctuator (
band.c:9:11: string-literal "foo"
band.c:9:16: punctuator )
band.c:9:17: punctuator ;
band.c:10:3: keyword else
band.c:11:5: identifier puts
band.c:11:10: punctuator (
band.c:11:11: string-literal "bar"
band.c:11:16: punctuator )
band.c:11:17: punctuator ;
band.c:12:3: keyword if
band.c:12:6: punctuator (
band.c:12:7: identifier foo
band.c:12:11: punctuator (
band.c:12:12: punctuator ~
band.c:12:13: constant 0
band.c:12:14: punctuator )
band.c:12:15: punctuator )
band.c:13:5: identifier puts
band.c:13:10: punctuator (
band.c:13:11: string-literal "foo"
band.c:13:16: punctuator )
band.c:13:17: punctuator ;
band.c:14:3: keyword else
band.c:15:5: identifier puts
band.c:15:10: punctuator (
band.c:15:11: string-literal "bar"
band.c:15:16: punctuator )
band.c:15:17: punctuator ;
band.c:16:1: punctuator }
