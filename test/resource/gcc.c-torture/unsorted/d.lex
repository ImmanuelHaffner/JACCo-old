0
d.c:1:1 keyword long
d.c:1:6 keyword long
d.c:1:11 keyword unsigned
d.c:2:1 identifier str2llu
d.c:2:9 punctuator (
d.c:2:10 identifier str
d.c:2:13 punctuator )
d.c:3:6 keyword char
d.c:3:11 punctuator *
d.c:3:12 identifier str
d.c:3:15 punctuator ;
d.c:4:1 punctuator {
d.c:5:3 keyword long
d.c:5:8 keyword long
d.c:5:13 keyword unsigned
d.c:5:22 identifier acc
d.c:5:25 punctuator ;
d.c:6:3 keyword long
d.c:6:8 keyword long
d.c:6:13 identifier b
d.c:6:15 punctuator =
d.c:6:17 constant 10
d.c:6:19 punctuator ;
d.c:7:3 keyword char
d.c:7:8 identifier d
d.c:7:9 punctuator ;
d.c:8:3 identifier acc
d.c:8:7 punctuator =
d.c:8:9 punctuator *
d.c:8:10 identifier str
d.c:8:13 punctuator ++
d.c:8:16 punctuator -
d.c:8:18 constant '0'
d.c:8:21 punctuator ;
d.c:9:3 keyword for
d.c:9:7 punctuator (
d.c:9:8 punctuator ;
d.c:9:9 punctuator ;
d.c:9:10 punctuator )
d.c:10:5 punctuator {
d.c:11:7 identifier d
d.c:11:9 punctuator =
d.c:11:11 punctuator *
d.c:11:12 identifier str
d.c:11:15 punctuator ++
d.c:11:17 punctuator ;
d.c:12:7 keyword if
d.c:12:10 punctuator (
d.c:12:11 identifier d
d.c:12:13 punctuator ==
d.c:12:16 constant '\0'
d.c:12:20 punctuator )
d.c:13:2 keyword break
d.c:13:7 punctuator ;
d.c:14:7 identifier d
d.c:14:9 punctuator -=
d.c:14:12 constant '0'
d.c:14:15 punctuator ;
d.c:15:7 identifier acc
d.c:15:11 punctuator =
d.c:15:13 identifier acc
d.c:15:17 punctuator *
d.c:15:19 constant 10
d.c:15:22 punctuator +
d.c:15:24 identifier d
d.c:15:25 punctuator ;
d.c:16:5 punctuator }
d.c:18:3 keyword return
d.c:18:10 identifier acc
d.c:18:13 punctuator ;
d.c:19:1 punctuator }
