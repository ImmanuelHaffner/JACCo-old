0
dshift.c:1:1: identifier foo
dshift.c:1:5: punctuator (
dshift.c:1:6: identifier b
dshift.c:1:7: punctuator ,
dshift.c:1:9: identifier c
dshift.c:1:10: punctuator )
dshift.c:2:6: keyword unsigned
dshift.c:2:15: identifier b
dshift.c:2:16: punctuator ,
dshift.c:2:18: identifier c
dshift.c:2:19: punctuator ;
dshift.c:3:1: punctuator {
dshift.c:4:3: keyword return
dshift.c:4:10: punctuator (
dshift.c:4:11: identifier b
dshift.c:4:13: punctuator <<
dshift.c:4:16: constant 12
dshift.c:4:18: punctuator )
dshift.c:4:20: punctuator |
dshift.c:4:22: punctuator (
dshift.c:4:23: identifier c
dshift.c:4:25: punctuator >>
dshift.c:4:28: constant 20
dshift.c:4:30: punctuator )
dshift.c:4:31: punctuator ;
dshift.c:5:1: punctuator }
dshift.c:7:1: identifier main
dshift.c:7:6: punctuator (
dshift.c:7:7: punctuator )
dshift.c:8:1: punctuator {
dshift.c:9:3: identifier printf
dshift.c:9:10: punctuator (
dshift.c:9:11: string-literal "0x%x\n"
dshift.c:9:19: punctuator ,
dshift.c:9:21: identifier foo
dshift.c:9:25: punctuator (
dshift.c:9:26: constant 0x11223344
dshift.c:9:36: punctuator ,
dshift.c:9:38: constant 0xaabbccdd
dshift.c:9:48: punctuator )
dshift.c:9:49: punctuator )
dshift.c:9:50: punctuator ;
dshift.c:10:1: punctuator }
