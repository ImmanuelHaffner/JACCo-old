0
icmp.c:1:1: identifier foo
icmp.c:1:5: punctuator (
icmp.c:1:6: identifier a
icmp.c:1:7: punctuator ,
icmp.c:1:9: identifier b
icmp.c:1:10: punctuator )
icmp.c:2:1: punctuator {
icmp.c:3:3: identifier b
icmp.c:3:4: punctuator ++
icmp.c:3:6: punctuator ;
icmp.c:4:3: keyword if
icmp.c:4:6: punctuator (
icmp.c:4:7: identifier a
icmp.c:4:9: punctuator <=
icmp.c:4:12: identifier b
icmp.c:4:13: punctuator )
icmp.c:5:5: keyword if
icmp.c:5:8: punctuator (
icmp.c:5:9: punctuator (
icmp.c:5:10: keyword int
icmp.c:5:13: punctuator )
icmp.c:5:15: identifier a
icmp.c:5:17: punctuator <
icmp.c:5:19: punctuator (
icmp.c:5:20: keyword int
icmp.c:5:23: punctuator )
icmp.c:5:25: identifier b
icmp.c:5:26: punctuator )
icmp.c:6:7: identifier b
icmp.c:6:8: punctuator --
icmp.c:6:10: punctuator ;
icmp.c:7:5: keyword else
icmp.c:8:7: identifier b
icmp.c:8:8: punctuator ++
icmp.c:8:10: punctuator ;
icmp.c:9:3: keyword return
icmp.c:9:10: identifier b
icmp.c:9:11: punctuator ;
icmp.c:10:1: punctuator }
