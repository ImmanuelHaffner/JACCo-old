0
mword1.c:1:1: keyword int
mword1.c:2:1: identifier foo
mword1.c:2:5: punctuator (
mword1.c:2:6: identifier a
mword1.c:2:7: punctuator ,
mword1.c:2:9: identifier b
mword1.c:2:10: punctuator )
mword1.c:3:1: keyword int
mword1.c:3:5: punctuator *
mword1.c:3:6: identifier a
mword1.c:3:7: punctuator ,
mword1.c:3:9: punctuator *
mword1.c:3:10: identifier b
mword1.c:3:11: punctuator ;
mword1.c:4:1: punctuator {
mword1.c:5:3: keyword int
mword1.c:5:7: identifier x
mword1.c:5:8: punctuator ;
mword1.c:6:3: punctuator *
mword1.c:6:4: identifier a
mword1.c:6:6: punctuator =
mword1.c:6:8: punctuator (
mword1.c:6:9: punctuator *
mword1.c:6:10: identifier b
mword1.c:6:12: punctuator +
mword1.c:6:14: constant 1
mword1.c:6:15: punctuator )
mword1.c:6:16: punctuator ;
mword1.c:7:3: identifier x
mword1.c:7:5: punctuator =
mword1.c:7:7: punctuator *
mword1.c:7:8: identifier b
mword1.c:7:9: punctuator ;
mword1.c:8:3: keyword if
mword1.c:8:6: punctuator (
mword1.c:8:7: punctuator (
mword1.c:8:8: keyword int
mword1.c:8:11: punctuator )
mword1.c:8:13: identifier x
mword1.c:8:14: punctuator )
mword1.c:9:5: keyword return
mword1.c:9:12: constant 1
mword1.c:9:13: punctuator ;
mword1.c:10:3: keyword else
mword1.c:11:5: keyword return
mword1.c:11:12: constant 0
mword1.c:11:13: punctuator ;
mword1.c:12:1: punctuator }
