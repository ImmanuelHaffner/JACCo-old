0
DFcmp.c:3:1: keyword double
DFcmp.c:3:8: identifier glob0
DFcmp.c:3:13: punctuator ,
DFcmp.c:3:15: identifier glob1
DFcmp.c:3:20: punctuator ;
DFcmp.c:4:1: identifier reg0reg1
DFcmp.c:4:10: punctuator (
DFcmp.c:4:11: identifier r0
DFcmp.c:4:13: punctuator ,
DFcmp.c:4:15: identifier r1
DFcmp.c:4:17: punctuator ,
DFcmp.c:4:19: identifier x0
DFcmp.c:4:21: punctuator ,
DFcmp.c:4:23: identifier x1
DFcmp.c:4:25: punctuator ,
DFcmp.c:4:27: identifier p0
DFcmp.c:4:29: punctuator ,
DFcmp.c:4:31: identifier p1
DFcmp.c:4:33: punctuator )
DFcmp.c:5:1: keyword double
DFcmp.c:5:8: identifier r0
DFcmp.c:5:10: punctuator ,
DFcmp.c:5:12: identifier r1
DFcmp.c:5:14: punctuator ;
DFcmp.c:5:16: keyword double
DFcmp.c:5:23: punctuator *
DFcmp.c:5:24: identifier p0
DFcmp.c:5:26: punctuator ,
DFcmp.c:5:28: punctuator *
DFcmp.c:5:29: identifier p1
DFcmp.c:5:31: punctuator ;
DFcmp.c:6:1: punctuator {
DFcmp.c:6:2: keyword if
DFcmp.c:6:5: punctuator (
DFcmp.c:6:6: identifier r0
DFcmp.c:6:9: punctuator <=
DFcmp.c:6:12: identifier r1
DFcmp.c:6:14: punctuator )
DFcmp.c:6:16: keyword return
DFcmp.c:6:23: constant 1
DFcmp.c:6:24: punctuator ;
DFcmp.c:6:26: keyword else
DFcmp.c:6:31: keyword return
DFcmp.c:6:38: constant 0
DFcmp.c:6:39: punctuator ;
DFcmp.c:6:40: punctuator }
DFcmp.c:8:1: identifier reg0indreg1
DFcmp.c:8:13: punctuator (
DFcmp.c:8:14: identifier r0
DFcmp.c:8:16: punctuator ,
DFcmp.c:8:18: identifier r1
DFcmp.c:8:20: punctuator ,
DFcmp.c:8:22: identifier x0
DFcmp.c:8:24: punctuator ,
DFcmp.c:8:26: identifier x1
DFcmp.c:8:28: punctuator ,
DFcmp.c:8:30: identifier p0
DFcmp.c:8:32: punctuator ,
DFcmp.c:8:34: identifier p1
DFcmp.c:8:36: punctuator )
DFcmp.c:9:1: keyword double
DFcmp.c:9:8: identifier r0
DFcmp.c:9:10: punctuator ,
DFcmp.c:9:12: identifier r1
DFcmp.c:9:14: punctuator ;
DFcmp.c:9:16: keyword double
DFcmp.c:9:23: punctuator *
DFcmp.c:9:24: identifier p0
DFcmp.c:9:26: punctuator ,
DFcmp.c:9:28: punctuator *
DFcmp.c:9:29: identifier p1
DFcmp.c:9:31: punctuator ;
DFcmp.c:10:1: punctuator {
DFcmp.c:10:2: keyword if
DFcmp.c:10:5: punctuator (
DFcmp.c:10:6: identifier r0
DFcmp.c:10:9: punctuator <=
DFcmp.c:10:12: punctuator (
DFcmp.c:10:13: punctuator *
DFcmp.c:10:14: identifier p1
DFcmp.c:10:16: punctuator )
DFcmp.c:10:17: punctuator )
DFcmp.c:10:19: keyword return
DFcmp.c:10:26: constant 1
DFcmp.c:10:27: punctuator ;
DFcmp.c:10:29: keyword else
DFcmp.c:10:34: keyword return
DFcmp.c:10:41: constant 0
DFcmp.c:10:42: punctuator ;
DFcmp.c:10:43: punctuator }
DFcmp.c:12:1: identifier reg0imm1
DFcmp.c:12:10: punctuator (
DFcmp.c:12:11: identifier r0
DFcmp.c:12:13: punctuator ,
DFcmp.c:12:15: identifier r1
DFcmp.c:12:17: punctuator ,
DFcmp.c:12:19: identifier x0
DFcmp.c:12:21: punctuator ,
DFcmp.c:12:23: identifier x1
DFcmp.c:12:25: punctuator ,
DFcmp.c:12:27: identifier p0
DFcmp.c:12:29: punctuator ,
DFcmp.c:12:31: identifier p1
DFcmp.c:12:33: punctuator )
DFcmp.c:13:1: keyword double
DFcmp.c:13:8: identifier r0
DFcmp.c:13:10: punctuator ,
DFcmp.c:13:12: identifier r1
DFcmp.c:13:14: punctuator ;
DFcmp.c:13:16: keyword double
DFcmp.c:13:23: punctuator *
DFcmp.c:13:24: identifier p0
DFcmp.c:13:26: punctuator ,
DFcmp.c:13:28: punctuator *
DFcmp.c:13:29: identifier p1
DFcmp.c:13:31: punctuator ;
DFcmp.c:14:1: punctuator {
DFcmp.c:14:2: keyword if
DFcmp.c:14:5: punctuator (
DFcmp.c:14:6: identifier r0
DFcmp.c:14:9: punctuator <=
DFcmp.c:14:12: constant 33
DFcmp.c:14:14: punctuator )
DFcmp.c:14:16: keyword return
DFcmp.c:14:23: constant 1
DFcmp.c:14:24: punctuator ;
DFcmp.c:14:26: keyword else
DFcmp.c:14:31: keyword return
DFcmp.c:14:38: constant 0
DFcmp.c:14:39: punctuator ;
DFcmp.c:14:40: punctuator }
DFcmp.c:16:1: identifier reg0limm1
DFcmp.c:16:11: punctuator (
DFcmp.c:16:12: identifier r0
DFcmp.c:16:14: punctuator ,
DFcmp.c:16:16: identifier r1
DFcmp.c:16:18: punctuator ,
DFcmp.c:16:20: identifier x0
DFcmp.c:16:22: punctuator ,
DFcmp.c:16:24: identifier x1
DFcmp.c:16:26: punctuator ,
DFcmp.c:16:28: identifier p0
DFcmp.c:16:30: punctuator ,
DFcmp.c:16:32: identifier p1
DFcmp.c:16:34: punctuator )
DFcmp.c:17:1: keyword double
DFcmp.c:17:8: identifier r0
DFcmp.c:17:10: punctuator ,
DFcmp.c:17:12: identifier r1
DFcmp.c:17:14: punctuator ;
DFcmp.c:17:16: keyword double
DFcmp.c:17:23: punctuator *
DFcmp.c:17:24: identifier p0
DFcmp.c:17:26: punctuator ,
DFcmp.c:17:28: punctuator *
DFcmp.c:17:29: identifier p1
DFcmp.c:17:31: punctuator ;
DFcmp.c:18:1: punctuator {
DFcmp.c:18:2: keyword if
DFcmp.c:18:5: punctuator (
DFcmp.c:18:6: identifier r0
DFcmp.c:18:9: punctuator <=
DFcmp.c:18:12: punctuator (
DFcmp.c:18:13: punctuator (
DFcmp.c:18:14: keyword double
DFcmp.c:18:20: punctuator )
DFcmp.c:18:21: punctuator (
DFcmp.c:18:22: punctuator (
DFcmp.c:18:23: keyword int
DFcmp.c:18:26: punctuator )
DFcmp.c:18:27: punctuator &
DFcmp.c:18:28: identifier glob1
DFcmp.c:18:33: punctuator )
DFcmp.c:18:34: punctuator )
DFcmp.c:18:35: punctuator )
DFcmp.c:18:37: keyword return
DFcmp.c:18:44: constant 1
DFcmp.c:18:45: punctuator ;
DFcmp.c:18:47: keyword else
DFcmp.c:18:52: keyword return
DFcmp.c:18:59: constant 0
DFcmp.c:18:60: punctuator ;
DFcmp.c:18:61: punctuator }
DFcmp.c:20:1: identifier reg0adr1
DFcmp.c:20:10: punctuator (
DFcmp.c:20:11: identifier r0
DFcmp.c:20:13: punctuator ,
DFcmp.c:20:15: identifier r1
DFcmp.c:20:17: punctuator ,
DFcmp.c:20:19: identifier x0
DFcmp.c:20:21: punctuator ,
DFcmp.c:20:23: identifier x1
DFcmp.c:20:25: punctuator ,
DFcmp.c:20:27: identifier p0
DFcmp.c:20:29: punctuator ,
DFcmp.c:20:31: identifier p1
DFcmp.c:20:33: punctuator )
DFcmp.c:21:1: keyword double
DFcmp.c:21:8: identifier r0
DFcmp.c:21:10: punctuator ,
DFcmp.c:21:12: identifier r1
DFcmp.c:21:14: punctuator ;
DFcmp.c:21:16: keyword double
DFcmp.c:21:23: punctuator *
DFcmp.c:21:24: identifier p0
DFcmp.c:21:26: punctuator ,
DFcmp.c:21:28: punctuator *
DFcmp.c:21:29: identifier p1
DFcmp.c:21:31: punctuator ;
DFcmp.c:22:1: punctuator {
DFcmp.c:22:2: keyword if
DFcmp.c:22:5: punctuator (
DFcmp.c:22:6: identifier r0
DFcmp.c:22:9: punctuator <=
DFcmp.c:22:12: punctuator (
DFcmp.c:22:13: punctuator *
DFcmp.c:22:14: punctuator (
DFcmp.c:22:15: punctuator (
DFcmp.c:22:16: keyword double
DFcmp.c:22:23: punctuator *
DFcmp.c:22:24: punctuator )
DFcmp.c:22:25: punctuator (
DFcmp.c:22:26: constant 11111111
DFcmp.c:22:35: punctuator &
DFcmp.c:22:37: punctuator ~
DFcmp.c:22:38: punctuator (
DFcmp.c:22:39: identifier __alignof__
DFcmp.c:22:51: punctuator (
DFcmp.c:22:52: keyword double
DFcmp.c:22:58: punctuator )
DFcmp.c:22:60: punctuator -
DFcmp.c:22:62: constant 1
DFcmp.c:22:63: punctuator )
DFcmp.c:22:64: punctuator )
DFcmp.c:22:65: punctuator )
DFcmp.c:22:66: punctuator )
DFcmp.c:22:67: punctuator )
DFcmp.c:22:69: keyword return
DFcmp.c:22:76: constant 1
DFcmp.c:22:77: punctuator ;
DFcmp.c:22:79: keyword else
DFcmp.c:22:84: keyword return
DFcmp.c:22:91: constant 0
DFcmp.c:22:92: punctuator ;
DFcmp.c:22:93: punctuator }
DFcmp.c:24:1: identifier reg0adrreg1
DFcmp.c:24:13: punctuator (
DFcmp.c:24:14: identifier r0
DFcmp.c:24:16: punctuator ,
DFcmp.c:24:18: identifier r1
DFcmp.c:24:20: punctuator ,
DFcmp.c:24:22: identifier x0
DFcmp.c:24:24: punctuator ,
DFcmp.c:24:26: identifier x1
DFcmp.c:24:28: punctuator ,
DFcmp.c:24:30: identifier p0
DFcmp.c:24:32: punctuator ,
DFcmp.c:24:34: identifier p1
DFcmp.c:24:36: punctuator )
DFcmp.c:25:1: keyword double
DFcmp.c:25:8: identifier r0
DFcmp.c:25:10: punctuator ,
DFcmp.c:25:12: identifier r1
DFcmp.c:25:14: punctuator ;
DFcmp.c:25:16: keyword double
DFcmp.c:25:23: punctuator *
DFcmp.c:25:24: identifier p0
DFcmp.c:25:26: punctuator ,
DFcmp.c:25:28: punctuator *
DFcmp.c:25:29: identifier p1
DFcmp.c:25:31: punctuator ;
DFcmp.c:26:1: punctuator {
DFcmp.c:26:2: keyword if
DFcmp.c:26:5: punctuator (
DFcmp.c:26:6: identifier r0
DFcmp.c:26:9: punctuator <=
DFcmp.c:26:12: punctuator (
DFcmp.c:26:13: identifier p1
DFcmp.c:26:15: punctuator [
DFcmp.c:26:16: constant 1111111
DFcmp.c:26:23: punctuator /
DFcmp.c:26:24: constant 4
DFcmp.c:26:25: punctuator ]
DFcmp.c:26:26: punctuator )
DFcmp.c:26:27: punctuator )
DFcmp.c:26:29: keyword return
DFcmp.c:26:36: constant 1
DFcmp.c:26:37: punctuator ;
DFcmp.c:26:39: keyword else
DFcmp.c:26:44: keyword return
DFcmp.c:26:51: constant 0
DFcmp.c:26:52: punctuator ;
DFcmp.c:26:53: punctuator }
DFcmp.c:28:1: identifier reg0adrx1
DFcmp.c:28:11: punctuator (
DFcmp.c:28:12: identifier r0
DFcmp.c:28:14: punctuator ,
DFcmp.c:28:16: identifier r1
DFcmp.c:28:18: punctuator ,
DFcmp.c:28:20: identifier x0
DFcmp.c:28:22: punctuator ,
DFcmp.c:28:24: identifier x1
DFcmp.c:28:26: punctuator ,
DFcmp.c:28:28: identifier p0
DFcmp.c:28:30: punctuator ,
DFcmp.c:28:32: identifier p1
DFcmp.c:28:34: punctuator )
DFcmp.c:29:1: keyword double
DFcmp.c:29:8: identifier r0
DFcmp.c:29:10: punctuator ,
DFcmp.c:29:12: identifier r1
DFcmp.c:29:14: punctuator ;
DFcmp.c:29:16: keyword double
DFcmp.c:29:23: punctuator *
DFcmp.c:29:24: identifier p0
DFcmp.c:29:26: punctuator ,
DFcmp.c:29:28: punctuator *
DFcmp.c:29:29: identifier p1
DFcmp.c:29:31: punctuator ;
DFcmp.c:30:1: punctuator {
DFcmp.c:30:2: keyword if
DFcmp.c:30:5: punctuator (
DFcmp.c:30:6: identifier r0
DFcmp.c:30:9: punctuator <=
DFcmp.c:30:12: punctuator (
DFcmp.c:30:13: punctuator (
DFcmp.c:30:14: punctuator (
DFcmp.c:30:15: keyword double
DFcmp.c:30:22: punctuator *
DFcmp.c:30:23: punctuator )
DFcmp.c:30:24: punctuator (
DFcmp.c:30:25: constant 11111111
DFcmp.c:30:34: punctuator &
DFcmp.c:30:36: punctuator ~
DFcmp.c:30:37: punctuator (
DFcmp.c:30:38: identifier __alignof__
DFcmp.c:30:50: punctuator (
DFcmp.c:30:51: keyword double
DFcmp.c:30:57: punctuator )
DFcmp.c:30:59: punctuator -
DFcmp.c:30:61: constant 1
DFcmp.c:30:62: punctuator )
DFcmp.c:30:63: punctuator )
DFcmp.c:30:64: punctuator )
DFcmp.c:30:65: punctuator [
DFcmp.c:30:66: identifier x1
DFcmp.c:30:68: punctuator ]
DFcmp.c:30:69: punctuator )
DFcmp.c:30:70: punctuator )
DFcmp.c:30:72: keyword return
DFcmp.c:30:79: constant 1
DFcmp.c:30:80: punctuator ;
DFcmp.c:30:82: keyword else
DFcmp.c:30:87: keyword return
DFcmp.c:30:94: constant 0
DFcmp.c:30:95: punctuator ;
DFcmp.c:30:96: punctuator }
DFcmp.c:32:1: identifier reg0regx1
DFcmp.c:32:11: punctuator (
DFcmp.c:32:12: identifier r0
DFcmp.c:32:14: punctuator ,
DFcmp.c:32:16: identifier r1
DFcmp.c:32:18: punctuator ,
DFcmp.c:32:20: identifier x0
DFcmp.c:32:22: punctuator ,
DFcmp.c:32:24: identifier x1
DFcmp.c:32:26: punctuator ,
DFcmp.c:32:28: identifier p0
DFcmp.c:32:30: punctuator ,
DFcmp.c:32:32: identifier p1
DFcmp.c:32:34: punctuator )
DFcmp.c:33:1: keyword double
DFcmp.c:33:8: identifier r0
DFcmp.c:33:10: punctuator ,
DFcmp.c:33:12: identifier r1
DFcmp.c:33:14: punctuator ;
DFcmp.c:33:16: keyword double
DFcmp.c:33:23: punctuator *
DFcmp.c:33:24: identifier p0
DFcmp.c:33:26: punctuator ,
DFcmp.c:33:28: punctuator *
DFcmp.c:33:29: identifier p1
DFcmp.c:33:31: punctuator ;
DFcmp.c:34:1: punctuator {
DFcmp.c:34:2: keyword if
DFcmp.c:34:5: punctuator (
DFcmp.c:34:6: identifier r0
DFcmp.c:34:9: punctuator <=
DFcmp.c:34:12: punctuator (
DFcmp.c:34:13: identifier p1
DFcmp.c:34:15: punctuator [
DFcmp.c:34:16: identifier x1
DFcmp.c:34:18: punctuator ]
DFcmp.c:34:19: punctuator )
DFcmp.c:34:20: punctuator )
DFcmp.c:34:22: keyword return
DFcmp.c:34:29: constant 1
DFcmp.c:34:30: punctuator ;
DFcmp.c:34:32: keyword else
DFcmp.c:34:37: keyword return
DFcmp.c:34:44: constant 0
DFcmp.c:34:45: punctuator ;
DFcmp.c:34:46: punctuator }
DFcmp.c:36:1: identifier indreg0reg1
DFcmp.c:36:13: punctuator (
DFcmp.c:36:14: identifier r0
DFcmp.c:36:16: punctuator ,
DFcmp.c:36:18: identifier r1
DFcmp.c:36:20: punctuator ,
DFcmp.c:36:22: identifier x0
DFcmp.c:36:24: punctuator ,
DFcmp.c:36:26: identifier x1
DFcmp.c:36:28: punctuator ,
DFcmp.c:36:30: identifier p0
DFcmp.c:36:32: punctuator ,
DFcmp.c:36:34: identifier p1
DFcmp.c:36:36: punctuator )
DFcmp.c:37:1: keyword double
DFcmp.c:37:8: identifier r0
DFcmp.c:37:10: punctuator ,
DFcmp.c:37:12: identifier r1
DFcmp.c:37:14: punctuator ;
DFcmp.c:37:16: keyword double
DFcmp.c:37:23: punctuator *
DFcmp.c:37:24: identifier p0
DFcmp.c:37:26: punctuator ,
DFcmp.c:37:28: punctuator *
DFcmp.c:37:29: identifier p1
DFcmp.c:37:31: punctuator ;
DFcmp.c:38:1: punctuator {
DFcmp.c:38:2: keyword if
DFcmp.c:38:5: punctuator (
DFcmp.c:38:6: punctuator (
DFcmp.c:38:7: punctuator *
DFcmp.c:38:8: identifier p0
DFcmp.c:38:10: punctuator )
DFcmp.c:38:12: punctuator <=
DFcmp.c:38:15: identifier r1
DFcmp.c:38:17: punctuator )
DFcmp.c:38:19: keyword return
DFcmp.c:38:26: constant 1
DFcmp.c:38:27: punctuator ;
DFcmp.c:38:29: keyword else
DFcmp.c:38:34: keyword return
DFcmp.c:38:41: constant 0
DFcmp.c:38:42: punctuator ;
DFcmp.c:38:43: punctuator }
DFcmp.c:40:1: identifier indreg0indreg1
DFcmp.c:40:16: punctuator (
DFcmp.c:40:17: identifier r0
DFcmp.c:40:19: punctuator ,
DFcmp.c:40:21: identifier r1
DFcmp.c:40:23: punctuator ,
DFcmp.c:40:25: identifier x0
DFcmp.c:40:27: punctuator ,
DFcmp.c:40:29: identifier x1
DFcmp.c:40:31: punctuator ,
DFcmp.c:40:33: identifier p0
DFcmp.c:40:35: punctuator ,
DFcmp.c:40:37: identifier p1
DFcmp.c:40:39: punctuator )
DFcmp.c:41:1: keyword double
DFcmp.c:41:8: identifier r0
DFcmp.c:41:10: punctuator ,
DFcmp.c:41:12: identifier r1
DFcmp.c:41:14: punctuator ;
DFcmp.c:41:16: keyword double
DFcmp.c:41:23: punctuator *
DFcmp.c:41:24: identifier p0
DFcmp.c:41:26: punctuator ,
DFcmp.c:41:28: punctuator *
DFcmp.c:41:29: identifier p1
DFcmp.c:41:31: punctuator ;
DFcmp.c:42:1: punctuator {
DFcmp.c:42:2: keyword if
DFcmp.c:42:5: punctuator (
DFcmp.c:42:6: punctuator (
DFcmp.c:42:7: punctuator *
DFcmp.c:42:8: identifier p0
DFcmp.c:42:10: punctuator )
DFcmp.c:42:12: punctuator <=
DFcmp.c:42:15: punctuator (
DFcmp.c:42:16: punctuator *
DFcmp.c:42:17: identifier p1
DFcmp.c:42:19: punctuator )
DFcmp.c:42:20: punctuator )
DFcmp.c:42:22: keyword return
DFcmp.c:42:29: constant 1
DFcmp.c:42:30: punctuator ;
DFcmp.c:42:32: keyword else
DFcmp.c:42:37: keyword return
DFcmp.c:42:44: constant 0
DFcmp.c:42:45: punctuator ;
DFcmp.c:42:46: punctuator }
DFcmp.c:44:1: identifier indreg0imm1
DFcmp.c:44:13: punctuator (
DFcmp.c:44:14: identifier r0
DFcmp.c:44:16: punctuator ,
DFcmp.c:44:18: identifier r1
DFcmp.c:44:20: punctuator ,
DFcmp.c:44:22: identifier x0
DFcmp.c:44:24: punctuator ,
DFcmp.c:44:26: identifier x1
DFcmp.c:44:28: punctuator ,
DFcmp.c:44:30: identifier p0
DFcmp.c:44:32: punctuator ,
DFcmp.c:44:34: identifier p1
DFcmp.c:44:36: punctuator )
DFcmp.c:45:1: keyword double
DFcmp.c:45:8: identifier r0
DFcmp.c:45:10: punctuator ,
DFcmp.c:45:12: identifier r1
DFcmp.c:45:14: punctuator ;
DFcmp.c:45:16: keyword double
DFcmp.c:45:23: punctuator *
DFcmp.c:45:24: identifier p0
DFcmp.c:45:26: punctuator ,
DFcmp.c:45:28: punctuator *
DFcmp.c:45:29: identifier p1
DFcmp.c:45:31: punctuator ;
DFcmp.c:46:1: punctuator {
DFcmp.c:46:2: keyword if
DFcmp.c:46:5: punctuator (
DFcmp.c:46:6: punctuator (
DFcmp.c:46:7: punctuator *
DFcmp.c:46:8: identifier p0
DFcmp.c:46:10: punctuator )
DFcmp.c:46:12: punctuator <=
DFcmp.c:46:15: constant 33
DFcmp.c:46:17: punctuator )
DFcmp.c:46:19: keyword return
DFcmp.c:46:26: constant 1
DFcmp.c:46:27: punctuator ;
DFcmp.c:46:29: keyword else
DFcmp.c:46:34: keyword return
DFcmp.c:46:41: constant 0
DFcmp.c:46:42: punctuator ;
DFcmp.c:46:43: punctuator }
DFcmp.c:48:1: identifier indreg0limm1
DFcmp.c:48:14: punctuator (
DFcmp.c:48:15: identifier r0
DFcmp.c:48:17: punctuator ,
DFcmp.c:48:19: identifier r1
DFcmp.c:48:21: punctuator ,
DFcmp.c:48:23: identifier x0
DFcmp.c:48:25: punctuator ,
DFcmp.c:48:27: identifier x1
DFcmp.c:48:29: punctuator ,
DFcmp.c:48:31: identifier p0
DFcmp.c:48:33: punctuator ,
DFcmp.c:48:35: identifier p1
DFcmp.c:48:37: punctuator )
DFcmp.c:49:1: keyword double
DFcmp.c:49:8: identifier r0
DFcmp.c:49:10: punctuator ,
DFcmp.c:49:12: identifier r1
DFcmp.c:49:14: punctuator ;
DFcmp.c:49:16: keyword double
DFcmp.c:49:23: punctuator *
DFcmp.c:49:24: identifier p0
DFcmp.c:49:26: punctuator ,
DFcmp.c:49:28: punctuator *
DFcmp.c:49:29: identifier p1
DFcmp.c:49:31: punctuator ;
DFcmp.c:50:1: punctuator {
DFcmp.c:50:2: keyword if
DFcmp.c:50:5: punctuator (
DFcmp.c:50:6: punctuator (
DFcmp.c:50:7: punctuator *
DFcmp.c:50:8: identifier p0
DFcmp.c:50:10: punctuator )
DFcmp.c:50:12: punctuator <=
DFcmp.c:50:15: punctuator (
DFcmp.c:50:16: punctuator (
DFcmp.c:50:17: keyword double
DFcmp.c:50:23: punctuator )
DFcmp.c:50:24: punctuator (
DFcmp.c:50:25: punctuator (
DFcmp.c:50:26: keyword int
DFcmp.c:50:29: punctuator )
DFcmp.c:50:30: punctuator &
DFcmp.c:50:31: identifier glob1
DFcmp.c:50:36: punctuator )
DFcmp.c:50:37: punctuator )
DFcmp.c:50:38: punctuator )
DFcmp.c:50:40: keyword return
DFcmp.c:50:47: constant 1
DFcmp.c:50:48: punctuator ;
DFcmp.c:50:50: keyword else
DFcmp.c:50:55: keyword return
DFcmp.c:50:62: constant 0
DFcmp.c:50:63: punctuator ;
DFcmp.c:50:64: punctuator }
DFcmp.c:52:1: identifier indreg0adr1
DFcmp.c:52:13: punctuator (
DFcmp.c:52:14: identifier r0
DFcmp.c:52:16: punctuator ,
DFcmp.c:52:18: identifier r1
DFcmp.c:52:20: punctuator ,
DFcmp.c:52:22: identifier x0
DFcmp.c:52:24: punctuator ,
DFcmp.c:52:26: identifier x1
DFcmp.c:52:28: punctuator ,
DFcmp.c:52:30: identifier p0
DFcmp.c:52:32: punctuator ,
DFcmp.c:52:34: identifier p1
DFcmp.c:52:36: punctuator )
DFcmp.c:53:1: keyword double
DFcmp.c:53:8: identifier r0
DFcmp.c:53:10: punctuator ,
DFcmp.c:53:12: identifier r1
DFcmp.c:53:14: punctuator ;
DFcmp.c:53:16: keyword double
DFcmp.c:53:23: punctuator *
DFcmp.c:53:24: identifier p0
DFcmp.c:53:26: punctuator ,
DFcmp.c:53:28: punctuator *
DFcmp.c:53:29: identifier p1
DFcmp.c:53:31: punctuator ;
DFcmp.c:54:1: punctuator {
DFcmp.c:54:2: keyword if
DFcmp.c:54:5: punctuator (
DFcmp.c:54:6: punctuator (
DFcmp.c:54:7: punctuator *
DFcmp.c:54:8: identifier p0
DFcmp.c:54:10: punctuator )
DFcmp.c:54:12: punctuator <=
DFcmp.c:54:15: punctuator (
DFcmp.c:54:16: punctuator *
DFcmp.c:54:17: punctuator (
DFcmp.c:54:18: punctuator (
DFcmp.c:54:19: keyword double
DFcmp.c:54:26: punctuator *
DFcmp.c:54:27: punctuator )
DFcmp.c:54:28: punctuator (
DFcmp.c:54:29: constant 11111111
DFcmp.c:54:38: punctuator &
DFcmp.c:54:40: punctuator ~
DFcmp.c:54:41: punctuator (
DFcmp.c:54:42: identifier __alignof__
DFcmp.c:54:54: punctuator (
DFcmp.c:54:55: keyword double
DFcmp.c:54:61: punctuator )
DFcmp.c:54:63: punctuator -
DFcmp.c:54:65: constant 1
DFcmp.c:54:66: punctuator )
DFcmp.c:54:67: punctuator )
DFcmp.c:54:68: punctuator )
DFcmp.c:54:69: punctuator )
DFcmp.c:54:70: punctuator )
DFcmp.c:54:72: keyword return
DFcmp.c:54:79: constant 1
DFcmp.c:54:80: punctuator ;
DFcmp.c:54:82: keyword else
DFcmp.c:54:87: keyword return
DFcmp.c:54:94: constant 0
DFcmp.c:54:95: punctuator ;
DFcmp.c:54:96: punctuator }
DFcmp.c:56:1: identifier indreg0adrreg1
DFcmp.c:56:16: punctuator (
DFcmp.c:56:17: identifier r0
DFcmp.c:56:19: punctuator ,
DFcmp.c:56:21: identifier r1
DFcmp.c:56:23: punctuator ,
DFcmp.c:56:25: identifier x0
DFcmp.c:56:27: punctuator ,
DFcmp.c:56:29: identifier x1
DFcmp.c:56:31: punctuator ,
DFcmp.c:56:33: identifier p0
DFcmp.c:56:35: punctuator ,
DFcmp.c:56:37: identifier p1
DFcmp.c:56:39: punctuator )
DFcmp.c:57:1: keyword double
DFcmp.c:57:8: identifier r0
DFcmp.c:57:10: punctuator ,
DFcmp.c:57:12: identifier r1
DFcmp.c:57:14: punctuator ;
DFcmp.c:57:16: keyword double
DFcmp.c:57:23: punctuator *
DFcmp.c:57:24: identifier p0
DFcmp.c:57:26: punctuator ,
DFcmp.c:57:28: punctuator *
DFcmp.c:57:29: identifier p1
DFcmp.c:57:31: punctuator ;
DFcmp.c:58:1: punctuator {
DFcmp.c:58:2: keyword if
DFcmp.c:58:5: punctuator (
DFcmp.c:58:6: punctuator (
DFcmp.c:58:7: punctuator *
DFcmp.c:58:8: identifier p0
DFcmp.c:58:10: punctuator )
DFcmp.c:58:12: punctuator <=
DFcmp.c:58:15: punctuator (
DFcmp.c:58:16: identifier p1
DFcmp.c:58:18: punctuator [
DFcmp.c:58:19: constant 1111111
DFcmp.c:58:26: punctuator /
DFcmp.c:58:27: constant 4
DFcmp.c:58:28: punctuator ]
DFcmp.c:58:29: punctuator )
DFcmp.c:58:30: punctuator )
DFcmp.c:58:32: keyword return
DFcmp.c:58:39: constant 1
DFcmp.c:58:40: punctuator ;
DFcmp.c:58:42: keyword else
DFcmp.c:58:47: keyword return
DFcmp.c:58:54: constant 0
DFcmp.c:58:55: punctuator ;
DFcmp.c:58:56: punctuator }
DFcmp.c:60:1: identifier indreg0adrx1
DFcmp.c:60:14: punctuator (
DFcmp.c:60:15: identifier r0
DFcmp.c:60:17: punctuator ,
DFcmp.c:60:19: identifier r1
DFcmp.c:60:21: punctuator ,
DFcmp.c:60:23: identifier x0
DFcmp.c:60:25: punctuator ,
DFcmp.c:60:27: identifier x1
DFcmp.c:60:29: punctuator ,
DFcmp.c:60:31: identifier p0
DFcmp.c:60:33: punctuator ,
DFcmp.c:60:35: identifier p1
DFcmp.c:60:37: punctuator )
DFcmp.c:61:1: keyword double
DFcmp.c:61:8: identifier r0
DFcmp.c:61:10: punctuator ,
DFcmp.c:61:12: identifier r1
DFcmp.c:61:14: punctuator ;
DFcmp.c:61:16: keyword double
DFcmp.c:61:23: punctuator *
DFcmp.c:61:24: identifier p0
DFcmp.c:61:26: punctuator ,
DFcmp.c:61:28: punctuator *
DFcmp.c:61:29: identifier p1
DFcmp.c:61:31: punctuator ;
DFcmp.c:62:1: punctuator {
DFcmp.c:62:2: keyword if
DFcmp.c:62:5: punctuator (
DFcmp.c:62:6: punctuator (
DFcmp.c:62:7: punctuator *
DFcmp.c:62:8: identifier p0
DFcmp.c:62:10: punctuator )
DFcmp.c:62:12: punctuator <=
DFcmp.c:62:15: punctuator (
DFcmp.c:62:16: punctuator (
DFcmp.c:62:17: punctuator (
DFcmp.c:62:18: keyword double
DFcmp.c:62:25: punctuator *
DFcmp.c:62:26: punctuator )
DFcmp.c:62:27: punctuator (
DFcmp.c:62:28: constant 11111111
DFcmp.c:62:37: punctuator &
DFcmp.c:62:39: punctuator ~
DFcmp.c:62:40: punctuator (
DFcmp.c:62:41: identifier __alignof__
DFcmp.c:62:53: punctuator (
DFcmp.c:62:54: keyword double
DFcmp.c:62:60: punctuator )
DFcmp.c:62:62: punctuator -
DFcmp.c:62:64: constant 1
DFcmp.c:62:65: punctuator )
DFcmp.c:62:66: punctuator )
DFcmp.c:62:67: punctuator )
DFcmp.c:62:68: punctuator [
DFcmp.c:62:69: identifier x1
DFcmp.c:62:71: punctuator ]
DFcmp.c:62:72: punctuator )
DFcmp.c:62:73: punctuator )
DFcmp.c:62:75: keyword return
DFcmp.c:62:82: constant 1
DFcmp.c:62:83: punctuator ;
DFcmp.c:62:85: keyword else
DFcmp.c:62:90: keyword return
DFcmp.c:62:97: constant 0
DFcmp.c:62:98: punctuator ;
DFcmp.c:62:99: punctuator }
DFcmp.c:64:1: identifier indreg0regx1
DFcmp.c:64:14: punctuator (
DFcmp.c:64:15: identifier r0
DFcmp.c:64:17: punctuator ,
DFcmp.c:64:19: identifier r1
DFcmp.c:64:21: punctuator ,
DFcmp.c:64:23: identifier x0
DFcmp.c:64:25: punctuator ,
DFcmp.c:64:27: identifier x1
DFcmp.c:64:29: punctuator ,
DFcmp.c:64:31: identifier p0
DFcmp.c:64:33: punctuator ,
DFcmp.c:64:35: identifier p1
DFcmp.c:64:37: punctuator )
DFcmp.c:65:1: keyword double
DFcmp.c:65:8: identifier r0
DFcmp.c:65:10: punctuator ,
DFcmp.c:65:12: identifier r1
DFcmp.c:65:14: punctuator ;
DFcmp.c:65:16: keyword double
DFcmp.c:65:23: punctuator *
DFcmp.c:65:24: identifier p0
DFcmp.c:65:26: punctuator ,
DFcmp.c:65:28: punctuator *
DFcmp.c:65:29: identifier p1
DFcmp.c:65:31: punctuator ;
DFcmp.c:66:1: punctuator {
DFcmp.c:66:2: keyword if
DFcmp.c:66:5: punctuator (
DFcmp.c:66:6: punctuator (
DFcmp.c:66:7: punctuator *
DFcmp.c:66:8: identifier p0
DFcmp.c:66:10: punctuator )
DFcmp.c:66:12: punctuator <=
DFcmp.c:66:15: punctuator (
DFcmp.c:66:16: identifier p1
DFcmp.c:66:18: punctuator [
DFcmp.c:66:19: identifier x1
DFcmp.c:66:21: punctuator ]
DFcmp.c:66:22: punctuator )
DFcmp.c:66:23: punctuator )
DFcmp.c:66:25: keyword return
DFcmp.c:66:32: constant 1
DFcmp.c:66:33: punctuator ;
DFcmp.c:66:35: keyword else
DFcmp.c:66:40: keyword return
DFcmp.c:66:47: constant 0
DFcmp.c:66:48: punctuator ;
DFcmp.c:66:49: punctuator }
DFcmp.c:68:1: identifier imm0reg1
DFcmp.c:68:10: punctuator (
DFcmp.c:68:11: identifier r0
DFcmp.c:68:13: punctuator ,
DFcmp.c:68:15: identifier r1
DFcmp.c:68:17: punctuator ,
DFcmp.c:68:19: identifier x0
DFcmp.c:68:21: punctuator ,
DFcmp.c:68:23: identifier x1
DFcmp.c:68:25: punctuator ,
DFcmp.c:68:27: identifier p0
DFcmp.c:68:29: punctuator ,
DFcmp.c:68:31: identifier p1
DFcmp.c:68:33: punctuator )
DFcmp.c:69:1: keyword double
DFcmp.c:69:8: identifier r0
DFcmp.c:69:10: punctuator ,
DFcmp.c:69:12: identifier r1
DFcmp.c:69:14: punctuator ;
DFcmp.c:69:16: keyword double
DFcmp.c:69:23: punctuator *
DFcmp.c:69:24: identifier p0
DFcmp.c:69:26: punctuator ,
DFcmp.c:69:28: punctuator *
DFcmp.c:69:29: identifier p1
DFcmp.c:69:31: punctuator ;
DFcmp.c:70:1: punctuator {
DFcmp.c:70:2: keyword if
DFcmp.c:70:5: punctuator (
DFcmp.c:70:6: constant 22
DFcmp.c:70:9: punctuator <=
DFcmp.c:70:12: identifier r1
DFcmp.c:70:14: punctuator )
DFcmp.c:70:16: keyword return
DFcmp.c:70:23: constant 1
DFcmp.c:70:24: punctuator ;
DFcmp.c:70:26: keyword else
DFcmp.c:70:31: keyword return
DFcmp.c:70:38: constant 0
DFcmp.c:70:39: punctuator ;
DFcmp.c:70:40: punctuator }
DFcmp.c:72:1: identifier imm0indreg1
DFcmp.c:72:13: punctuator (
DFcmp.c:72:14: identifier r0
DFcmp.c:72:16: punctuator ,
DFcmp.c:72:18: identifier r1
DFcmp.c:72:20: punctuator ,
DFcmp.c:72:22: identifier x0
DFcmp.c:72:24: punctuator ,
DFcmp.c:72:26: identifier x1
DFcmp.c:72:28: punctuator ,
DFcmp.c:72:30: identifier p0
DFcmp.c:72:32: punctuator ,
DFcmp.c:72:34: identifier p1
DFcmp.c:72:36: punctuator )
DFcmp.c:73:1: keyword double
DFcmp.c:73:8: identifier r0
DFcmp.c:73:10: punctuator ,
DFcmp.c:73:12: identifier r1
DFcmp.c:73:14: punctuator ;
DFcmp.c:73:16: keyword double
DFcmp.c:73:23: punctuator *
DFcmp.c:73:24: identifier p0
DFcmp.c:73:26: punctuator ,
DFcmp.c:73:28: punctuator *
DFcmp.c:73:29: identifier p1
DFcmp.c:73:31: punctuator ;
DFcmp.c:74:1: punctuator {
DFcmp.c:74:2: keyword if
DFcmp.c:74:5: punctuator (
DFcmp.c:74:6: constant 22
DFcmp.c:74:9: punctuator <=
DFcmp.c:74:12: punctuator (
DFcmp.c:74:13: punctuator *
DFcmp.c:74:14: identifier p1
DFcmp.c:74:16: punctuator )
DFcmp.c:74:17: punctuator )
DFcmp.c:74:19: keyword return
DFcmp.c:74:26: constant 1
DFcmp.c:74:27: punctuator ;
DFcmp.c:74:29: keyword else
DFcmp.c:74:34: keyword return
DFcmp.c:74:41: constant 0
DFcmp.c:74:42: punctuator ;
DFcmp.c:74:43: punctuator }
DFcmp.c:76:1: identifier imm0imm1
DFcmp.c:76:10: punctuator (
DFcmp.c:76:11: identifier r0
DFcmp.c:76:13: punctuator ,
DFcmp.c:76:15: identifier r1
DFcmp.c:76:17: punctuator ,
DFcmp.c:76:19: identifier x0
DFcmp.c:76:21: punctuator ,
DFcmp.c:76:23: identifier x1
DFcmp.c:76:25: punctuator ,
DFcmp.c:76:27: identifier p0
DFcmp.c:76:29: punctuator ,
DFcmp.c:76:31: identifier p1
DFcmp.c:76:33: punctuator )
DFcmp.c:77:1: keyword double
DFcmp.c:77:8: identifier r0
DFcmp.c:77:10: punctuator ,
DFcmp.c:77:12: identifier r1
DFcmp.c:77:14: punctuator ;
DFcmp.c:77:16: keyword double
DFcmp.c:77:23: punctuator *
DFcmp.c:77:24: identifier p0
DFcmp.c:77:26: punctuator ,
DFcmp.c:77:28: punctuator *
DFcmp.c:77:29: identifier p1
DFcmp.c:77:31: punctuator ;
DFcmp.c:78:1: punctuator {
DFcmp.c:78:2: keyword if
DFcmp.c:78:5: punctuator (
DFcmp.c:78:6: constant 22
DFcmp.c:78:9: punctuator <=
DFcmp.c:78:12: constant 33
DFcmp.c:78:14: punctuator )
DFcmp.c:78:16: keyword return
DFcmp.c:78:23: constant 1
DFcmp.c:78:24: punctuator ;
DFcmp.c:78:26: keyword else
DFcmp.c:78:31: keyword return
DFcmp.c:78:38: constant 0
DFcmp.c:78:39: punctuator ;
DFcmp.c:78:40: punctuator }
DFcmp.c:80:1: identifier imm0limm1
DFcmp.c:80:11: punctuator (
DFcmp.c:80:12: identifier r0
DFcmp.c:80:14: punctuator ,
DFcmp.c:80:16: identifier r1
DFcmp.c:80:18: punctuator ,
DFcmp.c:80:20: identifier x0
DFcmp.c:80:22: punctuator ,
DFcmp.c:80:24: identifier x1
DFcmp.c:80:26: punctuator ,
DFcmp.c:80:28: identifier p0
DFcmp.c:80:30: punctuator ,
DFcmp.c:80:32: identifier p1
DFcmp.c:80:34: punctuator )
DFcmp.c:81:1: keyword double
DFcmp.c:81:8: identifier r0
DFcmp.c:81:10: punctuator ,
DFcmp.c:81:12: identifier r1
DFcmp.c:81:14: punctuator ;
DFcmp.c:81:16: keyword double
DFcmp.c:81:23: punctuator *
DFcmp.c:81:24: identifier p0
DFcmp.c:81:26: punctuator ,
DFcmp.c:81:28: punctuator *
DFcmp.c:81:29: identifier p1
DFcmp.c:81:31: punctuator ;
DFcmp.c:82:1: punctuator {
DFcmp.c:82:2: keyword if
DFcmp.c:82:5: punctuator (
DFcmp.c:82:6: constant 22
DFcmp.c:82:9: punctuator <=
DFcmp.c:82:12: punctuator (
DFcmp.c:82:13: punctuator (
DFcmp.c:82:14: keyword double
DFcmp.c:82:20: punctuator )
DFcmp.c:82:21: punctuator (
DFcmp.c:82:22: punctuator (
DFcmp.c:82:23: keyword int
DFcmp.c:82:26: punctuator )
DFcmp.c:82:27: punctuator &
DFcmp.c:82:28: identifier glob1
DFcmp.c:82:33: punctuator )
DFcmp.c:82:34: punctuator )
DFcmp.c:82:35: punctuator )
DFcmp.c:82:37: keyword return
DFcmp.c:82:44: constant 1
DFcmp.c:82:45: punctuator ;
DFcmp.c:82:47: keyword else
DFcmp.c:82:52: keyword return
DFcmp.c:82:59: constant 0
DFcmp.c:82:60: punctuator ;
DFcmp.c:82:61: punctuator }
DFcmp.c:84:1: identifier imm0adr1
DFcmp.c:84:10: punctuator (
DFcmp.c:84:11: identifier r0
DFcmp.c:84:13: punctuator ,
DFcmp.c:84:15: identifier r1
DFcmp.c:84:17: punctuator ,
DFcmp.c:84:19: identifier x0
DFcmp.c:84:21: punctuator ,
DFcmp.c:84:23: identifier x1
DFcmp.c:84:25: punctuator ,
DFcmp.c:84:27: identifier p0
DFcmp.c:84:29: punctuator ,
DFcmp.c:84:31: identifier p1
DFcmp.c:84:33: punctuator )
DFcmp.c:85:1: keyword double
DFcmp.c:85:8: identifier r0
DFcmp.c:85:10: punctuator ,
DFcmp.c:85:12: identifier r1
DFcmp.c:85:14: punctuator ;
DFcmp.c:85:16: keyword double
DFcmp.c:85:23: punctuator *
DFcmp.c:85:24: identifier p0
DFcmp.c:85:26: punctuator ,
DFcmp.c:85:28: punctuator *
DFcmp.c:85:29: identifier p1
DFcmp.c:85:31: punctuator ;
DFcmp.c:86:1: punctuator {
DFcmp.c:86:2: keyword if
DFcmp.c:86:5: punctuator (
DFcmp.c:86:6: constant 22
DFcmp.c:86:9: punctuator <=
DFcmp.c:86:12: punctuator (
DFcmp.c:86:13: punctuator *
DFcmp.c:86:14: punctuator (
DFcmp.c:86:15: punctuator (
DFcmp.c:86:16: keyword double
DFcmp.c:86:23: punctuator *
DFcmp.c:86:24: punctuator )
DFcmp.c:86:25: punctuator (
DFcmp.c:86:26: constant 11111111
DFcmp.c:86:35: punctuator &
DFcmp.c:86:37: punctuator ~
DFcmp.c:86:38: punctuator (
DFcmp.c:86:39: identifier __alignof__
DFcmp.c:86:51: punctuator (
DFcmp.c:86:52: keyword double
DFcmp.c:86:58: punctuator )
DFcmp.c:86:60: punctuator -
DFcmp.c:86:62: constant 1
DFcmp.c:86:63: punctuator )
DFcmp.c:86:64: punctuator )
DFcmp.c:86:65: punctuator )
DFcmp.c:86:66: punctuator )
DFcmp.c:86:67: punctuator )
DFcmp.c:86:69: keyword return
DFcmp.c:86:76: constant 1
DFcmp.c:86:77: punctuator ;
DFcmp.c:86:79: keyword else
DFcmp.c:86:84: keyword return
DFcmp.c:86:91: constant 0
DFcmp.c:86:92: punctuator ;
DFcmp.c:86:93: punctuator }
DFcmp.c:88:1: identifier imm0adrreg1
DFcmp.c:88:13: punctuator (
DFcmp.c:88:14: identifier r0
DFcmp.c:88:16: punctuator ,
DFcmp.c:88:18: identifier r1
DFcmp.c:88:20: punctuator ,
DFcmp.c:88:22: identifier x0
DFcmp.c:88:24: punctuator ,
DFcmp.c:88:26: identifier x1
DFcmp.c:88:28: punctuator ,
DFcmp.c:88:30: identifier p0
DFcmp.c:88:32: punctuator ,
DFcmp.c:88:34: identifier p1
DFcmp.c:88:36: punctuator )
DFcmp.c:89:1: keyword double
DFcmp.c:89:8: identifier r0
DFcmp.c:89:10: punctuator ,
DFcmp.c:89:12: identifier r1
DFcmp.c:89:14: punctuator ;
DFcmp.c:89:16: keyword double
DFcmp.c:89:23: punctuator *
DFcmp.c:89:24: identifier p0
DFcmp.c:89:26: punctuator ,
DFcmp.c:89:28: punctuator *
DFcmp.c:89:29: identifier p1
DFcmp.c:89:31: punctuator ;
DFcmp.c:90:1: punctuator {
DFcmp.c:90:2: keyword if
DFcmp.c:90:5: punctuator (
DFcmp.c:90:6: constant 22
DFcmp.c:90:9: punctuator <=
DFcmp.c:90:12: punctuator (
DFcmp.c:90:13: identifier p1
DFcmp.c:90:15: punctuator [
DFcmp.c:90:16: constant 1111111
DFcmp.c:90:23: punctuator /
DFcmp.c:90:24: constant 4
DFcmp.c:90:25: punctuator ]
DFcmp.c:90:26: punctuator )
DFcmp.c:90:27: punctuator )
DFcmp.c:90:29: keyword return
DFcmp.c:90:36: constant 1
DFcmp.c:90:37: punctuator ;
DFcmp.c:90:39: keyword else
DFcmp.c:90:44: keyword return
DFcmp.c:90:51: constant 0
DFcmp.c:90:52: punctuator ;
DFcmp.c:90:53: punctuator }
DFcmp.c:92:1: identifier imm0adrx1
DFcmp.c:92:11: punctuator (
DFcmp.c:92:12: identifier r0
DFcmp.c:92:14: punctuator ,
DFcmp.c:92:16: identifier r1
DFcmp.c:92:18: punctuator ,
DFcmp.c:92:20: identifier x0
DFcmp.c:92:22: punctuator ,
DFcmp.c:92:24: identifier x1
DFcmp.c:92:26: punctuator ,
DFcmp.c:92:28: identifier p0
DFcmp.c:92:30: punctuator ,
DFcmp.c:92:32: identifier p1
DFcmp.c:92:34: punctuator )
DFcmp.c:93:1: keyword double
DFcmp.c:93:8: identifier r0
DFcmp.c:93:10: punctuator ,
DFcmp.c:93:12: identifier r1
DFcmp.c:93:14: punctuator ;
DFcmp.c:93:16: keyword double
DFcmp.c:93:23: punctuator *
DFcmp.c:93:24: identifier p0
DFcmp.c:93:26: punctuator ,
DFcmp.c:93:28: punctuator *
DFcmp.c:93:29: identifier p1
DFcmp.c:93:31: punctuator ;
DFcmp.c:94:1: punctuator {
DFcmp.c:94:2: keyword if
DFcmp.c:94:5: punctuator (
DFcmp.c:94:6: constant 22
DFcmp.c:94:9: punctuator <=
DFcmp.c:94:12: punctuator (
DFcmp.c:94:13: punctuator (
DFcmp.c:94:14: punctuator (
DFcmp.c:94:15: keyword double
DFcmp.c:94:22: punctuator *
DFcmp.c:94:23: punctuator )
DFcmp.c:94:24: punctuator (
DFcmp.c:94:25: constant 11111111
DFcmp.c:94:34: punctuator &
DFcmp.c:94:36: punctuator ~
DFcmp.c:94:37: punctuator (
DFcmp.c:94:38: identifier __alignof__
DFcmp.c:94:50: punctuator (
DFcmp.c:94:51: keyword double
DFcmp.c:94:57: punctuator )
DFcmp.c:94:59: punctuator -
DFcmp.c:94:61: constant 1
DFcmp.c:94:62: punctuator )
DFcmp.c:94:63: punctuator )
DFcmp.c:94:64: punctuator )
DFcmp.c:94:65: punctuator [
DFcmp.c:94:66: identifier x1
DFcmp.c:94:68: punctuator ]
DFcmp.c:94:69: punctuator )
DFcmp.c:94:70: punctuator )
DFcmp.c:94:72: keyword return
DFcmp.c:94:79: constant 1
DFcmp.c:94:80: punctuator ;
DFcmp.c:94:82: keyword else
DFcmp.c:94:87: keyword return
DFcmp.c:94:94: constant 0
DFcmp.c:94:95: punctuator ;
DFcmp.c:94:96: punctuator }
DFcmp.c:96:1: identifier imm0regx1
DFcmp.c:96:11: punctuator (
DFcmp.c:96:12: identifier r0
DFcmp.c:96:14: punctuator ,
DFcmp.c:96:16: identifier r1
DFcmp.c:96:18: punctuator ,
DFcmp.c:96:20: identifier x0
DFcmp.c:96:22: punctuator ,
DFcmp.c:96:24: identifier x1
DFcmp.c:96:26: punctuator ,
DFcmp.c:96:28: identifier p0
DFcmp.c:96:30: punctuator ,
DFcmp.c:96:32: identifier p1
DFcmp.c:96:34: punctuator )
DFcmp.c:97:1: keyword double
DFcmp.c:97:8: identifier r0
DFcmp.c:97:10: punctuator ,
DFcmp.c:97:12: identifier r1
DFcmp.c:97:14: punctuator ;
DFcmp.c:97:16: keyword double
DFcmp.c:97:23: punctuator *
DFcmp.c:97:24: identifier p0
DFcmp.c:97:26: punctuator ,
DFcmp.c:97:28: punctuator *
DFcmp.c:97:29: identifier p1
DFcmp.c:97:31: punctuator ;
DFcmp.c:98:1: punctuator {
DFcmp.c:98:2: keyword if
DFcmp.c:98:5: punctuator (
DFcmp.c:98:6: constant 22
DFcmp.c:98:9: punctuator <=
DFcmp.c:98:12: punctuator (
DFcmp.c:98:13: identifier p1
DFcmp.c:98:15: punctuator [
DFcmp.c:98:16: identifier x1
DFcmp.c:98:18: punctuator ]
DFcmp.c:98:19: punctuator )
DFcmp.c:98:20: punctuator )
DFcmp.c:98:22: keyword return
DFcmp.c:98:29: constant 1
DFcmp.c:98:30: punctuator ;
DFcmp.c:98:32: keyword else
DFcmp.c:98:37: keyword return
DFcmp.c:98:44: constant 0
DFcmp.c:98:45: punctuator ;
DFcmp.c:98:46: punctuator }
DFcmp.c:100:1: identifier limm0reg1
DFcmp.c:100:11: punctuator (
DFcmp.c:100:12: identifier r0
DFcmp.c:100:14: punctuator ,
DFcmp.c:100:16: identifier r1
DFcmp.c:100:18: punctuator ,
DFcmp.c:100:20: identifier x0
DFcmp.c:100:22: punctuator ,
DFcmp.c:100:24: identifier x1
DFcmp.c:100:26: punctuator ,
DFcmp.c:100:28: identifier p0
DFcmp.c:100:30: punctuator ,
DFcmp.c:100:32: identifier p1
DFcmp.c:100:34: punctuator )
DFcmp.c:101:1: keyword double
DFcmp.c:101:8: identifier r0
DFcmp.c:101:10: punctuator ,
DFcmp.c:101:12: identifier r1
DFcmp.c:101:14: punctuator ;
DFcmp.c:101:16: keyword double
DFcmp.c:101:23: punctuator *
DFcmp.c:101:24: identifier p0
DFcmp.c:101:26: punctuator ,
DFcmp.c:101:28: punctuator *
DFcmp.c:101:29: identifier p1
DFcmp.c:101:31: punctuator ;
DFcmp.c:102:1: punctuator {
DFcmp.c:102:2: keyword if
DFcmp.c:102:5: punctuator (
DFcmp.c:102:6: punctuator (
DFcmp.c:102:7: punctuator (
DFcmp.c:102:8: keyword double
DFcmp.c:102:14: punctuator )
DFcmp.c:102:15: punctuator (
DFcmp.c:102:16: punctuator (
DFcmp.c:102:17: keyword int
DFcmp.c:102:20: punctuator )
DFcmp.c:102:21: punctuator &
DFcmp.c:102:22: identifier glob0
DFcmp.c:102:27: punctuator )
DFcmp.c:102:28: punctuator )
DFcmp.c:102:30: punctuator <=
DFcmp.c:102:33: identifier r1
DFcmp.c:102:35: punctuator )
DFcmp.c:102:37: keyword return
DFcmp.c:102:44: constant 1
DFcmp.c:102:45: punctuator ;
DFcmp.c:102:47: keyword else
DFcmp.c:102:52: keyword return
DFcmp.c:102:59: constant 0
DFcmp.c:102:60: punctuator ;
DFcmp.c:102:61: punctuator }
DFcmp.c:104:1: identifier limm0indreg1
DFcmp.c:104:14: punctuator (
DFcmp.c:104:15: identifier r0
DFcmp.c:104:17: punctuator ,
DFcmp.c:104:19: identifier r1
DFcmp.c:104:21: punctuator ,
DFcmp.c:104:23: identifier x0
DFcmp.c:104:25: punctuator ,
DFcmp.c:104:27: identifier x1
DFcmp.c:104:29: punctuator ,
DFcmp.c:104:31: identifier p0
DFcmp.c:104:33: punctuator ,
DFcmp.c:104:35: identifier p1
DFcmp.c:104:37: punctuator )
DFcmp.c:105:1: keyword double
DFcmp.c:105:8: identifier r0
DFcmp.c:105:10: punctuator ,
DFcmp.c:105:12: identifier r1
DFcmp.c:105:14: punctuator ;
DFcmp.c:105:16: keyword double
DFcmp.c:105:23: punctuator *
DFcmp.c:105:24: identifier p0
DFcmp.c:105:26: punctuator ,
DFcmp.c:105:28: punctuator *
DFcmp.c:105:29: identifier p1
DFcmp.c:105:31: punctuator ;
DFcmp.c:106:1: punctuator {
DFcmp.c:106:2: keyword if
DFcmp.c:106:5: punctuator (
DFcmp.c:106:6: punctuator (
DFcmp.c:106:7: punctuator (
DFcmp.c:106:8: keyword double
DFcmp.c:106:14: punctuator )
DFcmp.c:106:15: punctuator (
DFcmp.c:106:16: punctuator (
DFcmp.c:106:17: keyword int
DFcmp.c:106:20: punctuator )
DFcmp.c:106:21: punctuator &
DFcmp.c:106:22: identifier glob0
DFcmp.c:106:27: punctuator )
DFcmp.c:106:28: punctuator )
DFcmp.c:106:30: punctuator <=
DFcmp.c:106:33: punctuator (
DFcmp.c:106:34: punctuator *
DFcmp.c:106:35: identifier p1
DFcmp.c:106:37: punctuator )
DFcmp.c:106:38: punctuator )
DFcmp.c:106:40: keyword return
DFcmp.c:106:47: constant 1
DFcmp.c:106:48: punctuator ;
DFcmp.c:106:50: keyword else
DFcmp.c:106:55: keyword return
DFcmp.c:106:62: constant 0
DFcmp.c:106:63: punctuator ;
DFcmp.c:106:64: punctuator }
DFcmp.c:108:1: identifier limm0imm1
DFcmp.c:108:11: punctuator (
DFcmp.c:108:12: identifier r0
DFcmp.c:108:14: punctuator ,
DFcmp.c:108:16: identifier r1
DFcmp.c:108:18: punctuator ,
DFcmp.c:108:20: identifier x0
DFcmp.c:108:22: punctuator ,
DFcmp.c:108:24: identifier x1
DFcmp.c:108:26: punctuator ,
DFcmp.c:108:28: identifier p0
DFcmp.c:108:30: punctuator ,
DFcmp.c:108:32: identifier p1
DFcmp.c:108:34: punctuator )
DFcmp.c:109:1: keyword double
DFcmp.c:109:8: identifier r0
DFcmp.c:109:10: punctuator ,
DFcmp.c:109:12: identifier r1
DFcmp.c:109:14: punctuator ;
DFcmp.c:109:16: keyword double
DFcmp.c:109:23: punctuator *
DFcmp.c:109:24: identifier p0
DFcmp.c:109:26: punctuator ,
DFcmp.c:109:28: punctuator *
DFcmp.c:109:29: identifier p1
DFcmp.c:109:31: punctuator ;
DFcmp.c:110:1: punctuator {
DFcmp.c:110:2: keyword if
DFcmp.c:110:5: punctuator (
DFcmp.c:110:6: punctuator (
DFcmp.c:110:7: punctuator (
DFcmp.c:110:8: keyword double
DFcmp.c:110:14: punctuator )
DFcmp.c:110:15: punctuator (
DFcmp.c:110:16: punctuator (
DFcmp.c:110:17: keyword int
DFcmp.c:110:20: punctuator )
DFcmp.c:110:21: punctuator &
DFcmp.c:110:22: identifier glob0
DFcmp.c:110:27: punctuator )
DFcmp.c:110:28: punctuator )
DFcmp.c:110:30: punctuator <=
DFcmp.c:110:33: constant 33
DFcmp.c:110:35: punctuator )
DFcmp.c:110:37: keyword return
DFcmp.c:110:44: constant 1
DFcmp.c:110:45: punctuator ;
DFcmp.c:110:47: keyword else
DFcmp.c:110:52: keyword return
DFcmp.c:110:59: constant 0
DFcmp.c:110:60: punctuator ;
DFcmp.c:110:61: punctuator }
DFcmp.c:112:1: identifier limm0limm1
DFcmp.c:112:12: punctuator (
DFcmp.c:112:13: identifier r0
DFcmp.c:112:15: punctuator ,
DFcmp.c:112:17: identifier r1
DFcmp.c:112:19: punctuator ,
DFcmp.c:112:21: identifier x0
DFcmp.c:112:23: punctuator ,
DFcmp.c:112:25: identifier x1
DFcmp.c:112:27: punctuator ,
DFcmp.c:112:29: identifier p0
DFcmp.c:112:31: punctuator ,
DFcmp.c:112:33: identifier p1
DFcmp.c:112:35: punctuator )
DFcmp.c:113:1: keyword double
DFcmp.c:113:8: identifier r0
DFcmp.c:113:10: punctuator ,
DFcmp.c:113:12: identifier r1
DFcmp.c:113:14: punctuator ;
DFcmp.c:113:16: keyword double
DFcmp.c:113:23: punctuator *
DFcmp.c:113:24: identifier p0
DFcmp.c:113:26: punctuator ,
DFcmp.c:113:28: punctuator *
DFcmp.c:113:29: identifier p1
DFcmp.c:113:31: punctuator ;
DFcmp.c:114:1: punctuator {
DFcmp.c:114:2: keyword if
DFcmp.c:114:5: punctuator (
DFcmp.c:114:6: punctuator (
DFcmp.c:114:7: punctuator (
DFcmp.c:114:8: keyword double
DFcmp.c:114:14: punctuator )
DFcmp.c:114:15: punctuator (
DFcmp.c:114:16: punctuator (
DFcmp.c:114:17: keyword int
DFcmp.c:114:20: punctuator )
DFcmp.c:114:21: punctuator &
DFcmp.c:114:22: identifier glob0
DFcmp.c:114:27: punctuator )
DFcmp.c:114:28: punctuator )
DFcmp.c:114:30: punctuator <=
DFcmp.c:114:33: punctuator (
DFcmp.c:114:34: punctuator (
DFcmp.c:114:35: keyword double
DFcmp.c:114:41: punctuator )
DFcmp.c:114:42: punctuator (
DFcmp.c:114:43: punctuator (
DFcmp.c:114:44: keyword int
DFcmp.c:114:47: punctuator )
DFcmp.c:114:48: punctuator &
DFcmp.c:114:49: identifier glob1
DFcmp.c:114:54: punctuator )
DFcmp.c:114:55: punctuator )
DFcmp.c:114:56: punctuator )
DFcmp.c:114:58: keyword return
DFcmp.c:114:65: constant 1
DFcmp.c:114:66: punctuator ;
DFcmp.c:114:68: keyword else
DFcmp.c:114:73: keyword return
DFcmp.c:114:80: constant 0
DFcmp.c:114:81: punctuator ;
DFcmp.c:114:82: punctuator }
DFcmp.c:116:1: identifier limm0adr1
DFcmp.c:116:11: punctuator (
DFcmp.c:116:12: identifier r0
DFcmp.c:116:14: punctuator ,
DFcmp.c:116:16: identifier r1
DFcmp.c:116:18: punctuator ,
DFcmp.c:116:20: identifier x0
DFcmp.c:116:22: punctuator ,
DFcmp.c:116:24: identifier x1
DFcmp.c:116:26: punctuator ,
DFcmp.c:116:28: identifier p0
DFcmp.c:116:30: punctuator ,
DFcmp.c:116:32: identifier p1
DFcmp.c:116:34: punctuator )
DFcmp.c:117:1: keyword double
DFcmp.c:117:8: identifier r0
DFcmp.c:117:10: punctuator ,
DFcmp.c:117:12: identifier r1
DFcmp.c:117:14: punctuator ;
DFcmp.c:117:16: keyword double
DFcmp.c:117:23: punctuator *
DFcmp.c:117:24: identifier p0
DFcmp.c:117:26: punctuator ,
DFcmp.c:117:28: punctuator *
DFcmp.c:117:29: identifier p1
DFcmp.c:117:31: punctuator ;
DFcmp.c:118:1: punctuator {
DFcmp.c:118:2: keyword if
DFcmp.c:118:5: punctuator (
DFcmp.c:118:6: punctuator (
DFcmp.c:118:7: punctuator (
DFcmp.c:118:8: keyword double
DFcmp.c:118:14: punctuator )
DFcmp.c:118:15: punctuator (
DFcmp.c:118:16: punctuator (
DFcmp.c:118:17: keyword int
DFcmp.c:118:20: punctuator )
DFcmp.c:118:21: punctuator &
DFcmp.c:118:22: identifier glob0
DFcmp.c:118:27: punctuator )
DFcmp.c:118:28: punctuator )
DFcmp.c:118:30: punctuator <=
DFcmp.c:118:33: punctuator (
DFcmp.c:118:34: punctuator *
DFcmp.c:118:35: punctuator (
DFcmp.c:118:36: punctuator (
DFcmp.c:118:37: keyword double
DFcmp.c:118:44: punctuator *
DFcmp.c:118:45: punctuator )
DFcmp.c:118:46: punctuator (
DFcmp.c:118:47: constant 11111111
DFcmp.c:118:56: punctuator &
DFcmp.c:118:58: punctuator ~
DFcmp.c:118:59: punctuator (
DFcmp.c:118:60: identifier __alignof__
DFcmp.c:118:72: punctuator (
DFcmp.c:118:73: keyword double
DFcmp.c:118:79: punctuator )
DFcmp.c:118:81: punctuator -
DFcmp.c:118:83: constant 1
DFcmp.c:118:84: punctuator )
DFcmp.c:118:85: punctuator )
DFcmp.c:118:86: punctuator )
DFcmp.c:118:87: punctuator )
DFcmp.c:118:88: punctuator )
DFcmp.c:118:90: keyword return
DFcmp.c:118:97: constant 1
DFcmp.c:118:98: punctuator ;
DFcmp.c:118:100: keyword else
DFcmp.c:118:105: keyword return
DFcmp.c:118:112: constant 0
DFcmp.c:118:113: punctuator ;
DFcmp.c:118:114: punctuator }
DFcmp.c:120:1: identifier limm0adrreg1
DFcmp.c:120:14: punctuator (
DFcmp.c:120:15: identifier r0
DFcmp.c:120:17: punctuator ,
DFcmp.c:120:19: identifier r1
DFcmp.c:120:21: punctuator ,
DFcmp.c:120:23: identifier x0
DFcmp.c:120:25: punctuator ,
DFcmp.c:120:27: identifier x1
DFcmp.c:120:29: punctuator ,
DFcmp.c:120:31: identifier p0
DFcmp.c:120:33: punctuator ,
DFcmp.c:120:35: identifier p1
DFcmp.c:120:37: punctuator )
DFcmp.c:121:1: keyword double
DFcmp.c:121:8: identifier r0
DFcmp.c:121:10: punctuator ,
DFcmp.c:121:12: identifier r1
DFcmp.c:121:14: punctuator ;
DFcmp.c:121:16: keyword double
DFcmp.c:121:23: punctuator *
DFcmp.c:121:24: identifier p0
DFcmp.c:121:26: punctuator ,
DFcmp.c:121:28: punctuator *
DFcmp.c:121:29: identifier p1
DFcmp.c:121:31: punctuator ;
DFcmp.c:122:1: punctuator {
DFcmp.c:122:2: keyword if
DFcmp.c:122:5: punctuator (
DFcmp.c:122:6: punctuator (
DFcmp.c:122:7: punctuator (
DFcmp.c:122:8: keyword double
DFcmp.c:122:14: punctuator )
DFcmp.c:122:15: punctuator (
DFcmp.c:122:16: punctuator (
DFcmp.c:122:17: keyword int
DFcmp.c:122:20: punctuator )
DFcmp.c:122:21: punctuator &
DFcmp.c:122:22: identifier glob0
DFcmp.c:122:27: punctuator )
DFcmp.c:122:28: punctuator )
DFcmp.c:122:30: punctuator <=
DFcmp.c:122:33: punctuator (
DFcmp.c:122:34: identifier p1
DFcmp.c:122:36: punctuator [
DFcmp.c:122:37: constant 1111111
DFcmp.c:122:44: punctuator /
DFcmp.c:122:45: constant 4
DFcmp.c:122:46: punctuator ]
DFcmp.c:122:47: punctuator )
DFcmp.c:122:48: punctuator )
DFcmp.c:122:50: keyword return
DFcmp.c:122:57: constant 1
DFcmp.c:122:58: punctuator ;
DFcmp.c:122:60: keyword else
DFcmp.c:122:65: keyword return
DFcmp.c:122:72: constant 0
DFcmp.c:122:73: punctuator ;
DFcmp.c:122:74: punctuator }
DFcmp.c:124:1: identifier limm0adrx1
DFcmp.c:124:12: punctuator (
DFcmp.c:124:13: identifier r0
DFcmp.c:124:15: punctuator ,
DFcmp.c:124:17: identifier r1
DFcmp.c:124:19: punctuator ,
DFcmp.c:124:21: identifier x0
DFcmp.c:124:23: punctuator ,
DFcmp.c:124:25: identifier x1
DFcmp.c:124:27: punctuator ,
DFcmp.c:124:29: identifier p0
DFcmp.c:124:31: punctuator ,
DFcmp.c:124:33: identifier p1
DFcmp.c:124:35: punctuator )
DFcmp.c:125:1: keyword double
DFcmp.c:125:8: identifier r0
DFcmp.c:125:10: punctuator ,
DFcmp.c:125:12: identifier r1
DFcmp.c:125:14: punctuator ;
DFcmp.c:125:16: keyword double
DFcmp.c:125:23: punctuator *
DFcmp.c:125:24: identifier p0
DFcmp.c:125:26: punctuator ,
DFcmp.c:125:28: punctuator *
DFcmp.c:125:29: identifier p1
DFcmp.c:125:31: punctuator ;
DFcmp.c:126:1: punctuator {
DFcmp.c:126:2: keyword if
DFcmp.c:126:5: punctuator (
DFcmp.c:126:6: punctuator (
DFcmp.c:126:7: punctuator (
DFcmp.c:126:8: keyword double
DFcmp.c:126:14: punctuator )
DFcmp.c:126:15: punctuator (
DFcmp.c:126:16: punctuator (
DFcmp.c:126:17: keyword int
DFcmp.c:126:20: punctuator )
DFcmp.c:126:21: punctuator &
DFcmp.c:126:22: identifier glob0
DFcmp.c:126:27: punctuator )
DFcmp.c:126:28: punctuator )
DFcmp.c:126:30: punctuator <=
DFcmp.c:126:33: punctuator (
DFcmp.c:126:34: punctuator (
DFcmp.c:126:35: punctuator (
DFcmp.c:126:36: keyword double
DFcmp.c:126:43: punctuator *
DFcmp.c:126:44: punctuator )
DFcmp.c:126:45: punctuator (
DFcmp.c:126:46: constant 11111111
DFcmp.c:126:55: punctuator &
DFcmp.c:126:57: punctuator ~
DFcmp.c:126:58: punctuator (
DFcmp.c:126:59: identifier __alignof__
DFcmp.c:126:71: punctuator (
DFcmp.c:126:72: keyword double
DFcmp.c:126:78: punctuator )
DFcmp.c:126:80: punctuator -
DFcmp.c:126:82: constant 1
DFcmp.c:126:83: punctuator )
DFcmp.c:126:84: punctuator )
DFcmp.c:126:85: punctuator )
DFcmp.c:126:86: punctuator [
DFcmp.c:126:87: identifier x1
DFcmp.c:126:89: punctuator ]
DFcmp.c:126:90: punctuator )
DFcmp.c:126:91: punctuator )
DFcmp.c:126:93: keyword return
DFcmp.c:126:100: constant 1
DFcmp.c:126:101: punctuator ;
DFcmp.c:126:103: keyword else
DFcmp.c:126:108: keyword return
DFcmp.c:126:115: constant 0
DFcmp.c:126:116: punctuator ;
DFcmp.c:126:117: punctuator }
DFcmp.c:128:1: identifier limm0regx1
DFcmp.c:128:12: punctuator (
DFcmp.c:128:13: identifier r0
DFcmp.c:128:15: punctuator ,
DFcmp.c:128:17: identifier r1
DFcmp.c:128:19: punctuator ,
DFcmp.c:128:21: identifier x0
DFcmp.c:128:23: punctuator ,
DFcmp.c:128:25: identifier x1
DFcmp.c:128:27: punctuator ,
DFcmp.c:128:29: identifier p0
DFcmp.c:128:31: punctuator ,
DFcmp.c:128:33: identifier p1
DFcmp.c:128:35: punctuator )
DFcmp.c:129:1: keyword double
DFcmp.c:129:8: identifier r0
DFcmp.c:129:10: punctuator ,
DFcmp.c:129:12: identifier r1
DFcmp.c:129:14: punctuator ;
DFcmp.c:129:16: keyword double
DFcmp.c:129:23: punctuator *
DFcmp.c:129:24: identifier p0
DFcmp.c:129:26: punctuator ,
DFcmp.c:129:28: punctuator *
DFcmp.c:129:29: identifier p1
DFcmp.c:129:31: punctuator ;
DFcmp.c:130:1: punctuator {
DFcmp.c:130:2: keyword if
DFcmp.c:130:5: punctuator (
DFcmp.c:130:6: punctuator (
DFcmp.c:130:7: punctuator (
DFcmp.c:130:8: keyword double
DFcmp.c:130:14: punctuator )
DFcmp.c:130:15: punctuator (
DFcmp.c:130:16: punctuator (
DFcmp.c:130:17: keyword int
DFcmp.c:130:20: punctuator )
DFcmp.c:130:21: punctuator &
DFcmp.c:130:22: identifier glob0
DFcmp.c:130:27: punctuator )
DFcmp.c:130:28: punctuator )
DFcmp.c:130:30: punctuator <=
DFcmp.c:130:33: punctuator (
DFcmp.c:130:34: identifier p1
DFcmp.c:130:36: punctuator [
DFcmp.c:130:37: identifier x1
DFcmp.c:130:39: punctuator ]
DFcmp.c:130:40: punctuator )
DFcmp.c:130:41: punctuator )
DFcmp.c:130:43: keyword return
DFcmp.c:130:50: constant 1
DFcmp.c:130:51: punctuator ;
DFcmp.c:130:53: keyword else
DFcmp.c:130:58: keyword return
DFcmp.c:130:65: constant 0
DFcmp.c:130:66: punctuator ;
DFcmp.c:130:67: punctuator }
DFcmp.c:132:1: identifier adr0reg1
DFcmp.c:132:10: punctuator (
DFcmp.c:132:11: identifier r0
DFcmp.c:132:13: punctuator ,
DFcmp.c:132:15: identifier r1
DFcmp.c:132:17: punctuator ,
DFcmp.c:132:19: identifier x0
DFcmp.c:132:21: punctuator ,
DFcmp.c:132:23: identifier x1
DFcmp.c:132:25: punctuator ,
DFcmp.c:132:27: identifier p0
DFcmp.c:132:29: punctuator ,
DFcmp.c:132:31: identifier p1
DFcmp.c:132:33: punctuator )
DFcmp.c:133:1: keyword double
DFcmp.c:133:8: identifier r0
DFcmp.c:133:10: punctuator ,
DFcmp.c:133:12: identifier r1
DFcmp.c:133:14: punctuator ;
DFcmp.c:133:16: keyword double
DFcmp.c:133:23: punctuator *
DFcmp.c:133:24: identifier p0
DFcmp.c:133:26: punctuator ,
DFcmp.c:133:28: punctuator *
DFcmp.c:133:29: identifier p1
DFcmp.c:133:31: punctuator ;
DFcmp.c:134:1: punctuator {
DFcmp.c:134:2: keyword if
DFcmp.c:134:5: punctuator (
DFcmp.c:134:6: punctuator (
DFcmp.c:134:7: punctuator *
DFcmp.c:134:8: punctuator (
DFcmp.c:134:9: punctuator (
DFcmp.c:134:10: keyword double
DFcmp.c:134:17: punctuator *
DFcmp.c:134:18: punctuator )
DFcmp.c:134:19: constant 10000000
DFcmp.c:134:27: punctuator )
DFcmp.c:134:28: punctuator )
DFcmp.c:134:30: punctuator <=
DFcmp.c:134:33: identifier r1
DFcmp.c:134:35: punctuator )
DFcmp.c:134:37: keyword return
DFcmp.c:134:44: constant 1
DFcmp.c:134:45: punctuator ;
DFcmp.c:134:47: keyword else
DFcmp.c:134:52: keyword return
DFcmp.c:134:59: constant 0
DFcmp.c:134:60: punctuator ;
DFcmp.c:134:61: punctuator }
DFcmp.c:136:1: identifier adr0indreg1
DFcmp.c:136:13: punctuator (
DFcmp.c:136:14: identifier r0
DFcmp.c:136:16: punctuator ,
DFcmp.c:136:18: identifier r1
DFcmp.c:136:20: punctuator ,
DFcmp.c:136:22: identifier x0
DFcmp.c:136:24: punctuator ,
DFcmp.c:136:26: identifier x1
DFcmp.c:136:28: punctuator ,
DFcmp.c:136:30: identifier p0
DFcmp.c:136:32: punctuator ,
DFcmp.c:136:34: identifier p1
DFcmp.c:136:36: punctuator )
DFcmp.c:137:1: keyword double
DFcmp.c:137:8: identifier r0
DFcmp.c:137:10: punctuator ,
DFcmp.c:137:12: identifier r1
DFcmp.c:137:14: punctuator ;
DFcmp.c:137:16: keyword double
DFcmp.c:137:23: punctuator *
DFcmp.c:137:24: identifier p0
DFcmp.c:137:26: punctuator ,
DFcmp.c:137:28: punctuator *
DFcmp.c:137:29: identifier p1
DFcmp.c:137:31: punctuator ;
DFcmp.c:138:1: punctuator {
DFcmp.c:138:2: keyword if
DFcmp.c:138:5: punctuator (
DFcmp.c:138:6: punctuator (
DFcmp.c:138:7: punctuator *
DFcmp.c:138:8: punctuator (
DFcmp.c:138:9: punctuator (
DFcmp.c:138:10: keyword double
DFcmp.c:138:17: punctuator *
DFcmp.c:138:18: punctuator )
DFcmp.c:138:19: constant 10000000
DFcmp.c:138:27: punctuator )
DFcmp.c:138:28: punctuator )
DFcmp.c:138:30: punctuator <=
DFcmp.c:138:33: punctuator (
DFcmp.c:138:34: punctuator *
DFcmp.c:138:35: identifier p1
DFcmp.c:138:37: punctuator )
DFcmp.c:138:38: punctuator )
DFcmp.c:138:40: keyword return
DFcmp.c:138:47: constant 1
DFcmp.c:138:48: punctuator ;
DFcmp.c:138:50: keyword else
DFcmp.c:138:55: keyword return
DFcmp.c:138:62: constant 0
DFcmp.c:138:63: punctuator ;
DFcmp.c:138:64: punctuator }
DFcmp.c:140:1: identifier adr0imm1
DFcmp.c:140:10: punctuator (
DFcmp.c:140:11: identifier r0
DFcmp.c:140:13: punctuator ,
DFcmp.c:140:15: identifier r1
DFcmp.c:140:17: punctuator ,
DFcmp.c:140:19: identifier x0
DFcmp.c:140:21: punctuator ,
DFcmp.c:140:23: identifier x1
DFcmp.c:140:25: punctuator ,
DFcmp.c:140:27: identifier p0
DFcmp.c:140:29: punctuator ,
DFcmp.c:140:31: identifier p1
DFcmp.c:140:33: punctuator )
DFcmp.c:141:1: keyword double
DFcmp.c:141:8: identifier r0
DFcmp.c:141:10: punctuator ,
DFcmp.c:141:12: identifier r1
DFcmp.c:141:14: punctuator ;
DFcmp.c:141:16: keyword double
DFcmp.c:141:23: punctuator *
DFcmp.c:141:24: identifier p0
DFcmp.c:141:26: punctuator ,
DFcmp.c:141:28: punctuator *
DFcmp.c:141:29: identifier p1
DFcmp.c:141:31: punctuator ;
DFcmp.c:142:1: punctuator {
DFcmp.c:142:2: keyword if
DFcmp.c:142:5: punctuator (
DFcmp.c:142:6: punctuator (
DFcmp.c:142:7: punctuator *
DFcmp.c:142:8: punctuator (
DFcmp.c:142:9: punctuator (
DFcmp.c:142:10: keyword double
DFcmp.c:142:17: punctuator *
DFcmp.c:142:18: punctuator )
DFcmp.c:142:19: constant 10000000
DFcmp.c:142:27: punctuator )
DFcmp.c:142:28: punctuator )
DFcmp.c:142:30: punctuator <=
DFcmp.c:142:33: constant 33
DFcmp.c:142:35: punctuator )
DFcmp.c:142:37: keyword return
DFcmp.c:142:44: constant 1
DFcmp.c:142:45: punctuator ;
DFcmp.c:142:47: keyword else
DFcmp.c:142:52: keyword return
DFcmp.c:142:59: constant 0
DFcmp.c:142:60: punctuator ;
DFcmp.c:142:61: punctuator }
DFcmp.c:144:1: identifier adr0limm1
DFcmp.c:144:11: punctuator (
DFcmp.c:144:12: identifier r0
DFcmp.c:144:14: punctuator ,
DFcmp.c:144:16: identifier r1
DFcmp.c:144:18: punctuator ,
DFcmp.c:144:20: identifier x0
DFcmp.c:144:22: punctuator ,
DFcmp.c:144:24: identifier x1
DFcmp.c:144:26: punctuator ,
DFcmp.c:144:28: identifier p0
DFcmp.c:144:30: punctuator ,
DFcmp.c:144:32: identifier p1
DFcmp.c:144:34: punctuator )
DFcmp.c:145:1: keyword double
DFcmp.c:145:8: identifier r0
DFcmp.c:145:10: punctuator ,
DFcmp.c:145:12: identifier r1
DFcmp.c:145:14: punctuator ;
DFcmp.c:145:16: keyword double
DFcmp.c:145:23: punctuator *
DFcmp.c:145:24: identifier p0
DFcmp.c:145:26: punctuator ,
DFcmp.c:145:28: punctuator *
DFcmp.c:145:29: identifier p1
DFcmp.c:145:31: punctuator ;
DFcmp.c:146:1: punctuator {
DFcmp.c:146:2: keyword if
DFcmp.c:146:5: punctuator (
DFcmp.c:146:6: punctuator (
DFcmp.c:146:7: punctuator *
DFcmp.c:146:8: punctuator (
DFcmp.c:146:9: punctuator (
DFcmp.c:146:10: keyword double
DFcmp.c:146:17: punctuator *
DFcmp.c:146:18: punctuator )
DFcmp.c:146:19: constant 10000000
DFcmp.c:146:27: punctuator )
DFcmp.c:146:28: punctuator )
DFcmp.c:146:30: punctuator <=
DFcmp.c:146:33: punctuator (
DFcmp.c:146:34: punctuator (
DFcmp.c:146:35: keyword double
DFcmp.c:146:41: punctuator )
DFcmp.c:146:42: punctuator (
DFcmp.c:146:43: punctuator (
DFcmp.c:146:44: keyword int
DFcmp.c:146:47: punctuator )
DFcmp.c:146:48: punctuator &
DFcmp.c:146:49: identifier glob1
DFcmp.c:146:54: punctuator )
DFcmp.c:146:55: punctuator )
DFcmp.c:146:56: punctuator )
DFcmp.c:146:58: keyword return
DFcmp.c:146:65: constant 1
DFcmp.c:146:66: punctuator ;
DFcmp.c:146:68: keyword else
DFcmp.c:146:73: keyword return
DFcmp.c:146:80: constant 0
DFcmp.c:146:81: punctuator ;
DFcmp.c:146:82: punctuator }
DFcmp.c:148:1: identifier adr0adr1
DFcmp.c:148:10: punctuator (
DFcmp.c:148:11: identifier r0
DFcmp.c:148:13: punctuator ,
DFcmp.c:148:15: identifier r1
DFcmp.c:148:17: punctuator ,
DFcmp.c:148:19: identifier x0
DFcmp.c:148:21: punctuator ,
DFcmp.c:148:23: identifier x1
DFcmp.c:148:25: punctuator ,
DFcmp.c:148:27: identifier p0
DFcmp.c:148:29: punctuator ,
DFcmp.c:148:31: identifier p1
DFcmp.c:148:33: punctuator )
DFcmp.c:149:1: keyword double
DFcmp.c:149:8: identifier r0
DFcmp.c:149:10: punctuator ,
DFcmp.c:149:12: identifier r1
DFcmp.c:149:14: punctuator ;
DFcmp.c:149:16: keyword double
DFcmp.c:149:23: punctuator *
DFcmp.c:149:24: identifier p0
DFcmp.c:149:26: punctuator ,
DFcmp.c:149:28: punctuator *
DFcmp.c:149:29: identifier p1
DFcmp.c:149:31: punctuator ;
DFcmp.c:150:1: punctuator {
DFcmp.c:150:2: keyword if
DFcmp.c:150:5: punctuator (
DFcmp.c:150:6: punctuator (
DFcmp.c:150:7: punctuator *
DFcmp.c:150:8: punctuator (
DFcmp.c:150:9: punctuator (
DFcmp.c:150:10: keyword double
DFcmp.c:150:17: punctuator *
DFcmp.c:150:18: punctuator )
DFcmp.c:150:19: constant 10000000
DFcmp.c:150:27: punctuator )
DFcmp.c:150:28: punctuator )
DFcmp.c:150:30: punctuator <=
DFcmp.c:150:33: punctuator (
DFcmp.c:150:34: punctuator *
DFcmp.c:150:35: punctuator (
DFcmp.c:150:36: punctuator (
DFcmp.c:150:37: keyword double
DFcmp.c:150:44: punctuator *
DFcmp.c:150:45: punctuator )
DFcmp.c:150:46: punctuator (
DFcmp.c:150:47: constant 11111111
DFcmp.c:150:56: punctuator &
DFcmp.c:150:58: punctuator ~
DFcmp.c:150:59: punctuator (
DFcmp.c:150:60: identifier __alignof__
DFcmp.c:150:72: punctuator (
DFcmp.c:150:73: keyword double
DFcmp.c:150:79: punctuator )
DFcmp.c:150:81: punctuator -
DFcmp.c:150:83: constant 1
DFcmp.c:150:84: punctuator )
DFcmp.c:150:85: punctuator )
DFcmp.c:150:86: punctuator )
DFcmp.c:150:87: punctuator )
DFcmp.c:150:88: punctuator )
DFcmp.c:150:90: keyword return
DFcmp.c:150:97: constant 1
DFcmp.c:150:98: punctuator ;
DFcmp.c:150:100: keyword else
DFcmp.c:150:105: keyword return
DFcmp.c:150:112: constant 0
DFcmp.c:150:113: punctuator ;
DFcmp.c:150:114: punctuator }
DFcmp.c:152:1: identifier adr0adrreg1
DFcmp.c:152:13: punctuator (
DFcmp.c:152:14: identifier r0
DFcmp.c:152:16: punctuator ,
DFcmp.c:152:18: identifier r1
DFcmp.c:152:20: punctuator ,
DFcmp.c:152:22: identifier x0
DFcmp.c:152:24: punctuator ,
DFcmp.c:152:26: identifier x1
DFcmp.c:152:28: punctuator ,
DFcmp.c:152:30: identifier p0
DFcmp.c:152:32: punctuator ,
DFcmp.c:152:34: identifier p1
DFcmp.c:152:36: punctuator )
DFcmp.c:153:1: keyword double
DFcmp.c:153:8: identifier r0
DFcmp.c:153:10: punctuator ,
DFcmp.c:153:12: identifier r1
DFcmp.c:153:14: punctuator ;
DFcmp.c:153:16: keyword double
DFcmp.c:153:23: punctuator *
DFcmp.c:153:24: identifier p0
DFcmp.c:153:26: punctuator ,
DFcmp.c:153:28: punctuator *
DFcmp.c:153:29: identifier p1
DFcmp.c:153:31: punctuator ;
DFcmp.c:154:1: punctuator {
DFcmp.c:154:2: keyword if
DFcmp.c:154:5: punctuator (
DFcmp.c:154:6: punctuator (
DFcmp.c:154:7: punctuator *
DFcmp.c:154:8: punctuator (
DFcmp.c:154:9: punctuator (
DFcmp.c:154:10: keyword double
DFcmp.c:154:17: punctuator *
DFcmp.c:154:18: punctuator )
DFcmp.c:154:19: constant 10000000
DFcmp.c:154:27: punctuator )
DFcmp.c:154:28: punctuator )
DFcmp.c:154:30: punctuator <=
DFcmp.c:154:33: punctuator (
DFcmp.c:154:34: identifier p1
DFcmp.c:154:36: punctuator [
DFcmp.c:154:37: constant 1111111
DFcmp.c:154:44: punctuator /
DFcmp.c:154:45: constant 4
DFcmp.c:154:46: punctuator ]
DFcmp.c:154:47: punctuator )
DFcmp.c:154:48: punctuator )
DFcmp.c:154:50: keyword return
DFcmp.c:154:57: constant 1
DFcmp.c:154:58: punctuator ;
DFcmp.c:154:60: keyword else
DFcmp.c:154:65: keyword return
DFcmp.c:154:72: constant 0
DFcmp.c:154:73: punctuator ;
DFcmp.c:154:74: punctuator }
DFcmp.c:156:1: identifier adr0adrx1
DFcmp.c:156:11: punctuator (
DFcmp.c:156:12: identifier r0
DFcmp.c:156:14: punctuator ,
DFcmp.c:156:16: identifier r1
DFcmp.c:156:18: punctuator ,
DFcmp.c:156:20: identifier x0
DFcmp.c:156:22: punctuator ,
DFcmp.c:156:24: identifier x1
DFcmp.c:156:26: punctuator ,
DFcmp.c:156:28: identifier p0
DFcmp.c:156:30: punctuator ,
DFcmp.c:156:32: identifier p1
DFcmp.c:156:34: punctuator )
DFcmp.c:157:1: keyword double
DFcmp.c:157:8: identifier r0
DFcmp.c:157:10: punctuator ,
DFcmp.c:157:12: identifier r1
DFcmp.c:157:14: punctuator ;
DFcmp.c:157:16: keyword double
DFcmp.c:157:23: punctuator *
DFcmp.c:157:24: identifier p0
DFcmp.c:157:26: punctuator ,
DFcmp.c:157:28: punctuator *
DFcmp.c:157:29: identifier p1
DFcmp.c:157:31: punctuator ;
DFcmp.c:158:1: punctuator {
DFcmp.c:158:2: keyword if
DFcmp.c:158:5: punctuator (
DFcmp.c:158:6: punctuator (
DFcmp.c:158:7: punctuator *
DFcmp.c:158:8: punctuator (
DFcmp.c:158:9: punctuator (
DFcmp.c:158:10: keyword double
DFcmp.c:158:17: punctuator *
DFcmp.c:158:18: punctuator )
DFcmp.c:158:19: constant 10000000
DFcmp.c:158:27: punctuator )
DFcmp.c:158:28: punctuator )
DFcmp.c:158:30: punctuator <=
DFcmp.c:158:33: punctuator (
DFcmp.c:158:34: punctuator (
DFcmp.c:158:35: punctuator (
DFcmp.c:158:36: keyword double
DFcmp.c:158:43: punctuator *
DFcmp.c:158:44: punctuator )
DFcmp.c:158:45: punctuator (
DFcmp.c:158:46: constant 11111111
DFcmp.c:158:55: punctuator &
DFcmp.c:158:57: punctuator ~
DFcmp.c:158:58: punctuator (
DFcmp.c:158:59: identifier __alignof__
DFcmp.c:158:71: punctuator (
DFcmp.c:158:72: keyword double
DFcmp.c:158:78: punctuator )
DFcmp.c:158:80: punctuator -
DFcmp.c:158:82: constant 1
DFcmp.c:158:83: punctuator )
DFcmp.c:158:84: punctuator )
DFcmp.c:158:85: punctuator )
DFcmp.c:158:86: punctuator [
DFcmp.c:158:87: identifier x1
DFcmp.c:158:89: punctuator ]
DFcmp.c:158:90: punctuator )
DFcmp.c:158:91: punctuator )
DFcmp.c:158:93: keyword return
DFcmp.c:158:100: constant 1
DFcmp.c:158:101: punctuator ;
DFcmp.c:158:103: keyword else
DFcmp.c:158:108: keyword return
DFcmp.c:158:115: constant 0
DFcmp.c:158:116: punctuator ;
DFcmp.c:158:117: punctuator }
DFcmp.c:160:1: identifier adr0regx1
DFcmp.c:160:11: punctuator (
DFcmp.c:160:12: identifier r0
DFcmp.c:160:14: punctuator ,
DFcmp.c:160:16: identifier r1
DFcmp.c:160:18: punctuator ,
DFcmp.c:160:20: identifier x0
DFcmp.c:160:22: punctuator ,
DFcmp.c:160:24: identifier x1
DFcmp.c:160:26: punctuator ,
DFcmp.c:160:28: identifier p0
DFcmp.c:160:30: punctuator ,
DFcmp.c:160:32: identifier p1
DFcmp.c:160:34: punctuator )
DFcmp.c:161:1: keyword double
DFcmp.c:161:8: identifier r0
DFcmp.c:161:10: punctuator ,
DFcmp.c:161:12: identifier r1
DFcmp.c:161:14: punctuator ;
DFcmp.c:161:16: keyword double
DFcmp.c:161:23: punctuator *
DFcmp.c:161:24: identifier p0
DFcmp.c:161:26: punctuator ,
DFcmp.c:161:28: punctuator *
DFcmp.c:161:29: identifier p1
DFcmp.c:161:31: punctuator ;
DFcmp.c:162:1: punctuator {
DFcmp.c:162:2: keyword if
DFcmp.c:162:5: punctuator (
DFcmp.c:162:6: punctuator (
DFcmp.c:162:7: punctuator *
DFcmp.c:162:8: punctuator (
DFcmp.c:162:9: punctuator (
DFcmp.c:162:10: keyword double
DFcmp.c:162:17: punctuator *
DFcmp.c:162:18: punctuator )
DFcmp.c:162:19: constant 10000000
DFcmp.c:162:27: punctuator )
DFcmp.c:162:28: punctuator )
DFcmp.c:162:30: punctuator <=
DFcmp.c:162:33: punctuator (
DFcmp.c:162:34: identifier p1
DFcmp.c:162:36: punctuator [
DFcmp.c:162:37: identifier x1
DFcmp.c:162:39: punctuator ]
DFcmp.c:162:40: punctuator )
DFcmp.c:162:41: punctuator )
DFcmp.c:162:43: keyword return
DFcmp.c:162:50: constant 1
DFcmp.c:162:51: punctuator ;
DFcmp.c:162:53: keyword else
DFcmp.c:162:58: keyword return
DFcmp.c:162:65: constant 0
DFcmp.c:162:66: punctuator ;
DFcmp.c:162:67: punctuator }
DFcmp.c:164:1: identifier adrreg0reg1
DFcmp.c:164:13: punctuator (
DFcmp.c:164:14: identifier r0
DFcmp.c:164:16: punctuator ,
DFcmp.c:164:18: identifier r1
DFcmp.c:164:20: punctuator ,
DFcmp.c:164:22: identifier x0
DFcmp.c:164:24: punctuator ,
DFcmp.c:164:26: identifier x1
DFcmp.c:164:28: punctuator ,
DFcmp.c:164:30: identifier p0
DFcmp.c:164:32: punctuator ,
DFcmp.c:164:34: identifier p1
DFcmp.c:164:36: punctuator )
DFcmp.c:165:1: keyword double
DFcmp.c:165:8: identifier r0
DFcmp.c:165:10: punctuator ,
DFcmp.c:165:12: identifier r1
DFcmp.c:165:14: punctuator ;
DFcmp.c:165:16: keyword double
DFcmp.c:165:23: punctuator *
DFcmp.c:165:24: identifier p0
DFcmp.c:165:26: punctuator ,
DFcmp.c:165:28: punctuator *
DFcmp.c:165:29: identifier p1
DFcmp.c:165:31: punctuator ;
DFcmp.c:166:1: punctuator {
DFcmp.c:166:2: keyword if
DFcmp.c:166:5: punctuator (
DFcmp.c:166:6: punctuator (
DFcmp.c:166:7: identifier p0
DFcmp.c:166:9: punctuator [
DFcmp.c:166:10: constant 10000000
DFcmp.c:166:18: punctuator ]
DFcmp.c:166:19: punctuator )
DFcmp.c:166:21: punctuator <=
DFcmp.c:166:24: identifier r1
DFcmp.c:166:26: punctuator )
DFcmp.c:166:28: keyword return
DFcmp.c:166:35: constant 1
DFcmp.c:166:36: punctuator ;
DFcmp.c:166:38: keyword else
DFcmp.c:166:43: keyword return
DFcmp.c:166:50: constant 0
DFcmp.c:166:51: punctuator ;
DFcmp.c:166:52: punctuator }
DFcmp.c:168:1: identifier adrreg0indreg1
DFcmp.c:168:16: punctuator (
DFcmp.c:168:17: identifier r0
DFcmp.c:168:19: punctuator ,
DFcmp.c:168:21: identifier r1
DFcmp.c:168:23: punctuator ,
DFcmp.c:168:25: identifier x0
DFcmp.c:168:27: punctuator ,
DFcmp.c:168:29: identifier x1
DFcmp.c:168:31: punctuator ,
DFcmp.c:168:33: identifier p0
DFcmp.c:168:35: punctuator ,
DFcmp.c:168:37: identifier p1
DFcmp.c:168:39: punctuator )
DFcmp.c:169:1: keyword double
DFcmp.c:169:8: identifier r0
DFcmp.c:169:10: punctuator ,
DFcmp.c:169:12: identifier r1
DFcmp.c:169:14: punctuator ;
DFcmp.c:169:16: keyword double
DFcmp.c:169:23: punctuator *
DFcmp.c:169:24: identifier p0
DFcmp.c:169:26: punctuator ,
DFcmp.c:169:28: punctuator *
DFcmp.c:169:29: identifier p1
DFcmp.c:169:31: punctuator ;
DFcmp.c:170:1: punctuator {
DFcmp.c:170:2: keyword if
DFcmp.c:170:5: punctuator (
DFcmp.c:170:6: punctuator (
DFcmp.c:170:7: identifier p0
DFcmp.c:170:9: punctuator [
DFcmp.c:170:10: constant 10000000
DFcmp.c:170:18: punctuator ]
DFcmp.c:170:19: punctuator )
DFcmp.c:170:21: punctuator <=
DFcmp.c:170:24: punctuator (
DFcmp.c:170:25: punctuator *
DFcmp.c:170:26: identifier p1
DFcmp.c:170:28: punctuator )
DFcmp.c:170:29: punctuator )
DFcmp.c:170:31: keyword return
DFcmp.c:170:38: constant 1
DFcmp.c:170:39: punctuator ;
DFcmp.c:170:41: keyword else
DFcmp.c:170:46: keyword return
DFcmp.c:170:53: constant 0
DFcmp.c:170:54: punctuator ;
DFcmp.c:170:55: punctuator }
DFcmp.c:172:1: identifier adrreg0imm1
DFcmp.c:172:13: punctuator (
DFcmp.c:172:14: identifier r0
DFcmp.c:172:16: punctuator ,
DFcmp.c:172:18: identifier r1
DFcmp.c:172:20: punctuator ,
DFcmp.c:172:22: identifier x0
DFcmp.c:172:24: punctuator ,
DFcmp.c:172:26: identifier x1
DFcmp.c:172:28: punctuator ,
DFcmp.c:172:30: identifier p0
DFcmp.c:172:32: punctuator ,
DFcmp.c:172:34: identifier p1
DFcmp.c:172:36: punctuator )
DFcmp.c:173:1: keyword double
DFcmp.c:173:8: identifier r0
DFcmp.c:173:10: punctuator ,
DFcmp.c:173:12: identifier r1
DFcmp.c:173:14: punctuator ;
DFcmp.c:173:16: keyword double
DFcmp.c:173:23: punctuator *
DFcmp.c:173:24: identifier p0
DFcmp.c:173:26: punctuator ,
DFcmp.c:173:28: punctuator *
DFcmp.c:173:29: identifier p1
DFcmp.c:173:31: punctuator ;
DFcmp.c:174:1: punctuator {
DFcmp.c:174:2: keyword if
DFcmp.c:174:5: punctuator (
DFcmp.c:174:6: punctuator (
DFcmp.c:174:7: identifier p0
DFcmp.c:174:9: punctuator [
DFcmp.c:174:10: constant 10000000
DFcmp.c:174:18: punctuator ]
DFcmp.c:174:19: punctuator )
DFcmp.c:174:21: punctuator <=
DFcmp.c:174:24: constant 33
DFcmp.c:174:26: punctuator )
DFcmp.c:174:28: keyword return
DFcmp.c:174:35: constant 1
DFcmp.c:174:36: punctuator ;
DFcmp.c:174:38: keyword else
DFcmp.c:174:43: keyword return
DFcmp.c:174:50: constant 0
DFcmp.c:174:51: punctuator ;
DFcmp.c:174:52: punctuator }
DFcmp.c:176:1: identifier adrreg0limm1
DFcmp.c:176:14: punctuator (
DFcmp.c:176:15: identifier r0
DFcmp.c:176:17: punctuator ,
DFcmp.c:176:19: identifier r1
DFcmp.c:176:21: punctuator ,
DFcmp.c:176:23: identifier x0
DFcmp.c:176:25: punctuator ,
DFcmp.c:176:27: identifier x1
DFcmp.c:176:29: punctuator ,
DFcmp.c:176:31: identifier p0
DFcmp.c:176:33: punctuator ,
DFcmp.c:176:35: identifier p1
DFcmp.c:176:37: punctuator )
DFcmp.c:177:1: keyword double
DFcmp.c:177:8: identifier r0
DFcmp.c:177:10: punctuator ,
DFcmp.c:177:12: identifier r1
DFcmp.c:177:14: punctuator ;
DFcmp.c:177:16: keyword double
DFcmp.c:177:23: punctuator *
DFcmp.c:177:24: identifier p0
DFcmp.c:177:26: punctuator ,
DFcmp.c:177:28: punctuator *
DFcmp.c:177:29: identifier p1
DFcmp.c:177:31: punctuator ;
DFcmp.c:178:1: punctuator {
DFcmp.c:178:2: keyword if
DFcmp.c:178:5: punctuator (
DFcmp.c:178:6: punctuator (
DFcmp.c:178:7: identifier p0
DFcmp.c:178:9: punctuator [
DFcmp.c:178:10: constant 10000000
DFcmp.c:178:18: punctuator ]
DFcmp.c:178:19: punctuator )
DFcmp.c:178:21: punctuator <=
DFcmp.c:178:24: punctuator (
DFcmp.c:178:25: punctuator (
DFcmp.c:178:26: keyword double
DFcmp.c:178:32: punctuator )
DFcmp.c:178:33: punctuator (
DFcmp.c:178:34: punctuator (
DFcmp.c:178:35: keyword int
DFcmp.c:178:38: punctuator )
DFcmp.c:178:39: punctuator &
DFcmp.c:178:40: identifier glob1
DFcmp.c:178:45: punctuator )
DFcmp.c:178:46: punctuator )
DFcmp.c:178:47: punctuator )
DFcmp.c:178:49: keyword return
DFcmp.c:178:56: constant 1
DFcmp.c:178:57: punctuator ;
DFcmp.c:178:59: keyword else
DFcmp.c:178:64: keyword return
DFcmp.c:178:71: constant 0
DFcmp.c:178:72: punctuator ;
DFcmp.c:178:73: punctuator }
DFcmp.c:180:1: identifier adrreg0adr1
DFcmp.c:180:13: punctuator (
DFcmp.c:180:14: identifier r0
DFcmp.c:180:16: punctuator ,
DFcmp.c:180:18: identifier r1
DFcmp.c:180:20: punctuator ,
DFcmp.c:180:22: identifier x0
DFcmp.c:180:24: punctuator ,
DFcmp.c:180:26: identifier x1
DFcmp.c:180:28: punctuator ,
DFcmp.c:180:30: identifier p0
DFcmp.c:180:32: punctuator ,
DFcmp.c:180:34: identifier p1
DFcmp.c:180:36: punctuator )
DFcmp.c:181:1: keyword double
DFcmp.c:181:8: identifier r0
DFcmp.c:181:10: punctuator ,
DFcmp.c:181:12: identifier r1
DFcmp.c:181:14: punctuator ;
DFcmp.c:181:16: keyword double
DFcmp.c:181:23: punctuator *
DFcmp.c:181:24: identifier p0
DFcmp.c:181:26: punctuator ,
DFcmp.c:181:28: punctuator *
DFcmp.c:181:29: identifier p1
DFcmp.c:181:31: punctuator ;
DFcmp.c:182:1: punctuator {
DFcmp.c:182:2: keyword if
DFcmp.c:182:5: punctuator (
DFcmp.c:182:6: punctuator (
DFcmp.c:182:7: identifier p0
DFcmp.c:182:9: punctuator [
DFcmp.c:182:10: constant 10000000
DFcmp.c:182:18: punctuator ]
DFcmp.c:182:19: punctuator )
DFcmp.c:182:21: punctuator <=
DFcmp.c:182:24: punctuator (
DFcmp.c:182:25: punctuator *
DFcmp.c:182:26: punctuator (
DFcmp.c:182:27: punctuator (
DFcmp.c:182:28: keyword double
DFcmp.c:182:35: punctuator *
DFcmp.c:182:36: punctuator )
DFcmp.c:182:37: punctuator (
DFcmp.c:182:38: constant 11111111
DFcmp.c:182:47: punctuator &
DFcmp.c:182:49: punctuator ~
DFcmp.c:182:50: punctuator (
DFcmp.c:182:51: identifier __alignof__
DFcmp.c:182:63: punctuator (
DFcmp.c:182:64: keyword double
DFcmp.c:182:70: punctuator )
DFcmp.c:182:72: punctuator -
DFcmp.c:182:74: constant 1
DFcmp.c:182:75: punctuator )
DFcmp.c:182:76: punctuator )
DFcmp.c:182:77: punctuator )
DFcmp.c:182:78: punctuator )
DFcmp.c:182:79: punctuator )
DFcmp.c:182:81: keyword return
DFcmp.c:182:88: constant 1
DFcmp.c:182:89: punctuator ;
DFcmp.c:182:91: keyword else
DFcmp.c:182:96: keyword return
DFcmp.c:182:103: constant 0
DFcmp.c:182:104: punctuator ;
DFcmp.c:182:105: punctuator }
DFcmp.c:184:1: identifier adrreg0adrreg1
DFcmp.c:184:16: punctuator (
DFcmp.c:184:17: identifier r0
DFcmp.c:184:19: punctuator ,
DFcmp.c:184:21: identifier r1
DFcmp.c:184:23: punctuator ,
DFcmp.c:184:25: identifier x0
DFcmp.c:184:27: punctuator ,
DFcmp.c:184:29: identifier x1
DFcmp.c:184:31: punctuator ,
DFcmp.c:184:33: identifier p0
DFcmp.c:184:35: punctuator ,
DFcmp.c:184:37: identifier p1
DFcmp.c:184:39: punctuator )
DFcmp.c:185:1: keyword double
DFcmp.c:185:8: identifier r0
DFcmp.c:185:10: punctuator ,
DFcmp.c:185:12: identifier r1
DFcmp.c:185:14: punctuator ;
DFcmp.c:185:16: keyword double
DFcmp.c:185:23: punctuator *
DFcmp.c:185:24: identifier p0
DFcmp.c:185:26: punctuator ,
DFcmp.c:185:28: punctuator *
DFcmp.c:185:29: identifier p1
DFcmp.c:185:31: punctuator ;
DFcmp.c:186:1: punctuator {
DFcmp.c:186:2: keyword if
DFcmp.c:186:5: punctuator (
DFcmp.c:186:6: punctuator (
DFcmp.c:186:7: identifier p0
DFcmp.c:186:9: punctuator [
DFcmp.c:186:10: constant 10000000
DFcmp.c:186:18: punctuator ]
DFcmp.c:186:19: punctuator )
DFcmp.c:186:21: punctuator <=
DFcmp.c:186:24: punctuator (
DFcmp.c:186:25: identifier p1
DFcmp.c:186:27: punctuator [
DFcmp.c:186:28: constant 1111111
DFcmp.c:186:35: punctuator /
DFcmp.c:186:36: constant 4
DFcmp.c:186:37: punctuator ]
DFcmp.c:186:38: punctuator )
DFcmp.c:186:39: punctuator )
DFcmp.c:186:41: keyword return
DFcmp.c:186:48: constant 1
DFcmp.c:186:49: punctuator ;
DFcmp.c:186:51: keyword else
DFcmp.c:186:56: keyword return
DFcmp.c:186:63: constant 0
DFcmp.c:186:64: punctuator ;
DFcmp.c:186:65: punctuator }
DFcmp.c:188:1: identifier adrreg0adrx1
DFcmp.c:188:14: punctuator (
DFcmp.c:188:15: identifier r0
DFcmp.c:188:17: punctuator ,
DFcmp.c:188:19: identifier r1
DFcmp.c:188:21: punctuator ,
DFcmp.c:188:23: identifier x0
DFcmp.c:188:25: punctuator ,
DFcmp.c:188:27: identifier x1
DFcmp.c:188:29: punctuator ,
DFcmp.c:188:31: identifier p0
DFcmp.c:188:33: punctuator ,
DFcmp.c:188:35: identifier p1
DFcmp.c:188:37: punctuator )
DFcmp.c:189:1: keyword double
DFcmp.c:189:8: identifier r0
DFcmp.c:189:10: punctuator ,
DFcmp.c:189:12: identifier r1
DFcmp.c:189:14: punctuator ;
DFcmp.c:189:16: keyword double
DFcmp.c:189:23: punctuator *
DFcmp.c:189:24: identifier p0
DFcmp.c:189:26: punctuator ,
DFcmp.c:189:28: punctuator *
DFcmp.c:189:29: identifier p1
DFcmp.c:189:31: punctuator ;
DFcmp.c:190:1: punctuator {
DFcmp.c:190:2: keyword if
DFcmp.c:190:5: punctuator (
DFcmp.c:190:6: punctuator (
DFcmp.c:190:7: identifier p0
DFcmp.c:190:9: punctuator [
DFcmp.c:190:10: constant 10000000
DFcmp.c:190:18: punctuator ]
DFcmp.c:190:19: punctuator )
DFcmp.c:190:21: punctuator <=
DFcmp.c:190:24: punctuator (
DFcmp.c:190:25: punctuator (
DFcmp.c:190:26: punctuator (
DFcmp.c:190:27: keyword double
DFcmp.c:190:34: punctuator *
DFcmp.c:190:35: punctuator )
DFcmp.c:190:36: punctuator (
DFcmp.c:190:37: constant 11111111
DFcmp.c:190:46: punctuator &
DFcmp.c:190:48: punctuator ~
DFcmp.c:190:49: punctuator (
DFcmp.c:190:50: identifier __alignof__
DFcmp.c:190:62: punctuator (
DFcmp.c:190:63: keyword double
DFcmp.c:190:69: punctuator )
DFcmp.c:190:71: punctuator -
DFcmp.c:190:73: constant 1
DFcmp.c:190:74: punctuator )
DFcmp.c:190:75: punctuator )
DFcmp.c:190:76: punctuator )
DFcmp.c:190:77: punctuator [
DFcmp.c:190:78: identifier x1
DFcmp.c:190:80: punctuator ]
DFcmp.c:190:81: punctuator )
DFcmp.c:190:82: punctuator )
DFcmp.c:190:84: keyword return
DFcmp.c:190:91: constant 1
DFcmp.c:190:92: punctuator ;
DFcmp.c:190:94: keyword else
DFcmp.c:190:99: keyword return
DFcmp.c:190:106: constant 0
DFcmp.c:190:107: punctuator ;
DFcmp.c:190:108: punctuator }
DFcmp.c:192:1: identifier adrreg0regx1
DFcmp.c:192:14: punctuator (
DFcmp.c:192:15: identifier r0
DFcmp.c:192:17: punctuator ,
DFcmp.c:192:19: identifier r1
DFcmp.c:192:21: punctuator ,
DFcmp.c:192:23: identifier x0
DFcmp.c:192:25: punctuator ,
DFcmp.c:192:27: identifier x1
DFcmp.c:192:29: punctuator ,
DFcmp.c:192:31: identifier p0
DFcmp.c:192:33: punctuator ,
DFcmp.c:192:35: identifier p1
DFcmp.c:192:37: punctuator )
DFcmp.c:193:1: keyword double
DFcmp.c:193:8: identifier r0
DFcmp.c:193:10: punctuator ,
DFcmp.c:193:12: identifier r1
DFcmp.c:193:14: punctuator ;
DFcmp.c:193:16: keyword double
DFcmp.c:193:23: punctuator *
DFcmp.c:193:24: identifier p0
DFcmp.c:193:26: punctuator ,
DFcmp.c:193:28: punctuator *
DFcmp.c:193:29: identifier p1
DFcmp.c:193:31: punctuator ;
DFcmp.c:194:1: punctuator {
DFcmp.c:194:2: keyword if
DFcmp.c:194:5: punctuator (
DFcmp.c:194:6: punctuator (
DFcmp.c:194:7: identifier p0
DFcmp.c:194:9: punctuator [
DFcmp.c:194:10: constant 10000000
DFcmp.c:194:18: punctuator ]
DFcmp.c:194:19: punctuator )
DFcmp.c:194:21: punctuator <=
DFcmp.c:194:24: punctuator (
DFcmp.c:194:25: identifier p1
DFcmp.c:194:27: punctuator [
DFcmp.c:194:28: identifier x1
DFcmp.c:194:30: punctuator ]
DFcmp.c:194:31: punctuator )
DFcmp.c:194:32: punctuator )
DFcmp.c:194:34: keyword return
DFcmp.c:194:41: constant 1
DFcmp.c:194:42: punctuator ;
DFcmp.c:194:44: keyword else
DFcmp.c:194:49: keyword return
DFcmp.c:194:56: constant 0
DFcmp.c:194:57: punctuator ;
DFcmp.c:194:58: punctuator }
DFcmp.c:196:1: identifier adrx0reg1
DFcmp.c:196:11: punctuator (
DFcmp.c:196:12: identifier r0
DFcmp.c:196:14: punctuator ,
DFcmp.c:196:16: identifier r1
DFcmp.c:196:18: punctuator ,
DFcmp.c:196:20: identifier x0
DFcmp.c:196:22: punctuator ,
DFcmp.c:196:24: identifier x1
DFcmp.c:196:26: punctuator ,
DFcmp.c:196:28: identifier p0
DFcmp.c:196:30: punctuator ,
DFcmp.c:196:32: identifier p1
DFcmp.c:196:34: punctuator )
DFcmp.c:197:1: keyword double
DFcmp.c:197:8: identifier r0
DFcmp.c:197:10: punctuator ,
DFcmp.c:197:12: identifier r1
DFcmp.c:197:14: punctuator ;
DFcmp.c:197:16: keyword double
DFcmp.c:197:23: punctuator *
DFcmp.c:197:24: identifier p0
DFcmp.c:197:26: punctuator ,
DFcmp.c:197:28: punctuator *
DFcmp.c:197:29: identifier p1
DFcmp.c:197:31: punctuator ;
DFcmp.c:198:1: punctuator {
DFcmp.c:198:2: keyword if
DFcmp.c:198:5: punctuator (
DFcmp.c:198:6: punctuator (
DFcmp.c:198:7: punctuator (
DFcmp.c:198:8: punctuator (
DFcmp.c:198:9: keyword double
DFcmp.c:198:16: punctuator *
DFcmp.c:198:17: punctuator )
DFcmp.c:198:18: constant 10000000
DFcmp.c:198:26: punctuator )
DFcmp.c:198:27: punctuator [
DFcmp.c:198:28: identifier x0
DFcmp.c:198:30: punctuator ]
DFcmp.c:198:31: punctuator )
DFcmp.c:198:33: punctuator <=
DFcmp.c:198:36: identifier r1
DFcmp.c:198:38: punctuator )
DFcmp.c:198:40: keyword return
DFcmp.c:198:47: constant 1
DFcmp.c:198:48: punctuator ;
DFcmp.c:198:50: keyword else
DFcmp.c:198:55: keyword return
DFcmp.c:198:62: constant 0
DFcmp.c:198:63: punctuator ;
DFcmp.c:198:64: punctuator }
DFcmp.c:200:1: identifier adrx0indreg1
DFcmp.c:200:14: punctuator (
DFcmp.c:200:15: identifier r0
DFcmp.c:200:17: punctuator ,
DFcmp.c:200:19: identifier r1
DFcmp.c:200:21: punctuator ,
DFcmp.c:200:23: identifier x0
DFcmp.c:200:25: punctuator ,
DFcmp.c:200:27: identifier x1
DFcmp.c:200:29: punctuator ,
DFcmp.c:200:31: identifier p0
DFcmp.c:200:33: punctuator ,
DFcmp.c:200:35: identifier p1
DFcmp.c:200:37: punctuator )
DFcmp.c:201:1: keyword double
DFcmp.c:201:8: identifier r0
DFcmp.c:201:10: punctuator ,
DFcmp.c:201:12: identifier r1
DFcmp.c:201:14: punctuator ;
DFcmp.c:201:16: keyword double
DFcmp.c:201:23: punctuator *
DFcmp.c:201:24: identifier p0
DFcmp.c:201:26: punctuator ,
DFcmp.c:201:28: punctuator *
DFcmp.c:201:29: identifier p1
DFcmp.c:201:31: punctuator ;
DFcmp.c:202:1: punctuator {
DFcmp.c:202:2: keyword if
DFcmp.c:202:5: punctuator (
DFcmp.c:202:6: punctuator (
DFcmp.c:202:7: punctuator (
DFcmp.c:202:8: punctuator (
DFcmp.c:202:9: keyword double
DFcmp.c:202:16: punctuator *
DFcmp.c:202:17: punctuator )
DFcmp.c:202:18: constant 10000000
DFcmp.c:202:26: punctuator )
DFcmp.c:202:27: punctuator [
DFcmp.c:202:28: identifier x0
DFcmp.c:202:30: punctuator ]
DFcmp.c:202:31: punctuator )
DFcmp.c:202:33: punctuator <=
DFcmp.c:202:36: punctuator (
DFcmp.c:202:37: punctuator *
DFcmp.c:202:38: identifier p1
DFcmp.c:202:40: punctuator )
DFcmp.c:202:41: punctuator )
DFcmp.c:202:43: keyword return
DFcmp.c:202:50: constant 1
DFcmp.c:202:51: punctuator ;
DFcmp.c:202:53: keyword else
DFcmp.c:202:58: keyword return
DFcmp.c:202:65: constant 0
DFcmp.c:202:66: punctuator ;
DFcmp.c:202:67: punctuator }
DFcmp.c:204:1: identifier adrx0imm1
DFcmp.c:204:11: punctuator (
DFcmp.c:204:12: identifier r0
DFcmp.c:204:14: punctuator ,
DFcmp.c:204:16: identifier r1
DFcmp.c:204:18: punctuator ,
DFcmp.c:204:20: identifier x0
DFcmp.c:204:22: punctuator ,
DFcmp.c:204:24: identifier x1
DFcmp.c:204:26: punctuator ,
DFcmp.c:204:28: identifier p0
DFcmp.c:204:30: punctuator ,
DFcmp.c:204:32: identifier p1
DFcmp.c:204:34: punctuator )
DFcmp.c:205:1: keyword double
DFcmp.c:205:8: identifier r0
DFcmp.c:205:10: punctuator ,
DFcmp.c:205:12: identifier r1
DFcmp.c:205:14: punctuator ;
DFcmp.c:205:16: keyword double
DFcmp.c:205:23: punctuator *
DFcmp.c:205:24: identifier p0
DFcmp.c:205:26: punctuator ,
DFcmp.c:205:28: punctuator *
DFcmp.c:205:29: identifier p1
DFcmp.c:205:31: punctuator ;
DFcmp.c:206:1: punctuator {
DFcmp.c:206:2: keyword if
DFcmp.c:206:5: punctuator (
DFcmp.c:206:6: punctuator (
DFcmp.c:206:7: punctuator (
DFcmp.c:206:8: punctuator (
DFcmp.c:206:9: keyword double
DFcmp.c:206:16: punctuator *
DFcmp.c:206:17: punctuator )
DFcmp.c:206:18: constant 10000000
DFcmp.c:206:26: punctuator )
DFcmp.c:206:27: punctuator [
DFcmp.c:206:28: identifier x0
DFcmp.c:206:30: punctuator ]
DFcmp.c:206:31: punctuator )
DFcmp.c:206:33: punctuator <=
DFcmp.c:206:36: constant 33
DFcmp.c:206:38: punctuator )
DFcmp.c:206:40: keyword return
DFcmp.c:206:47: constant 1
DFcmp.c:206:48: punctuator ;
DFcmp.c:206:50: keyword else
DFcmp.c:206:55: keyword return
DFcmp.c:206:62: constant 0
DFcmp.c:206:63: punctuator ;
DFcmp.c:206:64: punctuator }
DFcmp.c:208:1: identifier adrx0limm1
DFcmp.c:208:12: punctuator (
DFcmp.c:208:13: identifier r0
DFcmp.c:208:15: punctuator ,
DFcmp.c:208:17: identifier r1
DFcmp.c:208:19: punctuator ,
DFcmp.c:208:21: identifier x0
DFcmp.c:208:23: punctuator ,
DFcmp.c:208:25: identifier x1
DFcmp.c:208:27: punctuator ,
DFcmp.c:208:29: identifier p0
DFcmp.c:208:31: punctuator ,
DFcmp.c:208:33: identifier p1
DFcmp.c:208:35: punctuator )
DFcmp.c:209:1: keyword double
DFcmp.c:209:8: identifier r0
DFcmp.c:209:10: punctuator ,
DFcmp.c:209:12: identifier r1
DFcmp.c:209:14: punctuator ;
DFcmp.c:209:16: keyword double
DFcmp.c:209:23: punctuator *
DFcmp.c:209:24: identifier p0
DFcmp.c:209:26: punctuator ,
DFcmp.c:209:28: punctuator *
DFcmp.c:209:29: identifier p1
DFcmp.c:209:31: punctuator ;
DFcmp.c:210:1: punctuator {
DFcmp.c:210:2: keyword if
DFcmp.c:210:5: punctuator (
DFcmp.c:210:6: punctuator (
DFcmp.c:210:7: punctuator (
DFcmp.c:210:8: punctuator (
DFcmp.c:210:9: keyword double
DFcmp.c:210:16: punctuator *
DFcmp.c:210:17: punctuator )
DFcmp.c:210:18: constant 10000000
DFcmp.c:210:26: punctuator )
DFcmp.c:210:27: punctuator [
DFcmp.c:210:28: identifier x0
DFcmp.c:210:30: punctuator ]
DFcmp.c:210:31: punctuator )
DFcmp.c:210:33: punctuator <=
DFcmp.c:210:36: punctuator (
DFcmp.c:210:37: punctuator (
DFcmp.c:210:38: keyword double
DFcmp.c:210:44: punctuator )
DFcmp.c:210:45: punctuator (
DFcmp.c:210:46: punctuator (
DFcmp.c:210:47: keyword int
DFcmp.c:210:50: punctuator )
DFcmp.c:210:51: punctuator &
DFcmp.c:210:52: identifier glob1
DFcmp.c:210:57: punctuator )
DFcmp.c:210:58: punctuator )
DFcmp.c:210:59: punctuator )
DFcmp.c:210:61: keyword return
DFcmp.c:210:68: constant 1
DFcmp.c:210:69: punctuator ;
DFcmp.c:210:71: keyword else
DFcmp.c:210:76: keyword return
DFcmp.c:210:83: constant 0
DFcmp.c:210:84: punctuator ;
DFcmp.c:210:85: punctuator }
DFcmp.c:212:1: identifier adrx0adr1
DFcmp.c:212:11: punctuator (
DFcmp.c:212:12: identifier r0
DFcmp.c:212:14: punctuator ,
DFcmp.c:212:16: identifier r1
DFcmp.c:212:18: punctuator ,
DFcmp.c:212:20: identifier x0
DFcmp.c:212:22: punctuator ,
DFcmp.c:212:24: identifier x1
DFcmp.c:212:26: punctuator ,
DFcmp.c:212:28: identifier p0
DFcmp.c:212:30: punctuator ,
DFcmp.c:212:32: identifier p1
DFcmp.c:212:34: punctuator )
DFcmp.c:213:1: keyword double
DFcmp.c:213:8: identifier r0
DFcmp.c:213:10: punctuator ,
DFcmp.c:213:12: identifier r1
DFcmp.c:213:14: punctuator ;
DFcmp.c:213:16: keyword double
DFcmp.c:213:23: punctuator *
DFcmp.c:213:24: identifier p0
DFcmp.c:213:26: punctuator ,
DFcmp.c:213:28: punctuator *
DFcmp.c:213:29: identifier p1
DFcmp.c:213:31: punctuator ;
DFcmp.c:214:1: punctuator {
DFcmp.c:214:2: keyword if
DFcmp.c:214:5: punctuator (
DFcmp.c:214:6: punctuator (
DFcmp.c:214:7: punctuator (
DFcmp.c:214:8: punctuator (
DFcmp.c:214:9: keyword double
DFcmp.c:214:16: punctuator *
DFcmp.c:214:17: punctuator )
DFcmp.c:214:18: constant 10000000
DFcmp.c:214:26: punctuator )
DFcmp.c:214:27: punctuator [
DFcmp.c:214:28: identifier x0
DFcmp.c:214:30: punctuator ]
DFcmp.c:214:31: punctuator )
DFcmp.c:214:33: punctuator <=
DFcmp.c:214:36: punctuator (
DFcmp.c:214:37: punctuator *
DFcmp.c:214:38: punctuator (
DFcmp.c:214:39: punctuator (
DFcmp.c:214:40: keyword double
DFcmp.c:214:47: punctuator *
DFcmp.c:214:48: punctuator )
DFcmp.c:214:49: punctuator (
DFcmp.c:214:50: constant 11111111
DFcmp.c:214:59: punctuator &
DFcmp.c:214:61: punctuator ~
DFcmp.c:214:62: punctuator (
DFcmp.c:214:63: identifier __alignof__
DFcmp.c:214:75: punctuator (
DFcmp.c:214:76: keyword double
DFcmp.c:214:82: punctuator )
DFcmp.c:214:84: punctuator -
DFcmp.c:214:86: constant 1
DFcmp.c:214:87: punctuator )
DFcmp.c:214:88: punctuator )
DFcmp.c:214:89: punctuator )
DFcmp.c:214:90: punctuator )
DFcmp.c:214:91: punctuator )
DFcmp.c:214:93: keyword return
DFcmp.c:214:100: constant 1
DFcmp.c:214:101: punctuator ;
DFcmp.c:214:103: keyword else
DFcmp.c:214:108: keyword return
DFcmp.c:214:115: constant 0
DFcmp.c:214:116: punctuator ;
DFcmp.c:214:117: punctuator }
DFcmp.c:216:1: identifier adrx0adrreg1
DFcmp.c:216:14: punctuator (
DFcmp.c:216:15: identifier r0
DFcmp.c:216:17: punctuator ,
DFcmp.c:216:19: identifier r1
DFcmp.c:216:21: punctuator ,
DFcmp.c:216:23: identifier x0
DFcmp.c:216:25: punctuator ,
DFcmp.c:216:27: identifier x1
DFcmp.c:216:29: punctuator ,
DFcmp.c:216:31: identifier p0
DFcmp.c:216:33: punctuator ,
DFcmp.c:216:35: identifier p1
DFcmp.c:216:37: punctuator )
DFcmp.c:217:1: keyword double
DFcmp.c:217:8: identifier r0
DFcmp.c:217:10: punctuator ,
DFcmp.c:217:12: identifier r1
DFcmp.c:217:14: punctuator ;
DFcmp.c:217:16: keyword double
DFcmp.c:217:23: punctuator *
DFcmp.c:217:24: identifier p0
DFcmp.c:217:26: punctuator ,
DFcmp.c:217:28: punctuator *
DFcmp.c:217:29: identifier p1
DFcmp.c:217:31: punctuator ;
DFcmp.c:218:1: punctuator {
DFcmp.c:218:2: keyword if
DFcmp.c:218:5: punctuator (
DFcmp.c:218:6: punctuator (
DFcmp.c:218:7: punctuator (
DFcmp.c:218:8: punctuator (
DFcmp.c:218:9: keyword double
DFcmp.c:218:16: punctuator *
DFcmp.c:218:17: punctuator )
DFcmp.c:218:18: constant 10000000
DFcmp.c:218:26: punctuator )
DFcmp.c:218:27: punctuator [
DFcmp.c:218:28: identifier x0
DFcmp.c:218:30: punctuator ]
DFcmp.c:218:31: punctuator )
DFcmp.c:218:33: punctuator <=
DFcmp.c:218:36: punctuator (
DFcmp.c:218:37: identifier p1
DFcmp.c:218:39: punctuator [
DFcmp.c:218:40: constant 1111111
DFcmp.c:218:47: punctuator /
DFcmp.c:218:48: constant 4
DFcmp.c:218:49: punctuator ]
DFcmp.c:218:50: punctuator )
DFcmp.c:218:51: punctuator )
DFcmp.c:218:53: keyword return
DFcmp.c:218:60: constant 1
DFcmp.c:218:61: punctuator ;
DFcmp.c:218:63: keyword else
DFcmp.c:218:68: keyword return
DFcmp.c:218:75: constant 0
DFcmp.c:218:76: punctuator ;
DFcmp.c:218:77: punctuator }
DFcmp.c:220:1: identifier adrx0adrx1
DFcmp.c:220:12: punctuator (
DFcmp.c:220:13: identifier r0
DFcmp.c:220:15: punctuator ,
DFcmp.c:220:17: identifier r1
DFcmp.c:220:19: punctuator ,
DFcmp.c:220:21: identifier x0
DFcmp.c:220:23: punctuator ,
DFcmp.c:220:25: identifier x1
DFcmp.c:220:27: punctuator ,
DFcmp.c:220:29: identifier p0
DFcmp.c:220:31: punctuator ,
DFcmp.c:220:33: identifier p1
DFcmp.c:220:35: punctuator )
DFcmp.c:221:1: keyword double
DFcmp.c:221:8: identifier r0
DFcmp.c:221:10: punctuator ,
DFcmp.c:221:12: identifier r1
DFcmp.c:221:14: punctuator ;
DFcmp.c:221:16: keyword double
DFcmp.c:221:23: punctuator *
DFcmp.c:221:24: identifier p0
DFcmp.c:221:26: punctuator ,
DFcmp.c:221:28: punctuator *
DFcmp.c:221:29: identifier p1
DFcmp.c:221:31: punctuator ;
DFcmp.c:222:1: punctuator {
DFcmp.c:222:2: keyword if
DFcmp.c:222:5: punctuator (
DFcmp.c:222:6: punctuator (
DFcmp.c:222:7: punctuator (
DFcmp.c:222:8: punctuator (
DFcmp.c:222:9: keyword double
DFcmp.c:222:16: punctuator *
DFcmp.c:222:17: punctuator )
DFcmp.c:222:18: constant 10000000
DFcmp.c:222:26: punctuator )
DFcmp.c:222:27: punctuator [
DFcmp.c:222:28: identifier x0
DFcmp.c:222:30: punctuator ]
DFcmp.c:222:31: punctuator )
DFcmp.c:222:33: punctuator <=
DFcmp.c:222:36: punctuator (
DFcmp.c:222:37: punctuator (
DFcmp.c:222:38: punctuator (
DFcmp.c:222:39: keyword double
DFcmp.c:222:46: punctuator *
DFcmp.c:222:47: punctuator )
DFcmp.c:222:48: punctuator (
DFcmp.c:222:49: constant 11111111
DFcmp.c:222:58: punctuator &
DFcmp.c:222:60: punctuator ~
DFcmp.c:222:61: punctuator (
DFcmp.c:222:62: identifier __alignof__
DFcmp.c:222:74: punctuator (
DFcmp.c:222:75: keyword double
DFcmp.c:222:81: punctuator )
DFcmp.c:222:83: punctuator -
DFcmp.c:222:85: constant 1
DFcmp.c:222:86: punctuator )
DFcmp.c:222:87: punctuator )
DFcmp.c:222:88: punctuator )
DFcmp.c:222:89: punctuator [
DFcmp.c:222:90: identifier x1
DFcmp.c:222:92: punctuator ]
DFcmp.c:222:93: punctuator )
DFcmp.c:222:94: punctuator )
DFcmp.c:222:96: keyword return
DFcmp.c:222:103: constant 1
DFcmp.c:222:104: punctuator ;
DFcmp.c:222:106: keyword else
DFcmp.c:222:111: keyword return
DFcmp.c:222:118: constant 0
DFcmp.c:222:119: punctuator ;
DFcmp.c:222:120: punctuator }
DFcmp.c:224:1: identifier adrx0regx1
DFcmp.c:224:12: punctuator (
DFcmp.c:224:13: identifier r0
DFcmp.c:224:15: punctuator ,
DFcmp.c:224:17: identifier r1
DFcmp.c:224:19: punctuator ,
DFcmp.c:224:21: identifier x0
DFcmp.c:224:23: punctuator ,
DFcmp.c:224:25: identifier x1
DFcmp.c:224:27: punctuator ,
DFcmp.c:224:29: identifier p0
DFcmp.c:224:31: punctuator ,
DFcmp.c:224:33: identifier p1
DFcmp.c:224:35: punctuator )
DFcmp.c:225:1: keyword double
DFcmp.c:225:8: identifier r0
DFcmp.c:225:10: punctuator ,
DFcmp.c:225:12: identifier r1
DFcmp.c:225:14: punctuator ;
DFcmp.c:225:16: keyword double
DFcmp.c:225:23: punctuator *
DFcmp.c:225:24: identifier p0
DFcmp.c:225:26: punctuator ,
DFcmp.c:225:28: punctuator *
DFcmp.c:225:29: identifier p1
DFcmp.c:225:31: punctuator ;
DFcmp.c:226:1: punctuator {
DFcmp.c:226:2: keyword if
DFcmp.c:226:5: punctuator (
DFcmp.c:226:6: punctuator (
DFcmp.c:226:7: punctuator (
DFcmp.c:226:8: punctuator (
DFcmp.c:226:9: keyword double
DFcmp.c:226:16: punctuator *
DFcmp.c:226:17: punctuator )
DFcmp.c:226:18: constant 10000000
DFcmp.c:226:26: punctuator )
DFcmp.c:226:27: punctuator [
DFcmp.c:226:28: identifier x0
DFcmp.c:226:30: punctuator ]
DFcmp.c:226:31: punctuator )
DFcmp.c:226:33: punctuator <=
DFcmp.c:226:36: punctuator (
DFcmp.c:226:37: identifier p1
DFcmp.c:226:39: punctuator [
DFcmp.c:226:40: identifier x1
DFcmp.c:226:42: punctuator ]
DFcmp.c:226:43: punctuator )
DFcmp.c:226:44: punctuator )
DFcmp.c:226:46: keyword return
DFcmp.c:226:53: constant 1
DFcmp.c:226:54: punctuator ;
DFcmp.c:226:56: keyword else
DFcmp.c:226:61: keyword return
DFcmp.c:226:68: constant 0
DFcmp.c:226:69: punctuator ;
DFcmp.c:226:70: punctuator }
DFcmp.c:228:1: identifier regx0reg1
DFcmp.c:228:11: punctuator (
DFcmp.c:228:12: identifier r0
DFcmp.c:228:14: punctuator ,
DFcmp.c:228:16: identifier r1
DFcmp.c:228:18: punctuator ,
DFcmp.c:228:20: identifier x0
DFcmp.c:228:22: punctuator ,
DFcmp.c:228:24: identifier x1
DFcmp.c:228:26: punctuator ,
DFcmp.c:228:28: identifier p0
DFcmp.c:228:30: punctuator ,
DFcmp.c:228:32: identifier p1
DFcmp.c:228:34: punctuator )
DFcmp.c:229:1: keyword double
DFcmp.c:229:8: identifier r0
DFcmp.c:229:10: punctuator ,
DFcmp.c:229:12: identifier r1
DFcmp.c:229:14: punctuator ;
DFcmp.c:229:16: keyword double
DFcmp.c:229:23: punctuator *
DFcmp.c:229:24: identifier p0
DFcmp.c:229:26: punctuator ,
DFcmp.c:229:28: punctuator *
DFcmp.c:229:29: identifier p1
DFcmp.c:229:31: punctuator ;
DFcmp.c:230:1: punctuator {
DFcmp.c:230:2: keyword if
DFcmp.c:230:5: punctuator (
DFcmp.c:230:6: punctuator (
DFcmp.c:230:7: identifier p0
DFcmp.c:230:9: punctuator [
DFcmp.c:230:10: identifier x0
DFcmp.c:230:12: punctuator ]
DFcmp.c:230:13: punctuator )
DFcmp.c:230:15: punctuator <=
DFcmp.c:230:18: identifier r1
DFcmp.c:230:20: punctuator )
DFcmp.c:230:22: keyword return
DFcmp.c:230:29: constant 1
DFcmp.c:230:30: punctuator ;
DFcmp.c:230:32: keyword else
DFcmp.c:230:37: keyword return
DFcmp.c:230:44: constant 0
DFcmp.c:230:45: punctuator ;
DFcmp.c:230:46: punctuator }
DFcmp.c:232:1: identifier regx0indreg1
DFcmp.c:232:14: punctuator (
DFcmp.c:232:15: identifier r0
DFcmp.c:232:17: punctuator ,
DFcmp.c:232:19: identifier r1
DFcmp.c:232:21: punctuator ,
DFcmp.c:232:23: identifier x0
DFcmp.c:232:25: punctuator ,
DFcmp.c:232:27: identifier x1
DFcmp.c:232:29: punctuator ,
DFcmp.c:232:31: identifier p0
DFcmp.c:232:33: punctuator ,
DFcmp.c:232:35: identifier p1
DFcmp.c:232:37: punctuator )
DFcmp.c:233:1: keyword double
DFcmp.c:233:8: identifier r0
DFcmp.c:233:10: punctuator ,
DFcmp.c:233:12: identifier r1
DFcmp.c:233:14: punctuator ;
DFcmp.c:233:16: keyword double
DFcmp.c:233:23: punctuator *
DFcmp.c:233:24: identifier p0
DFcmp.c:233:26: punctuator ,
DFcmp.c:233:28: punctuator *
DFcmp.c:233:29: identifier p1
DFcmp.c:233:31: punctuator ;
DFcmp.c:234:1: punctuator {
DFcmp.c:234:2: keyword if
DFcmp.c:234:5: punctuator (
DFcmp.c:234:6: punctuator (
DFcmp.c:234:7: identifier p0
DFcmp.c:234:9: punctuator [
DFcmp.c:234:10: identifier x0
DFcmp.c:234:12: punctuator ]
DFcmp.c:234:13: punctuator )
DFcmp.c:234:15: punctuator <=
DFcmp.c:234:18: punctuator (
DFcmp.c:234:19: punctuator *
DFcmp.c:234:20: identifier p1
DFcmp.c:234:22: punctuator )
DFcmp.c:234:23: punctuator )
DFcmp.c:234:25: keyword return
DFcmp.c:234:32: constant 1
DFcmp.c:234:33: punctuator ;
DFcmp.c:234:35: keyword else
DFcmp.c:234:40: keyword return
DFcmp.c:234:47: constant 0
DFcmp.c:234:48: punctuator ;
DFcmp.c:234:49: punctuator }
DFcmp.c:236:1: identifier regx0imm1
DFcmp.c:236:11: punctuator (
DFcmp.c:236:12: identifier r0
DFcmp.c:236:14: punctuator ,
DFcmp.c:236:16: identifier r1
DFcmp.c:236:18: punctuator ,
DFcmp.c:236:20: identifier x0
DFcmp.c:236:22: punctuator ,
DFcmp.c:236:24: identifier x1
DFcmp.c:236:26: punctuator ,
DFcmp.c:236:28: identifier p0
DFcmp.c:236:30: punctuator ,
DFcmp.c:236:32: identifier p1
DFcmp.c:236:34: punctuator )
DFcmp.c:237:1: keyword double
DFcmp.c:237:8: identifier r0
DFcmp.c:237:10: punctuator ,
DFcmp.c:237:12: identifier r1
DFcmp.c:237:14: punctuator ;
DFcmp.c:237:16: keyword double
DFcmp.c:237:23: punctuator *
DFcmp.c:237:24: identifier p0
DFcmp.c:237:26: punctuator ,
DFcmp.c:237:28: punctuator *
DFcmp.c:237:29: identifier p1
DFcmp.c:237:31: punctuator ;
DFcmp.c:238:1: punctuator {
DFcmp.c:238:2: keyword if
DFcmp.c:238:5: punctuator (
DFcmp.c:238:6: punctuator (
DFcmp.c:238:7: identifier p0
DFcmp.c:238:9: punctuator [
DFcmp.c:238:10: identifier x0
DFcmp.c:238:12: punctuator ]
DFcmp.c:238:13: punctuator )
DFcmp.c:238:15: punctuator <=
DFcmp.c:238:18: constant 33
DFcmp.c:238:20: punctuator )
DFcmp.c:238:22: keyword return
DFcmp.c:238:29: constant 1
DFcmp.c:238:30: punctuator ;
DFcmp.c:238:32: keyword else
DFcmp.c:238:37: keyword return
DFcmp.c:238:44: constant 0
DFcmp.c:238:45: punctuator ;
DFcmp.c:238:46: punctuator }
DFcmp.c:240:1: identifier regx0limm1
DFcmp.c:240:12: punctuator (
DFcmp.c:240:13: identifier r0
DFcmp.c:240:15: punctuator ,
DFcmp.c:240:17: identifier r1
DFcmp.c:240:19: punctuator ,
DFcmp.c:240:21: identifier x0
DFcmp.c:240:23: punctuator ,
DFcmp.c:240:25: identifier x1
DFcmp.c:240:27: punctuator ,
DFcmp.c:240:29: identifier p0
DFcmp.c:240:31: punctuator ,
DFcmp.c:240:33: identifier p1
DFcmp.c:240:35: punctuator )
DFcmp.c:241:1: keyword double
DFcmp.c:241:8: identifier r0
DFcmp.c:241:10: punctuator ,
DFcmp.c:241:12: identifier r1
DFcmp.c:241:14: punctuator ;
DFcmp.c:241:16: keyword double
DFcmp.c:241:23: punctuator *
DFcmp.c:241:24: identifier p0
DFcmp.c:241:26: punctuator ,
DFcmp.c:241:28: punctuator *
DFcmp.c:241:29: identifier p1
DFcmp.c:241:31: punctuator ;
DFcmp.c:242:1: punctuator {
DFcmp.c:242:2: keyword if
DFcmp.c:242:5: punctuator (
DFcmp.c:242:6: punctuator (
DFcmp.c:242:7: identifier p0
DFcmp.c:242:9: punctuator [
DFcmp.c:242:10: identifier x0
DFcmp.c:242:12: punctuator ]
DFcmp.c:242:13: punctuator )
DFcmp.c:242:15: punctuator <=
DFcmp.c:242:18: punctuator (
DFcmp.c:242:19: punctuator (
DFcmp.c:242:20: keyword double
DFcmp.c:242:26: punctuator )
DFcmp.c:242:27: punctuator (
DFcmp.c:242:28: punctuator (
DFcmp.c:242:29: keyword int
DFcmp.c:242:32: punctuator )
DFcmp.c:242:33: punctuator &
DFcmp.c:242:34: identifier glob1
DFcmp.c:242:39: punctuator )
DFcmp.c:242:40: punctuator )
DFcmp.c:242:41: punctuator )
DFcmp.c:242:43: keyword return
DFcmp.c:242:50: constant 1
DFcmp.c:242:51: punctuator ;
DFcmp.c:242:53: keyword else
DFcmp.c:242:58: keyword return
DFcmp.c:242:65: constant 0
DFcmp.c:242:66: punctuator ;
DFcmp.c:242:67: punctuator }
DFcmp.c:244:1: identifier regx0adr1
DFcmp.c:244:11: punctuator (
DFcmp.c:244:12: identifier r0
DFcmp.c:244:14: punctuator ,
DFcmp.c:244:16: identifier r1
DFcmp.c:244:18: punctuator ,
DFcmp.c:244:20: identifier x0
DFcmp.c:244:22: punctuator ,
DFcmp.c:244:24: identifier x1
DFcmp.c:244:26: punctuator ,
DFcmp.c:244:28: identifier p0
DFcmp.c:244:30: punctuator ,
DFcmp.c:244:32: identifier p1
DFcmp.c:244:34: punctuator )
DFcmp.c:245:1: keyword double
DFcmp.c:245:8: identifier r0
DFcmp.c:245:10: punctuator ,
DFcmp.c:245:12: identifier r1
DFcmp.c:245:14: punctuator ;
DFcmp.c:245:16: keyword double
DFcmp.c:245:23: punctuator *
DFcmp.c:245:24: identifier p0
DFcmp.c:245:26: punctuator ,
DFcmp.c:245:28: punctuator *
DFcmp.c:245:29: identifier p1
DFcmp.c:245:31: punctuator ;
DFcmp.c:246:1: punctuator {
DFcmp.c:246:2: keyword if
DFcmp.c:246:5: punctuator (
DFcmp.c:246:6: punctuator (
DFcmp.c:246:7: identifier p0
DFcmp.c:246:9: punctuator [
DFcmp.c:246:10: identifier x0
DFcmp.c:246:12: punctuator ]
DFcmp.c:246:13: punctuator )
DFcmp.c:246:15: punctuator <=
DFcmp.c:246:18: punctuator (
DFcmp.c:246:19: punctuator *
DFcmp.c:246:20: punctuator (
DFcmp.c:246:21: punctuator (
DFcmp.c:246:22: keyword double
DFcmp.c:246:29: punctuator *
DFcmp.c:246:30: punctuator )
DFcmp.c:246:31: punctuator (
DFcmp.c:246:32: constant 11111111
DFcmp.c:246:41: punctuator &
DFcmp.c:246:43: punctuator ~
DFcmp.c:246:44: punctuator (
DFcmp.c:246:45: identifier __alignof__
DFcmp.c:246:57: punctuator (
DFcmp.c:246:58: keyword double
DFcmp.c:246:64: punctuator )
DFcmp.c:246:66: punctuator -
DFcmp.c:246:68: constant 1
DFcmp.c:246:69: punctuator )
DFcmp.c:246:70: punctuator )
DFcmp.c:246:71: punctuator )
DFcmp.c:246:72: punctuator )
DFcmp.c:246:73: punctuator )
DFcmp.c:246:75: keyword return
DFcmp.c:246:82: constant 1
DFcmp.c:246:83: punctuator ;
DFcmp.c:246:85: keyword else
DFcmp.c:246:90: keyword return
DFcmp.c:246:97: constant 0
DFcmp.c:246:98: punctuator ;
DFcmp.c:246:99: punctuator }
DFcmp.c:248:1: identifier regx0adrreg1
DFcmp.c:248:14: punctuator (
DFcmp.c:248:15: identifier r0
DFcmp.c:248:17: punctuator ,
DFcmp.c:248:19: identifier r1
DFcmp.c:248:21: punctuator ,
DFcmp.c:248:23: identifier x0
DFcmp.c:248:25: punctuator ,
DFcmp.c:248:27: identifier x1
DFcmp.c:248:29: punctuator ,
DFcmp.c:248:31: identifier p0
DFcmp.c:248:33: punctuator ,
DFcmp.c:248:35: identifier p1
DFcmp.c:248:37: punctuator )
DFcmp.c:249:1: keyword double
DFcmp.c:249:8: identifier r0
DFcmp.c:249:10: punctuator ,
DFcmp.c:249:12: identifier r1
DFcmp.c:249:14: punctuator ;
DFcmp.c:249:16: keyword double
DFcmp.c:249:23: punctuator *
DFcmp.c:249:24: identifier p0
DFcmp.c:249:26: punctuator ,
DFcmp.c:249:28: punctuator *
DFcmp.c:249:29: identifier p1
DFcmp.c:249:31: punctuator ;
DFcmp.c:250:1: punctuator {
DFcmp.c:250:2: keyword if
DFcmp.c:250:5: punctuator (
DFcmp.c:250:6: punctuator (
DFcmp.c:250:7: identifier p0
DFcmp.c:250:9: punctuator [
DFcmp.c:250:10: identifier x0
DFcmp.c:250:12: punctuator ]
DFcmp.c:250:13: punctuator )
DFcmp.c:250:15: punctuator <=
DFcmp.c:250:18: punctuator (
DFcmp.c:250:19: identifier p1
DFcmp.c:250:21: punctuator [
DFcmp.c:250:22: constant 1111111
DFcmp.c:250:29: punctuator /
DFcmp.c:250:30: constant 4
DFcmp.c:250:31: punctuator ]
DFcmp.c:250:32: punctuator )
DFcmp.c:250:33: punctuator )
DFcmp.c:250:35: keyword return
DFcmp.c:250:42: constant 1
DFcmp.c:250:43: punctuator ;
DFcmp.c:250:45: keyword else
DFcmp.c:250:50: keyword return
DFcmp.c:250:57: constant 0
DFcmp.c:250:58: punctuator ;
DFcmp.c:250:59: punctuator }
DFcmp.c:252:1: identifier regx0adrx1
DFcmp.c:252:12: punctuator (
DFcmp.c:252:13: identifier r0
DFcmp.c:252:15: punctuator ,
DFcmp.c:252:17: identifier r1
DFcmp.c:252:19: punctuator ,
DFcmp.c:252:21: identifier x0
DFcmp.c:252:23: punctuator ,
DFcmp.c:252:25: identifier x1
DFcmp.c:252:27: punctuator ,
DFcmp.c:252:29: identifier p0
DFcmp.c:252:31: punctuator ,
DFcmp.c:252:33: identifier p1
DFcmp.c:252:35: punctuator )
DFcmp.c:253:1: keyword double
DFcmp.c:253:8: identifier r0
DFcmp.c:253:10: punctuator ,
DFcmp.c:253:12: identifier r1
DFcmp.c:253:14: punctuator ;
DFcmp.c:253:16: keyword double
DFcmp.c:253:23: punctuator *
DFcmp.c:253:24: identifier p0
DFcmp.c:253:26: punctuator ,
DFcmp.c:253:28: punctuator *
DFcmp.c:253:29: identifier p1
DFcmp.c:253:31: punctuator ;
DFcmp.c:254:1: punctuator {
DFcmp.c:254:2: keyword if
DFcmp.c:254:5: punctuator (
DFcmp.c:254:6: punctuator (
DFcmp.c:254:7: identifier p0
DFcmp.c:254:9: punctuator [
DFcmp.c:254:10: identifier x0
DFcmp.c:254:12: punctuator ]
DFcmp.c:254:13: punctuator )
DFcmp.c:254:15: punctuator <=
DFcmp.c:254:18: punctuator (
DFcmp.c:254:19: punctuator (
DFcmp.c:254:20: punctuator (
DFcmp.c:254:21: keyword double
DFcmp.c:254:28: punctuator *
DFcmp.c:254:29: punctuator )
DFcmp.c:254:30: punctuator (
DFcmp.c:254:31: constant 11111111
DFcmp.c:254:40: punctuator &
DFcmp.c:254:42: punctuator ~
DFcmp.c:254:43: punctuator (
DFcmp.c:254:44: identifier __alignof__
DFcmp.c:254:56: punctuator (
DFcmp.c:254:57: keyword double
DFcmp.c:254:63: punctuator )
DFcmp.c:254:65: punctuator -
DFcmp.c:254:67: constant 1
DFcmp.c:254:68: punctuator )
DFcmp.c:254:69: punctuator )
DFcmp.c:254:70: punctuator )
DFcmp.c:254:71: punctuator [
DFcmp.c:254:72: identifier x1
DFcmp.c:254:74: punctuator ]
DFcmp.c:254:75: punctuator )
DFcmp.c:254:76: punctuator )
DFcmp.c:254:78: keyword return
DFcmp.c:254:85: constant 1
DFcmp.c:254:86: punctuator ;
DFcmp.c:254:88: keyword else
DFcmp.c:254:93: keyword return
DFcmp.c:254:100: constant 0
DFcmp.c:254:101: punctuator ;
DFcmp.c:254:102: punctuator }
DFcmp.c:256:1: identifier regx0regx1
DFcmp.c:256:12: punctuator (
DFcmp.c:256:13: identifier r0
DFcmp.c:256:15: punctuator ,
DFcmp.c:256:17: identifier r1
DFcmp.c:256:19: punctuator ,
DFcmp.c:256:21: identifier x0
DFcmp.c:256:23: punctuator ,
DFcmp.c:256:25: identifier x1
DFcmp.c:256:27: punctuator ,
DFcmp.c:256:29: identifier p0
DFcmp.c:256:31: punctuator ,
DFcmp.c:256:33: identifier p1
DFcmp.c:256:35: punctuator )
DFcmp.c:257:1: keyword double
DFcmp.c:257:8: identifier r0
DFcmp.c:257:10: punctuator ,
DFcmp.c:257:12: identifier r1
DFcmp.c:257:14: punctuator ;
DFcmp.c:257:16: keyword double
DFcmp.c:257:23: punctuator *
DFcmp.c:257:24: identifier p0
DFcmp.c:257:26: punctuator ,
DFcmp.c:257:28: punctuator *
DFcmp.c:257:29: identifier p1
DFcmp.c:257:31: punctuator ;
DFcmp.c:258:1: punctuator {
DFcmp.c:258:2: keyword if
DFcmp.c:258:5: punctuator (
DFcmp.c:258:6: punctuator (
DFcmp.c:258:7: identifier p0
DFcmp.c:258:9: punctuator [
DFcmp.c:258:10: identifier x0
DFcmp.c:258:12: punctuator ]
DFcmp.c:258:13: punctuator )
DFcmp.c:258:15: punctuator <=
DFcmp.c:258:18: punctuator (
DFcmp.c:258:19: identifier p1
DFcmp.c:258:21: punctuator [
DFcmp.c:258:22: identifier x1
DFcmp.c:258:24: punctuator ]
DFcmp.c:258:25: punctuator )
DFcmp.c:258:26: punctuator )
DFcmp.c:258:28: keyword return
DFcmp.c:258:35: constant 1
DFcmp.c:258:36: punctuator ;
DFcmp.c:258:38: keyword else
DFcmp.c:258:43: keyword return
DFcmp.c:258:50: constant 0
DFcmp.c:258:51: punctuator ;
DFcmp.c:258:52: punctuator }
