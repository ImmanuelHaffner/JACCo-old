0
USIcmp.c:3:1: keyword unsigned
USIcmp.c:3:10: keyword int
USIcmp.c:3:14: identifier glob0
USIcmp.c:3:19: punctuator ,
USIcmp.c:3:21: identifier glob1
USIcmp.c:3:26: punctuator ;
USIcmp.c:4:1: identifier reg0reg1
USIcmp.c:4:10: punctuator (
USIcmp.c:4:11: identifier r0
USIcmp.c:4:13: punctuator ,
USIcmp.c:4:15: identifier r1
USIcmp.c:4:17: punctuator ,
USIcmp.c:4:19: identifier x0
USIcmp.c:4:21: punctuator ,
USIcmp.c:4:23: identifier x1
USIcmp.c:4:25: punctuator ,
USIcmp.c:4:27: identifier p0
USIcmp.c:4:29: punctuator ,
USIcmp.c:4:31: identifier p1
USIcmp.c:4:33: punctuator )
USIcmp.c:5:1: keyword unsigned
USIcmp.c:5:10: keyword int
USIcmp.c:5:14: identifier r0
USIcmp.c:5:16: punctuator ,
USIcmp.c:5:18: identifier r1
USIcmp.c:5:20: punctuator ;
USIcmp.c:5:22: keyword unsigned
USIcmp.c:5:31: keyword int
USIcmp.c:5:35: punctuator *
USIcmp.c:5:36: identifier p0
USIcmp.c:5:38: punctuator ,
USIcmp.c:5:40: punctuator *
USIcmp.c:5:41: identifier p1
USIcmp.c:5:43: punctuator ;
USIcmp.c:6:1: punctuator {
USIcmp.c:6:2: keyword if
USIcmp.c:6:5: punctuator (
USIcmp.c:6:6: identifier r0
USIcmp.c:6:9: punctuator <=
USIcmp.c:6:12: identifier r1
USIcmp.c:6:14: punctuator )
USIcmp.c:6:16: keyword return
USIcmp.c:6:23: constant 1
USIcmp.c:6:24: punctuator ;
USIcmp.c:6:26: keyword else
USIcmp.c:6:31: keyword return
USIcmp.c:6:38: constant 0
USIcmp.c:6:39: punctuator ;
USIcmp.c:6:40: punctuator }
USIcmp.c:8:1: identifier reg0indreg1
USIcmp.c:8:13: punctuator (
USIcmp.c:8:14: identifier r0
USIcmp.c:8:16: punctuator ,
USIcmp.c:8:18: identifier r1
USIcmp.c:8:20: punctuator ,
USIcmp.c:8:22: identifier x0
USIcmp.c:8:24: punctuator ,
USIcmp.c:8:26: identifier x1
USIcmp.c:8:28: punctuator ,
USIcmp.c:8:30: identifier p0
USIcmp.c:8:32: punctuator ,
USIcmp.c:8:34: identifier p1
USIcmp.c:8:36: punctuator )
USIcmp.c:9:1: keyword unsigned
USIcmp.c:9:10: keyword int
USIcmp.c:9:14: identifier r0
USIcmp.c:9:16: punctuator ,
USIcmp.c:9:18: identifier r1
USIcmp.c:9:20: punctuator ;
USIcmp.c:9:22: keyword unsigned
USIcmp.c:9:31: keyword int
USIcmp.c:9:35: punctuator *
USIcmp.c:9:36: identifier p0
USIcmp.c:9:38: punctuator ,
USIcmp.c:9:40: punctuator *
USIcmp.c:9:41: identifier p1
USIcmp.c:9:43: punctuator ;
USIcmp.c:10:1: punctuator {
USIcmp.c:10:2: keyword if
USIcmp.c:10:5: punctuator (
USIcmp.c:10:6: identifier r0
USIcmp.c:10:9: punctuator <=
USIcmp.c:10:12: punctuator (
USIcmp.c:10:13: punctuator *
USIcmp.c:10:14: identifier p1
USIcmp.c:10:16: punctuator )
USIcmp.c:10:17: punctuator )
USIcmp.c:10:19: keyword return
USIcmp.c:10:26: constant 1
USIcmp.c:10:27: punctuator ;
USIcmp.c:10:29: keyword else
USIcmp.c:10:34: keyword return
USIcmp.c:10:41: constant 0
USIcmp.c:10:42: punctuator ;
USIcmp.c:10:43: punctuator }
USIcmp.c:12:1: identifier reg0imm1
USIcmp.c:12:10: punctuator (
USIcmp.c:12:11: identifier r0
USIcmp.c:12:13: punctuator ,
USIcmp.c:12:15: identifier r1
USIcmp.c:12:17: punctuator ,
USIcmp.c:12:19: identifier x0
USIcmp.c:12:21: punctuator ,
USIcmp.c:12:23: identifier x1
USIcmp.c:12:25: punctuator ,
USIcmp.c:12:27: identifier p0
USIcmp.c:12:29: punctuator ,
USIcmp.c:12:31: identifier p1
USIcmp.c:12:33: punctuator )
USIcmp.c:13:1: keyword unsigned
USIcmp.c:13:10: keyword int
USIcmp.c:13:14: identifier r0
USIcmp.c:13:16: punctuator ,
USIcmp.c:13:18: identifier r1
USIcmp.c:13:20: punctuator ;
USIcmp.c:13:22: keyword unsigned
USIcmp.c:13:31: keyword int
USIcmp.c:13:35: punctuator *
USIcmp.c:13:36: identifier p0
USIcmp.c:13:38: punctuator ,
USIcmp.c:13:40: punctuator *
USIcmp.c:13:41: identifier p1
USIcmp.c:13:43: punctuator ;
USIcmp.c:14:1: punctuator {
USIcmp.c:14:2: keyword if
USIcmp.c:14:5: punctuator (
USIcmp.c:14:6: identifier r0
USIcmp.c:14:9: punctuator <=
USIcmp.c:14:12: constant 33
USIcmp.c:14:14: punctuator )
USIcmp.c:14:16: keyword return
USIcmp.c:14:23: constant 1
USIcmp.c:14:24: punctuator ;
USIcmp.c:14:26: keyword else
USIcmp.c:14:31: keyword return
USIcmp.c:14:38: constant 0
USIcmp.c:14:39: punctuator ;
USIcmp.c:14:40: punctuator }
USIcmp.c:16:1: identifier reg0limm1
USIcmp.c:16:11: punctuator (
USIcmp.c:16:12: identifier r0
USIcmp.c:16:14: punctuator ,
USIcmp.c:16:16: identifier r1
USIcmp.c:16:18: punctuator ,
USIcmp.c:16:20: identifier x0
USIcmp.c:16:22: punctuator ,
USIcmp.c:16:24: identifier x1
USIcmp.c:16:26: punctuator ,
USIcmp.c:16:28: identifier p0
USIcmp.c:16:30: punctuator ,
USIcmp.c:16:32: identifier p1
USIcmp.c:16:34: punctuator )
USIcmp.c:17:1: keyword unsigned
USIcmp.c:17:10: keyword int
USIcmp.c:17:14: identifier r0
USIcmp.c:17:16: punctuator ,
USIcmp.c:17:18: identifier r1
USIcmp.c:17:20: punctuator ;
USIcmp.c:17:22: keyword unsigned
USIcmp.c:17:31: keyword int
USIcmp.c:17:35: punctuator *
USIcmp.c:17:36: identifier p0
USIcmp.c:17:38: punctuator ,
USIcmp.c:17:40: punctuator *
USIcmp.c:17:41: identifier p1
USIcmp.c:17:43: punctuator ;
USIcmp.c:18:1: punctuator {
USIcmp.c:18:2: keyword if
USIcmp.c:18:5: punctuator (
USIcmp.c:18:6: identifier r0
USIcmp.c:18:9: punctuator <=
USIcmp.c:18:12: punctuator (
USIcmp.c:18:13: punctuator (
USIcmp.c:18:14: keyword unsigned
USIcmp.c:18:23: keyword int
USIcmp.c:18:26: punctuator )
USIcmp.c:18:27: punctuator &
USIcmp.c:18:28: identifier glob1
USIcmp.c:18:33: punctuator )
USIcmp.c:18:34: punctuator )
USIcmp.c:18:36: keyword return
USIcmp.c:18:43: constant 1
USIcmp.c:18:44: punctuator ;
USIcmp.c:18:46: keyword else
USIcmp.c:18:51: keyword return
USIcmp.c:18:58: constant 0
USIcmp.c:18:59: punctuator ;
USIcmp.c:18:60: punctuator }
USIcmp.c:20:1: identifier reg0adr1
USIcmp.c:20:10: punctuator (
USIcmp.c:20:11: identifier r0
USIcmp.c:20:13: punctuator ,
USIcmp.c:20:15: identifier r1
USIcmp.c:20:17: punctuator ,
USIcmp.c:20:19: identifier x0
USIcmp.c:20:21: punctuator ,
USIcmp.c:20:23: identifier x1
USIcmp.c:20:25: punctuator ,
USIcmp.c:20:27: identifier p0
USIcmp.c:20:29: punctuator ,
USIcmp.c:20:31: identifier p1
USIcmp.c:20:33: punctuator )
USIcmp.c:21:1: keyword unsigned
USIcmp.c:21:10: keyword int
USIcmp.c:21:14: identifier r0
USIcmp.c:21:16: punctuator ,
USIcmp.c:21:18: identifier r1
USIcmp.c:21:20: punctuator ;
USIcmp.c:21:22: keyword unsigned
USIcmp.c:21:31: keyword int
USIcmp.c:21:35: punctuator *
USIcmp.c:21:36: identifier p0
USIcmp.c:21:38: punctuator ,
USIcmp.c:21:40: punctuator *
USIcmp.c:21:41: identifier p1
USIcmp.c:21:43: punctuator ;
USIcmp.c:22:1: punctuator {
USIcmp.c:22:2: keyword if
USIcmp.c:22:5: punctuator (
USIcmp.c:22:6: identifier r0
USIcmp.c:22:9: punctuator <=
USIcmp.c:22:12: punctuator (
USIcmp.c:22:13: punctuator *
USIcmp.c:22:14: punctuator (
USIcmp.c:22:15: punctuator (
USIcmp.c:22:16: keyword unsigned
USIcmp.c:22:25: keyword int
USIcmp.c:22:29: punctuator *
USIcmp.c:22:30: punctuator )
USIcmp.c:22:31: punctuator (
USIcmp.c:22:32: constant 11111111
USIcmp.c:22:41: punctuator &
USIcmp.c:22:43: punctuator ~
USIcmp.c:22:44: punctuator (
USIcmp.c:22:45: identifier __alignof__
USIcmp.c:22:57: punctuator (
USIcmp.c:22:58: keyword unsigned
USIcmp.c:22:67: keyword int
USIcmp.c:22:70: punctuator )
USIcmp.c:22:72: punctuator -
USIcmp.c:22:74: constant 1
USIcmp.c:22:75: punctuator )
USIcmp.c:22:76: punctuator )
USIcmp.c:22:77: punctuator )
USIcmp.c:22:78: punctuator )
USIcmp.c:22:79: punctuator )
USIcmp.c:22:81: keyword return
USIcmp.c:22:88: constant 1
USIcmp.c:22:89: punctuator ;
USIcmp.c:22:91: keyword else
USIcmp.c:22:96: keyword return
USIcmp.c:22:103: constant 0
USIcmp.c:22:104: punctuator ;
USIcmp.c:22:105: punctuator }
USIcmp.c:24:1: identifier reg0adrreg1
USIcmp.c:24:13: punctuator (
USIcmp.c:24:14: identifier r0
USIcmp.c:24:16: punctuator ,
USIcmp.c:24:18: identifier r1
USIcmp.c:24:20: punctuator ,
USIcmp.c:24:22: identifier x0
USIcmp.c:24:24: punctuator ,
USIcmp.c:24:26: identifier x1
USIcmp.c:24:28: punctuator ,
USIcmp.c:24:30: identifier p0
USIcmp.c:24:32: punctuator ,
USIcmp.c:24:34: identifier p1
USIcmp.c:24:36: punctuator )
USIcmp.c:25:1: keyword unsigned
USIcmp.c:25:10: keyword int
USIcmp.c:25:14: identifier r0
USIcmp.c:25:16: punctuator ,
USIcmp.c:25:18: identifier r1
USIcmp.c:25:20: punctuator ;
USIcmp.c:25:22: keyword unsigned
USIcmp.c:25:31: keyword int
USIcmp.c:25:35: punctuator *
USIcmp.c:25:36: identifier p0
USIcmp.c:25:38: punctuator ,
USIcmp.c:25:40: punctuator *
USIcmp.c:25:41: identifier p1
USIcmp.c:25:43: punctuator ;
USIcmp.c:26:1: punctuator {
USIcmp.c:26:2: keyword if
USIcmp.c:26:5: punctuator (
USIcmp.c:26:6: identifier r0
USIcmp.c:26:9: punctuator <=
USIcmp.c:26:12: punctuator (
USIcmp.c:26:13: identifier p1
USIcmp.c:26:15: punctuator [
USIcmp.c:26:16: constant 1111111
USIcmp.c:26:23: punctuator /
USIcmp.c:26:24: constant 4
USIcmp.c:26:25: punctuator ]
USIcmp.c:26:26: punctuator )
USIcmp.c:26:27: punctuator )
USIcmp.c:26:29: keyword return
USIcmp.c:26:36: constant 1
USIcmp.c:26:37: punctuator ;
USIcmp.c:26:39: keyword else
USIcmp.c:26:44: keyword return
USIcmp.c:26:51: constant 0
USIcmp.c:26:52: punctuator ;
USIcmp.c:26:53: punctuator }
USIcmp.c:28:1: identifier reg0adrx1
USIcmp.c:28:11: punctuator (
USIcmp.c:28:12: identifier r0
USIcmp.c:28:14: punctuator ,
USIcmp.c:28:16: identifier r1
USIcmp.c:28:18: punctuator ,
USIcmp.c:28:20: identifier x0
USIcmp.c:28:22: punctuator ,
USIcmp.c:28:24: identifier x1
USIcmp.c:28:26: punctuator ,
USIcmp.c:28:28: identifier p0
USIcmp.c:28:30: punctuator ,
USIcmp.c:28:32: identifier p1
USIcmp.c:28:34: punctuator )
USIcmp.c:29:1: keyword unsigned
USIcmp.c:29:10: keyword int
USIcmp.c:29:14: identifier r0
USIcmp.c:29:16: punctuator ,
USIcmp.c:29:18: identifier r1
USIcmp.c:29:20: punctuator ;
USIcmp.c:29:22: keyword unsigned
USIcmp.c:29:31: keyword int
USIcmp.c:29:35: punctuator *
USIcmp.c:29:36: identifier p0
USIcmp.c:29:38: punctuator ,
USIcmp.c:29:40: punctuator *
USIcmp.c:29:41: identifier p1
USIcmp.c:29:43: punctuator ;
USIcmp.c:30:1: punctuator {
USIcmp.c:30:2: keyword if
USIcmp.c:30:5: punctuator (
USIcmp.c:30:6: identifier r0
USIcmp.c:30:9: punctuator <=
USIcmp.c:30:12: punctuator (
USIcmp.c:30:13: punctuator (
USIcmp.c:30:14: punctuator (
USIcmp.c:30:15: keyword unsigned
USIcmp.c:30:24: keyword int
USIcmp.c:30:28: punctuator *
USIcmp.c:30:29: punctuator )
USIcmp.c:30:30: punctuator (
USIcmp.c:30:31: constant 11111111
USIcmp.c:30:40: punctuator &
USIcmp.c:30:42: punctuator ~
USIcmp.c:30:43: punctuator (
USIcmp.c:30:44: identifier __alignof__
USIcmp.c:30:56: punctuator (
USIcmp.c:30:57: keyword unsigned
USIcmp.c:30:66: keyword int
USIcmp.c:30:69: punctuator )
USIcmp.c:30:71: punctuator -
USIcmp.c:30:73: constant 1
USIcmp.c:30:74: punctuator )
USIcmp.c:30:75: punctuator )
USIcmp.c:30:76: punctuator )
USIcmp.c:30:77: punctuator [
USIcmp.c:30:78: identifier x1
USIcmp.c:30:80: punctuator ]
USIcmp.c:30:81: punctuator )
USIcmp.c:30:82: punctuator )
USIcmp.c:30:84: keyword return
USIcmp.c:30:91: constant 1
USIcmp.c:30:92: punctuator ;
USIcmp.c:30:94: keyword else
USIcmp.c:30:99: keyword return
USIcmp.c:30:106: constant 0
USIcmp.c:30:107: punctuator ;
USIcmp.c:30:108: punctuator }
USIcmp.c:32:1: identifier reg0regx1
USIcmp.c:32:11: punctuator (
USIcmp.c:32:12: identifier r0
USIcmp.c:32:14: punctuator ,
USIcmp.c:32:16: identifier r1
USIcmp.c:32:18: punctuator ,
USIcmp.c:32:20: identifier x0
USIcmp.c:32:22: punctuator ,
USIcmp.c:32:24: identifier x1
USIcmp.c:32:26: punctuator ,
USIcmp.c:32:28: identifier p0
USIcmp.c:32:30: punctuator ,
USIcmp.c:32:32: identifier p1
USIcmp.c:32:34: punctuator )
USIcmp.c:33:1: keyword unsigned
USIcmp.c:33:10: keyword int
USIcmp.c:33:14: identifier r0
USIcmp.c:33:16: punctuator ,
USIcmp.c:33:18: identifier r1
USIcmp.c:33:20: punctuator ;
USIcmp.c:33:22: keyword unsigned
USIcmp.c:33:31: keyword int
USIcmp.c:33:35: punctuator *
USIcmp.c:33:36: identifier p0
USIcmp.c:33:38: punctuator ,
USIcmp.c:33:40: punctuator *
USIcmp.c:33:41: identifier p1
USIcmp.c:33:43: punctuator ;
USIcmp.c:34:1: punctuator {
USIcmp.c:34:2: keyword if
USIcmp.c:34:5: punctuator (
USIcmp.c:34:6: identifier r0
USIcmp.c:34:9: punctuator <=
USIcmp.c:34:12: punctuator (
USIcmp.c:34:13: identifier p1
USIcmp.c:34:15: punctuator [
USIcmp.c:34:16: identifier x1
USIcmp.c:34:18: punctuator ]
USIcmp.c:34:19: punctuator )
USIcmp.c:34:20: punctuator )
USIcmp.c:34:22: keyword return
USIcmp.c:34:29: constant 1
USIcmp.c:34:30: punctuator ;
USIcmp.c:34:32: keyword else
USIcmp.c:34:37: keyword return
USIcmp.c:34:44: constant 0
USIcmp.c:34:45: punctuator ;
USIcmp.c:34:46: punctuator }
USIcmp.c:36:1: identifier indreg0reg1
USIcmp.c:36:13: punctuator (
USIcmp.c:36:14: identifier r0
USIcmp.c:36:16: punctuator ,
USIcmp.c:36:18: identifier r1
USIcmp.c:36:20: punctuator ,
USIcmp.c:36:22: identifier x0
USIcmp.c:36:24: punctuator ,
USIcmp.c:36:26: identifier x1
USIcmp.c:36:28: punctuator ,
USIcmp.c:36:30: identifier p0
USIcmp.c:36:32: punctuator ,
USIcmp.c:36:34: identifier p1
USIcmp.c:36:36: punctuator )
USIcmp.c:37:1: keyword unsigned
USIcmp.c:37:10: keyword int
USIcmp.c:37:14: identifier r0
USIcmp.c:37:16: punctuator ,
USIcmp.c:37:18: identifier r1
USIcmp.c:37:20: punctuator ;
USIcmp.c:37:22: keyword unsigned
USIcmp.c:37:31: keyword int
USIcmp.c:37:35: punctuator *
USIcmp.c:37:36: identifier p0
USIcmp.c:37:38: punctuator ,
USIcmp.c:37:40: punctuator *
USIcmp.c:37:41: identifier p1
USIcmp.c:37:43: punctuator ;
USIcmp.c:38:1: punctuator {
USIcmp.c:38:2: keyword if
USIcmp.c:38:5: punctuator (
USIcmp.c:38:6: punctuator (
USIcmp.c:38:7: punctuator *
USIcmp.c:38:8: identifier p0
USIcmp.c:38:10: punctuator )
USIcmp.c:38:12: punctuator <=
USIcmp.c:38:15: identifier r1
USIcmp.c:38:17: punctuator )
USIcmp.c:38:19: keyword return
USIcmp.c:38:26: constant 1
USIcmp.c:38:27: punctuator ;
USIcmp.c:38:29: keyword else
USIcmp.c:38:34: keyword return
USIcmp.c:38:41: constant 0
USIcmp.c:38:42: punctuator ;
USIcmp.c:38:43: punctuator }
USIcmp.c:40:1: identifier indreg0indreg1
USIcmp.c:40:16: punctuator (
USIcmp.c:40:17: identifier r0
USIcmp.c:40:19: punctuator ,
USIcmp.c:40:21: identifier r1
USIcmp.c:40:23: punctuator ,
USIcmp.c:40:25: identifier x0
USIcmp.c:40:27: punctuator ,
USIcmp.c:40:29: identifier x1
USIcmp.c:40:31: punctuator ,
USIcmp.c:40:33: identifier p0
USIcmp.c:40:35: punctuator ,
USIcmp.c:40:37: identifier p1
USIcmp.c:40:39: punctuator )
USIcmp.c:41:1: keyword unsigned
USIcmp.c:41:10: keyword int
USIcmp.c:41:14: identifier r0
USIcmp.c:41:16: punctuator ,
USIcmp.c:41:18: identifier r1
USIcmp.c:41:20: punctuator ;
USIcmp.c:41:22: keyword unsigned
USIcmp.c:41:31: keyword int
USIcmp.c:41:35: punctuator *
USIcmp.c:41:36: identifier p0
USIcmp.c:41:38: punctuator ,
USIcmp.c:41:40: punctuator *
USIcmp.c:41:41: identifier p1
USIcmp.c:41:43: punctuator ;
USIcmp.c:42:1: punctuator {
USIcmp.c:42:2: keyword if
USIcmp.c:42:5: punctuator (
USIcmp.c:42:6: punctuator (
USIcmp.c:42:7: punctuator *
USIcmp.c:42:8: identifier p0
USIcmp.c:42:10: punctuator )
USIcmp.c:42:12: punctuator <=
USIcmp.c:42:15: punctuator (
USIcmp.c:42:16: punctuator *
USIcmp.c:42:17: identifier p1
USIcmp.c:42:19: punctuator )
USIcmp.c:42:20: punctuator )
USIcmp.c:42:22: keyword return
USIcmp.c:42:29: constant 1
USIcmp.c:42:30: punctuator ;
USIcmp.c:42:32: keyword else
USIcmp.c:42:37: keyword return
USIcmp.c:42:44: constant 0
USIcmp.c:42:45: punctuator ;
USIcmp.c:42:46: punctuator }
USIcmp.c:44:1: identifier indreg0imm1
USIcmp.c:44:13: punctuator (
USIcmp.c:44:14: identifier r0
USIcmp.c:44:16: punctuator ,
USIcmp.c:44:18: identifier r1
USIcmp.c:44:20: punctuator ,
USIcmp.c:44:22: identifier x0
USIcmp.c:44:24: punctuator ,
USIcmp.c:44:26: identifier x1
USIcmp.c:44:28: punctuator ,
USIcmp.c:44:30: identifier p0
USIcmp.c:44:32: punctuator ,
USIcmp.c:44:34: identifier p1
USIcmp.c:44:36: punctuator )
USIcmp.c:45:1: keyword unsigned
USIcmp.c:45:10: keyword int
USIcmp.c:45:14: identifier r0
USIcmp.c:45:16: punctuator ,
USIcmp.c:45:18: identifier r1
USIcmp.c:45:20: punctuator ;
USIcmp.c:45:22: keyword unsigned
USIcmp.c:45:31: keyword int
USIcmp.c:45:35: punctuator *
USIcmp.c:45:36: identifier p0
USIcmp.c:45:38: punctuator ,
USIcmp.c:45:40: punctuator *
USIcmp.c:45:41: identifier p1
USIcmp.c:45:43: punctuator ;
USIcmp.c:46:1: punctuator {
USIcmp.c:46:2: keyword if
USIcmp.c:46:5: punctuator (
USIcmp.c:46:6: punctuator (
USIcmp.c:46:7: punctuator *
USIcmp.c:46:8: identifier p0
USIcmp.c:46:10: punctuator )
USIcmp.c:46:12: punctuator <=
USIcmp.c:46:15: constant 33
USIcmp.c:46:17: punctuator )
USIcmp.c:46:19: keyword return
USIcmp.c:46:26: constant 1
USIcmp.c:46:27: punctuator ;
USIcmp.c:46:29: keyword else
USIcmp.c:46:34: keyword return
USIcmp.c:46:41: constant 0
USIcmp.c:46:42: punctuator ;
USIcmp.c:46:43: punctuator }
USIcmp.c:48:1: identifier indreg0limm1
USIcmp.c:48:14: punctuator (
USIcmp.c:48:15: identifier r0
USIcmp.c:48:17: punctuator ,
USIcmp.c:48:19: identifier r1
USIcmp.c:48:21: punctuator ,
USIcmp.c:48:23: identifier x0
USIcmp.c:48:25: punctuator ,
USIcmp.c:48:27: identifier x1
USIcmp.c:48:29: punctuator ,
USIcmp.c:48:31: identifier p0
USIcmp.c:48:33: punctuator ,
USIcmp.c:48:35: identifier p1
USIcmp.c:48:37: punctuator )
USIcmp.c:49:1: keyword unsigned
USIcmp.c:49:10: keyword int
USIcmp.c:49:14: identifier r0
USIcmp.c:49:16: punctuator ,
USIcmp.c:49:18: identifier r1
USIcmp.c:49:20: punctuator ;
USIcmp.c:49:22: keyword unsigned
USIcmp.c:49:31: keyword int
USIcmp.c:49:35: punctuator *
USIcmp.c:49:36: identifier p0
USIcmp.c:49:38: punctuator ,
USIcmp.c:49:40: punctuator *
USIcmp.c:49:41: identifier p1
USIcmp.c:49:43: punctuator ;
USIcmp.c:50:1: punctuator {
USIcmp.c:50:2: keyword if
USIcmp.c:50:5: punctuator (
USIcmp.c:50:6: punctuator (
USIcmp.c:50:7: punctuator *
USIcmp.c:50:8: identifier p0
USIcmp.c:50:10: punctuator )
USIcmp.c:50:12: punctuator <=
USIcmp.c:50:15: punctuator (
USIcmp.c:50:16: punctuator (
USIcmp.c:50:17: keyword unsigned
USIcmp.c:50:26: keyword int
USIcmp.c:50:29: punctuator )
USIcmp.c:50:30: punctuator &
USIcmp.c:50:31: identifier glob1
USIcmp.c:50:36: punctuator )
USIcmp.c:50:37: punctuator )
USIcmp.c:50:39: keyword return
USIcmp.c:50:46: constant 1
USIcmp.c:50:47: punctuator ;
USIcmp.c:50:49: keyword else
USIcmp.c:50:54: keyword return
USIcmp.c:50:61: constant 0
USIcmp.c:50:62: punctuator ;
USIcmp.c:50:63: punctuator }
USIcmp.c:52:1: identifier indreg0adr1
USIcmp.c:52:13: punctuator (
USIcmp.c:52:14: identifier r0
USIcmp.c:52:16: punctuator ,
USIcmp.c:52:18: identifier r1
USIcmp.c:52:20: punctuator ,
USIcmp.c:52:22: identifier x0
USIcmp.c:52:24: punctuator ,
USIcmp.c:52:26: identifier x1
USIcmp.c:52:28: punctuator ,
USIcmp.c:52:30: identifier p0
USIcmp.c:52:32: punctuator ,
USIcmp.c:52:34: identifier p1
USIcmp.c:52:36: punctuator )
USIcmp.c:53:1: keyword unsigned
USIcmp.c:53:10: keyword int
USIcmp.c:53:14: identifier r0
USIcmp.c:53:16: punctuator ,
USIcmp.c:53:18: identifier r1
USIcmp.c:53:20: punctuator ;
USIcmp.c:53:22: keyword unsigned
USIcmp.c:53:31: keyword int
USIcmp.c:53:35: punctuator *
USIcmp.c:53:36: identifier p0
USIcmp.c:53:38: punctuator ,
USIcmp.c:53:40: punctuator *
USIcmp.c:53:41: identifier p1
USIcmp.c:53:43: punctuator ;
USIcmp.c:54:1: punctuator {
USIcmp.c:54:2: keyword if
USIcmp.c:54:5: punctuator (
USIcmp.c:54:6: punctuator (
USIcmp.c:54:7: punctuator *
USIcmp.c:54:8: identifier p0
USIcmp.c:54:10: punctuator )
USIcmp.c:54:12: punctuator <=
USIcmp.c:54:15: punctuator (
USIcmp.c:54:16: punctuator *
USIcmp.c:54:17: punctuator (
USIcmp.c:54:18: punctuator (
USIcmp.c:54:19: keyword unsigned
USIcmp.c:54:28: keyword int
USIcmp.c:54:32: punctuator *
USIcmp.c:54:33: punctuator )
USIcmp.c:54:34: punctuator (
USIcmp.c:54:35: constant 11111111
USIcmp.c:54:44: punctuator &
USIcmp.c:54:46: punctuator ~
USIcmp.c:54:47: punctuator (
USIcmp.c:54:48: identifier __alignof__
USIcmp.c:54:60: punctuator (
USIcmp.c:54:61: keyword unsigned
USIcmp.c:54:70: keyword int
USIcmp.c:54:73: punctuator )
USIcmp.c:54:75: punctuator -
USIcmp.c:54:77: constant 1
USIcmp.c:54:78: punctuator )
USIcmp.c:54:79: punctuator )
USIcmp.c:54:80: punctuator )
USIcmp.c:54:81: punctuator )
USIcmp.c:54:82: punctuator )
USIcmp.c:54:84: keyword return
USIcmp.c:54:91: constant 1
USIcmp.c:54:92: punctuator ;
USIcmp.c:54:94: keyword else
USIcmp.c:54:99: keyword return
USIcmp.c:54:106: constant 0
USIcmp.c:54:107: punctuator ;
USIcmp.c:54:108: punctuator }
USIcmp.c:56:1: identifier indreg0adrreg1
USIcmp.c:56:16: punctuator (
USIcmp.c:56:17: identifier r0
USIcmp.c:56:19: punctuator ,
USIcmp.c:56:21: identifier r1
USIcmp.c:56:23: punctuator ,
USIcmp.c:56:25: identifier x0
USIcmp.c:56:27: punctuator ,
USIcmp.c:56:29: identifier x1
USIcmp.c:56:31: punctuator ,
USIcmp.c:56:33: identifier p0
USIcmp.c:56:35: punctuator ,
USIcmp.c:56:37: identifier p1
USIcmp.c:56:39: punctuator )
USIcmp.c:57:1: keyword unsigned
USIcmp.c:57:10: keyword int
USIcmp.c:57:14: identifier r0
USIcmp.c:57:16: punctuator ,
USIcmp.c:57:18: identifier r1
USIcmp.c:57:20: punctuator ;
USIcmp.c:57:22: keyword unsigned
USIcmp.c:57:31: keyword int
USIcmp.c:57:35: punctuator *
USIcmp.c:57:36: identifier p0
USIcmp.c:57:38: punctuator ,
USIcmp.c:57:40: punctuator *
USIcmp.c:57:41: identifier p1
USIcmp.c:57:43: punctuator ;
USIcmp.c:58:1: punctuator {
USIcmp.c:58:2: keyword if
USIcmp.c:58:5: punctuator (
USIcmp.c:58:6: punctuator (
USIcmp.c:58:7: punctuator *
USIcmp.c:58:8: identifier p0
USIcmp.c:58:10: punctuator )
USIcmp.c:58:12: punctuator <=
USIcmp.c:58:15: punctuator (
USIcmp.c:58:16: identifier p1
USIcmp.c:58:18: punctuator [
USIcmp.c:58:19: constant 1111111
USIcmp.c:58:26: punctuator /
USIcmp.c:58:27: constant 4
USIcmp.c:58:28: punctuator ]
USIcmp.c:58:29: punctuator )
USIcmp.c:58:30: punctuator )
USIcmp.c:58:32: keyword return
USIcmp.c:58:39: constant 1
USIcmp.c:58:40: punctuator ;
USIcmp.c:58:42: keyword else
USIcmp.c:58:47: keyword return
USIcmp.c:58:54: constant 0
USIcmp.c:58:55: punctuator ;
USIcmp.c:58:56: punctuator }
USIcmp.c:60:1: identifier indreg0adrx1
USIcmp.c:60:14: punctuator (
USIcmp.c:60:15: identifier r0
USIcmp.c:60:17: punctuator ,
USIcmp.c:60:19: identifier r1
USIcmp.c:60:21: punctuator ,
USIcmp.c:60:23: identifier x0
USIcmp.c:60:25: punctuator ,
USIcmp.c:60:27: identifier x1
USIcmp.c:60:29: punctuator ,
USIcmp.c:60:31: identifier p0
USIcmp.c:60:33: punctuator ,
USIcmp.c:60:35: identifier p1
USIcmp.c:60:37: punctuator )
USIcmp.c:61:1: keyword unsigned
USIcmp.c:61:10: keyword int
USIcmp.c:61:14: identifier r0
USIcmp.c:61:16: punctuator ,
USIcmp.c:61:18: identifier r1
USIcmp.c:61:20: punctuator ;
USIcmp.c:61:22: keyword unsigned
USIcmp.c:61:31: keyword int
USIcmp.c:61:35: punctuator *
USIcmp.c:61:36: identifier p0
USIcmp.c:61:38: punctuator ,
USIcmp.c:61:40: punctuator *
USIcmp.c:61:41: identifier p1
USIcmp.c:61:43: punctuator ;
USIcmp.c:62:1: punctuator {
USIcmp.c:62:2: keyword if
USIcmp.c:62:5: punctuator (
USIcmp.c:62:6: punctuator (
USIcmp.c:62:7: punctuator *
USIcmp.c:62:8: identifier p0
USIcmp.c:62:10: punctuator )
USIcmp.c:62:12: punctuator <=
USIcmp.c:62:15: punctuator (
USIcmp.c:62:16: punctuator (
USIcmp.c:62:17: punctuator (
USIcmp.c:62:18: keyword unsigned
USIcmp.c:62:27: keyword int
USIcmp.c:62:31: punctuator *
USIcmp.c:62:32: punctuator )
USIcmp.c:62:33: punctuator (
USIcmp.c:62:34: constant 11111111
USIcmp.c:62:43: punctuator &
USIcmp.c:62:45: punctuator ~
USIcmp.c:62:46: punctuator (
USIcmp.c:62:47: identifier __alignof__
USIcmp.c:62:59: punctuator (
USIcmp.c:62:60: keyword unsigned
USIcmp.c:62:69: keyword int
USIcmp.c:62:72: punctuator )
USIcmp.c:62:74: punctuator -
USIcmp.c:62:76: constant 1
USIcmp.c:62:77: punctuator )
USIcmp.c:62:78: punctuator )
USIcmp.c:62:79: punctuator )
USIcmp.c:62:80: punctuator [
USIcmp.c:62:81: identifier x1
USIcmp.c:62:83: punctuator ]
USIcmp.c:62:84: punctuator )
USIcmp.c:62:85: punctuator )
USIcmp.c:62:87: keyword return
USIcmp.c:62:94: constant 1
USIcmp.c:62:95: punctuator ;
USIcmp.c:62:97: keyword else
USIcmp.c:62:102: keyword return
USIcmp.c:62:109: constant 0
USIcmp.c:62:110: punctuator ;
USIcmp.c:62:111: punctuator }
USIcmp.c:64:1: identifier indreg0regx1
USIcmp.c:64:14: punctuator (
USIcmp.c:64:15: identifier r0
USIcmp.c:64:17: punctuator ,
USIcmp.c:64:19: identifier r1
USIcmp.c:64:21: punctuator ,
USIcmp.c:64:23: identifier x0
USIcmp.c:64:25: punctuator ,
USIcmp.c:64:27: identifier x1
USIcmp.c:64:29: punctuator ,
USIcmp.c:64:31: identifier p0
USIcmp.c:64:33: punctuator ,
USIcmp.c:64:35: identifier p1
USIcmp.c:64:37: punctuator )
USIcmp.c:65:1: keyword unsigned
USIcmp.c:65:10: keyword int
USIcmp.c:65:14: identifier r0
USIcmp.c:65:16: punctuator ,
USIcmp.c:65:18: identifier r1
USIcmp.c:65:20: punctuator ;
USIcmp.c:65:22: keyword unsigned
USIcmp.c:65:31: keyword int
USIcmp.c:65:35: punctuator *
USIcmp.c:65:36: identifier p0
USIcmp.c:65:38: punctuator ,
USIcmp.c:65:40: punctuator *
USIcmp.c:65:41: identifier p1
USIcmp.c:65:43: punctuator ;
USIcmp.c:66:1: punctuator {
USIcmp.c:66:2: keyword if
USIcmp.c:66:5: punctuator (
USIcmp.c:66:6: punctuator (
USIcmp.c:66:7: punctuator *
USIcmp.c:66:8: identifier p0
USIcmp.c:66:10: punctuator )
USIcmp.c:66:12: punctuator <=
USIcmp.c:66:15: punctuator (
USIcmp.c:66:16: identifier p1
USIcmp.c:66:18: punctuator [
USIcmp.c:66:19: identifier x1
USIcmp.c:66:21: punctuator ]
USIcmp.c:66:22: punctuator )
USIcmp.c:66:23: punctuator )
USIcmp.c:66:25: keyword return
USIcmp.c:66:32: constant 1
USIcmp.c:66:33: punctuator ;
USIcmp.c:66:35: keyword else
USIcmp.c:66:40: keyword return
USIcmp.c:66:47: constant 0
USIcmp.c:66:48: punctuator ;
USIcmp.c:66:49: punctuator }
USIcmp.c:68:1: identifier imm0reg1
USIcmp.c:68:10: punctuator (
USIcmp.c:68:11: identifier r0
USIcmp.c:68:13: punctuator ,
USIcmp.c:68:15: identifier r1
USIcmp.c:68:17: punctuator ,
USIcmp.c:68:19: identifier x0
USIcmp.c:68:21: punctuator ,
USIcmp.c:68:23: identifier x1
USIcmp.c:68:25: punctuator ,
USIcmp.c:68:27: identifier p0
USIcmp.c:68:29: punctuator ,
USIcmp.c:68:31: identifier p1
USIcmp.c:68:33: punctuator )
USIcmp.c:69:1: keyword unsigned
USIcmp.c:69:10: keyword int
USIcmp.c:69:14: identifier r0
USIcmp.c:69:16: punctuator ,
USIcmp.c:69:18: identifier r1
USIcmp.c:69:20: punctuator ;
USIcmp.c:69:22: keyword unsigned
USIcmp.c:69:31: keyword int
USIcmp.c:69:35: punctuator *
USIcmp.c:69:36: identifier p0
USIcmp.c:69:38: punctuator ,
USIcmp.c:69:40: punctuator *
USIcmp.c:69:41: identifier p1
USIcmp.c:69:43: punctuator ;
USIcmp.c:70:1: punctuator {
USIcmp.c:70:2: keyword if
USIcmp.c:70:5: punctuator (
USIcmp.c:70:6: constant 22
USIcmp.c:70:9: punctuator <=
USIcmp.c:70:12: identifier r1
USIcmp.c:70:14: punctuator )
USIcmp.c:70:16: keyword return
USIcmp.c:70:23: constant 1
USIcmp.c:70:24: punctuator ;
USIcmp.c:70:26: keyword else
USIcmp.c:70:31: keyword return
USIcmp.c:70:38: constant 0
USIcmp.c:70:39: punctuator ;
USIcmp.c:70:40: punctuator }
USIcmp.c:72:1: identifier imm0indreg1
USIcmp.c:72:13: punctuator (
USIcmp.c:72:14: identifier r0
USIcmp.c:72:16: punctuator ,
USIcmp.c:72:18: identifier r1
USIcmp.c:72:20: punctuator ,
USIcmp.c:72:22: identifier x0
USIcmp.c:72:24: punctuator ,
USIcmp.c:72:26: identifier x1
USIcmp.c:72:28: punctuator ,
USIcmp.c:72:30: identifier p0
USIcmp.c:72:32: punctuator ,
USIcmp.c:72:34: identifier p1
USIcmp.c:72:36: punctuator )
USIcmp.c:73:1: keyword unsigned
USIcmp.c:73:10: keyword int
USIcmp.c:73:14: identifier r0
USIcmp.c:73:16: punctuator ,
USIcmp.c:73:18: identifier r1
USIcmp.c:73:20: punctuator ;
USIcmp.c:73:22: keyword unsigned
USIcmp.c:73:31: keyword int
USIcmp.c:73:35: punctuator *
USIcmp.c:73:36: identifier p0
USIcmp.c:73:38: punctuator ,
USIcmp.c:73:40: punctuator *
USIcmp.c:73:41: identifier p1
USIcmp.c:73:43: punctuator ;
USIcmp.c:74:1: punctuator {
USIcmp.c:74:2: keyword if
USIcmp.c:74:5: punctuator (
USIcmp.c:74:6: constant 22
USIcmp.c:74:9: punctuator <=
USIcmp.c:74:12: punctuator (
USIcmp.c:74:13: punctuator *
USIcmp.c:74:14: identifier p1
USIcmp.c:74:16: punctuator )
USIcmp.c:74:17: punctuator )
USIcmp.c:74:19: keyword return
USIcmp.c:74:26: constant 1
USIcmp.c:74:27: punctuator ;
USIcmp.c:74:29: keyword else
USIcmp.c:74:34: keyword return
USIcmp.c:74:41: constant 0
USIcmp.c:74:42: punctuator ;
USIcmp.c:74:43: punctuator }
USIcmp.c:76:1: identifier imm0imm1
USIcmp.c:76:10: punctuator (
USIcmp.c:76:11: identifier r0
USIcmp.c:76:13: punctuator ,
USIcmp.c:76:15: identifier r1
USIcmp.c:76:17: punctuator ,
USIcmp.c:76:19: identifier x0
USIcmp.c:76:21: punctuator ,
USIcmp.c:76:23: identifier x1
USIcmp.c:76:25: punctuator ,
USIcmp.c:76:27: identifier p0
USIcmp.c:76:29: punctuator ,
USIcmp.c:76:31: identifier p1
USIcmp.c:76:33: punctuator )
USIcmp.c:77:1: keyword unsigned
USIcmp.c:77:10: keyword int
USIcmp.c:77:14: identifier r0
USIcmp.c:77:16: punctuator ,
USIcmp.c:77:18: identifier r1
USIcmp.c:77:20: punctuator ;
USIcmp.c:77:22: keyword unsigned
USIcmp.c:77:31: keyword int
USIcmp.c:77:35: punctuator *
USIcmp.c:77:36: identifier p0
USIcmp.c:77:38: punctuator ,
USIcmp.c:77:40: punctuator *
USIcmp.c:77:41: identifier p1
USIcmp.c:77:43: punctuator ;
USIcmp.c:78:1: punctuator {
USIcmp.c:78:2: keyword if
USIcmp.c:78:5: punctuator (
USIcmp.c:78:6: constant 22
USIcmp.c:78:9: punctuator <=
USIcmp.c:78:12: constant 33
USIcmp.c:78:14: punctuator )
USIcmp.c:78:16: keyword return
USIcmp.c:78:23: constant 1
USIcmp.c:78:24: punctuator ;
USIcmp.c:78:26: keyword else
USIcmp.c:78:31: keyword return
USIcmp.c:78:38: constant 0
USIcmp.c:78:39: punctuator ;
USIcmp.c:78:40: punctuator }
USIcmp.c:80:1: identifier imm0limm1
USIcmp.c:80:11: punctuator (
USIcmp.c:80:12: identifier r0
USIcmp.c:80:14: punctuator ,
USIcmp.c:80:16: identifier r1
USIcmp.c:80:18: punctuator ,
USIcmp.c:80:20: identifier x0
USIcmp.c:80:22: punctuator ,
USIcmp.c:80:24: identifier x1
USIcmp.c:80:26: punctuator ,
USIcmp.c:80:28: identifier p0
USIcmp.c:80:30: punctuator ,
USIcmp.c:80:32: identifier p1
USIcmp.c:80:34: punctuator )
USIcmp.c:81:1: keyword unsigned
USIcmp.c:81:10: keyword int
USIcmp.c:81:14: identifier r0
USIcmp.c:81:16: punctuator ,
USIcmp.c:81:18: identifier r1
USIcmp.c:81:20: punctuator ;
USIcmp.c:81:22: keyword unsigned
USIcmp.c:81:31: keyword int
USIcmp.c:81:35: punctuator *
USIcmp.c:81:36: identifier p0
USIcmp.c:81:38: punctuator ,
USIcmp.c:81:40: punctuator *
USIcmp.c:81:41: identifier p1
USIcmp.c:81:43: punctuator ;
USIcmp.c:82:1: punctuator {
USIcmp.c:82:2: keyword if
USIcmp.c:82:5: punctuator (
USIcmp.c:82:6: constant 22
USIcmp.c:82:9: punctuator <=
USIcmp.c:82:12: punctuator (
USIcmp.c:82:13: punctuator (
USIcmp.c:82:14: keyword unsigned
USIcmp.c:82:23: keyword int
USIcmp.c:82:26: punctuator )
USIcmp.c:82:27: punctuator &
USIcmp.c:82:28: identifier glob1
USIcmp.c:82:33: punctuator )
USIcmp.c:82:34: punctuator )
USIcmp.c:82:36: keyword return
USIcmp.c:82:43: constant 1
USIcmp.c:82:44: punctuator ;
USIcmp.c:82:46: keyword else
USIcmp.c:82:51: keyword return
USIcmp.c:82:58: constant 0
USIcmp.c:82:59: punctuator ;
USIcmp.c:82:60: punctuator }
USIcmp.c:84:1: identifier imm0adr1
USIcmp.c:84:10: punctuator (
USIcmp.c:84:11: identifier r0
USIcmp.c:84:13: punctuator ,
USIcmp.c:84:15: identifier r1
USIcmp.c:84:17: punctuator ,
USIcmp.c:84:19: identifier x0
USIcmp.c:84:21: punctuator ,
USIcmp.c:84:23: identifier x1
USIcmp.c:84:25: punctuator ,
USIcmp.c:84:27: identifier p0
USIcmp.c:84:29: punctuator ,
USIcmp.c:84:31: identifier p1
USIcmp.c:84:33: punctuator )
USIcmp.c:85:1: keyword unsigned
USIcmp.c:85:10: keyword int
USIcmp.c:85:14: identifier r0
USIcmp.c:85:16: punctuator ,
USIcmp.c:85:18: identifier r1
USIcmp.c:85:20: punctuator ;
USIcmp.c:85:22: keyword unsigned
USIcmp.c:85:31: keyword int
USIcmp.c:85:35: punctuator *
USIcmp.c:85:36: identifier p0
USIcmp.c:85:38: punctuator ,
USIcmp.c:85:40: punctuator *
USIcmp.c:85:41: identifier p1
USIcmp.c:85:43: punctuator ;
USIcmp.c:86:1: punctuator {
USIcmp.c:86:2: keyword if
USIcmp.c:86:5: punctuator (
USIcmp.c:86:6: constant 22
USIcmp.c:86:9: punctuator <=
USIcmp.c:86:12: punctuator (
USIcmp.c:86:13: punctuator *
USIcmp.c:86:14: punctuator (
USIcmp.c:86:15: punctuator (
USIcmp.c:86:16: keyword unsigned
USIcmp.c:86:25: keyword int
USIcmp.c:86:29: punctuator *
USIcmp.c:86:30: punctuator )
USIcmp.c:86:31: punctuator (
USIcmp.c:86:32: constant 11111111
USIcmp.c:86:41: punctuator &
USIcmp.c:86:43: punctuator ~
USIcmp.c:86:44: punctuator (
USIcmp.c:86:45: identifier __alignof__
USIcmp.c:86:57: punctuator (
USIcmp.c:86:58: keyword unsigned
USIcmp.c:86:67: keyword int
USIcmp.c:86:70: punctuator )
USIcmp.c:86:72: punctuator -
USIcmp.c:86:74: constant 1
USIcmp.c:86:75: punctuator )
USIcmp.c:86:76: punctuator )
USIcmp.c:86:77: punctuator )
USIcmp.c:86:78: punctuator )
USIcmp.c:86:79: punctuator )
USIcmp.c:86:81: keyword return
USIcmp.c:86:88: constant 1
USIcmp.c:86:89: punctuator ;
USIcmp.c:86:91: keyword else
USIcmp.c:86:96: keyword return
USIcmp.c:86:103: constant 0
USIcmp.c:86:104: punctuator ;
USIcmp.c:86:105: punctuator }
USIcmp.c:88:1: identifier imm0adrreg1
USIcmp.c:88:13: punctuator (
USIcmp.c:88:14: identifier r0
USIcmp.c:88:16: punctuator ,
USIcmp.c:88:18: identifier r1
USIcmp.c:88:20: punctuator ,
USIcmp.c:88:22: identifier x0
USIcmp.c:88:24: punctuator ,
USIcmp.c:88:26: identifier x1
USIcmp.c:88:28: punctuator ,
USIcmp.c:88:30: identifier p0
USIcmp.c:88:32: punctuator ,
USIcmp.c:88:34: identifier p1
USIcmp.c:88:36: punctuator )
USIcmp.c:89:1: keyword unsigned
USIcmp.c:89:10: keyword int
USIcmp.c:89:14: identifier r0
USIcmp.c:89:16: punctuator ,
USIcmp.c:89:18: identifier r1
USIcmp.c:89:20: punctuator ;
USIcmp.c:89:22: keyword unsigned
USIcmp.c:89:31: keyword int
USIcmp.c:89:35: punctuator *
USIcmp.c:89:36: identifier p0
USIcmp.c:89:38: punctuator ,
USIcmp.c:89:40: punctuator *
USIcmp.c:89:41: identifier p1
USIcmp.c:89:43: punctuator ;
USIcmp.c:90:1: punctuator {
USIcmp.c:90:2: keyword if
USIcmp.c:90:5: punctuator (
USIcmp.c:90:6: constant 22
USIcmp.c:90:9: punctuator <=
USIcmp.c:90:12: punctuator (
USIcmp.c:90:13: identifier p1
USIcmp.c:90:15: punctuator [
USIcmp.c:90:16: constant 1111111
USIcmp.c:90:23: punctuator /
USIcmp.c:90:24: constant 4
USIcmp.c:90:25: punctuator ]
USIcmp.c:90:26: punctuator )
USIcmp.c:90:27: punctuator )
USIcmp.c:90:29: keyword return
USIcmp.c:90:36: constant 1
USIcmp.c:90:37: punctuator ;
USIcmp.c:90:39: keyword else
USIcmp.c:90:44: keyword return
USIcmp.c:90:51: constant 0
USIcmp.c:90:52: punctuator ;
USIcmp.c:90:53: punctuator }
USIcmp.c:92:1: identifier imm0adrx1
USIcmp.c:92:11: punctuator (
USIcmp.c:92:12: identifier r0
USIcmp.c:92:14: punctuator ,
USIcmp.c:92:16: identifier r1
USIcmp.c:92:18: punctuator ,
USIcmp.c:92:20: identifier x0
USIcmp.c:92:22: punctuator ,
USIcmp.c:92:24: identifier x1
USIcmp.c:92:26: punctuator ,
USIcmp.c:92:28: identifier p0
USIcmp.c:92:30: punctuator ,
USIcmp.c:92:32: identifier p1
USIcmp.c:92:34: punctuator )
USIcmp.c:93:1: keyword unsigned
USIcmp.c:93:10: keyword int
USIcmp.c:93:14: identifier r0
USIcmp.c:93:16: punctuator ,
USIcmp.c:93:18: identifier r1
USIcmp.c:93:20: punctuator ;
USIcmp.c:93:22: keyword unsigned
USIcmp.c:93:31: keyword int
USIcmp.c:93:35: punctuator *
USIcmp.c:93:36: identifier p0
USIcmp.c:93:38: punctuator ,
USIcmp.c:93:40: punctuator *
USIcmp.c:93:41: identifier p1
USIcmp.c:93:43: punctuator ;
USIcmp.c:94:1: punctuator {
USIcmp.c:94:2: keyword if
USIcmp.c:94:5: punctuator (
USIcmp.c:94:6: constant 22
USIcmp.c:94:9: punctuator <=
USIcmp.c:94:12: punctuator (
USIcmp.c:94:13: punctuator (
USIcmp.c:94:14: punctuator (
USIcmp.c:94:15: keyword unsigned
USIcmp.c:94:24: keyword int
USIcmp.c:94:28: punctuator *
USIcmp.c:94:29: punctuator )
USIcmp.c:94:30: punctuator (
USIcmp.c:94:31: constant 11111111
USIcmp.c:94:40: punctuator &
USIcmp.c:94:42: punctuator ~
USIcmp.c:94:43: punctuator (
USIcmp.c:94:44: identifier __alignof__
USIcmp.c:94:56: punctuator (
USIcmp.c:94:57: keyword unsigned
USIcmp.c:94:66: keyword int
USIcmp.c:94:69: punctuator )
USIcmp.c:94:71: punctuator -
USIcmp.c:94:73: constant 1
USIcmp.c:94:74: punctuator )
USIcmp.c:94:75: punctuator )
USIcmp.c:94:76: punctuator )
USIcmp.c:94:77: punctuator [
USIcmp.c:94:78: identifier x1
USIcmp.c:94:80: punctuator ]
USIcmp.c:94:81: punctuator )
USIcmp.c:94:82: punctuator )
USIcmp.c:94:84: keyword return
USIcmp.c:94:91: constant 1
USIcmp.c:94:92: punctuator ;
USIcmp.c:94:94: keyword else
USIcmp.c:94:99: keyword return
USIcmp.c:94:106: constant 0
USIcmp.c:94:107: punctuator ;
USIcmp.c:94:108: punctuator }
USIcmp.c:96:1: identifier imm0regx1
USIcmp.c:96:11: punctuator (
USIcmp.c:96:12: identifier r0
USIcmp.c:96:14: punctuator ,
USIcmp.c:96:16: identifier r1
USIcmp.c:96:18: punctuator ,
USIcmp.c:96:20: identifier x0
USIcmp.c:96:22: punctuator ,
USIcmp.c:96:24: identifier x1
USIcmp.c:96:26: punctuator ,
USIcmp.c:96:28: identifier p0
USIcmp.c:96:30: punctuator ,
USIcmp.c:96:32: identifier p1
USIcmp.c:96:34: punctuator )
USIcmp.c:97:1: keyword unsigned
USIcmp.c:97:10: keyword int
USIcmp.c:97:14: identifier r0
USIcmp.c:97:16: punctuator ,
USIcmp.c:97:18: identifier r1
USIcmp.c:97:20: punctuator ;
USIcmp.c:97:22: keyword unsigned
USIcmp.c:97:31: keyword int
USIcmp.c:97:35: punctuator *
USIcmp.c:97:36: identifier p0
USIcmp.c:97:38: punctuator ,
USIcmp.c:97:40: punctuator *
USIcmp.c:97:41: identifier p1
USIcmp.c:97:43: punctuator ;
USIcmp.c:98:1: punctuator {
USIcmp.c:98:2: keyword if
USIcmp.c:98:5: punctuator (
USIcmp.c:98:6: constant 22
USIcmp.c:98:9: punctuator <=
USIcmp.c:98:12: punctuator (
USIcmp.c:98:13: identifier p1
USIcmp.c:98:15: punctuator [
USIcmp.c:98:16: identifier x1
USIcmp.c:98:18: punctuator ]
USIcmp.c:98:19: punctuator )
USIcmp.c:98:20: punctuator )
USIcmp.c:98:22: keyword return
USIcmp.c:98:29: constant 1
USIcmp.c:98:30: punctuator ;
USIcmp.c:98:32: keyword else
USIcmp.c:98:37: keyword return
USIcmp.c:98:44: constant 0
USIcmp.c:98:45: punctuator ;
USIcmp.c:98:46: punctuator }
USIcmp.c:100:1: identifier limm0reg1
USIcmp.c:100:11: punctuator (
USIcmp.c:100:12: identifier r0
USIcmp.c:100:14: punctuator ,
USIcmp.c:100:16: identifier r1
USIcmp.c:100:18: punctuator ,
USIcmp.c:100:20: identifier x0
USIcmp.c:100:22: punctuator ,
USIcmp.c:100:24: identifier x1
USIcmp.c:100:26: punctuator ,
USIcmp.c:100:28: identifier p0
USIcmp.c:100:30: punctuator ,
USIcmp.c:100:32: identifier p1
USIcmp.c:100:34: punctuator )
USIcmp.c:101:1: keyword unsigned
USIcmp.c:101:10: keyword int
USIcmp.c:101:14: identifier r0
USIcmp.c:101:16: punctuator ,
USIcmp.c:101:18: identifier r1
USIcmp.c:101:20: punctuator ;
USIcmp.c:101:22: keyword unsigned
USIcmp.c:101:31: keyword int
USIcmp.c:101:35: punctuator *
USIcmp.c:101:36: identifier p0
USIcmp.c:101:38: punctuator ,
USIcmp.c:101:40: punctuator *
USIcmp.c:101:41: identifier p1
USIcmp.c:101:43: punctuator ;
USIcmp.c:102:1: punctuator {
USIcmp.c:102:2: keyword if
USIcmp.c:102:5: punctuator (
USIcmp.c:102:6: punctuator (
USIcmp.c:102:7: punctuator (
USIcmp.c:102:8: keyword unsigned
USIcmp.c:102:17: keyword int
USIcmp.c:102:20: punctuator )
USIcmp.c:102:21: punctuator &
USIcmp.c:102:22: identifier glob0
USIcmp.c:102:27: punctuator )
USIcmp.c:102:29: punctuator <=
USIcmp.c:102:32: identifier r1
USIcmp.c:102:34: punctuator )
USIcmp.c:102:36: keyword return
USIcmp.c:102:43: constant 1
USIcmp.c:102:44: punctuator ;
USIcmp.c:102:46: keyword else
USIcmp.c:102:51: keyword return
USIcmp.c:102:58: constant 0
USIcmp.c:102:59: punctuator ;
USIcmp.c:102:60: punctuator }
USIcmp.c:104:1: identifier limm0indreg1
USIcmp.c:104:14: punctuator (
USIcmp.c:104:15: identifier r0
USIcmp.c:104:17: punctuator ,
USIcmp.c:104:19: identifier r1
USIcmp.c:104:21: punctuator ,
USIcmp.c:104:23: identifier x0
USIcmp.c:104:25: punctuator ,
USIcmp.c:104:27: identifier x1
USIcmp.c:104:29: punctuator ,
USIcmp.c:104:31: identifier p0
USIcmp.c:104:33: punctuator ,
USIcmp.c:104:35: identifier p1
USIcmp.c:104:37: punctuator )
USIcmp.c:105:1: keyword unsigned
USIcmp.c:105:10: keyword int
USIcmp.c:105:14: identifier r0
USIcmp.c:105:16: punctuator ,
USIcmp.c:105:18: identifier r1
USIcmp.c:105:20: punctuator ;
USIcmp.c:105:22: keyword unsigned
USIcmp.c:105:31: keyword int
USIcmp.c:105:35: punctuator *
USIcmp.c:105:36: identifier p0
USIcmp.c:105:38: punctuator ,
USIcmp.c:105:40: punctuator *
USIcmp.c:105:41: identifier p1
USIcmp.c:105:43: punctuator ;
USIcmp.c:106:1: punctuator {
USIcmp.c:106:2: keyword if
USIcmp.c:106:5: punctuator (
USIcmp.c:106:6: punctuator (
USIcmp.c:106:7: punctuator (
USIcmp.c:106:8: keyword unsigned
USIcmp.c:106:17: keyword int
USIcmp.c:106:20: punctuator )
USIcmp.c:106:21: punctuator &
USIcmp.c:106:22: identifier glob0
USIcmp.c:106:27: punctuator )
USIcmp.c:106:29: punctuator <=
USIcmp.c:106:32: punctuator (
USIcmp.c:106:33: punctuator *
USIcmp.c:106:34: identifier p1
USIcmp.c:106:36: punctuator )
USIcmp.c:106:37: punctuator )
USIcmp.c:106:39: keyword return
USIcmp.c:106:46: constant 1
USIcmp.c:106:47: punctuator ;
USIcmp.c:106:49: keyword else
USIcmp.c:106:54: keyword return
USIcmp.c:106:61: constant 0
USIcmp.c:106:62: punctuator ;
USIcmp.c:106:63: punctuator }
USIcmp.c:108:1: identifier limm0imm1
USIcmp.c:108:11: punctuator (
USIcmp.c:108:12: identifier r0
USIcmp.c:108:14: punctuator ,
USIcmp.c:108:16: identifier r1
USIcmp.c:108:18: punctuator ,
USIcmp.c:108:20: identifier x0
USIcmp.c:108:22: punctuator ,
USIcmp.c:108:24: identifier x1
USIcmp.c:108:26: punctuator ,
USIcmp.c:108:28: identifier p0
USIcmp.c:108:30: punctuator ,
USIcmp.c:108:32: identifier p1
USIcmp.c:108:34: punctuator )
USIcmp.c:109:1: keyword unsigned
USIcmp.c:109:10: keyword int
USIcmp.c:109:14: identifier r0
USIcmp.c:109:16: punctuator ,
USIcmp.c:109:18: identifier r1
USIcmp.c:109:20: punctuator ;
USIcmp.c:109:22: keyword unsigned
USIcmp.c:109:31: keyword int
USIcmp.c:109:35: punctuator *
USIcmp.c:109:36: identifier p0
USIcmp.c:109:38: punctuator ,
USIcmp.c:109:40: punctuator *
USIcmp.c:109:41: identifier p1
USIcmp.c:109:43: punctuator ;
USIcmp.c:110:1: punctuator {
USIcmp.c:110:2: keyword if
USIcmp.c:110:5: punctuator (
USIcmp.c:110:6: punctuator (
USIcmp.c:110:7: punctuator (
USIcmp.c:110:8: keyword unsigned
USIcmp.c:110:17: keyword int
USIcmp.c:110:20: punctuator )
USIcmp.c:110:21: punctuator &
USIcmp.c:110:22: identifier glob0
USIcmp.c:110:27: punctuator )
USIcmp.c:110:29: punctuator <=
USIcmp.c:110:32: constant 33
USIcmp.c:110:34: punctuator )
USIcmp.c:110:36: keyword return
USIcmp.c:110:43: constant 1
USIcmp.c:110:44: punctuator ;
USIcmp.c:110:46: keyword else
USIcmp.c:110:51: keyword return
USIcmp.c:110:58: constant 0
USIcmp.c:110:59: punctuator ;
USIcmp.c:110:60: punctuator }
USIcmp.c:112:1: identifier limm0limm1
USIcmp.c:112:12: punctuator (
USIcmp.c:112:13: identifier r0
USIcmp.c:112:15: punctuator ,
USIcmp.c:112:17: identifier r1
USIcmp.c:112:19: punctuator ,
USIcmp.c:112:21: identifier x0
USIcmp.c:112:23: punctuator ,
USIcmp.c:112:25: identifier x1
USIcmp.c:112:27: punctuator ,
USIcmp.c:112:29: identifier p0
USIcmp.c:112:31: punctuator ,
USIcmp.c:112:33: identifier p1
USIcmp.c:112:35: punctuator )
USIcmp.c:113:1: keyword unsigned
USIcmp.c:113:10: keyword int
USIcmp.c:113:14: identifier r0
USIcmp.c:113:16: punctuator ,
USIcmp.c:113:18: identifier r1
USIcmp.c:113:20: punctuator ;
USIcmp.c:113:22: keyword unsigned
USIcmp.c:113:31: keyword int
USIcmp.c:113:35: punctuator *
USIcmp.c:113:36: identifier p0
USIcmp.c:113:38: punctuator ,
USIcmp.c:113:40: punctuator *
USIcmp.c:113:41: identifier p1
USIcmp.c:113:43: punctuator ;
USIcmp.c:114:1: punctuator {
USIcmp.c:114:2: keyword if
USIcmp.c:114:5: punctuator (
USIcmp.c:114:6: punctuator (
USIcmp.c:114:7: punctuator (
USIcmp.c:114:8: keyword unsigned
USIcmp.c:114:17: keyword int
USIcmp.c:114:20: punctuator )
USIcmp.c:114:21: punctuator &
USIcmp.c:114:22: identifier glob0
USIcmp.c:114:27: punctuator )
USIcmp.c:114:29: punctuator <=
USIcmp.c:114:32: punctuator (
USIcmp.c:114:33: punctuator (
USIcmp.c:114:34: keyword unsigned
USIcmp.c:114:43: keyword int
USIcmp.c:114:46: punctuator )
USIcmp.c:114:47: punctuator &
USIcmp.c:114:48: identifier glob1
USIcmp.c:114:53: punctuator )
USIcmp.c:114:54: punctuator )
USIcmp.c:114:56: keyword return
USIcmp.c:114:63: constant 1
USIcmp.c:114:64: punctuator ;
USIcmp.c:114:66: keyword else
USIcmp.c:114:71: keyword return
USIcmp.c:114:78: constant 0
USIcmp.c:114:79: punctuator ;
USIcmp.c:114:80: punctuator }
USIcmp.c:116:1: identifier limm0adr1
USIcmp.c:116:11: punctuator (
USIcmp.c:116:12: identifier r0
USIcmp.c:116:14: punctuator ,
USIcmp.c:116:16: identifier r1
USIcmp.c:116:18: punctuator ,
USIcmp.c:116:20: identifier x0
USIcmp.c:116:22: punctuator ,
USIcmp.c:116:24: identifier x1
USIcmp.c:116:26: punctuator ,
USIcmp.c:116:28: identifier p0
USIcmp.c:116:30: punctuator ,
USIcmp.c:116:32: identifier p1
USIcmp.c:116:34: punctuator )
USIcmp.c:117:1: keyword unsigned
USIcmp.c:117:10: keyword int
USIcmp.c:117:14: identifier r0
USIcmp.c:117:16: punctuator ,
USIcmp.c:117:18: identifier r1
USIcmp.c:117:20: punctuator ;
USIcmp.c:117:22: keyword unsigned
USIcmp.c:117:31: keyword int
USIcmp.c:117:35: punctuator *
USIcmp.c:117:36: identifier p0
USIcmp.c:117:38: punctuator ,
USIcmp.c:117:40: punctuator *
USIcmp.c:117:41: identifier p1
USIcmp.c:117:43: punctuator ;
USIcmp.c:118:1: punctuator {
USIcmp.c:118:2: keyword if
USIcmp.c:118:5: punctuator (
USIcmp.c:118:6: punctuator (
USIcmp.c:118:7: punctuator (
USIcmp.c:118:8: keyword unsigned
USIcmp.c:118:17: keyword int
USIcmp.c:118:20: punctuator )
USIcmp.c:118:21: punctuator &
USIcmp.c:118:22: identifier glob0
USIcmp.c:118:27: punctuator )
USIcmp.c:118:29: punctuator <=
USIcmp.c:118:32: punctuator (
USIcmp.c:118:33: punctuator *
USIcmp.c:118:34: punctuator (
USIcmp.c:118:35: punctuator (
USIcmp.c:118:36: keyword unsigned
USIcmp.c:118:45: keyword int
USIcmp.c:118:49: punctuator *
USIcmp.c:118:50: punctuator )
USIcmp.c:118:51: punctuator (
USIcmp.c:118:52: constant 11111111
USIcmp.c:118:61: punctuator &
USIcmp.c:118:63: punctuator ~
USIcmp.c:118:64: punctuator (
USIcmp.c:118:65: identifier __alignof__
USIcmp.c:118:77: punctuator (
USIcmp.c:118:78: keyword unsigned
USIcmp.c:118:87: keyword int
USIcmp.c:118:90: punctuator )
USIcmp.c:118:92: punctuator -
USIcmp.c:118:94: constant 1
USIcmp.c:118:95: punctuator )
USIcmp.c:118:96: punctuator )
USIcmp.c:118:97: punctuator )
USIcmp.c:118:98: punctuator )
USIcmp.c:118:99: punctuator )
USIcmp.c:118:101: keyword return
USIcmp.c:118:108: constant 1
USIcmp.c:118:109: punctuator ;
USIcmp.c:118:111: keyword else
USIcmp.c:118:116: keyword return
USIcmp.c:118:123: constant 0
USIcmp.c:118:124: punctuator ;
USIcmp.c:118:125: punctuator }
USIcmp.c:120:1: identifier limm0adrreg1
USIcmp.c:120:14: punctuator (
USIcmp.c:120:15: identifier r0
USIcmp.c:120:17: punctuator ,
USIcmp.c:120:19: identifier r1
USIcmp.c:120:21: punctuator ,
USIcmp.c:120:23: identifier x0
USIcmp.c:120:25: punctuator ,
USIcmp.c:120:27: identifier x1
USIcmp.c:120:29: punctuator ,
USIcmp.c:120:31: identifier p0
USIcmp.c:120:33: punctuator ,
USIcmp.c:120:35: identifier p1
USIcmp.c:120:37: punctuator )
USIcmp.c:121:1: keyword unsigned
USIcmp.c:121:10: keyword int
USIcmp.c:121:14: identifier r0
USIcmp.c:121:16: punctuator ,
USIcmp.c:121:18: identifier r1
USIcmp.c:121:20: punctuator ;
USIcmp.c:121:22: keyword unsigned
USIcmp.c:121:31: keyword int
USIcmp.c:121:35: punctuator *
USIcmp.c:121:36: identifier p0
USIcmp.c:121:38: punctuator ,
USIcmp.c:121:40: punctuator *
USIcmp.c:121:41: identifier p1
USIcmp.c:121:43: punctuator ;
USIcmp.c:122:1: punctuator {
USIcmp.c:122:2: keyword if
USIcmp.c:122:5: punctuator (
USIcmp.c:122:6: punctuator (
USIcmp.c:122:7: punctuator (
USIcmp.c:122:8: keyword unsigned
USIcmp.c:122:17: keyword int
USIcmp.c:122:20: punctuator )
USIcmp.c:122:21: punctuator &
USIcmp.c:122:22: identifier glob0
USIcmp.c:122:27: punctuator )
USIcmp.c:122:29: punctuator <=
USIcmp.c:122:32: punctuator (
USIcmp.c:122:33: identifier p1
USIcmp.c:122:35: punctuator [
USIcmp.c:122:36: constant 1111111
USIcmp.c:122:43: punctuator /
USIcmp.c:122:44: constant 4
USIcmp.c:122:45: punctuator ]
USIcmp.c:122:46: punctuator )
USIcmp.c:122:47: punctuator )
USIcmp.c:122:49: keyword return
USIcmp.c:122:56: constant 1
USIcmp.c:122:57: punctuator ;
USIcmp.c:122:59: keyword else
USIcmp.c:122:64: keyword return
USIcmp.c:122:71: constant 0
USIcmp.c:122:72: punctuator ;
USIcmp.c:122:73: punctuator }
USIcmp.c:124:1: identifier limm0adrx1
USIcmp.c:124:12: punctuator (
USIcmp.c:124:13: identifier r0
USIcmp.c:124:15: punctuator ,
USIcmp.c:124:17: identifier r1
USIcmp.c:124:19: punctuator ,
USIcmp.c:124:21: identifier x0
USIcmp.c:124:23: punctuator ,
USIcmp.c:124:25: identifier x1
USIcmp.c:124:27: punctuator ,
USIcmp.c:124:29: identifier p0
USIcmp.c:124:31: punctuator ,
USIcmp.c:124:33: identifier p1
USIcmp.c:124:35: punctuator )
USIcmp.c:125:1: keyword unsigned
USIcmp.c:125:10: keyword int
USIcmp.c:125:14: identifier r0
USIcmp.c:125:16: punctuator ,
USIcmp.c:125:18: identifier r1
USIcmp.c:125:20: punctuator ;
USIcmp.c:125:22: keyword unsigned
USIcmp.c:125:31: keyword int
USIcmp.c:125:35: punctuator *
USIcmp.c:125:36: identifier p0
USIcmp.c:125:38: punctuator ,
USIcmp.c:125:40: punctuator *
USIcmp.c:125:41: identifier p1
USIcmp.c:125:43: punctuator ;
USIcmp.c:126:1: punctuator {
USIcmp.c:126:2: keyword if
USIcmp.c:126:5: punctuator (
USIcmp.c:126:6: punctuator (
USIcmp.c:126:7: punctuator (
USIcmp.c:126:8: keyword unsigned
USIcmp.c:126:17: keyword int
USIcmp.c:126:20: punctuator )
USIcmp.c:126:21: punctuator &
USIcmp.c:126:22: identifier glob0
USIcmp.c:126:27: punctuator )
USIcmp.c:126:29: punctuator <=
USIcmp.c:126:32: punctuator (
USIcmp.c:126:33: punctuator (
USIcmp.c:126:34: punctuator (
USIcmp.c:126:35: keyword unsigned
USIcmp.c:126:44: keyword int
USIcmp.c:126:48: punctuator *
USIcmp.c:126:49: punctuator )
USIcmp.c:126:50: punctuator (
USIcmp.c:126:51: constant 11111111
USIcmp.c:126:60: punctuator &
USIcmp.c:126:62: punctuator ~
USIcmp.c:126:63: punctuator (
USIcmp.c:126:64: identifier __alignof__
USIcmp.c:126:76: punctuator (
USIcmp.c:126:77: keyword unsigned
USIcmp.c:126:86: keyword int
USIcmp.c:126:89: punctuator )
USIcmp.c:126:91: punctuator -
USIcmp.c:126:93: constant 1
USIcmp.c:126:94: punctuator )
USIcmp.c:126:95: punctuator )
USIcmp.c:126:96: punctuator )
USIcmp.c:126:97: punctuator [
USIcmp.c:126:98: identifier x1
USIcmp.c:126:100: punctuator ]
USIcmp.c:126:101: punctuator )
USIcmp.c:126:102: punctuator )
USIcmp.c:126:104: keyword return
USIcmp.c:126:111: constant 1
USIcmp.c:126:112: punctuator ;
USIcmp.c:126:114: keyword else
USIcmp.c:126:119: keyword return
USIcmp.c:126:126: constant 0
USIcmp.c:126:127: punctuator ;
USIcmp.c:126:128: punctuator }
USIcmp.c:128:1: identifier limm0regx1
USIcmp.c:128:12: punctuator (
USIcmp.c:128:13: identifier r0
USIcmp.c:128:15: punctuator ,
USIcmp.c:128:17: identifier r1
USIcmp.c:128:19: punctuator ,
USIcmp.c:128:21: identifier x0
USIcmp.c:128:23: punctuator ,
USIcmp.c:128:25: identifier x1
USIcmp.c:128:27: punctuator ,
USIcmp.c:128:29: identifier p0
USIcmp.c:128:31: punctuator ,
USIcmp.c:128:33: identifier p1
USIcmp.c:128:35: punctuator )
USIcmp.c:129:1: keyword unsigned
USIcmp.c:129:10: keyword int
USIcmp.c:129:14: identifier r0
USIcmp.c:129:16: punctuator ,
USIcmp.c:129:18: identifier r1
USIcmp.c:129:20: punctuator ;
USIcmp.c:129:22: keyword unsigned
USIcmp.c:129:31: keyword int
USIcmp.c:129:35: punctuator *
USIcmp.c:129:36: identifier p0
USIcmp.c:129:38: punctuator ,
USIcmp.c:129:40: punctuator *
USIcmp.c:129:41: identifier p1
USIcmp.c:129:43: punctuator ;
USIcmp.c:130:1: punctuator {
USIcmp.c:130:2: keyword if
USIcmp.c:130:5: punctuator (
USIcmp.c:130:6: punctuator (
USIcmp.c:130:7: punctuator (
USIcmp.c:130:8: keyword unsigned
USIcmp.c:130:17: keyword int
USIcmp.c:130:20: punctuator )
USIcmp.c:130:21: punctuator &
USIcmp.c:130:22: identifier glob0
USIcmp.c:130:27: punctuator )
USIcmp.c:130:29: punctuator <=
USIcmp.c:130:32: punctuator (
USIcmp.c:130:33: identifier p1
USIcmp.c:130:35: punctuator [
USIcmp.c:130:36: identifier x1
USIcmp.c:130:38: punctuator ]
USIcmp.c:130:39: punctuator )
USIcmp.c:130:40: punctuator )
USIcmp.c:130:42: keyword return
USIcmp.c:130:49: constant 1
USIcmp.c:130:50: punctuator ;
USIcmp.c:130:52: keyword else
USIcmp.c:130:57: keyword return
USIcmp.c:130:64: constant 0
USIcmp.c:130:65: punctuator ;
USIcmp.c:130:66: punctuator }
USIcmp.c:132:1: identifier adr0reg1
USIcmp.c:132:10: punctuator (
USIcmp.c:132:11: identifier r0
USIcmp.c:132:13: punctuator ,
USIcmp.c:132:15: identifier r1
USIcmp.c:132:17: punctuator ,
USIcmp.c:132:19: identifier x0
USIcmp.c:132:21: punctuator ,
USIcmp.c:132:23: identifier x1
USIcmp.c:132:25: punctuator ,
USIcmp.c:132:27: identifier p0
USIcmp.c:132:29: punctuator ,
USIcmp.c:132:31: identifier p1
USIcmp.c:132:33: punctuator )
USIcmp.c:133:1: keyword unsigned
USIcmp.c:133:10: keyword int
USIcmp.c:133:14: identifier r0
USIcmp.c:133:16: punctuator ,
USIcmp.c:133:18: identifier r1
USIcmp.c:133:20: punctuator ;
USIcmp.c:133:22: keyword unsigned
USIcmp.c:133:31: keyword int
USIcmp.c:133:35: punctuator *
USIcmp.c:133:36: identifier p0
USIcmp.c:133:38: punctuator ,
USIcmp.c:133:40: punctuator *
USIcmp.c:133:41: identifier p1
USIcmp.c:133:43: punctuator ;
USIcmp.c:134:1: punctuator {
USIcmp.c:134:2: keyword if
USIcmp.c:134:5: punctuator (
USIcmp.c:134:6: punctuator (
USIcmp.c:134:7: punctuator *
USIcmp.c:134:8: punctuator (
USIcmp.c:134:9: punctuator (
USIcmp.c:134:10: keyword unsigned
USIcmp.c:134:19: keyword int
USIcmp.c:134:23: punctuator *
USIcmp.c:134:24: punctuator )
USIcmp.c:134:25: constant 10000000
USIcmp.c:134:33: punctuator )
USIcmp.c:134:34: punctuator )
USIcmp.c:134:36: punctuator <=
USIcmp.c:134:39: identifier r1
USIcmp.c:134:41: punctuator )
USIcmp.c:134:43: keyword return
USIcmp.c:134:50: constant 1
USIcmp.c:134:51: punctuator ;
USIcmp.c:134:53: keyword else
USIcmp.c:134:58: keyword return
USIcmp.c:134:65: constant 0
USIcmp.c:134:66: punctuator ;
USIcmp.c:134:67: punctuator }
USIcmp.c:136:1: identifier adr0indreg1
USIcmp.c:136:13: punctuator (
USIcmp.c:136:14: identifier r0
USIcmp.c:136:16: punctuator ,
USIcmp.c:136:18: identifier r1
USIcmp.c:136:20: punctuator ,
USIcmp.c:136:22: identifier x0
USIcmp.c:136:24: punctuator ,
USIcmp.c:136:26: identifier x1
USIcmp.c:136:28: punctuator ,
USIcmp.c:136:30: identifier p0
USIcmp.c:136:32: punctuator ,
USIcmp.c:136:34: identifier p1
USIcmp.c:136:36: punctuator )
USIcmp.c:137:1: keyword unsigned
USIcmp.c:137:10: keyword int
USIcmp.c:137:14: identifier r0
USIcmp.c:137:16: punctuator ,
USIcmp.c:137:18: identifier r1
USIcmp.c:137:20: punctuator ;
USIcmp.c:137:22: keyword unsigned
USIcmp.c:137:31: keyword int
USIcmp.c:137:35: punctuator *
USIcmp.c:137:36: identifier p0
USIcmp.c:137:38: punctuator ,
USIcmp.c:137:40: punctuator *
USIcmp.c:137:41: identifier p1
USIcmp.c:137:43: punctuator ;
USIcmp.c:138:1: punctuator {
USIcmp.c:138:2: keyword if
USIcmp.c:138:5: punctuator (
USIcmp.c:138:6: punctuator (
USIcmp.c:138:7: punctuator *
USIcmp.c:138:8: punctuator (
USIcmp.c:138:9: punctuator (
USIcmp.c:138:10: keyword unsigned
USIcmp.c:138:19: keyword int
USIcmp.c:138:23: punctuator *
USIcmp.c:138:24: punctuator )
USIcmp.c:138:25: constant 10000000
USIcmp.c:138:33: punctuator )
USIcmp.c:138:34: punctuator )
USIcmp.c:138:36: punctuator <=
USIcmp.c:138:39: punctuator (
USIcmp.c:138:40: punctuator *
USIcmp.c:138:41: identifier p1
USIcmp.c:138:43: punctuator )
USIcmp.c:138:44: punctuator )
USIcmp.c:138:46: keyword return
USIcmp.c:138:53: constant 1
USIcmp.c:138:54: punctuator ;
USIcmp.c:138:56: keyword else
USIcmp.c:138:61: keyword return
USIcmp.c:138:68: constant 0
USIcmp.c:138:69: punctuator ;
USIcmp.c:138:70: punctuator }
USIcmp.c:140:1: identifier adr0imm1
USIcmp.c:140:10: punctuator (
USIcmp.c:140:11: identifier r0
USIcmp.c:140:13: punctuator ,
USIcmp.c:140:15: identifier r1
USIcmp.c:140:17: punctuator ,
USIcmp.c:140:19: identifier x0
USIcmp.c:140:21: punctuator ,
USIcmp.c:140:23: identifier x1
USIcmp.c:140:25: punctuator ,
USIcmp.c:140:27: identifier p0
USIcmp.c:140:29: punctuator ,
USIcmp.c:140:31: identifier p1
USIcmp.c:140:33: punctuator )
USIcmp.c:141:1: keyword unsigned
USIcmp.c:141:10: keyword int
USIcmp.c:141:14: identifier r0
USIcmp.c:141:16: punctuator ,
USIcmp.c:141:18: identifier r1
USIcmp.c:141:20: punctuator ;
USIcmp.c:141:22: keyword unsigned
USIcmp.c:141:31: keyword int
USIcmp.c:141:35: punctuator *
USIcmp.c:141:36: identifier p0
USIcmp.c:141:38: punctuator ,
USIcmp.c:141:40: punctuator *
USIcmp.c:141:41: identifier p1
USIcmp.c:141:43: punctuator ;
USIcmp.c:142:1: punctuator {
USIcmp.c:142:2: keyword if
USIcmp.c:142:5: punctuator (
USIcmp.c:142:6: punctuator (
USIcmp.c:142:7: punctuator *
USIcmp.c:142:8: punctuator (
USIcmp.c:142:9: punctuator (
USIcmp.c:142:10: keyword unsigned
USIcmp.c:142:19: keyword int
USIcmp.c:142:23: punctuator *
USIcmp.c:142:24: punctuator )
USIcmp.c:142:25: constant 10000000
USIcmp.c:142:33: punctuator )
USIcmp.c:142:34: punctuator )
USIcmp.c:142:36: punctuator <=
USIcmp.c:142:39: constant 33
USIcmp.c:142:41: punctuator )
USIcmp.c:142:43: keyword return
USIcmp.c:142:50: constant 1
USIcmp.c:142:51: punctuator ;
USIcmp.c:142:53: keyword else
USIcmp.c:142:58: keyword return
USIcmp.c:142:65: constant 0
USIcmp.c:142:66: punctuator ;
USIcmp.c:142:67: punctuator }
USIcmp.c:144:1: identifier adr0limm1
USIcmp.c:144:11: punctuator (
USIcmp.c:144:12: identifier r0
USIcmp.c:144:14: punctuator ,
USIcmp.c:144:16: identifier r1
USIcmp.c:144:18: punctuator ,
USIcmp.c:144:20: identifier x0
USIcmp.c:144:22: punctuator ,
USIcmp.c:144:24: identifier x1
USIcmp.c:144:26: punctuator ,
USIcmp.c:144:28: identifier p0
USIcmp.c:144:30: punctuator ,
USIcmp.c:144:32: identifier p1
USIcmp.c:144:34: punctuator )
USIcmp.c:145:1: keyword unsigned
USIcmp.c:145:10: keyword int
USIcmp.c:145:14: identifier r0
USIcmp.c:145:16: punctuator ,
USIcmp.c:145:18: identifier r1
USIcmp.c:145:20: punctuator ;
USIcmp.c:145:22: keyword unsigned
USIcmp.c:145:31: keyword int
USIcmp.c:145:35: punctuator *
USIcmp.c:145:36: identifier p0
USIcmp.c:145:38: punctuator ,
USIcmp.c:145:40: punctuator *
USIcmp.c:145:41: identifier p1
USIcmp.c:145:43: punctuator ;
USIcmp.c:146:1: punctuator {
USIcmp.c:146:2: keyword if
USIcmp.c:146:5: punctuator (
USIcmp.c:146:6: punctuator (
USIcmp.c:146:7: punctuator *
USIcmp.c:146:8: punctuator (
USIcmp.c:146:9: punctuator (
USIcmp.c:146:10: keyword unsigned
USIcmp.c:146:19: keyword int
USIcmp.c:146:23: punctuator *
USIcmp.c:146:24: punctuator )
USIcmp.c:146:25: constant 10000000
USIcmp.c:146:33: punctuator )
USIcmp.c:146:34: punctuator )
USIcmp.c:146:36: punctuator <=
USIcmp.c:146:39: punctuator (
USIcmp.c:146:40: punctuator (
USIcmp.c:146:41: keyword unsigned
USIcmp.c:146:50: keyword int
USIcmp.c:146:53: punctuator )
USIcmp.c:146:54: punctuator &
USIcmp.c:146:55: identifier glob1
USIcmp.c:146:60: punctuator )
USIcmp.c:146:61: punctuator )
USIcmp.c:146:63: keyword return
USIcmp.c:146:70: constant 1
USIcmp.c:146:71: punctuator ;
USIcmp.c:146:73: keyword else
USIcmp.c:146:78: keyword return
USIcmp.c:146:85: constant 0
USIcmp.c:146:86: punctuator ;
USIcmp.c:146:87: punctuator }
USIcmp.c:148:1: identifier adr0adr1
USIcmp.c:148:10: punctuator (
USIcmp.c:148:11: identifier r0
USIcmp.c:148:13: punctuator ,
USIcmp.c:148:15: identifier r1
USIcmp.c:148:17: punctuator ,
USIcmp.c:148:19: identifier x0
USIcmp.c:148:21: punctuator ,
USIcmp.c:148:23: identifier x1
USIcmp.c:148:25: punctuator ,
USIcmp.c:148:27: identifier p0
USIcmp.c:148:29: punctuator ,
USIcmp.c:148:31: identifier p1
USIcmp.c:148:33: punctuator )
USIcmp.c:149:1: keyword unsigned
USIcmp.c:149:10: keyword int
USIcmp.c:149:14: identifier r0
USIcmp.c:149:16: punctuator ,
USIcmp.c:149:18: identifier r1
USIcmp.c:149:20: punctuator ;
USIcmp.c:149:22: keyword unsigned
USIcmp.c:149:31: keyword int
USIcmp.c:149:35: punctuator *
USIcmp.c:149:36: identifier p0
USIcmp.c:149:38: punctuator ,
USIcmp.c:149:40: punctuator *
USIcmp.c:149:41: identifier p1
USIcmp.c:149:43: punctuator ;
USIcmp.c:150:1: punctuator {
USIcmp.c:150:2: keyword if
USIcmp.c:150:5: punctuator (
USIcmp.c:150:6: punctuator (
USIcmp.c:150:7: punctuator *
USIcmp.c:150:8: punctuator (
USIcmp.c:150:9: punctuator (
USIcmp.c:150:10: keyword unsigned
USIcmp.c:150:19: keyword int
USIcmp.c:150:23: punctuator *
USIcmp.c:150:24: punctuator )
USIcmp.c:150:25: constant 10000000
USIcmp.c:150:33: punctuator )
USIcmp.c:150:34: punctuator )
USIcmp.c:150:36: punctuator <=
USIcmp.c:150:39: punctuator (
USIcmp.c:150:40: punctuator *
USIcmp.c:150:41: punctuator (
USIcmp.c:150:42: punctuator (
USIcmp.c:150:43: keyword unsigned
USIcmp.c:150:52: keyword int
USIcmp.c:150:56: punctuator *
USIcmp.c:150:57: punctuator )
USIcmp.c:150:58: punctuator (
USIcmp.c:150:59: constant 11111111
USIcmp.c:150:68: punctuator &
USIcmp.c:150:70: punctuator ~
USIcmp.c:150:71: punctuator (
USIcmp.c:150:72: identifier __alignof__
USIcmp.c:150:84: punctuator (
USIcmp.c:150:85: keyword unsigned
USIcmp.c:150:94: keyword int
USIcmp.c:150:97: punctuator )
USIcmp.c:150:99: punctuator -
USIcmp.c:150:101: constant 1
USIcmp.c:150:102: punctuator )
USIcmp.c:150:103: punctuator )
USIcmp.c:150:104: punctuator )
USIcmp.c:150:105: punctuator )
USIcmp.c:150:106: punctuator )
USIcmp.c:150:108: keyword return
USIcmp.c:150:115: constant 1
USIcmp.c:150:116: punctuator ;
USIcmp.c:150:118: keyword else
USIcmp.c:150:123: keyword return
USIcmp.c:150:130: constant 0
USIcmp.c:150:131: punctuator ;
USIcmp.c:150:132: punctuator }
USIcmp.c:152:1: identifier adr0adrreg1
USIcmp.c:152:13: punctuator (
USIcmp.c:152:14: identifier r0
USIcmp.c:152:16: punctuator ,
USIcmp.c:152:18: identifier r1
USIcmp.c:152:20: punctuator ,
USIcmp.c:152:22: identifier x0
USIcmp.c:152:24: punctuator ,
USIcmp.c:152:26: identifier x1
USIcmp.c:152:28: punctuator ,
USIcmp.c:152:30: identifier p0
USIcmp.c:152:32: punctuator ,
USIcmp.c:152:34: identifier p1
USIcmp.c:152:36: punctuator )
USIcmp.c:153:1: keyword unsigned
USIcmp.c:153:10: keyword int
USIcmp.c:153:14: identifier r0
USIcmp.c:153:16: punctuator ,
USIcmp.c:153:18: identifier r1
USIcmp.c:153:20: punctuator ;
USIcmp.c:153:22: keyword unsigned
USIcmp.c:153:31: keyword int
USIcmp.c:153:35: punctuator *
USIcmp.c:153:36: identifier p0
USIcmp.c:153:38: punctuator ,
USIcmp.c:153:40: punctuator *
USIcmp.c:153:41: identifier p1
USIcmp.c:153:43: punctuator ;
USIcmp.c:154:1: punctuator {
USIcmp.c:154:2: keyword if
USIcmp.c:154:5: punctuator (
USIcmp.c:154:6: punctuator (
USIcmp.c:154:7: punctuator *
USIcmp.c:154:8: punctuator (
USIcmp.c:154:9: punctuator (
USIcmp.c:154:10: keyword unsigned
USIcmp.c:154:19: keyword int
USIcmp.c:154:23: punctuator *
USIcmp.c:154:24: punctuator )
USIcmp.c:154:25: constant 10000000
USIcmp.c:154:33: punctuator )
USIcmp.c:154:34: punctuator )
USIcmp.c:154:36: punctuator <=
USIcmp.c:154:39: punctuator (
USIcmp.c:154:40: identifier p1
USIcmp.c:154:42: punctuator [
USIcmp.c:154:43: constant 1111111
USIcmp.c:154:50: punctuator /
USIcmp.c:154:51: constant 4
USIcmp.c:154:52: punctuator ]
USIcmp.c:154:53: punctuator )
USIcmp.c:154:54: punctuator )
USIcmp.c:154:56: keyword return
USIcmp.c:154:63: constant 1
USIcmp.c:154:64: punctuator ;
USIcmp.c:154:66: keyword else
USIcmp.c:154:71: keyword return
USIcmp.c:154:78: constant 0
USIcmp.c:154:79: punctuator ;
USIcmp.c:154:80: punctuator }
USIcmp.c:156:1: identifier adr0adrx1
USIcmp.c:156:11: punctuator (
USIcmp.c:156:12: identifier r0
USIcmp.c:156:14: punctuator ,
USIcmp.c:156:16: identifier r1
USIcmp.c:156:18: punctuator ,
USIcmp.c:156:20: identifier x0
USIcmp.c:156:22: punctuator ,
USIcmp.c:156:24: identifier x1
USIcmp.c:156:26: punctuator ,
USIcmp.c:156:28: identifier p0
USIcmp.c:156:30: punctuator ,
USIcmp.c:156:32: identifier p1
USIcmp.c:156:34: punctuator )
USIcmp.c:157:1: keyword unsigned
USIcmp.c:157:10: keyword int
USIcmp.c:157:14: identifier r0
USIcmp.c:157:16: punctuator ,
USIcmp.c:157:18: identifier r1
USIcmp.c:157:20: punctuator ;
USIcmp.c:157:22: keyword unsigned
USIcmp.c:157:31: keyword int
USIcmp.c:157:35: punctuator *
USIcmp.c:157:36: identifier p0
USIcmp.c:157:38: punctuator ,
USIcmp.c:157:40: punctuator *
USIcmp.c:157:41: identifier p1
USIcmp.c:157:43: punctuator ;
USIcmp.c:158:1: punctuator {
USIcmp.c:158:2: keyword if
USIcmp.c:158:5: punctuator (
USIcmp.c:158:6: punctuator (
USIcmp.c:158:7: punctuator *
USIcmp.c:158:8: punctuator (
USIcmp.c:158:9: punctuator (
USIcmp.c:158:10: keyword unsigned
USIcmp.c:158:19: keyword int
USIcmp.c:158:23: punctuator *
USIcmp.c:158:24: punctuator )
USIcmp.c:158:25: constant 10000000
USIcmp.c:158:33: punctuator )
USIcmp.c:158:34: punctuator )
USIcmp.c:158:36: punctuator <=
USIcmp.c:158:39: punctuator (
USIcmp.c:158:40: punctuator (
USIcmp.c:158:41: punctuator (
USIcmp.c:158:42: keyword unsigned
USIcmp.c:158:51: keyword int
USIcmp.c:158:55: punctuator *
USIcmp.c:158:56: punctuator )
USIcmp.c:158:57: punctuator (
USIcmp.c:158:58: constant 11111111
USIcmp.c:158:67: punctuator &
USIcmp.c:158:69: punctuator ~
USIcmp.c:158:70: punctuator (
USIcmp.c:158:71: identifier __alignof__
USIcmp.c:158:83: punctuator (
USIcmp.c:158:84: keyword unsigned
USIcmp.c:158:93: keyword int
USIcmp.c:158:96: punctuator )
USIcmp.c:158:98: punctuator -
USIcmp.c:158:100: constant 1
USIcmp.c:158:101: punctuator )
USIcmp.c:158:102: punctuator )
USIcmp.c:158:103: punctuator )
USIcmp.c:158:104: punctuator [
USIcmp.c:158:105: identifier x1
USIcmp.c:158:107: punctuator ]
USIcmp.c:158:108: punctuator )
USIcmp.c:158:109: punctuator )
USIcmp.c:158:111: keyword return
USIcmp.c:158:118: constant 1
USIcmp.c:158:119: punctuator ;
USIcmp.c:158:121: keyword else
USIcmp.c:158:126: keyword return
USIcmp.c:158:133: constant 0
USIcmp.c:158:134: punctuator ;
USIcmp.c:158:135: punctuator }
USIcmp.c:160:1: identifier adr0regx1
USIcmp.c:160:11: punctuator (
USIcmp.c:160:12: identifier r0
USIcmp.c:160:14: punctuator ,
USIcmp.c:160:16: identifier r1
USIcmp.c:160:18: punctuator ,
USIcmp.c:160:20: identifier x0
USIcmp.c:160:22: punctuator ,
USIcmp.c:160:24: identifier x1
USIcmp.c:160:26: punctuator ,
USIcmp.c:160:28: identifier p0
USIcmp.c:160:30: punctuator ,
USIcmp.c:160:32: identifier p1
USIcmp.c:160:34: punctuator )
USIcmp.c:161:1: keyword unsigned
USIcmp.c:161:10: keyword int
USIcmp.c:161:14: identifier r0
USIcmp.c:161:16: punctuator ,
USIcmp.c:161:18: identifier r1
USIcmp.c:161:20: punctuator ;
USIcmp.c:161:22: keyword unsigned
USIcmp.c:161:31: keyword int
USIcmp.c:161:35: punctuator *
USIcmp.c:161:36: identifier p0
USIcmp.c:161:38: punctuator ,
USIcmp.c:161:40: punctuator *
USIcmp.c:161:41: identifier p1
USIcmp.c:161:43: punctuator ;
USIcmp.c:162:1: punctuator {
USIcmp.c:162:2: keyword if
USIcmp.c:162:5: punctuator (
USIcmp.c:162:6: punctuator (
USIcmp.c:162:7: punctuator *
USIcmp.c:162:8: punctuator (
USIcmp.c:162:9: punctuator (
USIcmp.c:162:10: keyword unsigned
USIcmp.c:162:19: keyword int
USIcmp.c:162:23: punctuator *
USIcmp.c:162:24: punctuator )
USIcmp.c:162:25: constant 10000000
USIcmp.c:162:33: punctuator )
USIcmp.c:162:34: punctuator )
USIcmp.c:162:36: punctuator <=
USIcmp.c:162:39: punctuator (
USIcmp.c:162:40: identifier p1
USIcmp.c:162:42: punctuator [
USIcmp.c:162:43: identifier x1
USIcmp.c:162:45: punctuator ]
USIcmp.c:162:46: punctuator )
USIcmp.c:162:47: punctuator )
USIcmp.c:162:49: keyword return
USIcmp.c:162:56: constant 1
USIcmp.c:162:57: punctuator ;
USIcmp.c:162:59: keyword else
USIcmp.c:162:64: keyword return
USIcmp.c:162:71: constant 0
USIcmp.c:162:72: punctuator ;
USIcmp.c:162:73: punctuator }
USIcmp.c:164:1: identifier adrreg0reg1
USIcmp.c:164:13: punctuator (
USIcmp.c:164:14: identifier r0
USIcmp.c:164:16: punctuator ,
USIcmp.c:164:18: identifier r1
USIcmp.c:164:20: punctuator ,
USIcmp.c:164:22: identifier x0
USIcmp.c:164:24: punctuator ,
USIcmp.c:164:26: identifier x1
USIcmp.c:164:28: punctuator ,
USIcmp.c:164:30: identifier p0
USIcmp.c:164:32: punctuator ,
USIcmp.c:164:34: identifier p1
USIcmp.c:164:36: punctuator )
USIcmp.c:165:1: keyword unsigned
USIcmp.c:165:10: keyword int
USIcmp.c:165:14: identifier r0
USIcmp.c:165:16: punctuator ,
USIcmp.c:165:18: identifier r1
USIcmp.c:165:20: punctuator ;
USIcmp.c:165:22: keyword unsigned
USIcmp.c:165:31: keyword int
USIcmp.c:165:35: punctuator *
USIcmp.c:165:36: identifier p0
USIcmp.c:165:38: punctuator ,
USIcmp.c:165:40: punctuator *
USIcmp.c:165:41: identifier p1
USIcmp.c:165:43: punctuator ;
USIcmp.c:166:1: punctuator {
USIcmp.c:166:2: keyword if
USIcmp.c:166:5: punctuator (
USIcmp.c:166:6: punctuator (
USIcmp.c:166:7: identifier p0
USIcmp.c:166:9: punctuator [
USIcmp.c:166:10: constant 10000000
USIcmp.c:166:18: punctuator ]
USIcmp.c:166:19: punctuator )
USIcmp.c:166:21: punctuator <=
USIcmp.c:166:24: identifier r1
USIcmp.c:166:26: punctuator )
USIcmp.c:166:28: keyword return
USIcmp.c:166:35: constant 1
USIcmp.c:166:36: punctuator ;
USIcmp.c:166:38: keyword else
USIcmp.c:166:43: keyword return
USIcmp.c:166:50: constant 0
USIcmp.c:166:51: punctuator ;
USIcmp.c:166:52: punctuator }
USIcmp.c:168:1: identifier adrreg0indreg1
USIcmp.c:168:16: punctuator (
USIcmp.c:168:17: identifier r0
USIcmp.c:168:19: punctuator ,
USIcmp.c:168:21: identifier r1
USIcmp.c:168:23: punctuator ,
USIcmp.c:168:25: identifier x0
USIcmp.c:168:27: punctuator ,
USIcmp.c:168:29: identifier x1
USIcmp.c:168:31: punctuator ,
USIcmp.c:168:33: identifier p0
USIcmp.c:168:35: punctuator ,
USIcmp.c:168:37: identifier p1
USIcmp.c:168:39: punctuator )
USIcmp.c:169:1: keyword unsigned
USIcmp.c:169:10: keyword int
USIcmp.c:169:14: identifier r0
USIcmp.c:169:16: punctuator ,
USIcmp.c:169:18: identifier r1
USIcmp.c:169:20: punctuator ;
USIcmp.c:169:22: keyword unsigned
USIcmp.c:169:31: keyword int
USIcmp.c:169:35: punctuator *
USIcmp.c:169:36: identifier p0
USIcmp.c:169:38: punctuator ,
USIcmp.c:169:40: punctuator *
USIcmp.c:169:41: identifier p1
USIcmp.c:169:43: punctuator ;
USIcmp.c:170:1: punctuator {
USIcmp.c:170:2: keyword if
USIcmp.c:170:5: punctuator (
USIcmp.c:170:6: punctuator (
USIcmp.c:170:7: identifier p0
USIcmp.c:170:9: punctuator [
USIcmp.c:170:10: constant 10000000
USIcmp.c:170:18: punctuator ]
USIcmp.c:170:19: punctuator )
USIcmp.c:170:21: punctuator <=
USIcmp.c:170:24: punctuator (
USIcmp.c:170:25: punctuator *
USIcmp.c:170:26: identifier p1
USIcmp.c:170:28: punctuator )
USIcmp.c:170:29: punctuator )
USIcmp.c:170:31: keyword return
USIcmp.c:170:38: constant 1
USIcmp.c:170:39: punctuator ;
USIcmp.c:170:41: keyword else
USIcmp.c:170:46: keyword return
USIcmp.c:170:53: constant 0
USIcmp.c:170:54: punctuator ;
USIcmp.c:170:55: punctuator }
USIcmp.c:172:1: identifier adrreg0imm1
USIcmp.c:172:13: punctuator (
USIcmp.c:172:14: identifier r0
USIcmp.c:172:16: punctuator ,
USIcmp.c:172:18: identifier r1
USIcmp.c:172:20: punctuator ,
USIcmp.c:172:22: identifier x0
USIcmp.c:172:24: punctuator ,
USIcmp.c:172:26: identifier x1
USIcmp.c:172:28: punctuator ,
USIcmp.c:172:30: identifier p0
USIcmp.c:172:32: punctuator ,
USIcmp.c:172:34: identifier p1
USIcmp.c:172:36: punctuator )
USIcmp.c:173:1: keyword unsigned
USIcmp.c:173:10: keyword int
USIcmp.c:173:14: identifier r0
USIcmp.c:173:16: punctuator ,
USIcmp.c:173:18: identifier r1
USIcmp.c:173:20: punctuator ;
USIcmp.c:173:22: keyword unsigned
USIcmp.c:173:31: keyword int
USIcmp.c:173:35: punctuator *
USIcmp.c:173:36: identifier p0
USIcmp.c:173:38: punctuator ,
USIcmp.c:173:40: punctuator *
USIcmp.c:173:41: identifier p1
USIcmp.c:173:43: punctuator ;
USIcmp.c:174:1: punctuator {
USIcmp.c:174:2: keyword if
USIcmp.c:174:5: punctuator (
USIcmp.c:174:6: punctuator (
USIcmp.c:174:7: identifier p0
USIcmp.c:174:9: punctuator [
USIcmp.c:174:10: constant 10000000
USIcmp.c:174:18: punctuator ]
USIcmp.c:174:19: punctuator )
USIcmp.c:174:21: punctuator <=
USIcmp.c:174:24: constant 33
USIcmp.c:174:26: punctuator )
USIcmp.c:174:28: keyword return
USIcmp.c:174:35: constant 1
USIcmp.c:174:36: punctuator ;
USIcmp.c:174:38: keyword else
USIcmp.c:174:43: keyword return
USIcmp.c:174:50: constant 0
USIcmp.c:174:51: punctuator ;
USIcmp.c:174:52: punctuator }
USIcmp.c:176:1: identifier adrreg0limm1
USIcmp.c:176:14: punctuator (
USIcmp.c:176:15: identifier r0
USIcmp.c:176:17: punctuator ,
USIcmp.c:176:19: identifier r1
USIcmp.c:176:21: punctuator ,
USIcmp.c:176:23: identifier x0
USIcmp.c:176:25: punctuator ,
USIcmp.c:176:27: identifier x1
USIcmp.c:176:29: punctuator ,
USIcmp.c:176:31: identifier p0
USIcmp.c:176:33: punctuator ,
USIcmp.c:176:35: identifier p1
USIcmp.c:176:37: punctuator )
USIcmp.c:177:1: keyword unsigned
USIcmp.c:177:10: keyword int
USIcmp.c:177:14: identifier r0
USIcmp.c:177:16: punctuator ,
USIcmp.c:177:18: identifier r1
USIcmp.c:177:20: punctuator ;
USIcmp.c:177:22: keyword unsigned
USIcmp.c:177:31: keyword int
USIcmp.c:177:35: punctuator *
USIcmp.c:177:36: identifier p0
USIcmp.c:177:38: punctuator ,
USIcmp.c:177:40: punctuator *
USIcmp.c:177:41: identifier p1
USIcmp.c:177:43: punctuator ;
USIcmp.c:178:1: punctuator {
USIcmp.c:178:2: keyword if
USIcmp.c:178:5: punctuator (
USIcmp.c:178:6: punctuator (
USIcmp.c:178:7: identifier p0
USIcmp.c:178:9: punctuator [
USIcmp.c:178:10: constant 10000000
USIcmp.c:178:18: punctuator ]
USIcmp.c:178:19: punctuator )
USIcmp.c:178:21: punctuator <=
USIcmp.c:178:24: punctuator (
USIcmp.c:178:25: punctuator (
USIcmp.c:178:26: keyword unsigned
USIcmp.c:178:35: keyword int
USIcmp.c:178:38: punctuator )
USIcmp.c:178:39: punctuator &
USIcmp.c:178:40: identifier glob1
USIcmp.c:178:45: punctuator )
USIcmp.c:178:46: punctuator )
USIcmp.c:178:48: keyword return
USIcmp.c:178:55: constant 1
USIcmp.c:178:56: punctuator ;
USIcmp.c:178:58: keyword else
USIcmp.c:178:63: keyword return
USIcmp.c:178:70: constant 0
USIcmp.c:178:71: punctuator ;
USIcmp.c:178:72: punctuator }
USIcmp.c:180:1: identifier adrreg0adr1
USIcmp.c:180:13: punctuator (
USIcmp.c:180:14: identifier r0
USIcmp.c:180:16: punctuator ,
USIcmp.c:180:18: identifier r1
USIcmp.c:180:20: punctuator ,
USIcmp.c:180:22: identifier x0
USIcmp.c:180:24: punctuator ,
USIcmp.c:180:26: identifier x1
USIcmp.c:180:28: punctuator ,
USIcmp.c:180:30: identifier p0
USIcmp.c:180:32: punctuator ,
USIcmp.c:180:34: identifier p1
USIcmp.c:180:36: punctuator )
USIcmp.c:181:1: keyword unsigned
USIcmp.c:181:10: keyword int
USIcmp.c:181:14: identifier r0
USIcmp.c:181:16: punctuator ,
USIcmp.c:181:18: identifier r1
USIcmp.c:181:20: punctuator ;
USIcmp.c:181:22: keyword unsigned
USIcmp.c:181:31: keyword int
USIcmp.c:181:35: punctuator *
USIcmp.c:181:36: identifier p0
USIcmp.c:181:38: punctuator ,
USIcmp.c:181:40: punctuator *
USIcmp.c:181:41: identifier p1
USIcmp.c:181:43: punctuator ;
USIcmp.c:182:1: punctuator {
USIcmp.c:182:2: keyword if
USIcmp.c:182:5: punctuator (
USIcmp.c:182:6: punctuator (
USIcmp.c:182:7: identifier p0
USIcmp.c:182:9: punctuator [
USIcmp.c:182:10: constant 10000000
USIcmp.c:182:18: punctuator ]
USIcmp.c:182:19: punctuator )
USIcmp.c:182:21: punctuator <=
USIcmp.c:182:24: punctuator (
USIcmp.c:182:25: punctuator *
USIcmp.c:182:26: punctuator (
USIcmp.c:182:27: punctuator (
USIcmp.c:182:28: keyword unsigned
USIcmp.c:182:37: keyword int
USIcmp.c:182:41: punctuator *
USIcmp.c:182:42: punctuator )
USIcmp.c:182:43: punctuator (
USIcmp.c:182:44: constant 11111111
USIcmp.c:182:53: punctuator &
USIcmp.c:182:55: punctuator ~
USIcmp.c:182:56: punctuator (
USIcmp.c:182:57: identifier __alignof__
USIcmp.c:182:69: punctuator (
USIcmp.c:182:70: keyword unsigned
USIcmp.c:182:79: keyword int
USIcmp.c:182:82: punctuator )
USIcmp.c:182:84: punctuator -
USIcmp.c:182:86: constant 1
USIcmp.c:182:87: punctuator )
USIcmp.c:182:88: punctuator )
USIcmp.c:182:89: punctuator )
USIcmp.c:182:90: punctuator )
USIcmp.c:182:91: punctuator )
USIcmp.c:182:93: keyword return
USIcmp.c:182:100: constant 1
USIcmp.c:182:101: punctuator ;
USIcmp.c:182:103: keyword else
USIcmp.c:182:108: keyword return
USIcmp.c:182:115: constant 0
USIcmp.c:182:116: punctuator ;
USIcmp.c:182:117: punctuator }
USIcmp.c:184:1: identifier adrreg0adrreg1
USIcmp.c:184:16: punctuator (
USIcmp.c:184:17: identifier r0
USIcmp.c:184:19: punctuator ,
USIcmp.c:184:21: identifier r1
USIcmp.c:184:23: punctuator ,
USIcmp.c:184:25: identifier x0
USIcmp.c:184:27: punctuator ,
USIcmp.c:184:29: identifier x1
USIcmp.c:184:31: punctuator ,
USIcmp.c:184:33: identifier p0
USIcmp.c:184:35: punctuator ,
USIcmp.c:184:37: identifier p1
USIcmp.c:184:39: punctuator )
USIcmp.c:185:1: keyword unsigned
USIcmp.c:185:10: keyword int
USIcmp.c:185:14: identifier r0
USIcmp.c:185:16: punctuator ,
USIcmp.c:185:18: identifier r1
USIcmp.c:185:20: punctuator ;
USIcmp.c:185:22: keyword unsigned
USIcmp.c:185:31: keyword int
USIcmp.c:185:35: punctuator *
USIcmp.c:185:36: identifier p0
USIcmp.c:185:38: punctuator ,
USIcmp.c:185:40: punctuator *
USIcmp.c:185:41: identifier p1
USIcmp.c:185:43: punctuator ;
USIcmp.c:186:1: punctuator {
USIcmp.c:186:2: keyword if
USIcmp.c:186:5: punctuator (
USIcmp.c:186:6: punctuator (
USIcmp.c:186:7: identifier p0
USIcmp.c:186:9: punctuator [
USIcmp.c:186:10: constant 10000000
USIcmp.c:186:18: punctuator ]
USIcmp.c:186:19: punctuator )
USIcmp.c:186:21: punctuator <=
USIcmp.c:186:24: punctuator (
USIcmp.c:186:25: identifier p1
USIcmp.c:186:27: punctuator [
USIcmp.c:186:28: constant 1111111
USIcmp.c:186:35: punctuator /
USIcmp.c:186:36: constant 4
USIcmp.c:186:37: punctuator ]
USIcmp.c:186:38: punctuator )
USIcmp.c:186:39: punctuator )
USIcmp.c:186:41: keyword return
USIcmp.c:186:48: constant 1
USIcmp.c:186:49: punctuator ;
USIcmp.c:186:51: keyword else
USIcmp.c:186:56: keyword return
USIcmp.c:186:63: constant 0
USIcmp.c:186:64: punctuator ;
USIcmp.c:186:65: punctuator }
USIcmp.c:188:1: identifier adrreg0adrx1
USIcmp.c:188:14: punctuator (
USIcmp.c:188:15: identifier r0
USIcmp.c:188:17: punctuator ,
USIcmp.c:188:19: identifier r1
USIcmp.c:188:21: punctuator ,
USIcmp.c:188:23: identifier x0
USIcmp.c:188:25: punctuator ,
USIcmp.c:188:27: identifier x1
USIcmp.c:188:29: punctuator ,
USIcmp.c:188:31: identifier p0
USIcmp.c:188:33: punctuator ,
USIcmp.c:188:35: identifier p1
USIcmp.c:188:37: punctuator )
USIcmp.c:189:1: keyword unsigned
USIcmp.c:189:10: keyword int
USIcmp.c:189:14: identifier r0
USIcmp.c:189:16: punctuator ,
USIcmp.c:189:18: identifier r1
USIcmp.c:189:20: punctuator ;
USIcmp.c:189:22: keyword unsigned
USIcmp.c:189:31: keyword int
USIcmp.c:189:35: punctuator *
USIcmp.c:189:36: identifier p0
USIcmp.c:189:38: punctuator ,
USIcmp.c:189:40: punctuator *
USIcmp.c:189:41: identifier p1
USIcmp.c:189:43: punctuator ;
USIcmp.c:190:1: punctuator {
USIcmp.c:190:2: keyword if
USIcmp.c:190:5: punctuator (
USIcmp.c:190:6: punctuator (
USIcmp.c:190:7: identifier p0
USIcmp.c:190:9: punctuator [
USIcmp.c:190:10: constant 10000000
USIcmp.c:190:18: punctuator ]
USIcmp.c:190:19: punctuator )
USIcmp.c:190:21: punctuator <=
USIcmp.c:190:24: punctuator (
USIcmp.c:190:25: punctuator (
USIcmp.c:190:26: punctuator (
USIcmp.c:190:27: keyword unsigned
USIcmp.c:190:36: keyword int
USIcmp.c:190:40: punctuator *
USIcmp.c:190:41: punctuator )
USIcmp.c:190:42: punctuator (
USIcmp.c:190:43: constant 11111111
USIcmp.c:190:52: punctuator &
USIcmp.c:190:54: punctuator ~
USIcmp.c:190:55: punctuator (
USIcmp.c:190:56: identifier __alignof__
USIcmp.c:190:68: punctuator (
USIcmp.c:190:69: keyword unsigned
USIcmp.c:190:78: keyword int
USIcmp.c:190:81: punctuator )
USIcmp.c:190:83: punctuator -
USIcmp.c:190:85: constant 1
USIcmp.c:190:86: punctuator )
USIcmp.c:190:87: punctuator )
USIcmp.c:190:88: punctuator )
USIcmp.c:190:89: punctuator [
USIcmp.c:190:90: identifier x1
USIcmp.c:190:92: punctuator ]
USIcmp.c:190:93: punctuator )
USIcmp.c:190:94: punctuator )
USIcmp.c:190:96: keyword return
USIcmp.c:190:103: constant 1
USIcmp.c:190:104: punctuator ;
USIcmp.c:190:106: keyword else
USIcmp.c:190:111: keyword return
USIcmp.c:190:118: constant 0
USIcmp.c:190:119: punctuator ;
USIcmp.c:190:120: punctuator }
USIcmp.c:192:1: identifier adrreg0regx1
USIcmp.c:192:14: punctuator (
USIcmp.c:192:15: identifier r0
USIcmp.c:192:17: punctuator ,
USIcmp.c:192:19: identifier r1
USIcmp.c:192:21: punctuator ,
USIcmp.c:192:23: identifier x0
USIcmp.c:192:25: punctuator ,
USIcmp.c:192:27: identifier x1
USIcmp.c:192:29: punctuator ,
USIcmp.c:192:31: identifier p0
USIcmp.c:192:33: punctuator ,
USIcmp.c:192:35: identifier p1
USIcmp.c:192:37: punctuator )
USIcmp.c:193:1: keyword unsigned
USIcmp.c:193:10: keyword int
USIcmp.c:193:14: identifier r0
USIcmp.c:193:16: punctuator ,
USIcmp.c:193:18: identifier r1
USIcmp.c:193:20: punctuator ;
USIcmp.c:193:22: keyword unsigned
USIcmp.c:193:31: keyword int
USIcmp.c:193:35: punctuator *
USIcmp.c:193:36: identifier p0
USIcmp.c:193:38: punctuator ,
USIcmp.c:193:40: punctuator *
USIcmp.c:193:41: identifier p1
USIcmp.c:193:43: punctuator ;
USIcmp.c:194:1: punctuator {
USIcmp.c:194:2: keyword if
USIcmp.c:194:5: punctuator (
USIcmp.c:194:6: punctuator (
USIcmp.c:194:7: identifier p0
USIcmp.c:194:9: punctuator [
USIcmp.c:194:10: constant 10000000
USIcmp.c:194:18: punctuator ]
USIcmp.c:194:19: punctuator )
USIcmp.c:194:21: punctuator <=
USIcmp.c:194:24: punctuator (
USIcmp.c:194:25: identifier p1
USIcmp.c:194:27: punctuator [
USIcmp.c:194:28: identifier x1
USIcmp.c:194:30: punctuator ]
USIcmp.c:194:31: punctuator )
USIcmp.c:194:32: punctuator )
USIcmp.c:194:34: keyword return
USIcmp.c:194:41: constant 1
USIcmp.c:194:42: punctuator ;
USIcmp.c:194:44: keyword else
USIcmp.c:194:49: keyword return
USIcmp.c:194:56: constant 0
USIcmp.c:194:57: punctuator ;
USIcmp.c:194:58: punctuator }
USIcmp.c:196:1: identifier adrx0reg1
USIcmp.c:196:11: punctuator (
USIcmp.c:196:12: identifier r0
USIcmp.c:196:14: punctuator ,
USIcmp.c:196:16: identifier r1
USIcmp.c:196:18: punctuator ,
USIcmp.c:196:20: identifier x0
USIcmp.c:196:22: punctuator ,
USIcmp.c:196:24: identifier x1
USIcmp.c:196:26: punctuator ,
USIcmp.c:196:28: identifier p0
USIcmp.c:196:30: punctuator ,
USIcmp.c:196:32: identifier p1
USIcmp.c:196:34: punctuator )
USIcmp.c:197:1: keyword unsigned
USIcmp.c:197:10: keyword int
USIcmp.c:197:14: identifier r0
USIcmp.c:197:16: punctuator ,
USIcmp.c:197:18: identifier r1
USIcmp.c:197:20: punctuator ;
USIcmp.c:197:22: keyword unsigned
USIcmp.c:197:31: keyword int
USIcmp.c:197:35: punctuator *
USIcmp.c:197:36: identifier p0
USIcmp.c:197:38: punctuator ,
USIcmp.c:197:40: punctuator *
USIcmp.c:197:41: identifier p1
USIcmp.c:197:43: punctuator ;
USIcmp.c:198:1: punctuator {
USIcmp.c:198:2: keyword if
USIcmp.c:198:5: punctuator (
USIcmp.c:198:6: punctuator (
USIcmp.c:198:7: punctuator (
USIcmp.c:198:8: punctuator (
USIcmp.c:198:9: keyword unsigned
USIcmp.c:198:18: keyword int
USIcmp.c:198:22: punctuator *
USIcmp.c:198:23: punctuator )
USIcmp.c:198:24: constant 10000000
USIcmp.c:198:32: punctuator )
USIcmp.c:198:33: punctuator [
USIcmp.c:198:34: identifier x0
USIcmp.c:198:36: punctuator ]
USIcmp.c:198:37: punctuator )
USIcmp.c:198:39: punctuator <=
USIcmp.c:198:42: identifier r1
USIcmp.c:198:44: punctuator )
USIcmp.c:198:46: keyword return
USIcmp.c:198:53: constant 1
USIcmp.c:198:54: punctuator ;
USIcmp.c:198:56: keyword else
USIcmp.c:198:61: keyword return
USIcmp.c:198:68: constant 0
USIcmp.c:198:69: punctuator ;
USIcmp.c:198:70: punctuator }
USIcmp.c:200:1: identifier adrx0indreg1
USIcmp.c:200:14: punctuator (
USIcmp.c:200:15: identifier r0
USIcmp.c:200:17: punctuator ,
USIcmp.c:200:19: identifier r1
USIcmp.c:200:21: punctuator ,
USIcmp.c:200:23: identifier x0
USIcmp.c:200:25: punctuator ,
USIcmp.c:200:27: identifier x1
USIcmp.c:200:29: punctuator ,
USIcmp.c:200:31: identifier p0
USIcmp.c:200:33: punctuator ,
USIcmp.c:200:35: identifier p1
USIcmp.c:200:37: punctuator )
USIcmp.c:201:1: keyword unsigned
USIcmp.c:201:10: keyword int
USIcmp.c:201:14: identifier r0
USIcmp.c:201:16: punctuator ,
USIcmp.c:201:18: identifier r1
USIcmp.c:201:20: punctuator ;
USIcmp.c:201:22: keyword unsigned
USIcmp.c:201:31: keyword int
USIcmp.c:201:35: punctuator *
USIcmp.c:201:36: identifier p0
USIcmp.c:201:38: punctuator ,
USIcmp.c:201:40: punctuator *
USIcmp.c:201:41: identifier p1
USIcmp.c:201:43: punctuator ;
USIcmp.c:202:1: punctuator {
USIcmp.c:202:2: keyword if
USIcmp.c:202:5: punctuator (
USIcmp.c:202:6: punctuator (
USIcmp.c:202:7: punctuator (
USIcmp.c:202:8: punctuator (
USIcmp.c:202:9: keyword unsigned
USIcmp.c:202:18: keyword int
USIcmp.c:202:22: punctuator *
USIcmp.c:202:23: punctuator )
USIcmp.c:202:24: constant 10000000
USIcmp.c:202:32: punctuator )
USIcmp.c:202:33: punctuator [
USIcmp.c:202:34: identifier x0
USIcmp.c:202:36: punctuator ]
USIcmp.c:202:37: punctuator )
USIcmp.c:202:39: punctuator <=
USIcmp.c:202:42: punctuator (
USIcmp.c:202:43: punctuator *
USIcmp.c:202:44: identifier p1
USIcmp.c:202:46: punctuator )
USIcmp.c:202:47: punctuator )
USIcmp.c:202:49: keyword return
USIcmp.c:202:56: constant 1
USIcmp.c:202:57: punctuator ;
USIcmp.c:202:59: keyword else
USIcmp.c:202:64: keyword return
USIcmp.c:202:71: constant 0
USIcmp.c:202:72: punctuator ;
USIcmp.c:202:73: punctuator }
USIcmp.c:204:1: identifier adrx0imm1
USIcmp.c:204:11: punctuator (
USIcmp.c:204:12: identifier r0
USIcmp.c:204:14: punctuator ,
USIcmp.c:204:16: identifier r1
USIcmp.c:204:18: punctuator ,
USIcmp.c:204:20: identifier x0
USIcmp.c:204:22: punctuator ,
USIcmp.c:204:24: identifier x1
USIcmp.c:204:26: punctuator ,
USIcmp.c:204:28: identifier p0
USIcmp.c:204:30: punctuator ,
USIcmp.c:204:32: identifier p1
USIcmp.c:204:34: punctuator )
USIcmp.c:205:1: keyword unsigned
USIcmp.c:205:10: keyword int
USIcmp.c:205:14: identifier r0
USIcmp.c:205:16: punctuator ,
USIcmp.c:205:18: identifier r1
USIcmp.c:205:20: punctuator ;
USIcmp.c:205:22: keyword unsigned
USIcmp.c:205:31: keyword int
USIcmp.c:205:35: punctuator *
USIcmp.c:205:36: identifier p0
USIcmp.c:205:38: punctuator ,
USIcmp.c:205:40: punctuator *
USIcmp.c:205:41: identifier p1
USIcmp.c:205:43: punctuator ;
USIcmp.c:206:1: punctuator {
USIcmp.c:206:2: keyword if
USIcmp.c:206:5: punctuator (
USIcmp.c:206:6: punctuator (
USIcmp.c:206:7: punctuator (
USIcmp.c:206:8: punctuator (
USIcmp.c:206:9: keyword unsigned
USIcmp.c:206:18: keyword int
USIcmp.c:206:22: punctuator *
USIcmp.c:206:23: punctuator )
USIcmp.c:206:24: constant 10000000
USIcmp.c:206:32: punctuator )
USIcmp.c:206:33: punctuator [
USIcmp.c:206:34: identifier x0
USIcmp.c:206:36: punctuator ]
USIcmp.c:206:37: punctuator )
USIcmp.c:206:39: punctuator <=
USIcmp.c:206:42: constant 33
USIcmp.c:206:44: punctuator )
USIcmp.c:206:46: keyword return
USIcmp.c:206:53: constant 1
USIcmp.c:206:54: punctuator ;
USIcmp.c:206:56: keyword else
USIcmp.c:206:61: keyword return
USIcmp.c:206:68: constant 0
USIcmp.c:206:69: punctuator ;
USIcmp.c:206:70: punctuator }
USIcmp.c:208:1: identifier adrx0limm1
USIcmp.c:208:12: punctuator (
USIcmp.c:208:13: identifier r0
USIcmp.c:208:15: punctuator ,
USIcmp.c:208:17: identifier r1
USIcmp.c:208:19: punctuator ,
USIcmp.c:208:21: identifier x0
USIcmp.c:208:23: punctuator ,
USIcmp.c:208:25: identifier x1
USIcmp.c:208:27: punctuator ,
USIcmp.c:208:29: identifier p0
USIcmp.c:208:31: punctuator ,
USIcmp.c:208:33: identifier p1
USIcmp.c:208:35: punctuator )
USIcmp.c:209:1: keyword unsigned
USIcmp.c:209:10: keyword int
USIcmp.c:209:14: identifier r0
USIcmp.c:209:16: punctuator ,
USIcmp.c:209:18: identifier r1
USIcmp.c:209:20: punctuator ;
USIcmp.c:209:22: keyword unsigned
USIcmp.c:209:31: keyword int
USIcmp.c:209:35: punctuator *
USIcmp.c:209:36: identifier p0
USIcmp.c:209:38: punctuator ,
USIcmp.c:209:40: punctuator *
USIcmp.c:209:41: identifier p1
USIcmp.c:209:43: punctuator ;
USIcmp.c:210:1: punctuator {
USIcmp.c:210:2: keyword if
USIcmp.c:210:5: punctuator (
USIcmp.c:210:6: punctuator (
USIcmp.c:210:7: punctuator (
USIcmp.c:210:8: punctuator (
USIcmp.c:210:9: keyword unsigned
USIcmp.c:210:18: keyword int
USIcmp.c:210:22: punctuator *
USIcmp.c:210:23: punctuator )
USIcmp.c:210:24: constant 10000000
USIcmp.c:210:32: punctuator )
USIcmp.c:210:33: punctuator [
USIcmp.c:210:34: identifier x0
USIcmp.c:210:36: punctuator ]
USIcmp.c:210:37: punctuator )
USIcmp.c:210:39: punctuator <=
USIcmp.c:210:42: punctuator (
USIcmp.c:210:43: punctuator (
USIcmp.c:210:44: keyword unsigned
USIcmp.c:210:53: keyword int
USIcmp.c:210:56: punctuator )
USIcmp.c:210:57: punctuator &
USIcmp.c:210:58: identifier glob1
USIcmp.c:210:63: punctuator )
USIcmp.c:210:64: punctuator )
USIcmp.c:210:66: keyword return
USIcmp.c:210:73: constant 1
USIcmp.c:210:74: punctuator ;
USIcmp.c:210:76: keyword else
USIcmp.c:210:81: keyword return
USIcmp.c:210:88: constant 0
USIcmp.c:210:89: punctuator ;
USIcmp.c:210:90: punctuator }
USIcmp.c:212:1: identifier adrx0adr1
USIcmp.c:212:11: punctuator (
USIcmp.c:212:12: identifier r0
USIcmp.c:212:14: punctuator ,
USIcmp.c:212:16: identifier r1
USIcmp.c:212:18: punctuator ,
USIcmp.c:212:20: identifier x0
USIcmp.c:212:22: punctuator ,
USIcmp.c:212:24: identifier x1
USIcmp.c:212:26: punctuator ,
USIcmp.c:212:28: identifier p0
USIcmp.c:212:30: punctuator ,
USIcmp.c:212:32: identifier p1
USIcmp.c:212:34: punctuator )
USIcmp.c:213:1: keyword unsigned
USIcmp.c:213:10: keyword int
USIcmp.c:213:14: identifier r0
USIcmp.c:213:16: punctuator ,
USIcmp.c:213:18: identifier r1
USIcmp.c:213:20: punctuator ;
USIcmp.c:213:22: keyword unsigned
USIcmp.c:213:31: keyword int
USIcmp.c:213:35: punctuator *
USIcmp.c:213:36: identifier p0
USIcmp.c:213:38: punctuator ,
USIcmp.c:213:40: punctuator *
USIcmp.c:213:41: identifier p1
USIcmp.c:213:43: punctuator ;
USIcmp.c:214:1: punctuator {
USIcmp.c:214:2: keyword if
USIcmp.c:214:5: punctuator (
USIcmp.c:214:6: punctuator (
USIcmp.c:214:7: punctuator (
USIcmp.c:214:8: punctuator (
USIcmp.c:214:9: keyword unsigned
USIcmp.c:214:18: keyword int
USIcmp.c:214:22: punctuator *
USIcmp.c:214:23: punctuator )
USIcmp.c:214:24: constant 10000000
USIcmp.c:214:32: punctuator )
USIcmp.c:214:33: punctuator [
USIcmp.c:214:34: identifier x0
USIcmp.c:214:36: punctuator ]
USIcmp.c:214:37: punctuator )
USIcmp.c:214:39: punctuator <=
USIcmp.c:214:42: punctuator (
USIcmp.c:214:43: punctuator *
USIcmp.c:214:44: punctuator (
USIcmp.c:214:45: punctuator (
USIcmp.c:214:46: keyword unsigned
USIcmp.c:214:55: keyword int
USIcmp.c:214:59: punctuator *
USIcmp.c:214:60: punctuator )
USIcmp.c:214:61: punctuator (
USIcmp.c:214:62: constant 11111111
USIcmp.c:214:71: punctuator &
USIcmp.c:214:73: punctuator ~
USIcmp.c:214:74: punctuator (
USIcmp.c:214:75: identifier __alignof__
USIcmp.c:214:87: punctuator (
USIcmp.c:214:88: keyword unsigned
USIcmp.c:214:97: keyword int
USIcmp.c:214:100: punctuator )
USIcmp.c:214:102: punctuator -
USIcmp.c:214:104: constant 1
USIcmp.c:214:105: punctuator )
USIcmp.c:214:106: punctuator )
USIcmp.c:214:107: punctuator )
USIcmp.c:214:108: punctuator )
USIcmp.c:214:109: punctuator )
USIcmp.c:214:111: keyword return
USIcmp.c:214:118: constant 1
USIcmp.c:214:119: punctuator ;
USIcmp.c:214:121: keyword else
USIcmp.c:214:126: keyword return
USIcmp.c:214:133: constant 0
USIcmp.c:214:134: punctuator ;
USIcmp.c:214:135: punctuator }
USIcmp.c:216:1: identifier adrx0adrreg1
USIcmp.c:216:14: punctuator (
USIcmp.c:216:15: identifier r0
USIcmp.c:216:17: punctuator ,
USIcmp.c:216:19: identifier r1
USIcmp.c:216:21: punctuator ,
USIcmp.c:216:23: identifier x0
USIcmp.c:216:25: punctuator ,
USIcmp.c:216:27: identifier x1
USIcmp.c:216:29: punctuator ,
USIcmp.c:216:31: identifier p0
USIcmp.c:216:33: punctuator ,
USIcmp.c:216:35: identifier p1
USIcmp.c:216:37: punctuator )
USIcmp.c:217:1: keyword unsigned
USIcmp.c:217:10: keyword int
USIcmp.c:217:14: identifier r0
USIcmp.c:217:16: punctuator ,
USIcmp.c:217:18: identifier r1
USIcmp.c:217:20: punctuator ;
USIcmp.c:217:22: keyword unsigned
USIcmp.c:217:31: keyword int
USIcmp.c:217:35: punctuator *
USIcmp.c:217:36: identifier p0
USIcmp.c:217:38: punctuator ,
USIcmp.c:217:40: punctuator *
USIcmp.c:217:41: identifier p1
USIcmp.c:217:43: punctuator ;
USIcmp.c:218:1: punctuator {
USIcmp.c:218:2: keyword if
USIcmp.c:218:5: punctuator (
USIcmp.c:218:6: punctuator (
USIcmp.c:218:7: punctuator (
USIcmp.c:218:8: punctuator (
USIcmp.c:218:9: keyword unsigned
USIcmp.c:218:18: keyword int
USIcmp.c:218:22: punctuator *
USIcmp.c:218:23: punctuator )
USIcmp.c:218:24: constant 10000000
USIcmp.c:218:32: punctuator )
USIcmp.c:218:33: punctuator [
USIcmp.c:218:34: identifier x0
USIcmp.c:218:36: punctuator ]
USIcmp.c:218:37: punctuator )
USIcmp.c:218:39: punctuator <=
USIcmp.c:218:42: punctuator (
USIcmp.c:218:43: identifier p1
USIcmp.c:218:45: punctuator [
USIcmp.c:218:46: constant 1111111
USIcmp.c:218:53: punctuator /
USIcmp.c:218:54: constant 4
USIcmp.c:218:55: punctuator ]
USIcmp.c:218:56: punctuator )
USIcmp.c:218:57: punctuator )
USIcmp.c:218:59: keyword return
USIcmp.c:218:66: constant 1
USIcmp.c:218:67: punctuator ;
USIcmp.c:218:69: keyword else
USIcmp.c:218:74: keyword return
USIcmp.c:218:81: constant 0
USIcmp.c:218:82: punctuator ;
USIcmp.c:218:83: punctuator }
USIcmp.c:220:1: identifier adrx0adrx1
USIcmp.c:220:12: punctuator (
USIcmp.c:220:13: identifier r0
USIcmp.c:220:15: punctuator ,
USIcmp.c:220:17: identifier r1
USIcmp.c:220:19: punctuator ,
USIcmp.c:220:21: identifier x0
USIcmp.c:220:23: punctuator ,
USIcmp.c:220:25: identifier x1
USIcmp.c:220:27: punctuator ,
USIcmp.c:220:29: identifier p0
USIcmp.c:220:31: punctuator ,
USIcmp.c:220:33: identifier p1
USIcmp.c:220:35: punctuator )
USIcmp.c:221:1: keyword unsigned
USIcmp.c:221:10: keyword int
USIcmp.c:221:14: identifier r0
USIcmp.c:221:16: punctuator ,
USIcmp.c:221:18: identifier r1
USIcmp.c:221:20: punctuator ;
USIcmp.c:221:22: keyword unsigned
USIcmp.c:221:31: keyword int
USIcmp.c:221:35: punctuator *
USIcmp.c:221:36: identifier p0
USIcmp.c:221:38: punctuator ,
USIcmp.c:221:40: punctuator *
USIcmp.c:221:41: identifier p1
USIcmp.c:221:43: punctuator ;
USIcmp.c:222:1: punctuator {
USIcmp.c:222:2: keyword if
USIcmp.c:222:5: punctuator (
USIcmp.c:222:6: punctuator (
USIcmp.c:222:7: punctuator (
USIcmp.c:222:8: punctuator (
USIcmp.c:222:9: keyword unsigned
USIcmp.c:222:18: keyword int
USIcmp.c:222:22: punctuator *
USIcmp.c:222:23: punctuator )
USIcmp.c:222:24: constant 10000000
USIcmp.c:222:32: punctuator )
USIcmp.c:222:33: punctuator [
USIcmp.c:222:34: identifier x0
USIcmp.c:222:36: punctuator ]
USIcmp.c:222:37: punctuator )
USIcmp.c:222:39: punctuator <=
USIcmp.c:222:42: punctuator (
USIcmp.c:222:43: punctuator (
USIcmp.c:222:44: punctuator (
USIcmp.c:222:45: keyword unsigned
USIcmp.c:222:54: keyword int
USIcmp.c:222:58: punctuator *
USIcmp.c:222:59: punctuator )
USIcmp.c:222:60: punctuator (
USIcmp.c:222:61: constant 11111111
USIcmp.c:222:70: punctuator &
USIcmp.c:222:72: punctuator ~
USIcmp.c:222:73: punctuator (
USIcmp.c:222:74: identifier __alignof__
USIcmp.c:222:86: punctuator (
USIcmp.c:222:87: keyword unsigned
USIcmp.c:222:96: keyword int
USIcmp.c:222:99: punctuator )
USIcmp.c:222:101: punctuator -
USIcmp.c:222:103: constant 1
USIcmp.c:222:104: punctuator )
USIcmp.c:222:105: punctuator )
USIcmp.c:222:106: punctuator )
USIcmp.c:222:107: punctuator [
USIcmp.c:222:108: identifier x1
USIcmp.c:222:110: punctuator ]
USIcmp.c:222:111: punctuator )
USIcmp.c:222:112: punctuator )
USIcmp.c:222:114: keyword return
USIcmp.c:222:121: constant 1
USIcmp.c:222:122: punctuator ;
USIcmp.c:222:124: keyword else
USIcmp.c:222:129: keyword return
USIcmp.c:222:136: constant 0
USIcmp.c:222:137: punctuator ;
USIcmp.c:222:138: punctuator }
USIcmp.c:224:1: identifier adrx0regx1
USIcmp.c:224:12: punctuator (
USIcmp.c:224:13: identifier r0
USIcmp.c:224:15: punctuator ,
USIcmp.c:224:17: identifier r1
USIcmp.c:224:19: punctuator ,
USIcmp.c:224:21: identifier x0
USIcmp.c:224:23: punctuator ,
USIcmp.c:224:25: identifier x1
USIcmp.c:224:27: punctuator ,
USIcmp.c:224:29: identifier p0
USIcmp.c:224:31: punctuator ,
USIcmp.c:224:33: identifier p1
USIcmp.c:224:35: punctuator )
USIcmp.c:225:1: keyword unsigned
USIcmp.c:225:10: keyword int
USIcmp.c:225:14: identifier r0
USIcmp.c:225:16: punctuator ,
USIcmp.c:225:18: identifier r1
USIcmp.c:225:20: punctuator ;
USIcmp.c:225:22: keyword unsigned
USIcmp.c:225:31: keyword int
USIcmp.c:225:35: punctuator *
USIcmp.c:225:36: identifier p0
USIcmp.c:225:38: punctuator ,
USIcmp.c:225:40: punctuator *
USIcmp.c:225:41: identifier p1
USIcmp.c:225:43: punctuator ;
USIcmp.c:226:1: punctuator {
USIcmp.c:226:2: keyword if
USIcmp.c:226:5: punctuator (
USIcmp.c:226:6: punctuator (
USIcmp.c:226:7: punctuator (
USIcmp.c:226:8: punctuator (
USIcmp.c:226:9: keyword unsigned
USIcmp.c:226:18: keyword int
USIcmp.c:226:22: punctuator *
USIcmp.c:226:23: punctuator )
USIcmp.c:226:24: constant 10000000
USIcmp.c:226:32: punctuator )
USIcmp.c:226:33: punctuator [
USIcmp.c:226:34: identifier x0
USIcmp.c:226:36: punctuator ]
USIcmp.c:226:37: punctuator )
USIcmp.c:226:39: punctuator <=
USIcmp.c:226:42: punctuator (
USIcmp.c:226:43: identifier p1
USIcmp.c:226:45: punctuator [
USIcmp.c:226:46: identifier x1
USIcmp.c:226:48: punctuator ]
USIcmp.c:226:49: punctuator )
USIcmp.c:226:50: punctuator )
USIcmp.c:226:52: keyword return
USIcmp.c:226:59: constant 1
USIcmp.c:226:60: punctuator ;
USIcmp.c:226:62: keyword else
USIcmp.c:226:67: keyword return
USIcmp.c:226:74: constant 0
USIcmp.c:226:75: punctuator ;
USIcmp.c:226:76: punctuator }
USIcmp.c:228:1: identifier regx0reg1
USIcmp.c:228:11: punctuator (
USIcmp.c:228:12: identifier r0
USIcmp.c:228:14: punctuator ,
USIcmp.c:228:16: identifier r1
USIcmp.c:228:18: punctuator ,
USIcmp.c:228:20: identifier x0
USIcmp.c:228:22: punctuator ,
USIcmp.c:228:24: identifier x1
USIcmp.c:228:26: punctuator ,
USIcmp.c:228:28: identifier p0
USIcmp.c:228:30: punctuator ,
USIcmp.c:228:32: identifier p1
USIcmp.c:228:34: punctuator )
USIcmp.c:229:1: keyword unsigned
USIcmp.c:229:10: keyword int
USIcmp.c:229:14: identifier r0
USIcmp.c:229:16: punctuator ,
USIcmp.c:229:18: identifier r1
USIcmp.c:229:20: punctuator ;
USIcmp.c:229:22: keyword unsigned
USIcmp.c:229:31: keyword int
USIcmp.c:229:35: punctuator *
USIcmp.c:229:36: identifier p0
USIcmp.c:229:38: punctuator ,
USIcmp.c:229:40: punctuator *
USIcmp.c:229:41: identifier p1
USIcmp.c:229:43: punctuator ;
USIcmp.c:230:1: punctuator {
USIcmp.c:230:2: keyword if
USIcmp.c:230:5: punctuator (
USIcmp.c:230:6: punctuator (
USIcmp.c:230:7: identifier p0
USIcmp.c:230:9: punctuator [
USIcmp.c:230:10: identifier x0
USIcmp.c:230:12: punctuator ]
USIcmp.c:230:13: punctuator )
USIcmp.c:230:15: punctuator <=
USIcmp.c:230:18: identifier r1
USIcmp.c:230:20: punctuator )
USIcmp.c:230:22: keyword return
USIcmp.c:230:29: constant 1
USIcmp.c:230:30: punctuator ;
USIcmp.c:230:32: keyword else
USIcmp.c:230:37: keyword return
USIcmp.c:230:44: constant 0
USIcmp.c:230:45: punctuator ;
USIcmp.c:230:46: punctuator }
USIcmp.c:232:1: identifier regx0indreg1
USIcmp.c:232:14: punctuator (
USIcmp.c:232:15: identifier r0
USIcmp.c:232:17: punctuator ,
USIcmp.c:232:19: identifier r1
USIcmp.c:232:21: punctuator ,
USIcmp.c:232:23: identifier x0
USIcmp.c:232:25: punctuator ,
USIcmp.c:232:27: identifier x1
USIcmp.c:232:29: punctuator ,
USIcmp.c:232:31: identifier p0
USIcmp.c:232:33: punctuator ,
USIcmp.c:232:35: identifier p1
USIcmp.c:232:37: punctuator )
USIcmp.c:233:1: keyword unsigned
USIcmp.c:233:10: keyword int
USIcmp.c:233:14: identifier r0
USIcmp.c:233:16: punctuator ,
USIcmp.c:233:18: identifier r1
USIcmp.c:233:20: punctuator ;
USIcmp.c:233:22: keyword unsigned
USIcmp.c:233:31: keyword int
USIcmp.c:233:35: punctuator *
USIcmp.c:233:36: identifier p0
USIcmp.c:233:38: punctuator ,
USIcmp.c:233:40: punctuator *
USIcmp.c:233:41: identifier p1
USIcmp.c:233:43: punctuator ;
USIcmp.c:234:1: punctuator {
USIcmp.c:234:2: keyword if
USIcmp.c:234:5: punctuator (
USIcmp.c:234:6: punctuator (
USIcmp.c:234:7: identifier p0
USIcmp.c:234:9: punctuator [
USIcmp.c:234:10: identifier x0
USIcmp.c:234:12: punctuator ]
USIcmp.c:234:13: punctuator )
USIcmp.c:234:15: punctuator <=
USIcmp.c:234:18: punctuator (
USIcmp.c:234:19: punctuator *
USIcmp.c:234:20: identifier p1
USIcmp.c:234:22: punctuator )
USIcmp.c:234:23: punctuator )
USIcmp.c:234:25: keyword return
USIcmp.c:234:32: constant 1
USIcmp.c:234:33: punctuator ;
USIcmp.c:234:35: keyword else
USIcmp.c:234:40: keyword return
USIcmp.c:234:47: constant 0
USIcmp.c:234:48: punctuator ;
USIcmp.c:234:49: punctuator }
USIcmp.c:236:1: identifier regx0imm1
USIcmp.c:236:11: punctuator (
USIcmp.c:236:12: identifier r0
USIcmp.c:236:14: punctuator ,
USIcmp.c:236:16: identifier r1
USIcmp.c:236:18: punctuator ,
USIcmp.c:236:20: identifier x0
USIcmp.c:236:22: punctuator ,
USIcmp.c:236:24: identifier x1
USIcmp.c:236:26: punctuator ,
USIcmp.c:236:28: identifier p0
USIcmp.c:236:30: punctuator ,
USIcmp.c:236:32: identifier p1
USIcmp.c:236:34: punctuator )
USIcmp.c:237:1: keyword unsigned
USIcmp.c:237:10: keyword int
USIcmp.c:237:14: identifier r0
USIcmp.c:237:16: punctuator ,
USIcmp.c:237:18: identifier r1
USIcmp.c:237:20: punctuator ;
USIcmp.c:237:22: keyword unsigned
USIcmp.c:237:31: keyword int
USIcmp.c:237:35: punctuator *
USIcmp.c:237:36: identifier p0
USIcmp.c:237:38: punctuator ,
USIcmp.c:237:40: punctuator *
USIcmp.c:237:41: identifier p1
USIcmp.c:237:43: punctuator ;
USIcmp.c:238:1: punctuator {
USIcmp.c:238:2: keyword if
USIcmp.c:238:5: punctuator (
USIcmp.c:238:6: punctuator (
USIcmp.c:238:7: identifier p0
USIcmp.c:238:9: punctuator [
USIcmp.c:238:10: identifier x0
USIcmp.c:238:12: punctuator ]
USIcmp.c:238:13: punctuator )
USIcmp.c:238:15: punctuator <=
USIcmp.c:238:18: constant 33
USIcmp.c:238:20: punctuator )
USIcmp.c:238:22: keyword return
USIcmp.c:238:29: constant 1
USIcmp.c:238:30: punctuator ;
USIcmp.c:238:32: keyword else
USIcmp.c:238:37: keyword return
USIcmp.c:238:44: constant 0
USIcmp.c:238:45: punctuator ;
USIcmp.c:238:46: punctuator }
USIcmp.c:240:1: identifier regx0limm1
USIcmp.c:240:12: punctuator (
USIcmp.c:240:13: identifier r0
USIcmp.c:240:15: punctuator ,
USIcmp.c:240:17: identifier r1
USIcmp.c:240:19: punctuator ,
USIcmp.c:240:21: identifier x0
USIcmp.c:240:23: punctuator ,
USIcmp.c:240:25: identifier x1
USIcmp.c:240:27: punctuator ,
USIcmp.c:240:29: identifier p0
USIcmp.c:240:31: punctuator ,
USIcmp.c:240:33: identifier p1
USIcmp.c:240:35: punctuator )
USIcmp.c:241:1: keyword unsigned
USIcmp.c:241:10: keyword int
USIcmp.c:241:14: identifier r0
USIcmp.c:241:16: punctuator ,
USIcmp.c:241:18: identifier r1
USIcmp.c:241:20: punctuator ;
USIcmp.c:241:22: keyword unsigned
USIcmp.c:241:31: keyword int
USIcmp.c:241:35: punctuator *
USIcmp.c:241:36: identifier p0
USIcmp.c:241:38: punctuator ,
USIcmp.c:241:40: punctuator *
USIcmp.c:241:41: identifier p1
USIcmp.c:241:43: punctuator ;
USIcmp.c:242:1: punctuator {
USIcmp.c:242:2: keyword if
USIcmp.c:242:5: punctuator (
USIcmp.c:242:6: punctuator (
USIcmp.c:242:7: identifier p0
USIcmp.c:242:9: punctuator [
USIcmp.c:242:10: identifier x0
USIcmp.c:242:12: punctuator ]
USIcmp.c:242:13: punctuator )
USIcmp.c:242:15: punctuator <=
USIcmp.c:242:18: punctuator (
USIcmp.c:242:19: punctuator (
USIcmp.c:242:20: keyword unsigned
USIcmp.c:242:29: keyword int
USIcmp.c:242:32: punctuator )
USIcmp.c:242:33: punctuator &
USIcmp.c:242:34: identifier glob1
USIcmp.c:242:39: punctuator )
USIcmp.c:242:40: punctuator )
USIcmp.c:242:42: keyword return
USIcmp.c:242:49: constant 1
USIcmp.c:242:50: punctuator ;
USIcmp.c:242:52: keyword else
USIcmp.c:242:57: keyword return
USIcmp.c:242:64: constant 0
USIcmp.c:242:65: punctuator ;
USIcmp.c:242:66: punctuator }
USIcmp.c:244:1: identifier regx0adr1
USIcmp.c:244:11: punctuator (
USIcmp.c:244:12: identifier r0
USIcmp.c:244:14: punctuator ,
USIcmp.c:244:16: identifier r1
USIcmp.c:244:18: punctuator ,
USIcmp.c:244:20: identifier x0
USIcmp.c:244:22: punctuator ,
USIcmp.c:244:24: identifier x1
USIcmp.c:244:26: punctuator ,
USIcmp.c:244:28: identifier p0
USIcmp.c:244:30: punctuator ,
USIcmp.c:244:32: identifier p1
USIcmp.c:244:34: punctuator )
USIcmp.c:245:1: keyword unsigned
USIcmp.c:245:10: keyword int
USIcmp.c:245:14: identifier r0
USIcmp.c:245:16: punctuator ,
USIcmp.c:245:18: identifier r1
USIcmp.c:245:20: punctuator ;
USIcmp.c:245:22: keyword unsigned
USIcmp.c:245:31: keyword int
USIcmp.c:245:35: punctuator *
USIcmp.c:245:36: identifier p0
USIcmp.c:245:38: punctuator ,
USIcmp.c:245:40: punctuator *
USIcmp.c:245:41: identifier p1
USIcmp.c:245:43: punctuator ;
USIcmp.c:246:1: punctuator {
USIcmp.c:246:2: keyword if
USIcmp.c:246:5: punctuator (
USIcmp.c:246:6: punctuator (
USIcmp.c:246:7: identifier p0
USIcmp.c:246:9: punctuator [
USIcmp.c:246:10: identifier x0
USIcmp.c:246:12: punctuator ]
USIcmp.c:246:13: punctuator )
USIcmp.c:246:15: punctuator <=
USIcmp.c:246:18: punctuator (
USIcmp.c:246:19: punctuator *
USIcmp.c:246:20: punctuator (
USIcmp.c:246:21: punctuator (
USIcmp.c:246:22: keyword unsigned
USIcmp.c:246:31: keyword int
USIcmp.c:246:35: punctuator *
USIcmp.c:246:36: punctuator )
USIcmp.c:246:37: punctuator (
USIcmp.c:246:38: constant 11111111
USIcmp.c:246:47: punctuator &
USIcmp.c:246:49: punctuator ~
USIcmp.c:246:50: punctuator (
USIcmp.c:246:51: identifier __alignof__
USIcmp.c:246:63: punctuator (
USIcmp.c:246:64: keyword unsigned
USIcmp.c:246:73: keyword int
USIcmp.c:246:76: punctuator )
USIcmp.c:246:78: punctuator -
USIcmp.c:246:80: constant 1
USIcmp.c:246:81: punctuator )
USIcmp.c:246:82: punctuator )
USIcmp.c:246:83: punctuator )
USIcmp.c:246:84: punctuator )
USIcmp.c:246:85: punctuator )
USIcmp.c:246:87: keyword return
USIcmp.c:246:94: constant 1
USIcmp.c:246:95: punctuator ;
USIcmp.c:246:97: keyword else
USIcmp.c:246:102: keyword return
USIcmp.c:246:109: constant 0
USIcmp.c:246:110: punctuator ;
USIcmp.c:246:111: punctuator }
USIcmp.c:248:1: identifier regx0adrreg1
USIcmp.c:248:14: punctuator (
USIcmp.c:248:15: identifier r0
USIcmp.c:248:17: punctuator ,
USIcmp.c:248:19: identifier r1
USIcmp.c:248:21: punctuator ,
USIcmp.c:248:23: identifier x0
USIcmp.c:248:25: punctuator ,
USIcmp.c:248:27: identifier x1
USIcmp.c:248:29: punctuator ,
USIcmp.c:248:31: identifier p0
USIcmp.c:248:33: punctuator ,
USIcmp.c:248:35: identifier p1
USIcmp.c:248:37: punctuator )
USIcmp.c:249:1: keyword unsigned
USIcmp.c:249:10: keyword int
USIcmp.c:249:14: identifier r0
USIcmp.c:249:16: punctuator ,
USIcmp.c:249:18: identifier r1
USIcmp.c:249:20: punctuator ;
USIcmp.c:249:22: keyword unsigned
USIcmp.c:249:31: keyword int
USIcmp.c:249:35: punctuator *
USIcmp.c:249:36: identifier p0
USIcmp.c:249:38: punctuator ,
USIcmp.c:249:40: punctuator *
USIcmp.c:249:41: identifier p1
USIcmp.c:249:43: punctuator ;
USIcmp.c:250:1: punctuator {
USIcmp.c:250:2: keyword if
USIcmp.c:250:5: punctuator (
USIcmp.c:250:6: punctuator (
USIcmp.c:250:7: identifier p0
USIcmp.c:250:9: punctuator [
USIcmp.c:250:10: identifier x0
USIcmp.c:250:12: punctuator ]
USIcmp.c:250:13: punctuator )
USIcmp.c:250:15: punctuator <=
USIcmp.c:250:18: punctuator (
USIcmp.c:250:19: identifier p1
USIcmp.c:250:21: punctuator [
USIcmp.c:250:22: constant 1111111
USIcmp.c:250:29: punctuator /
USIcmp.c:250:30: constant 4
USIcmp.c:250:31: punctuator ]
USIcmp.c:250:32: punctuator )
USIcmp.c:250:33: punctuator )
USIcmp.c:250:35: keyword return
USIcmp.c:250:42: constant 1
USIcmp.c:250:43: punctuator ;
USIcmp.c:250:45: keyword else
USIcmp.c:250:50: keyword return
USIcmp.c:250:57: constant 0
USIcmp.c:250:58: punctuator ;
USIcmp.c:250:59: punctuator }
USIcmp.c:252:1: identifier regx0adrx1
USIcmp.c:252:12: punctuator (
USIcmp.c:252:13: identifier r0
USIcmp.c:252:15: punctuator ,
USIcmp.c:252:17: identifier r1
USIcmp.c:252:19: punctuator ,
USIcmp.c:252:21: identifier x0
USIcmp.c:252:23: punctuator ,
USIcmp.c:252:25: identifier x1
USIcmp.c:252:27: punctuator ,
USIcmp.c:252:29: identifier p0
USIcmp.c:252:31: punctuator ,
USIcmp.c:252:33: identifier p1
USIcmp.c:252:35: punctuator )
USIcmp.c:253:1: keyword unsigned
USIcmp.c:253:10: keyword int
USIcmp.c:253:14: identifier r0
USIcmp.c:253:16: punctuator ,
USIcmp.c:253:18: identifier r1
USIcmp.c:253:20: punctuator ;
USIcmp.c:253:22: keyword unsigned
USIcmp.c:253:31: keyword int
USIcmp.c:253:35: punctuator *
USIcmp.c:253:36: identifier p0
USIcmp.c:253:38: punctuator ,
USIcmp.c:253:40: punctuator *
USIcmp.c:253:41: identifier p1
USIcmp.c:253:43: punctuator ;
USIcmp.c:254:1: punctuator {
USIcmp.c:254:2: keyword if
USIcmp.c:254:5: punctuator (
USIcmp.c:254:6: punctuator (
USIcmp.c:254:7: identifier p0
USIcmp.c:254:9: punctuator [
USIcmp.c:254:10: identifier x0
USIcmp.c:254:12: punctuator ]
USIcmp.c:254:13: punctuator )
USIcmp.c:254:15: punctuator <=
USIcmp.c:254:18: punctuator (
USIcmp.c:254:19: punctuator (
USIcmp.c:254:20: punctuator (
USIcmp.c:254:21: keyword unsigned
USIcmp.c:254:30: keyword int
USIcmp.c:254:34: punctuator *
USIcmp.c:254:35: punctuator )
USIcmp.c:254:36: punctuator (
USIcmp.c:254:37: constant 11111111
USIcmp.c:254:46: punctuator &
USIcmp.c:254:48: punctuator ~
USIcmp.c:254:49: punctuator (
USIcmp.c:254:50: identifier __alignof__
USIcmp.c:254:62: punctuator (
USIcmp.c:254:63: keyword unsigned
USIcmp.c:254:72: keyword int
USIcmp.c:254:75: punctuator )
USIcmp.c:254:77: punctuator -
USIcmp.c:254:79: constant 1
USIcmp.c:254:80: punctuator )
USIcmp.c:254:81: punctuator )
USIcmp.c:254:82: punctuator )
USIcmp.c:254:83: punctuator [
USIcmp.c:254:84: identifier x1
USIcmp.c:254:86: punctuator ]
USIcmp.c:254:87: punctuator )
USIcmp.c:254:88: punctuator )
USIcmp.c:254:90: keyword return
USIcmp.c:254:97: constant 1
USIcmp.c:254:98: punctuator ;
USIcmp.c:254:100: keyword else
USIcmp.c:254:105: keyword return
USIcmp.c:254:112: constant 0
USIcmp.c:254:113: punctuator ;
USIcmp.c:254:114: punctuator }
USIcmp.c:256:1: identifier regx0regx1
USIcmp.c:256:12: punctuator (
USIcmp.c:256:13: identifier r0
USIcmp.c:256:15: punctuator ,
USIcmp.c:256:17: identifier r1
USIcmp.c:256:19: punctuator ,
USIcmp.c:256:21: identifier x0
USIcmp.c:256:23: punctuator ,
USIcmp.c:256:25: identifier x1
USIcmp.c:256:27: punctuator ,
USIcmp.c:256:29: identifier p0
USIcmp.c:256:31: punctuator ,
USIcmp.c:256:33: identifier p1
USIcmp.c:256:35: punctuator )
USIcmp.c:257:1: keyword unsigned
USIcmp.c:257:10: keyword int
USIcmp.c:257:14: identifier r0
USIcmp.c:257:16: punctuator ,
USIcmp.c:257:18: identifier r1
USIcmp.c:257:20: punctuator ;
USIcmp.c:257:22: keyword unsigned
USIcmp.c:257:31: keyword int
USIcmp.c:257:35: punctuator *
USIcmp.c:257:36: identifier p0
USIcmp.c:257:38: punctuator ,
USIcmp.c:257:40: punctuator *
USIcmp.c:257:41: identifier p1
USIcmp.c:257:43: punctuator ;
USIcmp.c:258:1: punctuator {
USIcmp.c:258:2: keyword if
USIcmp.c:258:5: punctuator (
USIcmp.c:258:6: punctuator (
USIcmp.c:258:7: identifier p0
USIcmp.c:258:9: punctuator [
USIcmp.c:258:10: identifier x0
USIcmp.c:258:12: punctuator ]
USIcmp.c:258:13: punctuator )
USIcmp.c:258:15: punctuator <=
USIcmp.c:258:18: punctuator (
USIcmp.c:258:19: identifier p1
USIcmp.c:258:21: punctuator [
USIcmp.c:258:22: identifier x1
USIcmp.c:258:24: punctuator ]
USIcmp.c:258:25: punctuator )
USIcmp.c:258:26: punctuator )
USIcmp.c:258:28: keyword return
USIcmp.c:258:35: constant 1
USIcmp.c:258:36: punctuator ;
USIcmp.c:258:38: keyword else
USIcmp.c:258:43: keyword return
USIcmp.c:258:50: constant 0
USIcmp.c:258:51: punctuator ;
USIcmp.c:258:52: punctuator }
