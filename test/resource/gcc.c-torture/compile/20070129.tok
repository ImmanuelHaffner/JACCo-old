0
20070129.c:4:1: keyword typedef
20070129.c:4:9: keyword struct
20070129.c:4:16: identifier RExC_state_t
20070129.c:5:1: punctuator {
20070129.c:6:2: keyword char
20070129.c:6:7: punctuator *
20070129.c:6:8: identifier end
20070129.c:6:11: punctuator ;
20070129.c:7:2: keyword char
20070129.c:7:7: punctuator *
20070129.c:7:8: identifier parse
20070129.c:7:13: punctuator ;
20070129.c:8:1: punctuator }
20070129.c:8:3: identifier RExC_state_t
20070129.c:8:15: punctuator ;
20070129.c:10:1: keyword struct
20070129.c:10:8: identifier regnode_string
20070129.c:11:1: punctuator {
20070129.c:12:2: keyword unsigned
20070129.c:12:11: keyword char
20070129.c:12:16: identifier str_len
20070129.c:12:23: punctuator ;
20070129.c:13:2: keyword char
20070129.c:13:7: identifier string
20070129.c:13:13: punctuator [
20070129.c:13:14: constant 1
20070129.c:13:15: punctuator ]
20070129.c:13:16: punctuator ;
20070129.c:14:1: punctuator }
20070129.c:14:2: punctuator ;
20070129.c:16:1: keyword static
20070129.c:16:8: keyword void
20070129.c:16:13: punctuator *
20070129.c:16:14: identifier regatom
20070129.c:16:22: punctuator (
20070129.c:16:23: identifier RExC_state_t
20070129.c:16:36: punctuator *
20070129.c:16:38: identifier pRExC_state
20070129.c:16:49: punctuator ,
20070129.c:16:51: keyword int
20070129.c:16:55: punctuator *
20070129.c:16:56: identifier flagp
20070129.c:16:61: punctuator )
20070129.c:16:62: punctuator ;
20070129.c:18:1: keyword static
20070129.c:18:8: keyword void
20070129.c:18:13: punctuator *
20070129.c:19:1: identifier regpiece
20070129.c:19:10: punctuator (
20070129.c:19:11: identifier RExC_state_t
20070129.c:19:24: punctuator *
20070129.c:19:26: identifier pRExC_state
20070129.c:19:37: punctuator ,
20070129.c:19:39: keyword int
20070129.c:19:43: punctuator *
20070129.c:19:44: identifier flagp
20070129.c:19:49: punctuator )
20070129.c:20:1: punctuator {
20070129.c:21:2: keyword return
20070129.c:21:9: identifier regatom
20070129.c:21:17: punctuator (
20070129.c:21:18: constant 0
20070129.c:21:19: punctuator ,
20070129.c:21:21: constant 0
20070129.c:21:22: punctuator )
20070129.c:21:23: punctuator ;
20070129.c:22:1: punctuator }
20070129.c:24:1: keyword static
20070129.c:24:8: keyword void
20070129.c:24:13: punctuator *
20070129.c:25:1: identifier regbranch
20070129.c:25:11: punctuator (
20070129.c:25:12: identifier RExC_state_t
20070129.c:25:25: punctuator *
20070129.c:25:27: identifier pRExC_state
20070129.c:25:38: punctuator ,
20070129.c:25:40: keyword int
20070129.c:25:44: punctuator *
20070129.c:25:45: identifier flagp
20070129.c:25:50: punctuator ,
20070129.c:25:52: keyword int
20070129.c:25:56: identifier first
20070129.c:25:61: punctuator )
20070129.c:26:1: punctuator {
20070129.c:27:2: keyword return
20070129.c:27:9: identifier regpiece
20070129.c:27:18: punctuator (
20070129.c:27:19: constant 0
20070129.c:27:20: punctuator ,
20070129.c:27:22: constant 0
20070129.c:27:23: punctuator )
20070129.c:27:24: punctuator ;
20070129.c:28:1: punctuator }
20070129.c:30:1: keyword static
20070129.c:30:8: keyword void
20070129.c:30:13: punctuator *
20070129.c:31:1: identifier reg
20070129.c:31:5: punctuator (
20070129.c:31:6: identifier RExC_state_t
20070129.c:31:19: punctuator *
20070129.c:31:21: identifier pRExC_state
20070129.c:31:32: punctuator ,
20070129.c:31:34: keyword int
20070129.c:31:38: identifier paren
20070129.c:31:43: punctuator ,
20070129.c:31:45: keyword int
20070129.c:31:49: punctuator *
20070129.c:31:50: identifier flagp
20070129.c:31:55: punctuator )
20070129.c:32:1: punctuator {
20070129.c:33:2: keyword return
20070129.c:33:9: identifier regbranch
20070129.c:33:19: punctuator (
20070129.c:33:20: constant 0
20070129.c:33:21: punctuator ,
20070129.c:33:23: constant 0
20070129.c:33:24: punctuator ,
20070129.c:33:26: constant 1
20070129.c:33:27: punctuator )
20070129.c:33:28: punctuator ;
20070129.c:34:1: punctuator }
20070129.c:36:1: keyword void
20070129.c:36:6: punctuator *
20070129.c:37:1: identifier Perl_pregcomp
20070129.c:37:15: punctuator (
20070129.c:37:16: keyword char
20070129.c:37:21: punctuator *
20070129.c:37:22: identifier exp
20070129.c:37:25: punctuator ,
20070129.c:37:27: keyword char
20070129.c:37:32: punctuator *
20070129.c:37:33: identifier xend
20070129.c:37:37: punctuator ,
20070129.c:37:39: keyword void
20070129.c:37:44: punctuator *
20070129.c:37:45: identifier pm
20070129.c:37:47: punctuator )
20070129.c:38:1: punctuator {
20070129.c:39:2: keyword return
20070129.c:39:9: identifier reg
20070129.c:39:13: punctuator (
20070129.c:39:14: constant 0
20070129.c:39:15: punctuator ,
20070129.c:39:17: constant 0
20070129.c:39:18: punctuator ,
20070129.c:39:20: constant 0
20070129.c:39:21: punctuator )
20070129.c:39:22: punctuator ;
20070129.c:40:1: punctuator }
20070129.c:42:1: keyword static
20070129.c:42:8: keyword void
20070129.c:42:13: punctuator *
20070129.c:43:1: identifier regatom
20070129.c:43:9: punctuator (
20070129.c:43:10: identifier RExC_state_t
20070129.c:43:23: punctuator *
20070129.c:43:25: identifier pRExC_state
20070129.c:43:36: punctuator ,
20070129.c:43:38: keyword int
20070129.c:43:42: punctuator *
20070129.c:43:43: identifier flagp
20070129.c:43:48: punctuator )
20070129.c:44:1: punctuator {
20070129.c:45:2: keyword register
20070129.c:45:11: keyword void
20070129.c:45:16: punctuator *
20070129.c:45:17: identifier ret
20070129.c:45:21: punctuator =
20070129.c:45:23: constant 0
20070129.c:45:24: punctuator ;
20070129.c:46:2: keyword int
20070129.c:46:6: identifier flags
20070129.c:46:11: punctuator ;
20070129.c:48:1: identifier tryagain
20070129.c:48:9: punctuator :
20070129.c:49:2: keyword switch
20070129.c:49:9: punctuator (
20070129.c:49:10: punctuator *
20070129.c:49:11: punctuator (
20070129.c:49:12: identifier pRExC_state
20070129.c:49:23: punctuator ->
20070129.c:49:25: identifier parse
20070129.c:49:30: punctuator )
20070129.c:49:31: punctuator )
20070129.c:50:4: punctuator {
20070129.c:51:4: keyword case
20070129.c:51:9: constant '('
20070129.c:51:12: punctuator :
20070129.c:52:6: identifier ret
20070129.c:52:10: punctuator =
20070129.c:52:12: identifier reg
20070129.c:52:16: punctuator (
20070129.c:52:17: identifier pRExC_state
20070129.c:52:28: punctuator ,
20070129.c:52:30: constant 1
20070129.c:52:31: punctuator ,
20070129.c:52:33: punctuator &
20070129.c:52:34: identifier flags
20070129.c:52:39: punctuator )
20070129.c:52:40: punctuator ;
20070129.c:53:6: keyword if
20070129.c:53:9: punctuator (
20070129.c:53:10: identifier flags
20070129.c:53:16: punctuator &
20070129.c:53:18: constant 0x8
20070129.c:53:21: punctuator )
20070129.c:54:8: punctuator {
20070129.c:55:10: keyword goto
20070129.c:55:15: identifier tryagain
20070129.c:55:23: punctuator ;
20070129.c:56:8: punctuator }
20070129.c:57:6: keyword break
20070129.c:57:11: punctuator ;
20070129.c:58:4: keyword default
20070129.c:58:11: punctuator :
20070129.c:59:2: punctuator {
20070129.c:60:8: keyword register
20070129.c:60:17: keyword unsigned
20070129.c:60:26: keyword long
20070129.c:60:31: identifier len
20070129.c:60:34: punctuator ;
20070129.c:61:8: keyword register
20070129.c:61:17: keyword unsigned
20070129.c:61:26: identifier ender
20070129.c:61:31: punctuator ;
20070129.c:62:8: keyword register
20070129.c:62:17: keyword char
20070129.c:62:22: punctuator *
20070129.c:62:23: identifier p
20070129.c:62:24: punctuator ;
20070129.c:63:8: keyword char
20070129.c:63:13: punctuator *
20070129.c:63:14: identifier oldp
20070129.c:63:18: punctuator ,
20070129.c:63:20: punctuator *
20070129.c:63:21: identifier s
20070129.c:63:22: punctuator ;
20070129.c:64:8: keyword unsigned
20070129.c:64:17: keyword long
20070129.c:64:22: identifier numlen
20070129.c:64:28: punctuator ;
20070129.c:65:8: keyword unsigned
20070129.c:65:17: keyword long
20070129.c:65:22: identifier foldlen
20070129.c:65:29: punctuator ;
20070129.c:66:8: keyword unsigned
20070129.c:66:17: keyword char
20070129.c:66:22: identifier tmpbuf
20070129.c:66:28: punctuator [
20070129.c:66:29: constant 6
20070129.c:66:31: punctuator +
20070129.c:66:33: constant 1
20070129.c:66:34: punctuator ]
20070129.c:66:35: punctuator ,
20070129.c:66:37: punctuator *
20070129.c:66:38: identifier foldbuf
20070129.c:66:45: punctuator ;
20070129.c:68:6: identifier defchar
20070129.c:68:13: punctuator :
20070129.c:69:8: identifier s
20070129.c:69:10: punctuator =
20070129.c:69:12: punctuator (
20070129.c:69:13: punctuator (
20070129.c:69:14: punctuator (
20070129.c:69:15: keyword struct
20070129.c:69:22: identifier regnode_string
20070129.c:69:37: punctuator *
20070129.c:69:38: punctuator )
20070129.c:69:40: identifier ret
20070129.c:69:43: punctuator )
20070129.c:69:44: punctuator ->
20070129.c:69:46: identifier string
20070129.c:69:52: punctuator )
20070129.c:69:53: punctuator ;
20070129.c:70:8: keyword for
20070129.c:70:12: punctuator (
20070129.c:70:13: identifier len
20070129.c:70:17: punctuator =
20070129.c:70:19: constant 0
20070129.c:70:20: punctuator ,
20070129.c:70:22: identifier p
20070129.c:70:24: punctuator =
20070129.c:70:26: punctuator (
20070129.c:70:27: identifier pRExC_state
20070129.c:70:38: punctuator ->
20070129.c:70:40: identifier parse
20070129.c:70:45: punctuator )
20070129.c:70:47: punctuator -
20070129.c:70:49: constant 1
20070129.c:70:50: punctuator ;
20070129.c:71:13: identifier len
20070129.c:71:17: punctuator <
20070129.c:71:19: constant 127
20070129.c:71:23: punctuator &&
20070129.c:71:26: identifier p
20070129.c:71:28: punctuator <
20070129.c:71:30: punctuator (
20070129.c:71:31: identifier pRExC_state
20070129.c:71:42: punctuator ->
20070129.c:71:44: identifier end
20070129.c:71:47: punctuator )
20070129.c:71:48: punctuator ;
20070129.c:71:50: identifier len
20070129.c:71:53: punctuator ++
20070129.c:71:55: punctuator )
20070129.c:72:10: punctuator {
20070129.c:73:12: keyword if
20070129.c:73:15: punctuator (
20070129.c:73:16: punctuator (
20070129.c:73:17: punctuator (
20070129.c:73:18: punctuator *
20070129.c:73:19: identifier p
20070129.c:73:20: punctuator )
20070129.c:73:22: punctuator ==
20070129.c:73:25: constant '*'
20070129.c:73:29: punctuator ||
20070129.c:73:32: punctuator (
20070129.c:73:33: punctuator *
20070129.c:73:34: identifier p
20070129.c:73:35: punctuator )
20070129.c:73:37: punctuator ==
20070129.c:73:40: constant '+'
20070129.c:73:44: punctuator ||
20070129.c:73:47: punctuator (
20070129.c:73:48: punctuator *
20070129.c:73:49: identifier p
20070129.c:73:50: punctuator )
20070129.c:73:52: punctuator ==
20070129.c:73:55: constant '?'
20070129.c:74:17: punctuator ||
20070129.c:74:20: punctuator (
20070129.c:74:21: punctuator (
20070129.c:74:22: punctuator *
20070129.c:74:23: identifier p
20070129.c:74:24: punctuator )
20070129.c:74:26: punctuator ==
20070129.c:74:29: constant '{'
20070129.c:74:33: punctuator &&
20070129.c:74:36: identifier regcurly
20070129.c:74:45: punctuator (
20070129.c:74:46: identifier p
20070129.c:74:47: punctuator )
20070129.c:74:48: punctuator )
20070129.c:74:49: punctuator )
20070129.c:74:50: punctuator )
20070129.c:75:14: punctuator {
20070129.c:76:16: keyword unsigned
20070129.c:76:25: keyword long
20070129.c:76:30: identifier unilen
20070129.c:76:36: punctuator ;
20070129.c:77:16: keyword for
20070129.c:77:20: punctuator (
20070129.c:77:21: identifier foldbuf
20070129.c:77:29: punctuator =
20070129.c:77:31: identifier tmpbuf
20070129.c:77:37: punctuator ;
20070129.c:77:39: identifier foldlen
20070129.c:77:46: punctuator ;
20070129.c:77:48: identifier foldlen
20070129.c:77:56: punctuator -=
20070129.c:77:59: identifier numlen
20070129.c:77:65: punctuator )
20070129.c:78:18: punctuator {
20070129.c:79:20: identifier reguni
20070129.c:79:27: punctuator (
20070129.c:79:28: identifier pRExC_state
20070129.c:79:39: punctuator ,
20070129.c:79:41: identifier ender
20070129.c:79:46: punctuator ,
20070129.c:79:48: identifier s
20070129.c:79:49: punctuator ,
20070129.c:79:51: punctuator &
20070129.c:79:52: identifier unilen
20070129.c:79:58: punctuator )
20070129.c:79:59: punctuator ;
20070129.c:80:20: identifier s
20070129.c:80:22: punctuator +=
20070129.c:80:25: identifier unilen
20070129.c:80:31: punctuator ;
20070129.c:81:18: punctuator }
20070129.c:82:16: keyword break
20070129.c:82:21: punctuator ;
20070129.c:83:14: punctuator }
20070129.c:84:12: keyword unsigned
20070129.c:84:21: keyword long
20070129.c:84:26: identifier unilen
20070129.c:84:32: punctuator ;
20070129.c:86:12: identifier reguni
20070129.c:86:19: punctuator (
20070129.c:86:20: identifier pRExC_state
20070129.c:86:31: punctuator ,
20070129.c:86:33: identifier ender
20070129.c:86:38: punctuator ,
20070129.c:86:40: identifier s
20070129.c:86:41: punctuator ,
20070129.c:86:43: punctuator &
20070129.c:86:44: identifier unilen
20070129.c:86:50: punctuator )
20070129.c:86:51: punctuator ;
20070129.c:87:12: identifier s
20070129.c:87:14: punctuator +=
20070129.c:87:17: identifier unilen
20070129.c:87:23: punctuator ;
20070129.c:88:10: punctuator }
20070129.c:90:6: punctuator }
20070129.c:90:7: punctuator ;
20070129.c:91:6: keyword break
20070129.c:91:11: punctuator ;
20070129.c:92:4: punctuator }
20070129.c:93:2: keyword return
20070129.c:93:9: punctuator (
20070129.c:93:10: identifier ret
20070129.c:93:13: punctuator )
20070129.c:93:14: punctuator ;
20070129.c:94:1: punctuator }
