0
980729-1.c:1:1: keyword static
980729-1.c:1:8: keyword int
980729-1.c:2:1: identifier regex_compile
980729-1.c:2:15: punctuator (
980729-1.c:2:16: punctuator )
980729-1.c:3:1: punctuator {
980729-1.c:4:3: keyword int
980729-1.c:4:7: identifier c
980729-1.c:4:8: punctuator ,
980729-1.c:4:10: identifier c1
980729-1.c:4:12: punctuator ;
980729-1.c:5:3: keyword char
980729-1.c:5:8: identifier str
980729-1.c:5:11: punctuator [
980729-1.c:5:12: constant 6
980729-1.c:5:14: punctuator +
980729-1.c:5:16: constant 1
980729-1.c:5:17: punctuator ]
980729-1.c:5:18: punctuator ;
980729-1.c:6:3: identifier c1
980729-1.c:6:6: punctuator =
980729-1.c:6:8: constant 0
980729-1.c:6:9: punctuator ;
980729-1.c:7:3: keyword for
980729-1.c:7:7: punctuator (
980729-1.c:7:8: punctuator ;
980729-1.c:7:9: punctuator ;
980729-1.c:7:10: punctuator )
980729-1.c:8:5: punctuator {
980729-1.c:9:7: keyword do
980729-1.c:9:10: punctuator {
980729-1.c:9:12: punctuator }
980729-1.c:9:14: keyword while
980729-1.c:9:20: punctuator (
980729-1.c:9:21: constant 0
980729-1.c:9:22: punctuator )
980729-1.c:9:24: punctuator ;
980729-1.c:10:7: keyword if
980729-1.c:10:10: punctuator (
980729-1.c:10:11: identifier c1
980729-1.c:10:14: punctuator ==
980729-1.c:10:17: constant 6
980729-1.c:10:19: punctuator )
980729-1.c:11:9: keyword break
980729-1.c:11:14: punctuator ;
980729-1.c:12:7: identifier str
980729-1.c:12:10: punctuator [
980729-1.c:12:11: identifier c1
980729-1.c:12:13: punctuator ++
980729-1.c:12:15: punctuator ]
980729-1.c:12:17: punctuator =
980729-1.c:12:19: identifier c
980729-1.c:12:20: punctuator ;
980729-1.c:13:5: punctuator }
980729-1.c:14:1: punctuator }
