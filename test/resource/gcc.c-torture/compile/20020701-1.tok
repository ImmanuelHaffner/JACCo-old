0
20020701-1.c:5:1: keyword typedef
20020701-1.c:5:9: keyword long
20020701-1.c:5:14: keyword unsigned
20020701-1.c:5:23: keyword int
20020701-1.c:5:27: identifier size_t
20020701-1.c:5:33: punctuator ;
20020701-1.c:6:1: keyword void
20020701-1.c:6:6: identifier f1
20020701-1.c:6:9: punctuator (
20020701-1.c:6:10: keyword void
20020701-1.c:6:15: punctuator *
20020701-1.c:6:16: punctuator )
20020701-1.c:6:17: punctuator ;
20020701-1.c:7:1: keyword char
20020701-1.c:7:6: punctuator *
20020701-1.c:7:7: identifier f2
20020701-1.c:7:10: punctuator (
20020701-1.c:7:11: keyword const
20020701-1.c:7:17: keyword char
20020701-1.c:7:22: punctuator *
20020701-1.c:7:23: punctuator )
20020701-1.c:7:24: punctuator ;
20020701-1.c:8:1: keyword int
20020701-1.c:8:5: identifier atoi
20020701-1.c:8:10: punctuator (
20020701-1.c:8:11: keyword const
20020701-1.c:8:17: keyword char
20020701-1.c:8:22: punctuator *
20020701-1.c:8:23: punctuator )
20020701-1.c:8:24: punctuator ;
20020701-1.c:9:1: keyword char
20020701-1.c:9:6: punctuator *
20020701-1.c:9:7: identifier strchr
20020701-1.c:9:14: punctuator (
20020701-1.c:9:15: keyword const
20020701-1.c:9:21: keyword char
20020701-1.c:9:26: punctuator *
20020701-1.c:9:27: punctuator ,
20020701-1.c:9:29: keyword int
20020701-1.c:9:32: punctuator )
20020701-1.c:9:33: punctuator ;
20020701-1.c:10:1: keyword int
20020701-1.c:10:5: identifier strcmp
20020701-1.c:10:12: punctuator (
20020701-1.c:10:13: keyword const
20020701-1.c:10:19: keyword char
20020701-1.c:10:24: punctuator *
20020701-1.c:10:25: punctuator ,
20020701-1.c:10:27: keyword const
20020701-1.c:10:33: keyword char
20020701-1.c:10:38: punctuator *
20020701-1.c:10:39: punctuator )
20020701-1.c:10:40: punctuator ;
20020701-1.c:11:1: identifier size_t
20020701-1.c:11:8: identifier strlen
20020701-1.c:11:15: punctuator (
20020701-1.c:11:16: keyword const
20020701-1.c:11:22: keyword char
20020701-1.c:11:27: punctuator *
20020701-1.c:11:28: punctuator )
20020701-1.c:11:29: punctuator ;
20020701-1.c:12:1: keyword typedef
20020701-1.c:12:9: keyword enum
20020701-1.c:12:14: punctuator {
20020701-1.c:12:16: identifier A
20020701-1.c:12:17: punctuator ,
20020701-1.c:12:19: identifier B
20020701-1.c:12:20: punctuator ,
20020701-1.c:12:22: identifier C
20020701-1.c:12:24: punctuator }
20020701-1.c:12:26: identifier t1
20020701-1.c:12:28: punctuator ;
20020701-1.c:13:1: keyword extern
20020701-1.c:13:8: keyword const
20020701-1.c:13:14: keyword char
20020701-1.c:13:19: identifier _v
20020701-1.c:13:21: punctuator [
20020701-1.c:13:22: punctuator ]
20020701-1.c:13:23: punctuator ;
20020701-1.c:15:1: keyword static
20020701-1.c:15:8: identifier t1
20020701-1.c:16:1: identifier f
20020701-1.c:16:3: punctuator (
20020701-1.c:16:4: keyword const
20020701-1.c:16:10: keyword char
20020701-1.c:16:14: punctuator *
20020701-1.c:16:16: identifier p1
20020701-1.c:16:18: punctuator ,
20020701-1.c:16:20: keyword const
20020701-1.c:16:26: keyword char
20020701-1.c:16:30: punctuator *
20020701-1.c:16:32: identifier p2
20020701-1.c:16:34: punctuator ,
20020701-1.c:16:36: keyword char
20020701-1.c:16:41: identifier p3
20020701-1.c:16:43: punctuator )
20020701-1.c:17:1: punctuator {
20020701-1.c:18:3: keyword char
20020701-1.c:18:8: punctuator *
20020701-1.c:18:9: identifier v1
20020701-1.c:18:11: punctuator ;
20020701-1.c:19:3: keyword char
20020701-1.c:19:8: punctuator *
20020701-1.c:19:9: identifier v2
20020701-1.c:19:11: punctuator ;
20020701-1.c:20:3: keyword char
20020701-1.c:20:8: punctuator *
20020701-1.c:20:9: identifier a
20020701-1.c:20:10: punctuator ;
20020701-1.c:21:3: keyword char
20020701-1.c:21:8: punctuator *
20020701-1.c:21:9: identifier v3
20020701-1.c:21:11: punctuator ;
20020701-1.c:22:3: keyword char
20020701-1.c:22:8: punctuator *
20020701-1.c:22:9: identifier v4
20020701-1.c:22:11: punctuator ;
20020701-1.c:23:3: keyword char
20020701-1.c:23:8: punctuator *
20020701-1.c:23:9: identifier v5
20020701-1.c:23:11: punctuator ;
20020701-1.c:24:3: keyword char
20020701-1.c:24:8: punctuator *
20020701-1.c:24:9: identifier e
20020701-1.c:24:10: punctuator ;
20020701-1.c:25:3: keyword char
20020701-1.c:25:8: punctuator *
20020701-1.c:25:9: identifier v6
20020701-1.c:25:11: punctuator ;
20020701-1.c:26:3: identifier t1
20020701-1.c:26:6: identifier r
20020701-1.c:26:8: punctuator =
20020701-1.c:26:10: identifier C
20020701-1.c:26:11: punctuator ;
20020701-1.c:28:3: identifier v1
20020701-1.c:28:6: punctuator =
20020701-1.c:28:8: identifier f2
20020701-1.c:28:11: punctuator (
20020701-1.c:28:12: identifier p2
20020701-1.c:28:14: punctuator )
20020701-1.c:28:15: punctuator ;
20020701-1.c:29:3: identifier v4
20020701-1.c:29:6: punctuator =
20020701-1.c:29:8: identifier f2
20020701-1.c:29:11: punctuator (
20020701-1.c:29:12: identifier p1
20020701-1.c:29:14: punctuator )
20020701-1.c:29:15: punctuator ;
20020701-1.c:31:3: identifier a
20020701-1.c:31:5: punctuator =
20020701-1.c:31:7: identifier v2
20020701-1.c:31:10: punctuator =
20020701-1.c:31:12: identifier v1
20020701-1.c:31:14: punctuator ;
20020701-1.c:32:3: identifier e
20020701-1.c:32:5: punctuator =
20020701-1.c:32:7: identifier v5
20020701-1.c:32:10: punctuator =
20020701-1.c:32:12: identifier v4
20020701-1.c:32:14: punctuator ;
20020701-1.c:33:3: identifier memcpy
20020701-1.c:33:10: punctuator (
20020701-1.c:33:11: punctuator &
20020701-1.c:33:12: identifier e
20020701-1.c:33:13: punctuator ,
20020701-1.c:33:15: punctuator &
20020701-1.c:33:16: identifier e
20020701-1.c:33:17: punctuator ,
20020701-1.c:33:19: keyword sizeof
20020701-1.c:33:26: punctuator (
20020701-1.c:33:27: identifier e
20020701-1.c:33:28: punctuator )
20020701-1.c:33:29: punctuator )
20020701-1.c:33:30: punctuator ;
20020701-1.c:35:3: identifier v3
20020701-1.c:35:6: punctuator =
20020701-1.c:35:8: identifier strchr
20020701-1.c:35:15: punctuator (
20020701-1.c:35:16: identifier v2
20020701-1.c:35:18: punctuator ,
20020701-1.c:35:20: constant ','
20020701-1.c:35:23: punctuator )
20020701-1.c:35:24: punctuator ;
20020701-1.c:36:3: identifier v6
20020701-1.c:36:6: punctuator =
20020701-1.c:36:8: identifier strchr
20020701-1.c:36:15: punctuator (
20020701-1.c:36:16: identifier v5
20020701-1.c:36:18: punctuator ,
20020701-1.c:36:20: constant ','
20020701-1.c:36:23: punctuator )
20020701-1.c:36:24: punctuator ;
20020701-1.c:38:3: keyword while
20020701-1.c:38:9: punctuator (
20020701-1.c:38:10: punctuator (
20020701-1.c:38:11: identifier _v
20020701-1.c:38:14: punctuator +
20020701-1.c:38:16: constant 1
20020701-1.c:38:17: punctuator )
20020701-1.c:38:18: punctuator [
20020701-1.c:38:19: punctuator (
20020701-1.c:38:20: keyword unsigned
20020701-1.c:38:28: punctuator )
20020701-1.c:38:30: punctuator *
20020701-1.c:38:31: identifier a
20020701-1.c:38:32: punctuator ]
20020701-1.c:38:34: punctuator &
20020701-1.c:38:36: constant 4
20020701-1.c:38:37: punctuator )
20020701-1.c:39:5: identifier a
20020701-1.c:39:6: punctuator ++
20020701-1.c:39:8: punctuator ;
20020701-1.c:40:3: keyword while
20020701-1.c:40:9: punctuator (
20020701-1.c:40:10: punctuator (
20020701-1.c:40:11: identifier _v
20020701-1.c:40:14: punctuator +
20020701-1.c:40:16: constant 1
20020701-1.c:40:17: punctuator )
20020701-1.c:40:18: punctuator [
20020701-1.c:40:19: punctuator (
20020701-1.c:40:20: keyword unsigned
20020701-1.c:40:28: punctuator )
20020701-1.c:40:30: punctuator *
20020701-1.c:40:31: identifier e
20020701-1.c:40:32: punctuator ]
20020701-1.c:40:34: punctuator &
20020701-1.c:40:36: constant 4
20020701-1.c:40:37: punctuator )
20020701-1.c:41:5: identifier e
20020701-1.c:41:6: punctuator ++
20020701-1.c:41:8: punctuator ;
20020701-1.c:43:3: keyword if
20020701-1.c:43:6: punctuator (
20020701-1.c:43:7: identifier a
20020701-1.c:43:9: punctuator ==
20020701-1.c:43:12: identifier v3
20020701-1.c:43:15: punctuator &&
20020701-1.c:43:18: identifier e
20020701-1.c:43:20: punctuator ==
20020701-1.c:43:23: identifier v6
20020701-1.c:43:25: punctuator )
20020701-1.c:44:5: punctuator {
20020701-1.c:45:7: keyword if
20020701-1.c:45:10: punctuator (
20020701-1.c:45:11: identifier p3
20020701-1.c:45:13: punctuator )
20020701-1.c:46:9: identifier r
20020701-1.c:46:11: punctuator =
20020701-1.c:46:13: identifier atoi
20020701-1.c:46:18: punctuator (
20020701-1.c:46:19: identifier v5
20020701-1.c:46:21: punctuator )
20020701-1.c:46:23: punctuator <
20020701-1.c:46:25: identifier atoi
20020701-1.c:46:30: punctuator (
20020701-1.c:46:31: identifier v2
20020701-1.c:46:33: punctuator )
20020701-1.c:46:35: punctuator ?
20020701-1.c:46:37: identifier B
20020701-1.c:46:39: punctuator :
20020701-1.c:46:41: identifier A
20020701-1.c:46:42: punctuator ;
20020701-1.c:47:7: keyword else
20020701-1.c:48:9: identifier r
20020701-1.c:48:11: punctuator =
20020701-1.c:48:13: identifier atoi
20020701-1.c:48:18: punctuator (
20020701-1.c:48:19: identifier v5
20020701-1.c:48:21: punctuator )
20020701-1.c:48:23: punctuator >
20020701-1.c:48:25: identifier atoi
20020701-1.c:48:30: punctuator (
20020701-1.c:48:31: identifier v2
20020701-1.c:48:33: punctuator )
20020701-1.c:48:35: punctuator ?
20020701-1.c:48:37: identifier B
20020701-1.c:48:39: punctuator :
20020701-1.c:48:41: identifier A
20020701-1.c:48:42: punctuator ;
20020701-1.c:49:7: identifier v2
20020701-1.c:49:10: punctuator =
20020701-1.c:49:12: punctuator ++
20020701-1.c:49:14: identifier a
20020701-1.c:49:15: punctuator ;
20020701-1.c:50:7: identifier v5
20020701-1.c:50:10: punctuator =
20020701-1.c:50:12: punctuator ++
20020701-1.c:50:14: identifier e
20020701-1.c:50:15: punctuator ;
20020701-1.c:51:7: identifier v3
20020701-1.c:51:10: punctuator =
20020701-1.c:51:12: identifier strchr
20020701-1.c:51:19: punctuator (
20020701-1.c:51:20: identifier v2
20020701-1.c:51:22: punctuator ,
20020701-1.c:51:24: constant ','
20020701-1.c:51:27: punctuator )
20020701-1.c:51:28: punctuator ;
20020701-1.c:52:7: identifier v6
20020701-1.c:52:10: punctuator =
20020701-1.c:52:12: identifier strchr
20020701-1.c:52:19: punctuator (
20020701-1.c:52:20: identifier v5
20020701-1.c:52:22: punctuator ,
20020701-1.c:52:24: constant ','
20020701-1.c:52:27: punctuator )
20020701-1.c:52:28: punctuator ;
20020701-1.c:54:7: keyword while
20020701-1.c:54:13: punctuator (
20020701-1.c:54:14: punctuator (
20020701-1.c:54:15: identifier _v
20020701-1.c:54:18: punctuator +
20020701-1.c:54:20: constant 1
20020701-1.c:54:21: punctuator )
20020701-1.c:54:22: punctuator [
20020701-1.c:54:23: punctuator (
20020701-1.c:54:24: keyword unsigned
20020701-1.c:54:32: punctuator )
20020701-1.c:54:34: punctuator *
20020701-1.c:54:35: identifier a
20020701-1.c:54:36: punctuator ]
20020701-1.c:54:38: punctuator &
20020701-1.c:54:40: constant 4
20020701-1.c:54:41: punctuator )
20020701-1.c:55:9: identifier a
20020701-1.c:55:10: punctuator ++
20020701-1.c:55:12: punctuator ;
20020701-1.c:56:7: keyword while
20020701-1.c:56:13: punctuator (
20020701-1.c:56:14: punctuator (
20020701-1.c:56:15: identifier _v
20020701-1.c:56:18: punctuator +
20020701-1.c:56:20: constant 1
20020701-1.c:56:21: punctuator )
20020701-1.c:56:22: punctuator [
20020701-1.c:56:23: punctuator (
20020701-1.c:56:24: keyword unsigned
20020701-1.c:56:32: punctuator )
20020701-1.c:56:34: punctuator *
20020701-1.c:56:35: identifier e
20020701-1.c:56:36: punctuator ]
20020701-1.c:56:38: punctuator &
20020701-1.c:56:40: constant 4
20020701-1.c:56:41: punctuator )
20020701-1.c:57:9: identifier e
20020701-1.c:57:10: punctuator ++
20020701-1.c:57:12: punctuator ;
20020701-1.c:59:7: keyword if
20020701-1.c:59:10: punctuator (
20020701-1.c:59:11: identifier a
20020701-1.c:59:13: punctuator ==
20020701-1.c:59:16: identifier v3
20020701-1.c:59:19: punctuator &&
20020701-1.c:59:22: identifier e
20020701-1.c:59:24: punctuator ==
20020701-1.c:59:27: identifier v6
20020701-1.c:59:29: punctuator )
20020701-1.c:60:9: punctuator {
20020701-1.c:61:11: keyword if
20020701-1.c:61:14: punctuator (
20020701-1.c:61:15: identifier r
20020701-1.c:61:17: punctuator ==
20020701-1.c:61:20: identifier B
20020701-1.c:61:21: punctuator )
20020701-1.c:62:13: identifier r
20020701-1.c:62:15: punctuator =
20020701-1.c:62:17: identifier B
20020701-1.c:62:18: punctuator ;
20020701-1.c:63:11: keyword else
20020701-1.c:63:16: keyword if
20020701-1.c:63:19: punctuator (
20020701-1.c:63:20: identifier p3
20020701-1.c:63:22: punctuator )
20020701-1.c:64:13: identifier r
20020701-1.c:64:15: punctuator =
20020701-1.c:64:17: identifier atoi
20020701-1.c:64:22: punctuator (
20020701-1.c:64:23: identifier v5
20020701-1.c:64:25: punctuator )
20020701-1.c:64:27: punctuator <
20020701-1.c:64:29: identifier atoi
20020701-1.c:64:34: punctuator (
20020701-1.c:64:35: identifier v2
20020701-1.c:64:37: punctuator )
20020701-1.c:64:39: punctuator ?
20020701-1.c:64:41: identifier B
20020701-1.c:64:43: punctuator :
20020701-1.c:64:45: identifier A
20020701-1.c:64:46: punctuator ;
20020701-1.c:65:11: keyword else
20020701-1.c:66:13: identifier r
20020701-1.c:66:15: punctuator =
20020701-1.c:66:17: identifier atoi
20020701-1.c:66:22: punctuator (
20020701-1.c:66:23: identifier v5
20020701-1.c:66:25: punctuator )
20020701-1.c:66:27: punctuator >
20020701-1.c:66:29: identifier atoi
20020701-1.c:66:34: punctuator (
20020701-1.c:66:35: identifier v2
20020701-1.c:66:37: punctuator )
20020701-1.c:66:39: punctuator ?
20020701-1.c:66:41: identifier B
20020701-1.c:66:43: punctuator :
20020701-1.c:66:45: identifier A
20020701-1.c:66:46: punctuator ;
20020701-1.c:67:9: punctuator }
20020701-1.c:68:7: keyword else
20020701-1.c:69:9: identifier r
20020701-1.c:69:11: punctuator =
20020701-1.c:69:13: identifier C
20020701-1.c:69:14: punctuator ;
20020701-1.c:70:5: punctuator }
20020701-1.c:72:3: identifier f1
20020701-1.c:72:6: punctuator (
20020701-1.c:72:7: identifier v1
20020701-1.c:72:9: punctuator )
20020701-1.c:72:10: punctuator ;
20020701-1.c:73:3: identifier f1
20020701-1.c:73:6: punctuator (
20020701-1.c:73:7: identifier v4
20020701-1.c:73:9: punctuator )
20020701-1.c:73:10: punctuator ;
20020701-1.c:74:3: keyword return
20020701-1.c:74:10: identifier r
20020701-1.c:74:11: punctuator ;
20020701-1.c:75:1: punctuator }
