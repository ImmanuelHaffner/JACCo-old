0
20030410-1.c:3:1: keyword extern
20030410-1.c:3:8: keyword struct
20030410-1.c:3:15: identifier _zend_compiler_globals
20030410-1.c:3:38: identifier compiler_globals
20030410-1.c:3:54: punctuator ;
20030410-1.c:4:1: keyword typedef
20030410-1.c:4:9: keyword struct
20030410-1.c:4:16: identifier _zend_executor_globals
20030410-1.c:4:39: identifier zend_executor_globals
20030410-1.c:4:60: punctuator ;
20030410-1.c:5:1: keyword extern
20030410-1.c:5:8: identifier zend_executor_globals
20030410-1.c:5:30: identifier executor_globals
20030410-1.c:5:46: punctuator ;
20030410-1.c:7:1: keyword typedef
20030410-1.c:7:9: keyword struct
20030410-1.c:7:16: identifier _zend_ptr_stack
20030410-1.c:7:32: punctuator {
20030410-1.c:8:9: keyword int
20030410-1.c:8:13: identifier top
20030410-1.c:8:16: punctuator ;
20030410-1.c:9:9: keyword void
20030410-1.c:9:14: punctuator *
20030410-1.c:9:15: punctuator *
20030410-1.c:9:16: identifier top_element
20030410-1.c:9:27: punctuator ;
20030410-1.c:10:1: punctuator }
20030410-1.c:10:3: identifier zend_ptr_stack
20030410-1.c:10:17: punctuator ;
20030410-1.c:11:1: keyword struct
20030410-1.c:11:8: identifier _zend_compiler_globals
20030410-1.c:11:31: punctuator {
20030410-1.c:12:1: punctuator }
20030410-1.c:12:2: punctuator ;
20030410-1.c:13:1: keyword struct
20030410-1.c:13:8: identifier _zend_executor_globals
20030410-1.c:13:31: punctuator {
20030410-1.c:14:9: keyword int
20030410-1.c:14:13: punctuator *
20030410-1.c:14:14: identifier uninitialized_zval_ptr
20030410-1.c:14:36: punctuator ;
20030410-1.c:15:9: identifier zend_ptr_stack
20030410-1.c:15:24: identifier argument_stack
20030410-1.c:15:38: punctuator ;
20030410-1.c:16:1: punctuator }
20030410-1.c:16:2: punctuator ;
20030410-1.c:18:1: keyword static
20030410-1.c:18:8: keyword inline
20030410-1.c:18:15: keyword void
20030410-1.c:18:20: identifier safe_free_zval_ptr
20030410-1.c:18:38: punctuator (
20030410-1.c:18:39: keyword int
20030410-1.c:18:43: punctuator *
20030410-1.c:18:44: identifier p
20030410-1.c:18:45: punctuator )
20030410-1.c:19:1: punctuator {
20030410-1.c:20:9: keyword if
20030410-1.c:20:12: punctuator (
20030410-1.c:20:13: identifier p
20030410-1.c:20:14: punctuator !=
20030410-1.c:20:16: punctuator (
20030410-1.c:20:17: identifier executor_globals
20030410-1.c:20:33: punctuator .
20030410-1.c:20:34: identifier uninitialized_zval_ptr
20030410-1.c:20:56: punctuator )
20030410-1.c:20:57: punctuator )
20030410-1.c:20:59: punctuator {
20030410-1.c:21:9: punctuator }
20030410-1.c:22:1: punctuator }
20030410-1.c:23:1: identifier zend_executor_globals
20030410-1.c:23:23: identifier executor_globals
20030410-1.c:23:39: punctuator ;
20030410-1.c:24:1: keyword static
20030410-1.c:24:8: keyword inline
20030410-1.c:24:15: keyword void
20030410-1.c:24:20: identifier zend_ptr_stack_clear_multiple
20030410-1.c:24:49: punctuator (
20030410-1.c:24:50: keyword void
20030410-1.c:24:54: punctuator )
20030410-1.c:25:1: punctuator {
20030410-1.c:26:9: identifier executor_globals
20030410-1.c:26:25: punctuator .
20030410-1.c:26:26: identifier argument_stack
20030410-1.c:26:40: punctuator .
20030410-1.c:26:41: identifier top
20030410-1.c:26:45: punctuator -=
20030410-1.c:26:48: constant 2
20030410-1.c:26:49: punctuator ;
20030410-1.c:27:1: punctuator }
