0
20071114-1.c:4:1 keyword typedef
20071114-1.c:4:9 keyword unsigned
20071114-1.c:4:18 keyword char
20071114-1.c:4:23 identifier bool8
20071114-1.c:4:28 punctuator ;
20071114-1.c:5:1 keyword typedef
20071114-1.c:5:9 keyword unsigned
20071114-1.c:5:18 keyword char
20071114-1.c:5:23 identifier uint8_t
20071114-1.c:5:30 punctuator ;
20071114-1.c:6:1 keyword typedef
20071114-1.c:6:9 keyword unsigned
20071114-1.c:6:18 keyword short
20071114-1.c:6:24 keyword int
20071114-1.c:6:28 identifier uint16_t
20071114-1.c:6:36 punctuator ;
20071114-1.c:7:1 keyword typedef
20071114-1.c:7:9 keyword unsigned
20071114-1.c:7:18 keyword int
20071114-1.c:7:22 identifier uint32_t
20071114-1.c:7:30 punctuator ;
20071114-1.c:8:1 keyword typedef
20071114-1.c:8:9 identifier uint8_t
20071114-1.c:8:17 identifier uint8
20071114-1.c:8:22 punctuator ;
20071114-1.c:9:1 keyword typedef
20071114-1.c:9:9 identifier uint16_t
20071114-1.c:9:18 identifier uint16
20071114-1.c:9:24 punctuator ;
20071114-1.c:10:1 keyword typedef
20071114-1.c:10:9 identifier uint32_t
20071114-1.c:10:18 identifier uint32
20071114-1.c:10:24 punctuator ;
20071114-1.c:12:1 keyword struct
20071114-1.c:12:8 identifier SIAPU
20071114-1.c:13:1 punctuator {
20071114-1.c:14:5 identifier uint8
20071114-1.c:14:11 punctuator *
20071114-1.c:14:12 identifier PC
20071114-1.c:14:14 punctuator ;
20071114-1.c:15:5 identifier uint8
20071114-1.c:15:11 punctuator *
20071114-1.c:15:12 identifier RAM
20071114-1.c:15:15 punctuator ;
20071114-1.c:16:5 identifier uint8
20071114-1.c:16:11 identifier Bit
20071114-1.c:16:14 punctuator ;
20071114-1.c:17:5 identifier uint32
20071114-1.c:17:12 identifier Address
20071114-1.c:17:19 punctuator ;
20071114-1.c:18:5 identifier uint8
20071114-1.c:18:11 punctuator *
20071114-1.c:18:12 identifier WaitAddress1
20071114-1.c:18:24 punctuator ;
20071114-1.c:19:5 identifier uint8
20071114-1.c:19:11 punctuator *
20071114-1.c:19:12 identifier WaitAddress2
20071114-1.c:19:24 punctuator ;
20071114-1.c:20:5 identifier uint8
20071114-1.c:20:11 identifier _Carry
20071114-1.c:20:17 punctuator ;
20071114-1.c:21:1 punctuator }
20071114-1.c:21:2 punctuator ;
20071114-1.c:23:1 keyword struct
20071114-1.c:23:8 identifier SAPU
20071114-1.c:24:1 punctuator {
20071114-1.c:25:5 identifier bool8
20071114-1.c:25:11 identifier ShowROM
20071114-1.c:25:18 punctuator ;
20071114-1.c:26:5 identifier uint8
20071114-1.c:26:11 identifier OutPorts
20071114-1.c:26:20 punctuator [
20071114-1.c:26:21 constant 4
20071114-1.c:26:22 punctuator ]
20071114-1.c:26:23 punctuator ;
20071114-1.c:27:5 identifier uint8
20071114-1.c:27:11 identifier ExtraRAM
20071114-1.c:27:20 punctuator [
20071114-1.c:27:21 constant 64
20071114-1.c:27:23 punctuator ]
20071114-1.c:27:24 punctuator ;
20071114-1.c:28:5 identifier uint16
20071114-1.c:28:12 identifier TimerTarget
20071114-1.c:28:24 punctuator [
20071114-1.c:28:25 constant 3
20071114-1.c:28:26 punctuator ]
20071114-1.c:28:27 punctuator ;
20071114-1.c:29:1 punctuator }
20071114-1.c:29:2 punctuator ;
20071114-1.c:31:1 keyword struct
20071114-1.c:31:8 identifier SAPU
20071114-1.c:31:13 identifier APU
20071114-1.c:31:16 punctuator ;
20071114-1.c:32:1 keyword struct
20071114-1.c:32:8 identifier SIAPU
20071114-1.c:32:14 identifier IAPU
20071114-1.c:32:18 punctuator ;
20071114-1.c:34:1 keyword void
20071114-1.c:34:6 identifier S9xSetAPUControl
20071114-1.c:34:23 punctuator (
20071114-1.c:34:24 identifier uint8
20071114-1.c:34:30 identifier byte
20071114-1.c:34:34 punctuator )
20071114-1.c:34:35 punctuator ;
20071114-1.c:35:1 keyword void
20071114-1.c:35:6 identifier S9xSetAPUDSP
20071114-1.c:35:19 punctuator (
20071114-1.c:35:20 identifier uint8
20071114-1.c:35:26 identifier byte
20071114-1.c:35:30 punctuator )
20071114-1.c:35:31 punctuator ;
20071114-1.c:36:1 identifier uint8
20071114-1.c:36:7 identifier S9xGetAPUDSP
20071114-1.c:36:20 punctuator (
20071114-1.c:36:21 punctuator )
20071114-1.c:36:22 punctuator ;
20071114-1.c:38:1 identifier uint8
20071114-1.c:38:7 identifier S9xAPUGetByte
20071114-1.c:38:21 punctuator (
20071114-1.c:38:22 identifier uint32
20071114-1.c:38:29 identifier Address
20071114-1.c:38:36 punctuator )
20071114-1.c:39:1 punctuator {
20071114-1.c:40:3 identifier Address
20071114-1.c:40:11 punctuator &=
20071114-1.c:40:14 constant 0xffff
20071114-1.c:40:20 punctuator ;
20071114-1.c:42:3 keyword if
20071114-1.c:42:6 punctuator (
20071114-1.c:42:7 identifier Address
20071114-1.c:42:15 punctuator <=
20071114-1.c:42:18 constant 0xff
20071114-1.c:42:23 punctuator &&
20071114-1.c:42:26 identifier Address
20071114-1.c:42:34 punctuator >=
20071114-1.c:42:37 constant 0xf0
20071114-1.c:42:41 punctuator )
20071114-1.c:43:5 punctuator {
20071114-1.c:44:7 keyword if
20071114-1.c:44:10 punctuator (
20071114-1.c:44:11 identifier Address
20071114-1.c:44:19 punctuator >=
20071114-1.c:44:22 constant 0xf4
20071114-1.c:44:27 punctuator &&
20071114-1.c:44:30 identifier Address
20071114-1.c:44:38 punctuator <=
20071114-1.c:44:41 constant 0xf7
20071114-1.c:44:45 punctuator )
20071114-1.c:45:2 punctuator {
20071114-1.c:46:4 identifier IAPU
20071114-1.c:46:8 punctuator .
20071114-1.c:46:9 identifier WaitAddress2
20071114-1.c:46:22 punctuator =
20071114-1.c:46:24 identifier IAPU
20071114-1.c:46:28 punctuator .
20071114-1.c:46:29 identifier WaitAddress1
20071114-1.c:46:41 punctuator ;
20071114-1.c:47:4 identifier IAPU
20071114-1.c:47:8 punctuator .
20071114-1.c:47:9 identifier WaitAddress1
20071114-1.c:47:22 punctuator =
20071114-1.c:47:24 identifier IAPU
20071114-1.c:47:28 punctuator .
20071114-1.c:47:29 identifier PC
20071114-1.c:47:31 punctuator ;
20071114-1.c:48:4 keyword return
20071114-1.c:48:11 punctuator (
20071114-1.c:48:12 identifier IAPU
20071114-1.c:48:16 punctuator .
20071114-1.c:48:17 identifier RAM
20071114-1.c:48:21 punctuator [
20071114-1.c:48:22 identifier Address
20071114-1.c:48:29 punctuator ]
20071114-1.c:48:30 punctuator )
20071114-1.c:48:31 punctuator ;
20071114-1.c:49:2 punctuator }
20071114-1.c:50:7 keyword else
20071114-1.c:50:12 keyword if
20071114-1.c:50:15 punctuator (
20071114-1.c:50:16 identifier Address
20071114-1.c:50:24 punctuator ==
20071114-1.c:50:27 constant 0xf3
20071114-1.c:50:31 punctuator )
20071114-1.c:51:2 keyword return
20071114-1.c:51:9 punctuator (
20071114-1.c:51:10 identifier S9xGetAPUDSP
20071114-1.c:51:23 punctuator (
20071114-1.c:51:24 punctuator )
20071114-1.c:51:25 punctuator )
20071114-1.c:51:26 punctuator ;
20071114-1.c:53:7 keyword if
20071114-1.c:53:10 punctuator (
20071114-1.c:53:11 identifier Address
20071114-1.c:53:19 punctuator >=
20071114-1.c:53:22 constant 0xfd
20071114-1.c:53:26 punctuator )
20071114-1.c:54:2 punctuator {
20071114-1.c:55:4 identifier IAPU
20071114-1.c:55:8 punctuator .
20071114-1.c:55:9 identifier WaitAddress2
20071114-1.c:55:22 punctuator =
20071114-1.c:55:24 identifier IAPU
20071114-1.c:55:28 punctuator .
20071114-1.c:55:29 identifier WaitAddress1
20071114-1.c:55:41 punctuator ;
20071114-1.c:56:4 identifier IAPU
20071114-1.c:56:8 punctuator .
20071114-1.c:56:9 identifier WaitAddress1
20071114-1.c:56:22 punctuator =
20071114-1.c:56:24 identifier IAPU
20071114-1.c:56:28 punctuator .
20071114-1.c:56:29 identifier PC
20071114-1.c:56:31 punctuator ;
20071114-1.c:57:4 identifier uint8
20071114-1.c:57:10 identifier t
20071114-1.c:57:12 punctuator =
20071114-1.c:57:14 identifier IAPU
20071114-1.c:57:18 punctuator .
20071114-1.c:57:19 identifier RAM
20071114-1.c:57:23 punctuator [
20071114-1.c:57:24 identifier Address
20071114-1.c:57:31 punctuator ]
20071114-1.c:57:32 punctuator ;
20071114-1.c:58:4 identifier IAPU
20071114-1.c:58:8 punctuator .
20071114-1.c:58:9 identifier RAM
20071114-1.c:58:13 punctuator [
20071114-1.c:58:14 identifier Address
20071114-1.c:58:21 punctuator ]
20071114-1.c:58:23 punctuator =
20071114-1.c:58:25 constant 0
20071114-1.c:58:26 punctuator ;
20071114-1.c:59:4 keyword return
20071114-1.c:59:11 punctuator (
20071114-1.c:59:12 identifier t
20071114-1.c:59:13 punctuator )
20071114-1.c:59:14 punctuator ;
20071114-1.c:60:2 punctuator }
20071114-1.c:62:7 keyword return
20071114-1.c:62:14 punctuator (
20071114-1.c:62:15 identifier IAPU
20071114-1.c:62:19 punctuator .
20071114-1.c:62:20 identifier RAM
20071114-1.c:62:24 punctuator [
20071114-1.c:62:25 identifier Address
20071114-1.c:62:32 punctuator ]
20071114-1.c:62:33 punctuator )
20071114-1.c:62:34 punctuator ;
20071114-1.c:63:5 punctuator }
20071114-1.c:64:2 keyword else
20071114-1.c:65:4 keyword return
20071114-1.c:65:11 punctuator (
20071114-1.c:65:12 identifier IAPU
20071114-1.c:65:16 punctuator .
20071114-1.c:65:17 identifier RAM
20071114-1.c:65:21 punctuator [
20071114-1.c:65:22 identifier Address
20071114-1.c:65:29 punctuator ]
20071114-1.c:65:30 punctuator )
20071114-1.c:65:31 punctuator ;
20071114-1.c:66:1 punctuator }
20071114-1.c:68:1 keyword void
20071114-1.c:68:6 identifier S9xAPUSetByte
20071114-1.c:68:20 punctuator (
20071114-1.c:68:21 identifier uint8
20071114-1.c:68:27 identifier byte
20071114-1.c:68:31 punctuator ,
20071114-1.c:68:33 identifier uint32
20071114-1.c:68:40 identifier Address
20071114-1.c:68:47 punctuator )
20071114-1.c:69:1 punctuator {
20071114-1.c:70:3 identifier Address
20071114-1.c:70:11 punctuator &=
20071114-1.c:70:14 constant 0xffff
20071114-1.c:70:20 punctuator ;
20071114-1.c:72:3 keyword if
20071114-1.c:72:6 punctuator (
20071114-1.c:72:7 identifier Address
20071114-1.c:72:15 punctuator <=
20071114-1.c:72:18 constant 0xff
20071114-1.c:72:23 punctuator &&
20071114-1.c:72:26 identifier Address
20071114-1.c:72:34 punctuator >=
20071114-1.c:72:37 constant 0xf0
20071114-1.c:72:41 punctuator )
20071114-1.c:73:5 punctuator {
20071114-1.c:74:7 keyword if
20071114-1.c:74:10 punctuator (
20071114-1.c:74:11 identifier Address
20071114-1.c:74:19 punctuator ==
20071114-1.c:74:22 constant 0xf3
20071114-1.c:74:26 punctuator )
20071114-1.c:75:2 identifier S9xSetAPUDSP
20071114-1.c:75:15 punctuator (
20071114-1.c:75:16 identifier byte
20071114-1.c:75:20 punctuator )
20071114-1.c:75:21 punctuator ;
20071114-1.c:76:7 keyword else
20071114-1.c:76:12 keyword if
20071114-1.c:76:15 punctuator (
20071114-1.c:76:16 identifier Address
20071114-1.c:76:24 punctuator >=
20071114-1.c:76:27 constant 0xf4
20071114-1.c:76:32 punctuator &&
20071114-1.c:76:35 identifier Address
20071114-1.c:76:43 punctuator <=
20071114-1.c:76:46 constant 0xf7
20071114-1.c:76:50 punctuator )
20071114-1.c:77:2 identifier APU
20071114-1.c:77:5 punctuator .
20071114-1.c:77:6 identifier OutPorts
20071114-1.c:77:15 punctuator [
20071114-1.c:77:16 identifier Address
20071114-1.c:77:24 punctuator -
20071114-1.c:77:26 constant 0xf4
20071114-1.c:77:30 punctuator ]
20071114-1.c:77:32 punctuator =
20071114-1.c:77:34 identifier byte
20071114-1.c:77:38 punctuator ;
20071114-1.c:78:7 keyword else
20071114-1.c:78:12 keyword if
20071114-1.c:78:15 punctuator (
20071114-1.c:78:16 identifier Address
20071114-1.c:78:24 punctuator ==
20071114-1.c:78:27 constant 0xf1
20071114-1.c:78:31 punctuator )
20071114-1.c:79:2 identifier S9xSetAPUControl
20071114-1.c:79:19 punctuator (
20071114-1.c:79:20 identifier byte
20071114-1.c:79:24 punctuator )
20071114-1.c:79:25 punctuator ;
20071114-1.c:80:7 keyword else
20071114-1.c:80:12 keyword if
20071114-1.c:80:15 punctuator (
20071114-1.c:80:16 identifier Address
20071114-1.c:80:24 punctuator <
20071114-1.c:80:26 constant 0xfd
20071114-1.c:80:30 punctuator )
20071114-1.c:81:2 punctuator {
20071114-1.c:82:4 identifier IAPU
20071114-1.c:82:8 punctuator .
20071114-1.c:82:9 identifier RAM
20071114-1.c:82:13 punctuator [
20071114-1.c:82:14 identifier Address
20071114-1.c:82:21 punctuator ]
20071114-1.c:82:23 punctuator =
20071114-1.c:82:25 identifier byte
20071114-1.c:82:29 punctuator ;
20071114-1.c:83:4 keyword if
20071114-1.c:83:7 punctuator (
20071114-1.c:83:8 identifier Address
20071114-1.c:83:16 punctuator >=
20071114-1.c:83:19 constant 0xfa
20071114-1.c:83:23 punctuator )
20071114-1.c:84:6 punctuator {
20071114-1.c:85:8 keyword if
20071114-1.c:85:11 punctuator (
20071114-1.c:85:12 identifier byte
20071114-1.c:85:17 punctuator ==
20071114-1.c:85:20 constant 0
20071114-1.c:85:21 punctuator )
20071114-1.c:86:3 identifier APU
20071114-1.c:86:6 punctuator .
20071114-1.c:86:7 identifier TimerTarget
20071114-1.c:86:19 punctuator [
20071114-1.c:86:20 identifier Address
20071114-1.c:86:28 punctuator -
20071114-1.c:86:30 constant 0xfa
20071114-1.c:86:34 punctuator ]
20071114-1.c:86:36 punctuator =
20071114-1.c:86:38 constant 0x100
20071114-1.c:86:43 punctuator ;
20071114-1.c:87:8 keyword else
20071114-1.c:88:3 identifier APU
20071114-1.c:88:6 punctuator .
20071114-1.c:88:7 identifier TimerTarget
20071114-1.c:88:19 punctuator [
20071114-1.c:88:20 identifier Address
20071114-1.c:88:28 punctuator -
20071114-1.c:88:30 constant 0xfa
20071114-1.c:88:34 punctuator ]
20071114-1.c:88:36 punctuator =
20071114-1.c:88:38 identifier byte
20071114-1.c:88:42 punctuator ;
20071114-1.c:89:6 punctuator }
20071114-1.c:90:2 punctuator }
20071114-1.c:91:5 punctuator }
20071114-1.c:92:3 keyword else
20071114-1.c:93:5 punctuator {
20071114-1.c:94:7 keyword if
20071114-1.c:94:10 punctuator (
20071114-1.c:94:11 identifier Address
20071114-1.c:94:19 punctuator <
20071114-1.c:94:21 constant 0xffc0
20071114-1.c:94:27 punctuator )
20071114-1.c:95:2 identifier IAPU
20071114-1.c:95:6 punctuator .
20071114-1.c:95:7 identifier RAM
20071114-1.c:95:11 punctuator [
20071114-1.c:95:12 identifier Address
20071114-1.c:95:19 punctuator ]
20071114-1.c:95:21 punctuator =
20071114-1.c:95:23 identifier byte
20071114-1.c:95:27 punctuator ;
20071114-1.c:96:7 keyword else
20071114-1.c:97:2 punctuator {
20071114-1.c:98:4 identifier APU
20071114-1.c:98:7 punctuator .
20071114-1.c:98:8 identifier ExtraRAM
20071114-1.c:98:17 punctuator [
20071114-1.c:98:18 identifier Address
20071114-1.c:98:26 punctuator -
20071114-1.c:98:28 constant 0xffc0
20071114-1.c:98:34 punctuator ]
20071114-1.c:98:36 punctuator =
20071114-1.c:98:38 identifier byte
20071114-1.c:98:42 punctuator ;
20071114-1.c:99:4 keyword if
20071114-1.c:99:7 punctuator (
20071114-1.c:99:8 punctuator !
20071114-1.c:99:9 identifier APU
20071114-1.c:99:12 punctuator .
20071114-1.c:99:13 identifier ShowROM
20071114-1.c:99:20 punctuator )
20071114-1.c:100:6 identifier IAPU
20071114-1.c:100:10 punctuator .
20071114-1.c:100:11 identifier RAM
20071114-1.c:100:15 punctuator [
20071114-1.c:100:16 identifier Address
20071114-1.c:100:23 punctuator ]
20071114-1.c:100:25 punctuator =
20071114-1.c:100:27 identifier byte
20071114-1.c:100:31 punctuator ;
20071114-1.c:101:2 punctuator }
20071114-1.c:102:5 punctuator }
20071114-1.c:103:1 punctuator }
20071114-1.c:105:1 keyword void
20071114-1.c:105:6 identifier ApuCA
20071114-1.c:105:12 punctuator (
20071114-1.c:105:13 punctuator )
20071114-1.c:106:1 punctuator {
20071114-1.c:107:3 identifier IAPU
20071114-1.c:107:7 punctuator .
20071114-1.c:107:8 identifier Address
20071114-1.c:107:16 punctuator =
20071114-1.c:107:18 punctuator *
20071114-1.c:107:19 punctuator (
20071114-1.c:107:20 identifier uint16
20071114-1.c:107:27 punctuator *
20071114-1.c:107:28 punctuator )
20071114-1.c:107:30 punctuator (
20071114-1.c:107:31 identifier IAPU
20071114-1.c:107:35 punctuator .
20071114-1.c:107:36 identifier PC
20071114-1.c:107:39 punctuator +
20071114-1.c:107:41 constant 1
20071114-1.c:107:42 punctuator )
20071114-1.c:107:43 punctuator ;
20071114-1.c:108:3 identifier IAPU
20071114-1.c:108:7 punctuator .
20071114-1.c:108:8 identifier Bit
20071114-1.c:108:12 punctuator =
20071114-1.c:108:14 punctuator (
20071114-1.c:108:15 identifier uint8
20071114-1.c:108:20 punctuator )
20071114-1.c:108:21 punctuator (
20071114-1.c:108:22 identifier IAPU
20071114-1.c:108:26 punctuator .
20071114-1.c:108:27 identifier Address
20071114-1.c:108:35 punctuator >>
20071114-1.c:108:38 constant 13
20071114-1.c:108:40 punctuator )
20071114-1.c:108:41 punctuator ;
20071114-1.c:109:3 keyword if
20071114-1.c:109:6 punctuator (
20071114-1.c:109:7 punctuator (
20071114-1.c:109:8 identifier IAPU
20071114-1.c:109:12 punctuator .
20071114-1.c:109:13 identifier _Carry
20071114-1.c:109:19 punctuator )
20071114-1.c:109:20 punctuator )
20071114-1.c:110:5 identifier S9xAPUSetByte
20071114-1.c:110:19 punctuator (
20071114-1.c:110:20 identifier S9xAPUGetByte
20071114-1.c:110:34 punctuator (
20071114-1.c:110:35 identifier IAPU
20071114-1.c:110:39 punctuator .
20071114-1.c:110:40 identifier Address
20071114-1.c:110:47 punctuator )
20071114-1.c:110:49 punctuator |
20071114-1.c:110:51 punctuator (
20071114-1.c:110:52 constant 1
20071114-1.c:110:54 punctuator <<
20071114-1.c:110:57 identifier IAPU
20071114-1.c:110:61 punctuator .
20071114-1.c:110:62 identifier Bit
20071114-1.c:110:65 punctuator )
20071114-1.c:110:66 punctuator ,
20071114-1.c:110:68 identifier IAPU
20071114-1.c:110:72 punctuator .
20071114-1.c:110:73 identifier Address
20071114-1.c:110:80 punctuator )
20071114-1.c:110:81 punctuator ;
20071114-1.c:111:3 keyword else
20071114-1.c:112:5 identifier S9xAPUSetByte
20071114-1.c:112:19 punctuator (
20071114-1.c:112:20 identifier S9xAPUGetByte
20071114-1.c:112:34 punctuator (
20071114-1.c:112:35 identifier IAPU
20071114-1.c:112:39 punctuator .
20071114-1.c:112:40 identifier Address
20071114-1.c:112:47 punctuator )
20071114-1.c:112:49 punctuator &
20071114-1.c:112:51 punctuator ~
20071114-1.c:112:52 punctuator (
20071114-1.c:112:53 constant 1
20071114-1.c:112:55 punctuator <<
20071114-1.c:112:58 identifier IAPU
20071114-1.c:112:62 punctuator .
20071114-1.c:112:63 identifier Bit
20071114-1.c:112:66 punctuator )
20071114-1.c:112:67 punctuator ,
20071114-1.c:112:69 identifier IAPU
20071114-1.c:112:73 punctuator .
20071114-1.c:112:74 identifier Address
20071114-1.c:112:81 punctuator )
20071114-1.c:112:82 punctuator ;
20071114-1.c:113:1 punctuator }
