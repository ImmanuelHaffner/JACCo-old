0
20080704-1.c:3:1: keyword typedef
20080704-1.c:3:9: keyword unsigned
20080704-1.c:3:18: keyword int
20080704-1.c:3:22: identifier uint32_t
20080704-1.c:3:30: punctuator ;
20080704-1.c:4:1: keyword union
20080704-1.c:4:7: identifier double_union
20080704-1.c:5:1: punctuator {
20080704-1.c:6:3: keyword double
20080704-1.c:6:10: identifier d
20080704-1.c:6:11: punctuator ;
20080704-1.c:7:3: identifier uint32_t
20080704-1.c:7:12: identifier i
20080704-1.c:7:13: punctuator [
20080704-1.c:7:14: constant 2
20080704-1.c:7:15: punctuator ]
20080704-1.c:7:16: punctuator ;
20080704-1.c:8:1: punctuator }
20080704-1.c:8:2: punctuator ;
20080704-1.c:9:1: keyword struct
20080704-1.c:9:8: identifier _Jv_reent
20080704-1.c:10:1: punctuator {
20080704-1.c:11:3: keyword int
20080704-1.c:11:7: identifier _errno
20080704-1.c:11:13: punctuator ;
20080704-1.c:12:1: punctuator }
20080704-1.c:12:2: punctuator ;
20080704-1.c:13:1: identifier _Jv_strtod_r
20080704-1.c:13:14: punctuator (
20080704-1.c:13:15: keyword struct
20080704-1.c:13:22: identifier _Jv_reent
20080704-1.c:13:32: punctuator *
20080704-1.c:13:33: identifier ptr
20080704-1.c:13:36: punctuator ,
20080704-1.c:13:38: keyword char
20080704-1.c:13:43: punctuator *
20080704-1.c:13:44: punctuator *
20080704-1.c:13:45: identifier se
20080704-1.c:13:47: punctuator )
20080704-1.c:14:1: punctuator {
20080704-1.c:15:3: keyword int
20080704-1.c:15:7: identifier bb2
20080704-1.c:15:10: punctuator ,
20080704-1.c:15:12: identifier sign
20080704-1.c:15:16: punctuator ;
20080704-1.c:16:3: keyword double
20080704-1.c:16:10: identifier aadj
20080704-1.c:16:14: punctuator ,
20080704-1.c:16:16: identifier aadj1
20080704-1.c:16:21: punctuator ,
20080704-1.c:16:23: identifier adj
20080704-1.c:16:26: punctuator ;
20080704-1.c:17:3: keyword unsigned
20080704-1.c:17:12: keyword long
20080704-1.c:17:17: identifier y
20080704-1.c:17:18: punctuator ,
20080704-1.c:17:20: identifier z
20080704-1.c:17:21: punctuator ;
20080704-1.c:18:3: keyword union
20080704-1.c:18:9: identifier double_union
20080704-1.c:18:22: identifier rv
20080704-1.c:18:24: punctuator ,
20080704-1.c:18:26: punctuator *
20080704-1.c:18:27: identifier bs
20080704-1.c:18:30: punctuator =
20080704-1.c:18:32: punctuator (
20080704-1.c:18:33: punctuator (
20080704-1.c:18:34: keyword void
20080704-1.c:18:39: punctuator *
20080704-1.c:18:40: punctuator )
20080704-1.c:18:42: constant 0
20080704-1.c:18:43: punctuator )
20080704-1.c:18:44: punctuator ,
20080704-1.c:18:46: punctuator *
20080704-1.c:18:47: identifier delta
20080704-1.c:18:53: punctuator =
20080704-1.c:18:55: punctuator (
20080704-1.c:18:56: punctuator (
20080704-1.c:18:57: keyword void
20080704-1.c:18:62: punctuator *
20080704-1.c:18:63: punctuator )
20080704-1.c:18:65: constant 0
20080704-1.c:18:66: punctuator )
20080704-1.c:18:67: punctuator ;
20080704-1.c:19:3: punctuator {
20080704-1.c:20:3: identifier ovfl
20080704-1.c:20:7: punctuator :
20080704-1.c:20:8: identifier ptr
20080704-1.c:20:11: punctuator ->
20080704-1.c:20:13: identifier _errno
20080704-1.c:20:20: punctuator =
20080704-1.c:20:22: constant 34
20080704-1.c:20:24: punctuator ;
20080704-1.c:21:5: punctuator {
20080704-1.c:22:7: punctuator (
20080704-1.c:22:8: punctuator (
20080704-1.c:22:9: punctuator (
20080704-1.c:22:10: identifier uint32_t
20080704-1.c:22:18: punctuator )
20080704-1.c:22:20: constant 0xfffffL
20080704-1.c:22:28: punctuator )
20080704-1.c:22:30: punctuator |
20080704-1.c:22:32: punctuator (
20080704-1.c:22:33: punctuator (
20080704-1.c:22:34: identifier uint32_t
20080704-1.c:22:42: punctuator )
20080704-1.c:22:44: constant 0x100000L
20080704-1.c:22:53: punctuator )
20080704-1.c:22:55: punctuator *
20080704-1.c:22:57: punctuator (
20080704-1.c:22:58: constant 1024
20080704-1.c:22:63: punctuator +
20080704-1.c:22:65: constant 1023
20080704-1.c:22:70: punctuator -
20080704-1.c:22:72: constant 1
20080704-1.c:22:73: punctuator )
20080704-1.c:22:74: punctuator )
20080704-1.c:22:75: punctuator ;
20080704-1.c:23:5: punctuator }
20080704-1.c:24:5: keyword if
20080704-1.c:24:8: punctuator (
20080704-1.c:24:9: punctuator (
20080704-1.c:24:10: identifier aadj
20080704-1.c:24:15: punctuator =
20080704-1.c:24:17: identifier _Jv_ratio
20080704-1.c:24:27: punctuator (
20080704-1.c:24:28: identifier delta
20080704-1.c:24:33: punctuator ,
20080704-1.c:24:35: identifier bs
20080704-1.c:24:37: punctuator )
20080704-1.c:24:38: punctuator )
20080704-1.c:24:40: punctuator <=
20080704-1.c:24:43: constant 2.
20080704-1.c:24:45: punctuator )
20080704-1.c:25:7: punctuator {
20080704-1.c:26:2: punctuator {
20080704-1.c:27:4: keyword if
20080704-1.c:27:7: punctuator (
20080704-1.c:27:8: identifier aadj
20080704-1.c:27:13: punctuator <
20080704-1.c:27:15: constant 2.
20080704-1.c:27:18: punctuator /
20080704-1.c:27:20: constant 2
20080704-1.c:27:21: punctuator )
20080704-1.c:28:6: identifier aadj
20080704-1.c:28:11: punctuator =
20080704-1.c:28:13: constant 1.
20080704-1.c:28:16: punctuator /
20080704-1.c:28:18: constant 2
20080704-1.c:28:19: punctuator ;
20080704-1.c:29:4: identifier aadj1
20080704-1.c:29:10: punctuator =
20080704-1.c:29:12: punctuator -
20080704-1.c:29:13: identifier aadj
20080704-1.c:29:17: punctuator ;
20080704-1.c:30:2: punctuator }
20080704-1.c:31:7: punctuator }
20080704-1.c:32:5: punctuator {
20080704-1.c:33:7: punctuator (
20080704-1.c:33:8: identifier rv
20080704-1.c:33:10: punctuator .
20080704-1.c:33:11: identifier i
20080704-1.c:33:12: punctuator [
20080704-1.c:33:13: constant 1
20080704-1.c:33:14: punctuator ]
20080704-1.c:33:15: punctuator )
20080704-1.c:33:17: punctuator -=
20080704-1.c:33:20: constant 53
20080704-1.c:33:23: punctuator *
20080704-1.c:33:25: punctuator (
20080704-1.c:33:26: punctuator (
20080704-1.c:33:27: identifier uint32_t
20080704-1.c:33:35: punctuator )
20080704-1.c:33:37: constant 0x100000L
20080704-1.c:33:46: punctuator )
20080704-1.c:33:47: punctuator ;
20080704-1.c:34:7: identifier adj
20080704-1.c:34:11: punctuator =
20080704-1.c:34:13: identifier aadj1
20080704-1.c:34:19: punctuator *
20080704-1.c:34:21: identifier _Jv_ulp
20080704-1.c:34:29: punctuator (
20080704-1.c:34:30: identifier rv
20080704-1.c:34:32: punctuator .
20080704-1.c:34:33: identifier d
20080704-1.c:34:34: punctuator )
20080704-1.c:34:35: punctuator ;
20080704-1.c:35:7: identifier rv
20080704-1.c:35:9: punctuator .
20080704-1.c:35:10: identifier d
20080704-1.c:35:12: punctuator +=
20080704-1.c:35:15: identifier adj
20080704-1.c:35:18: punctuator ;
20080704-1.c:36:7: keyword if
20080704-1.c:36:10: punctuator (
20080704-1.c:36:11: punctuator (
20080704-1.c:36:12: punctuator (
20080704-1.c:36:13: identifier rv
20080704-1.c:36:15: punctuator .
20080704-1.c:36:16: identifier i
20080704-1.c:36:17: punctuator [
20080704-1.c:36:18: constant 1
20080704-1.c:36:19: punctuator ]
20080704-1.c:36:20: punctuator )
20080704-1.c:36:22: punctuator &
20080704-1.c:36:24: punctuator (
20080704-1.c:36:25: punctuator (
20080704-1.c:36:26: identifier uint32_t
20080704-1.c:36:34: punctuator )
20080704-1.c:36:36: constant 0x7ff00000L
20080704-1.c:36:47: punctuator )
20080704-1.c:36:48: punctuator )
20080704-1.c:36:50: punctuator >=
20080704-1.c:37:4: punctuator (
20080704-1.c:37:5: punctuator (
20080704-1.c:37:6: identifier uint32_t
20080704-1.c:37:14: punctuator )
20080704-1.c:37:16: constant 0x100000L
20080704-1.c:37:25: punctuator )
20080704-1.c:37:27: punctuator *
20080704-1.c:37:29: punctuator (
20080704-1.c:37:30: constant 1024
20080704-1.c:37:35: punctuator +
20080704-1.c:37:37: constant 1023
20080704-1.c:37:42: punctuator -
20080704-1.c:37:44: constant 53
20080704-1.c:37:46: punctuator )
20080704-1.c:37:47: punctuator )
20080704-1.c:38:2: punctuator {
20080704-1.c:39:4: keyword goto
20080704-1.c:39:9: identifier ovfl
20080704-1.c:39:13: punctuator ;
20080704-1.c:40:2: punctuator }
20080704-1.c:41:5: punctuator }
20080704-1.c:42:3: punctuator }
20080704-1.c:43:1: punctuator }
