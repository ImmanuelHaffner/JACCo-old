0
20020314-1.c:1:1: keyword typedef
20020314-1.c:1:9: keyword struct
20020314-1.c:1:16: identifier tux_req_struct
20020314-1.c:1:31: identifier tux_req_t
20020314-1.c:1:40: punctuator ;
20020314-1.c:2:1: keyword struct
20020314-1.c:2:8: identifier tux_req_struct
20020314-1.c:3:1: punctuator {
20020314-1.c:4:9: keyword struct
20020314-1.c:4:16: identifier socket
20020314-1.c:4:23: punctuator *
20020314-1.c:4:24: identifier sock
20020314-1.c:4:28: punctuator ;
20020314-1.c:5:9: keyword char
20020314-1.c:5:14: identifier usermode
20020314-1.c:5:22: punctuator ;
20020314-1.c:6:9: keyword char
20020314-1.c:6:14: punctuator *
20020314-1.c:6:15: identifier userbuf
20020314-1.c:6:22: punctuator ;
20020314-1.c:7:9: keyword unsigned
20020314-1.c:7:18: keyword int
20020314-1.c:7:22: identifier userlen
20020314-1.c:7:29: punctuator ;
20020314-1.c:8:9: keyword char
20020314-1.c:8:14: identifier error
20020314-1.c:8:19: punctuator ;
20020314-1.c:9:9: keyword void
20020314-1.c:9:14: punctuator *
20020314-1.c:9:15: identifier private
20020314-1.c:9:22: punctuator ;
20020314-1.c:10:1: punctuator }
20020314-1.c:10:2: punctuator ;
20020314-1.c:11:1: keyword void
20020314-1.c:11:6: identifier user_send_buffer
20020314-1.c:11:23: punctuator (
20020314-1.c:11:24: identifier tux_req_t
20020314-1.c:11:34: punctuator *
20020314-1.c:11:35: identifier req
20020314-1.c:11:38: punctuator ,
20020314-1.c:11:40: keyword int
20020314-1.c:11:44: identifier cachemiss
20020314-1.c:11:53: punctuator )
20020314-1.c:12:1: punctuator {
20020314-1.c:13:9: keyword int
20020314-1.c:13:13: identifier ret
20020314-1.c:13:16: punctuator ;
20020314-1.c:14:1: identifier repeat
20020314-1.c:14:7: punctuator :
20020314-1.c:15:9: keyword switch
20020314-1.c:15:16: punctuator (
20020314-1.c:15:17: identifier ret
20020314-1.c:15:20: punctuator )
20020314-1.c:15:22: punctuator {
20020314-1.c:16:17: keyword case
20020314-1.c:16:22: punctuator -
20020314-1.c:16:23: constant 11
20020314-1.c:16:25: punctuator :
20020314-1.c:17:25: keyword if
20020314-1.c:17:28: punctuator (
20020314-1.c:17:29: identifier add_output_space_event
20020314-1.c:17:51: punctuator (
20020314-1.c:17:52: identifier req
20020314-1.c:17:55: punctuator ,
20020314-1.c:17:57: identifier req
20020314-1.c:17:60: punctuator ->
20020314-1.c:17:62: identifier sock
20020314-1.c:17:66: punctuator )
20020314-1.c:17:67: punctuator )
20020314-1.c:17:69: punctuator {
20020314-1.c:18:33: identifier del_tux_atom
20020314-1.c:18:45: punctuator (
20020314-1.c:18:46: identifier req
20020314-1.c:18:49: punctuator )
20020314-1.c:18:50: punctuator ;
20020314-1.c:19:33: keyword goto
20020314-1.c:19:38: identifier repeat
20020314-1.c:19:44: punctuator ;
20020314-1.c:20:25: punctuator }
20020314-1.c:21:25: keyword do
20020314-1.c:21:28: punctuator {
20020314-1.c:21:30: punctuator }
20020314-1.c:21:32: keyword while
20020314-1.c:21:38: punctuator (
20020314-1.c:21:39: constant 0
20020314-1.c:21:40: punctuator )
20020314-1.c:21:41: punctuator ;
20020314-1.c:22:25: keyword break
20020314-1.c:22:30: punctuator ;
20020314-1.c:23:17: keyword default
20020314-1.c:23:24: punctuator :
20020314-1.c:24:25: identifier add_req_to_workqueue
20020314-1.c:24:45: punctuator (
20020314-1.c:24:46: identifier req
20020314-1.c:24:49: punctuator )
20020314-1.c:24:50: punctuator ;
20020314-1.c:25:9: punctuator }
20020314-1.c:26:1: punctuator }
