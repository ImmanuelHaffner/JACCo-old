0
pr35492.c:1:1: keyword void
pr35492.c:1:6: identifier prepare_to_wait
pr35492.c:1:22: punctuator (
pr35492.c:1:23: keyword void
pr35492.c:1:28: punctuator *
pr35492.c:1:29: punctuator ,
pr35492.c:1:31: keyword void
pr35492.c:1:36: punctuator *
pr35492.c:1:37: punctuator ,
pr35492.c:1:39: keyword int
pr35492.c:1:42: punctuator )
pr35492.c:1:43: punctuator ;
pr35492.c:2:1: keyword void
pr35492.c:2:6: identifier finish_wait
pr35492.c:2:18: punctuator (
pr35492.c:2:19: keyword void
pr35492.c:2:24: punctuator *
pr35492.c:2:25: punctuator ,
pr35492.c:2:27: keyword void
pr35492.c:2:32: punctuator *
pr35492.c:2:33: punctuator )
pr35492.c:2:34: punctuator ;
pr35492.c:3:1: keyword extern
pr35492.c:3:8: keyword signed
pr35492.c:3:15: keyword long
pr35492.c:3:20: identifier schedule_timeout
pr35492.c:3:37: punctuator (
pr35492.c:3:38: keyword signed
pr35492.c:3:45: keyword long
pr35492.c:3:49: punctuator )
pr35492.c:3:50: punctuator ;
pr35492.c:4:1: keyword struct
pr35492.c:4:8: identifier sock
pr35492.c:5:1: punctuator {
pr35492.c:6:3: keyword unsigned
pr35492.c:6:12: keyword char
pr35492.c:6:17: identifier skc_state
pr35492.c:6:26: punctuator ;
pr35492.c:7:3: keyword void
pr35492.c:7:8: punctuator *
pr35492.c:7:9: identifier sk_sleep
pr35492.c:7:17: punctuator ;
pr35492.c:8:3: keyword int
pr35492.c:8:7: identifier sk_err
pr35492.c:8:13: punctuator ;
pr35492.c:9:1: punctuator }
pr35492.c:9:2: punctuator ;
pr35492.c:11:1: keyword void
pr35492.c:12:1: identifier sk_stream_wait_connect
pr35492.c:12:24: punctuator (
pr35492.c:12:25: keyword struct
pr35492.c:12:32: identifier sock
pr35492.c:12:37: punctuator *
pr35492.c:12:38: identifier sk
pr35492.c:12:40: punctuator ,
pr35492.c:12:42: keyword long
pr35492.c:12:47: punctuator *
pr35492.c:12:48: identifier timeo_p
pr35492.c:12:55: punctuator )
pr35492.c:13:1: punctuator {
pr35492.c:14:3: keyword int
pr35492.c:14:7: identifier done
pr35492.c:14:11: punctuator ;
pr35492.c:15:3: keyword int
pr35492.c:15:7: identifier wait
pr35492.c:15:11: punctuator ;
pr35492.c:16:3: keyword do
pr35492.c:17:5: punctuator {
pr35492.c:18:7: keyword if
pr35492.c:18:10: punctuator (
pr35492.c:18:11: punctuator (
pr35492.c:18:12: constant 1
pr35492.c:18:14: punctuator <<
pr35492.c:18:17: identifier sk
pr35492.c:18:19: punctuator ->
pr35492.c:18:21: identifier skc_state
pr35492.c:18:30: punctuator )
pr35492.c:18:32: punctuator &
pr35492.c:18:34: punctuator ~
pr35492.c:18:35: constant 12
pr35492.c:18:37: punctuator )
pr35492.c:19:9: keyword return
pr35492.c:19:15: punctuator ;
pr35492.c:20:7: identifier prepare_to_wait
pr35492.c:20:23: punctuator (
pr35492.c:20:24: identifier sk
pr35492.c:20:26: punctuator ->
pr35492.c:20:28: identifier sk_sleep
pr35492.c:20:36: punctuator ,
pr35492.c:20:38: punctuator &
pr35492.c:20:39: identifier wait
pr35492.c:20:43: punctuator ,
pr35492.c:20:45: constant 1
pr35492.c:20:46: punctuator )
pr35492.c:20:47: punctuator ;
pr35492.c:21:7: punctuator *
pr35492.c:21:8: punctuator (
pr35492.c:21:9: identifier timeo_p
pr35492.c:21:16: punctuator )
pr35492.c:21:18: punctuator =
pr35492.c:21:20: identifier schedule_timeout
pr35492.c:21:37: punctuator (
pr35492.c:21:38: constant 0
pr35492.c:21:39: punctuator )
pr35492.c:21:40: punctuator ;
pr35492.c:22:7: identifier done
pr35492.c:22:12: punctuator =
pr35492.c:22:14: punctuator !
pr35492.c:22:15: identifier sk
pr35492.c:22:17: punctuator ->
pr35492.c:22:19: identifier sk_err
pr35492.c:22:25: punctuator ;
pr35492.c:23:7: identifier finish_wait
pr35492.c:23:19: punctuator (
pr35492.c:23:20: identifier sk
pr35492.c:23:22: punctuator ->
pr35492.c:23:24: identifier sk_sleep
pr35492.c:23:32: punctuator ,
pr35492.c:23:34: punctuator &
pr35492.c:23:35: identifier wait
pr35492.c:23:39: punctuator )
pr35492.c:23:40: punctuator ;
pr35492.c:24:5: punctuator }
pr35492.c:25:3: keyword while
pr35492.c:25:9: punctuator (
pr35492.c:25:10: punctuator !
pr35492.c:25:11: identifier done
pr35492.c:25:15: punctuator )
pr35492.c:25:16: punctuator ;
pr35492.c:26:1: punctuator }
