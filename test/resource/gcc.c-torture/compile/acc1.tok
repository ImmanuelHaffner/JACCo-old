0
acc1.c:5:1: keyword double
acc1.c:6:1: identifier foo
acc1.c:6:5: punctuator (
acc1.c:6:6: keyword int
acc1.c:6:10: identifier n
acc1.c:6:11: punctuator ,
acc1.c:6:13: keyword double
acc1.c:6:20: identifier f
acc1.c:6:21: punctuator )
acc1.c:7:1: punctuator {
acc1.c:8:3: keyword if
acc1.c:8:6: punctuator (
acc1.c:8:7: identifier n
acc1.c:8:9: punctuator ==
acc1.c:8:12: constant 0
acc1.c:8:13: punctuator )
acc1.c:9:5: keyword return
acc1.c:9:12: identifier f
acc1.c:9:13: punctuator ;
acc1.c:10:3: keyword else
acc1.c:11:5: keyword return
acc1.c:11:12: identifier f
acc1.c:11:14: punctuator +
acc1.c:11:16: identifier foo
acc1.c:11:20: punctuator (
acc1.c:11:21: identifier n
acc1.c:11:23: punctuator -
acc1.c:11:25: constant 1
acc1.c:11:26: punctuator ,
acc1.c:11:28: identifier f
acc1.c:11:29: punctuator )
acc1.c:11:30: punctuator ;
acc1.c:12:1: punctuator }
acc1.c:14:1: keyword double
acc1.c:15:1: identifier bar
acc1.c:15:5: punctuator (
acc1.c:15:6: keyword int
acc1.c:15:10: identifier n
acc1.c:15:11: punctuator ,
acc1.c:15:13: keyword double
acc1.c:15:20: identifier f
acc1.c:15:21: punctuator )
acc1.c:16:1: punctuator {
acc1.c:17:3: keyword if
acc1.c:17:6: punctuator (
acc1.c:17:7: identifier n
acc1.c:17:9: punctuator ==
acc1.c:17:12: constant 0
acc1.c:17:13: punctuator )
acc1.c:18:5: keyword return
acc1.c:18:12: identifier f
acc1.c:18:13: punctuator ;
acc1.c:19:3: keyword else
acc1.c:20:5: keyword return
acc1.c:20:12: identifier f
acc1.c:20:14: punctuator *
acc1.c:20:16: identifier bar
acc1.c:20:20: punctuator (
acc1.c:20:21: identifier n
acc1.c:20:23: punctuator -
acc1.c:20:25: constant 1
acc1.c:20:26: punctuator ,
acc1.c:20:28: identifier f
acc1.c:20:29: punctuator )
acc1.c:20:30: punctuator ;
acc1.c:21:1: punctuator }
