0
an-if.c:17:1: keyword extern
an-if.c:17:8: keyword void
an-if.c:17:13: identifier __assert_fail
an-if.c:17:27: punctuator (
an-if.c:17:28: identifier __const
an-if.c:17:36: keyword char
an-if.c:17:41: punctuator *
an-if.c:17:42: identifier __assertion
an-if.c:17:53: punctuator ,
an-if.c:17:55: identifier __const
an-if.c:17:63: keyword char
an-if.c:17:68: punctuator *
an-if.c:17:69: identifier __file
an-if.c:17:75: punctuator ,
an-if.c:18:7: keyword unsigned
an-if.c:18:16: keyword int
an-if.c:18:20: identifier __line
an-if.c:18:26: punctuator ,
an-if.c:18:28: identifier __const
an-if.c:18:36: keyword char
an-if.c:18:41: punctuator *
an-if.c:18:42: identifier __function
an-if.c:18:52: punctuator )
an-if.c:19:6: identifier __attribute__
an-if.c:19:20: punctuator (
an-if.c:19:21: punctuator (
an-if.c:19:22: identifier __nothrow__
an-if.c:19:34: punctuator ,
an-if.c:19:36: identifier __leaf__
an-if.c:19:44: punctuator )
an-if.c:19:45: punctuator )
an-if.c:19:47: identifier __attribute__
an-if.c:19:61: punctuator (
an-if.c:19:62: punctuator (
an-if.c:19:63: identifier __noreturn__
an-if.c:19:75: punctuator )
an-if.c:19:76: punctuator )
an-if.c:19:77: punctuator ;
an-if.c:22:1: keyword extern
an-if.c:22:8: keyword void
an-if.c:22:13: identifier __assert_perror_fail
an-if.c:22:34: punctuator (
an-if.c:22:35: keyword int
an-if.c:22:39: identifier __errnum
an-if.c:22:47: punctuator ,
an-if.c:22:49: identifier __const
an-if.c:22:57: keyword char
an-if.c:22:62: punctuator *
an-if.c:22:63: identifier __file
an-if.c:22:69: punctuator ,
an-if.c:23:7: keyword unsigned
an-if.c:23:16: keyword int
an-if.c:23:20: identifier __line
an-if.c:23:26: punctuator ,
an-if.c:24:7: identifier __const
an-if.c:24:15: keyword char
an-if.c:24:20: punctuator *
an-if.c:24:21: identifier __function
an-if.c:24:31: punctuator )
an-if.c:25:6: identifier __attribute__
an-if.c:25:20: punctuator (
an-if.c:25:21: punctuator (
an-if.c:25:22: identifier __nothrow__
an-if.c:25:34: punctuator ,
an-if.c:25:36: identifier __leaf__
an-if.c:25:44: punctuator )
an-if.c:25:45: punctuator )
an-if.c:25:47: identifier __attribute__
an-if.c:25:61: punctuator (
an-if.c:25:62: punctuator (
an-if.c:25:63: identifier __noreturn__
an-if.c:25:75: punctuator )
an-if.c:25:76: punctuator )
an-if.c:25:77: punctuator ;
an-if.c:30:1: keyword extern
an-if.c:30:8: keyword void
an-if.c:30:13: identifier __assert
an-if.c:30:22: punctuator (
an-if.c:30:23: keyword const
an-if.c:30:29: keyword char
an-if.c:30:34: punctuator *
an-if.c:30:35: identifier __assertion
an-if.c:30:46: punctuator ,
an-if.c:30:48: keyword const
an-if.c:30:54: keyword char
an-if.c:30:59: punctuator *
an-if.c:30:60: identifier __file
an-if.c:30:66: punctuator ,
an-if.c:30:68: keyword int
an-if.c:30:72: identifier __line
an-if.c:30:78: punctuator )
an-if.c:31:6: identifier __attribute__
an-if.c:31:20: punctuator (
an-if.c:31:21: punctuator (
an-if.c:31:22: identifier __nothrow__
an-if.c:31:34: punctuator ,
an-if.c:31:36: identifier __leaf__
an-if.c:31:44: punctuator )
an-if.c:31:45: punctuator )
an-if.c:31:47: identifier __attribute__
an-if.c:31:61: punctuator (
an-if.c:31:62: punctuator (
an-if.c:31:63: identifier __noreturn__
an-if.c:31:75: punctuator )
an-if.c:31:76: punctuator )
an-if.c:31:77: punctuator ;
an-if.c:36:1: keyword const
an-if.c:36:7: keyword int
an-if.c:36:11: identifier n
an-if.c:36:13: punctuator =
an-if.c:36:15: constant 8
an-if.c:36:16: punctuator ;
an-if.c:38:1: keyword float
an-if.c:38:7: identifier x
an-if.c:38:8: punctuator [
an-if.c:38:9: constant 8
an-if.c:38:10: punctuator ]
an-if.c:38:11: punctuator ,
an-if.c:38:13: identifier y
an-if.c:38:14: punctuator [
an-if.c:38:15: constant 8
an-if.c:38:16: punctuator ]
an-if.c:38:17: punctuator ,
an-if.c:38:19: identifier z
an-if.c:38:20: punctuator [
an-if.c:38:21: constant 8
an-if.c:38:22: punctuator ]
an-if.c:38:23: punctuator ;
an-if.c:40:1: keyword int
an-if.c:40:5: identifier main
an-if.c:40:9: punctuator (
an-if.c:40:10: punctuator )
an-if.c:40:12: punctuator {
an-if.c:41:5: keyword int
an-if.c:41:9: identifier i
an-if.c:41:11: punctuator =
an-if.c:41:13: constant 0
an-if.c:41:14: punctuator ;
an-if.c:42:5: keyword float
an-if.c:42:11: identifier x_sum
an-if.c:42:17: punctuator =
an-if.c:42:18: constant 0
an-if.c:42:19: punctuator ;
an-if.c:43:5: keyword for
an-if.c:43:8: punctuator (
an-if.c:43:9: identifier i
an-if.c:43:10: punctuator =
an-if.c:43:11: constant 1
an-if.c:43:12: punctuator ;
an-if.c:43:14: identifier i
an-if.c:43:15: punctuator <=
an-if.c:43:17: constant 5
an-if.c:43:18: punctuator ;
an-if.c:43:20: identifier i
an-if.c:43:21: punctuator +=
an-if.c:43:23: constant 4
an-if.c:43:25: punctuator )
an-if.c:43:27: punctuator {
an-if.c:44:9: identifier x
an-if.c:44:10: punctuator [
an-if.c:44:11: constant 0
an-if.c:44:12: punctuator :
an-if.c:44:13: identifier n
an-if.c:44:14: punctuator ]
an-if.c:44:16: punctuator =
an-if.c:44:18: constant 3
an-if.c:44:19: punctuator ;
an-if.c:45:9: identifier y
an-if.c:45:10: punctuator [
an-if.c:45:11: constant 0
an-if.c:45:12: punctuator :
an-if.c:45:13: identifier n
an-if.c:45:14: punctuator ]
an-if.c:45:16: punctuator =
an-if.c:45:18: identifier i
an-if.c:45:19: punctuator ;
an-if.c:46:9: identifier z
an-if.c:46:10: punctuator [
an-if.c:46:11: constant 0
an-if.c:46:12: punctuator :
an-if.c:46:13: identifier n
an-if.c:46:14: punctuator ]
an-if.c:46:16: punctuator =
an-if.c:46:18: constant 0
an-if.c:46:19: punctuator ;
an-if.c:47:9: punctuator (
an-if.c:47:10: punctuator (
an-if.c:47:11: identifier __sec_reduce_add
an-if.c:47:27: punctuator (
an-if.c:47:28: identifier x
an-if.c:47:29: punctuator [
an-if.c:47:30: constant 0
an-if.c:47:31: punctuator :
an-if.c:47:32: identifier n
an-if.c:47:33: punctuator ]
an-if.c:47:34: punctuator )
an-if.c:47:35: punctuator ==
an-if.c:47:37: constant 3
an-if.c:47:38: punctuator *
an-if.c:47:39: identifier n
an-if.c:47:40: punctuator )
an-if.c:47:42: punctuator ?
an-if.c:47:44: punctuator (
an-if.c:47:45: keyword void
an-if.c:47:49: punctuator )
an-if.c:47:51: punctuator (
an-if.c:47:52: constant 0
an-if.c:47:53: punctuator )
an-if.c:47:55: punctuator :
an-if.c:47:57: identifier __assert_fail
an-if.c:47:71: punctuator (
an-if.c:47:72: string-literal "__sec_reduce_add(x[0:n])==3*n"
an-if.c:47:103: punctuator ,
an-if.c:47:105: string-literal "raw/c-c++-common/cilk-plus/AN/an-if.c"
an-if.c:47:144: punctuator ,
an-if.c:47:146: constant 28
an-if.c:47:148: punctuator ,
an-if.c:47:150: identifier __PRETTY_FUNCTION__
an-if.c:47:169: punctuator )
an-if.c:47:170: punctuator )
an-if.c:47:171: punctuator ;
an-if.c:48:9: punctuator (
an-if.c:48:10: punctuator (
an-if.c:48:11: identifier __sec_reduce_add
an-if.c:48:27: punctuator (
an-if.c:48:28: identifier y
an-if.c:48:29: punctuator [
an-if.c:48:30: constant 0
an-if.c:48:31: punctuator :
an-if.c:48:32: identifier n
an-if.c:48:33: punctuator ]
an-if.c:48:34: punctuator )
an-if.c:48:35: punctuator ==
an-if.c:48:37: identifier i
an-if.c:48:38: punctuator *
an-if.c:48:39: identifier n
an-if.c:48:40: punctuator )
an-if.c:48:42: punctuator ?
an-if.c:48:44: punctuator (
an-if.c:48:45: keyword void
an-if.c:48:49: punctuator )
an-if.c:48:51: punctuator (
an-if.c:48:52: constant 0
an-if.c:48:53: punctuator )
an-if.c:48:55: punctuator :
an-if.c:48:57: identifier __assert_fail
an-if.c:48:71: punctuator (
an-if.c:48:72: string-literal "__sec_reduce_add(y[0:n])==i*n"
an-if.c:48:103: punctuator ,
an-if.c:48:105: string-literal "raw/c-c++-common/cilk-plus/AN/an-if.c"
an-if.c:48:144: punctuator ,
an-if.c:48:146: constant 29
an-if.c:48:148: punctuator ,
an-if.c:48:150: identifier __PRETTY_FUNCTION__
an-if.c:48:169: punctuator )
an-if.c:48:170: punctuator )
an-if.c:48:171: punctuator ;
an-if.c:49:9: punctuator (
an-if.c:49:10: punctuator (
an-if.c:49:11: identifier __sec_reduce_add
an-if.c:49:27: punctuator (
an-if.c:49:28: identifier z
an-if.c:49:29: punctuator [
an-if.c:49:30: constant 0
an-if.c:49:31: punctuator :
an-if.c:49:32: identifier n
an-if.c:49:33: punctuator ]
an-if.c:49:34: punctuator )
an-if.c:49:35: punctuator ==
an-if.c:49:37: constant 0
an-if.c:49:38: punctuator )
an-if.c:49:40: punctuator ?
an-if.c:49:42: punctuator (
an-if.c:49:43: keyword void
an-if.c:49:47: punctuator )
an-if.c:49:49: punctuator (
an-if.c:49:50: constant 0
an-if.c:49:51: punctuator )
an-if.c:49:53: punctuator :
an-if.c:49:55: identifier __assert_fail
an-if.c:49:69: punctuator (
an-if.c:49:70: string-literal "__sec_reduce_add(z[0:n])==0"
an-if.c:49:99: punctuator ,
an-if.c:49:101: string-literal "raw/c-c++-common/cilk-plus/AN/an-if.c"
an-if.c:49:140: punctuator ,
an-if.c:49:142: constant 30
an-if.c:49:144: punctuator ,
an-if.c:49:146: identifier __PRETTY_FUNCTION__
an-if.c:49:165: punctuator )
an-if.c:49:166: punctuator )
an-if.c:49:167: punctuator ;
an-if.c:51:9: keyword if
an-if.c:51:12: punctuator (
an-if.c:51:13: identifier x
an-if.c:51:14: punctuator [
an-if.c:51:15: constant 0
an-if.c:51:16: punctuator :
an-if.c:51:17: identifier n
an-if.c:51:18: punctuator ]
an-if.c:51:20: punctuator >=
an-if.c:51:23: identifier y
an-if.c:51:24: punctuator [
an-if.c:51:25: constant 0
an-if.c:51:26: punctuator :
an-if.c:51:27: identifier n
an-if.c:51:28: punctuator ]
an-if.c:51:29: punctuator )
an-if.c:51:31: punctuator {
an-if.c:52:13: identifier z
an-if.c:52:14: punctuator [
an-if.c:52:15: constant 0
an-if.c:52:16: punctuator :
an-if.c:52:17: identifier n
an-if.c:52:18: punctuator ]
an-if.c:52:20: punctuator =
an-if.c:52:22: identifier x
an-if.c:52:23: punctuator [
an-if.c:52:24: constant 0
an-if.c:52:25: punctuator :
an-if.c:52:26: identifier n
an-if.c:52:27: punctuator ]
an-if.c:52:29: punctuator -
an-if.c:52:31: identifier y
an-if.c:52:32: punctuator [
an-if.c:52:33: constant 0
an-if.c:52:34: punctuator :
an-if.c:52:35: identifier n
an-if.c:52:36: punctuator ]
an-if.c:52:37: punctuator ;
an-if.c:53:9: punctuator }
an-if.c:53:11: keyword else
an-if.c:53:16: punctuator {
an-if.c:54:13: identifier z
an-if.c:54:14: punctuator [
an-if.c:54:15: constant 0
an-if.c:54:16: punctuator :
an-if.c:54:17: identifier n
an-if.c:54:18: punctuator ]
an-if.c:54:20: punctuator =
an-if.c:54:22: identifier x
an-if.c:54:23: punctuator [
an-if.c:54:24: constant 0
an-if.c:54:25: punctuator :
an-if.c:54:26: identifier n
an-if.c:54:27: punctuator ]
an-if.c:54:29: punctuator +
an-if.c:54:31: identifier y
an-if.c:54:32: punctuator [
an-if.c:54:33: constant 0
an-if.c:54:34: punctuator :
an-if.c:54:35: identifier n
an-if.c:54:36: punctuator ]
an-if.c:54:37: punctuator ;
an-if.c:55:9: punctuator }
an-if.c:62:9: punctuator (
an-if.c:62:10: punctuator (
an-if.c:62:11: identifier __sec_reduce_add
an-if.c:62:27: punctuator (
an-if.c:62:28: identifier x
an-if.c:62:29: punctuator [
an-if.c:62:30: constant 0
an-if.c:62:31: punctuator :
an-if.c:62:32: identifier n
an-if.c:62:33: punctuator ]
an-if.c:62:34: punctuator )
an-if.c:62:35: punctuator ==
an-if.c:62:37: constant 3
an-if.c:62:38: punctuator *
an-if.c:62:39: identifier n
an-if.c:62:40: punctuator )
an-if.c:62:42: punctuator ?
an-if.c:62:44: punctuator (
an-if.c:62:45: keyword void
an-if.c:62:49: punctuator )
an-if.c:62:51: punctuator (
an-if.c:62:52: constant 0
an-if.c:62:53: punctuator )
an-if.c:62:55: punctuator :
an-if.c:62:57: identifier __assert_fail
an-if.c:62:71: punctuator (
an-if.c:62:72: string-literal "__sec_reduce_add(x[0:n])==3*n"
an-if.c:62:103: punctuator ,
an-if.c:62:105: string-literal "raw/c-c++-common/cilk-plus/AN/an-if.c"
an-if.c:62:144: punctuator ,
an-if.c:62:146: constant 43
an-if.c:62:148: punctuator ,
an-if.c:62:150: identifier __PRETTY_FUNCTION__
an-if.c:62:169: punctuator )
an-if.c:62:170: punctuator )
an-if.c:62:171: punctuator ;
an-if.c:63:9: punctuator (
an-if.c:63:10: punctuator (
an-if.c:63:11: identifier __sec_reduce_add
an-if.c:63:27: punctuator (
an-if.c:63:28: identifier y
an-if.c:63:29: punctuator [
an-if.c:63:30: constant 0
an-if.c:63:31: punctuator :
an-if.c:63:32: identifier n
an-if.c:63:33: punctuator ]
an-if.c:63:34: punctuator )
an-if.c:63:35: punctuator ==
an-if.c:63:37: identifier i
an-if.c:63:38: punctuator *
an-if.c:63:39: identifier n
an-if.c:63:40: punctuator )
an-if.c:63:42: punctuator ?
an-if.c:63:44: punctuator (
an-if.c:63:45: keyword void
an-if.c:63:49: punctuator )
an-if.c:63:51: punctuator (
an-if.c:63:52: constant 0
an-if.c:63:53: punctuator )
an-if.c:63:55: punctuator :
an-if.c:63:57: identifier __assert_fail
an-if.c:63:71: punctuator (
an-if.c:63:72: string-literal "__sec_reduce_add(y[0:n])==i*n"
an-if.c:63:103: punctuator ,
an-if.c:63:105: string-literal "raw/c-c++-common/cilk-plus/AN/an-if.c"
an-if.c:63:144: punctuator ,
an-if.c:63:146: constant 44
an-if.c:63:148: punctuator ,
an-if.c:63:150: identifier __PRETTY_FUNCTION__
an-if.c:63:169: punctuator )
an-if.c:63:170: punctuator )
an-if.c:63:171: punctuator ;
an-if.c:64:9: punctuator (
an-if.c:64:10: punctuator (
an-if.c:64:11: identifier __sec_reduce_add
an-if.c:64:27: punctuator (
an-if.c:64:28: identifier z
an-if.c:64:29: punctuator [
an-if.c:64:30: constant 0
an-if.c:64:31: punctuator :
an-if.c:64:32: identifier n
an-if.c:64:33: punctuator ]
an-if.c:64:34: punctuator )
an-if.c:64:35: punctuator ==
an-if.c:64:37: punctuator (
an-if.c:64:38: constant 3
an-if.c:64:39: punctuator >=
an-if.c:64:41: identifier i
an-if.c:64:42: punctuator ?
an-if.c:64:43: constant 3
an-if.c:64:44: punctuator -
an-if.c:64:45: identifier i
an-if.c:64:46: punctuator :
an-if.c:64:47: constant 3
an-if.c:64:48: punctuator +
an-if.c:64:49: identifier i
an-if.c:64:50: punctuator )
an-if.c:64:51: punctuator *
an-if.c:64:52: identifier n
an-if.c:64:53: punctuator )
an-if.c:64:55: punctuator ?
an-if.c:64:57: punctuator (
an-if.c:64:58: keyword void
an-if.c:64:62: punctuator )
an-if.c:64:64: punctuator (
an-if.c:64:65: constant 0
an-if.c:64:66: punctuator )
an-if.c:64:68: punctuator :
an-if.c:64:70: identifier __assert_fail
an-if.c:64:84: punctuator (
an-if.c:64:85: string-literal "__sec_reduce_add(z[0:n])==(3>=i?3-i:3+i)*n"
an-if.c:64:129: punctuator ,
an-if.c:64:131: string-literal "raw/c-c++-common/cilk-plus/AN/an-if.c"
an-if.c:64:170: punctuator ,
an-if.c:64:172: constant 45
an-if.c:64:174: punctuator ,
an-if.c:64:176: identifier __PRETTY_FUNCTION__
an-if.c:64:195: punctuator )
an-if.c:64:196: punctuator )
an-if.c:64:197: punctuator ;
an-if.c:65:5: punctuator }
an-if.c:66:5: keyword return
an-if.c:66:12: constant 0
an-if.c:66:13: punctuator ;
an-if.c:67:1: punctuator }
