0
sec_reduce_return.c:4:1: keyword int
sec_reduce_return.c:4:5: identifier add_all
sec_reduce_return.c:4:13: punctuator (
sec_reduce_return.c:4:14: keyword int
sec_reduce_return.c:4:18: punctuator *
sec_reduce_return.c:4:19: identifier my_array
sec_reduce_return.c:4:27: punctuator ,
sec_reduce_return.c:4:29: keyword int
sec_reduce_return.c:4:33: identifier size
sec_reduce_return.c:4:37: punctuator )
sec_reduce_return.c:5:1: punctuator {
sec_reduce_return.c:6:3: keyword return
sec_reduce_return.c:6:10: identifier __sec_reduce_add
sec_reduce_return.c:6:27: punctuator (
sec_reduce_return.c:6:28: identifier my_array
sec_reduce_return.c:6:36: punctuator [
sec_reduce_return.c:6:37: constant 0
sec_reduce_return.c:6:38: punctuator :
sec_reduce_return.c:6:39: identifier size
sec_reduce_return.c:6:43: punctuator ]
sec_reduce_return.c:6:44: punctuator )
sec_reduce_return.c:6:45: punctuator ;
sec_reduce_return.c:7:1: punctuator }
sec_reduce_return.c:9:1: keyword int
sec_reduce_return.c:9:5: identifier mult_all
sec_reduce_return.c:9:14: punctuator (
sec_reduce_return.c:9:15: keyword int
sec_reduce_return.c:9:19: punctuator *
sec_reduce_return.c:9:20: identifier my_array
sec_reduce_return.c:9:28: punctuator ,
sec_reduce_return.c:9:30: keyword int
sec_reduce_return.c:9:34: identifier size
sec_reduce_return.c:9:38: punctuator )
sec_reduce_return.c:10:1: punctuator {
sec_reduce_return.c:11:3: keyword return
sec_reduce_return.c:11:10: identifier __sec_reduce_mul
sec_reduce_return.c:11:27: punctuator (
sec_reduce_return.c:11:28: identifier my_array
sec_reduce_return.c:11:36: punctuator [
sec_reduce_return.c:11:37: constant 0
sec_reduce_return.c:11:38: punctuator :
sec_reduce_return.c:11:39: identifier size
sec_reduce_return.c:11:43: punctuator ]
sec_reduce_return.c:11:44: punctuator )
sec_reduce_return.c:11:45: punctuator ;
sec_reduce_return.c:12:1: punctuator }
sec_reduce_return.c:14:1: keyword int
sec_reduce_return.c:14:5: identifier main
sec_reduce_return.c:14:10: punctuator (
sec_reduce_return.c:14:11: keyword void
sec_reduce_return.c:14:15: punctuator )
sec_reduce_return.c:15:1: punctuator {
sec_reduce_return.c:16:3: keyword int
sec_reduce_return.c:16:7: identifier argc
sec_reduce_return.c:16:12: punctuator =
sec_reduce_return.c:16:14: constant 1
sec_reduce_return.c:16:15: punctuator ;
sec_reduce_return.c:17:3: keyword int
sec_reduce_return.c:17:7: identifier array
sec_reduce_return.c:17:12: punctuator [
sec_reduce_return.c:17:13: constant 10000
sec_reduce_return.c:17:18: punctuator ]
sec_reduce_return.c:17:19: punctuator ;
sec_reduce_return.c:19:3: identifier __asm
sec_reduce_return.c:19:9: keyword volatile
sec_reduce_return.c:19:18: punctuator (
sec_reduce_return.c:19:19: string-literal ""
sec_reduce_return.c:19:22: punctuator :
sec_reduce_return.c:19:24: string-literal "+r"
sec_reduce_return.c:19:29: punctuator (
sec_reduce_return.c:19:30: identifier argc
sec_reduce_return.c:19:34: punctuator )
sec_reduce_return.c:19:35: punctuator )
sec_reduce_return.c:19:36: punctuator ;
sec_reduce_return.c:20:3: identifier array
sec_reduce_return.c:20:8: punctuator [
sec_reduce_return.c:20:9: punctuator :
sec_reduce_return.c:20:10: punctuator ]
sec_reduce_return.c:20:12: punctuator =
sec_reduce_return.c:20:14: identifier argc
sec_reduce_return.c:20:18: punctuator ;
sec_reduce_return.c:22:3: keyword if
sec_reduce_return.c:22:6: punctuator (
sec_reduce_return.c:22:7: identifier add_all
sec_reduce_return.c:22:15: punctuator (
sec_reduce_return.c:22:16: identifier array
sec_reduce_return.c:22:21: punctuator ,
sec_reduce_return.c:22:23: constant 10000
sec_reduce_return.c:22:28: punctuator )
sec_reduce_return.c:22:30: punctuator !=
sec_reduce_return.c:22:33: constant 10000
sec_reduce_return.c:22:38: punctuator )
sec_reduce_return.c:23:5: keyword return
sec_reduce_return.c:23:12: constant 1
sec_reduce_return.c:23:13: punctuator ;
sec_reduce_return.c:25:3: keyword if
sec_reduce_return.c:25:6: punctuator (
sec_reduce_return.c:25:7: identifier mult_all
sec_reduce_return.c:25:16: punctuator (
sec_reduce_return.c:25:17: identifier array
sec_reduce_return.c:25:22: punctuator ,
sec_reduce_return.c:25:24: constant 10000
sec_reduce_return.c:25:29: punctuator )
sec_reduce_return.c:25:31: punctuator !=
sec_reduce_return.c:25:34: constant 1
sec_reduce_return.c:25:35: punctuator )
sec_reduce_return.c:26:5: keyword return
sec_reduce_return.c:26:12: constant 2
sec_reduce_return.c:26:13: punctuator ;
sec_reduce_return.c:28:3: keyword return
sec_reduce_return.c:28:10: constant 0
sec_reduce_return.c:28:11: punctuator ;
sec_reduce_return.c:29:1: punctuator }
