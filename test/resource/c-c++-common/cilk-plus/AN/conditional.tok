0
conditional.c:18:1: keyword typedef
conditional.c:18:9: keyword long
conditional.c:18:14: keyword unsigned
conditional.c:18:23: keyword int
conditional.c:18:27: identifier size_t
conditional.c:18:33: punctuator ;
conditional.c:19:1: keyword typedef
conditional.c:19:9: keyword int
conditional.c:19:13: identifier wchar_t
conditional.c:19:20: punctuator ;
conditional.c:29:1: keyword union
conditional.c:29:7: identifier wait
conditional.c:30:3: punctuator {
conditional.c:31:5: keyword int
conditional.c:31:9: identifier w_status
conditional.c:31:17: punctuator ;
conditional.c:32:5: keyword struct
conditional.c:33:7: punctuator {
conditional.c:35:2: keyword unsigned
conditional.c:35:11: keyword int
conditional.c:35:15: identifier __w_termsig
conditional.c:35:26: punctuator :
conditional.c:35:27: constant 7
conditional.c:35:28: punctuator ;
conditional.c:36:2: keyword unsigned
conditional.c:36:11: keyword int
conditional.c:36:15: identifier __w_coredump
conditional.c:36:27: punctuator :
conditional.c:36:28: constant 1
conditional.c:36:29: punctuator ;
conditional.c:37:2: keyword unsigned
conditional.c:37:11: keyword int
conditional.c:37:15: identifier __w_retcode
conditional.c:37:26: punctuator :
conditional.c:37:27: constant 8
conditional.c:37:28: punctuator ;
conditional.c:38:2: keyword unsigned
conditional.c:38:11: keyword int
conditional.c:38:14: punctuator :
conditional.c:38:15: constant 16
conditional.c:38:17: punctuator ;
conditional.c:46:7: punctuator }
conditional.c:46:9: identifier __wait_terminated
conditional.c:46:26: punctuator ;
conditional.c:47:5: keyword struct
conditional.c:48:7: punctuator {
conditional.c:50:2: keyword unsigned
conditional.c:50:11: keyword int
conditional.c:50:15: identifier __w_stopval
conditional.c:50:26: punctuator :
conditional.c:50:27: constant 8
conditional.c:50:28: punctuator ;
conditional.c:51:2: keyword unsigned
conditional.c:51:11: keyword int
conditional.c:51:15: identifier __w_stopsig
conditional.c:51:26: punctuator :
conditional.c:51:27: constant 8
conditional.c:51:28: punctuator ;
conditional.c:52:2: keyword unsigned
conditional.c:52:11: keyword int
conditional.c:52:14: punctuator :
conditional.c:52:15: constant 16
conditional.c:52:17: punctuator ;
conditional.c:59:7: punctuator }
conditional.c:59:9: identifier __wait_stopped
conditional.c:59:23: punctuator ;
conditional.c:60:3: punctuator }
conditional.c:60:4: punctuator ;
conditional.c:61:1: keyword typedef
conditional.c:61:9: keyword union
conditional.c:62:3: punctuator {
conditional.c:63:5: keyword union
conditional.c:63:11: identifier wait
conditional.c:63:16: punctuator *
conditional.c:63:17: identifier __uptr
conditional.c:63:23: punctuator ;
conditional.c:64:5: keyword int
conditional.c:64:9: punctuator *
conditional.c:64:10: identifier __iptr
conditional.c:64:16: punctuator ;
conditional.c:65:3: punctuator }
conditional.c:65:5: identifier __WAIT_STATUS
conditional.c:65:19: identifier __attribute__
conditional.c:65:33: punctuator (
conditional.c:65:34: punctuator (
conditional.c:65:35: identifier __transparent_union__
conditional.c:65:56: punctuator )
conditional.c:65:57: punctuator )
conditional.c:65:58: punctuator ;
conditional.c:68:1: keyword typedef
conditional.c:68:9: keyword struct
conditional.c:69:3: punctuator {
conditional.c:70:5: keyword int
conditional.c:70:9: identifier quot
conditional.c:70:13: punctuator ;
conditional.c:71:5: keyword int
conditional.c:71:9: identifier rem
conditional.c:71:12: punctuator ;
conditional.c:72:3: punctuator }
conditional.c:72:5: identifier div_t
conditional.c:72:10: punctuator ;
conditional.c:76:1: keyword typedef
conditional.c:76:9: keyword struct
conditional.c:77:3: punctuator {
conditional.c:78:5: keyword long
conditional.c:78:10: keyword int
conditional.c:78:14: identifier quot
conditional.c:78:18: punctuator ;
conditional.c:79:5: keyword long
conditional.c:79:10: keyword int
conditional.c:79:14: identifier rem
conditional.c:79:17: punctuator ;
conditional.c:80:3: punctuator }
conditional.c:80:5: identifier ldiv_t
conditional.c:80:11: punctuator ;
conditional.c:88:1: identifier __extension__
conditional.c:88:15: keyword typedef
conditional.c:88:23: keyword struct
conditional.c:89:3: punctuator {
conditional.c:90:5: keyword long
conditional.c:90:10: keyword long
conditional.c:90:15: keyword int
conditional.c:90:19: identifier quot
conditional.c:90:23: punctuator ;
conditional.c:91:5: keyword long
conditional.c:91:10: keyword long
conditional.c:91:15: keyword int
conditional.c:91:19: identifier rem
conditional.c:91:22: punctuator ;
conditional.c:92:3: punctuator }
conditional.c:92:5: identifier lldiv_t
conditional.c:92:12: punctuator ;
conditional.c:95:1: keyword extern
conditional.c:95:8: identifier size_t
conditional.c:95:15: identifier __ctype_get_mb_cur_max
conditional.c:95:38: punctuator (
conditional.c:95:39: keyword void
conditional.c:95:43: punctuator )
conditional.c:95:45: identifier __attribute__
conditional.c:95:59: punctuator (
conditional.c:95:60: punctuator (
conditional.c:95:61: identifier __nothrow__
conditional.c:95:73: punctuator ,
conditional.c:95:75: identifier __leaf__
conditional.c:95:83: punctuator )
conditional.c:95:84: punctuator )
conditional.c:95:86: punctuator ;
conditional.c:100:1: keyword extern
conditional.c:100:8: keyword double
conditional.c:100:15: identifier atof
conditional.c:100:20: punctuator (
conditional.c:100:21: identifier __const
conditional.c:100:29: keyword char
conditional.c:100:34: punctuator *
conditional.c:100:35: identifier __nptr
conditional.c:100:41: punctuator )
conditional.c:101:6: identifier __attribute__
conditional.c:101:20: punctuator (
conditional.c:101:21: punctuator (
conditional.c:101:22: identifier __nothrow__
conditional.c:101:34: punctuator ,
conditional.c:101:36: identifier __leaf__
conditional.c:101:44: punctuator )
conditional.c:101:45: punctuator )
conditional.c:101:47: identifier __attribute__
conditional.c:101:61: punctuator (
conditional.c:101:62: punctuator (
conditional.c:101:63: identifier __pure__
conditional.c:101:71: punctuator )
conditional.c:101:72: punctuator )
conditional.c:101:74: identifier __attribute__
conditional.c:101:88: punctuator (
conditional.c:101:89: punctuator (
conditional.c:101:90: identifier __nonnull__
conditional.c:101:102: punctuator (
conditional.c:101:103: constant 1
conditional.c:101:104: punctuator )
conditional.c:101:105: punctuator )
conditional.c:101:106: punctuator )
conditional.c:101:108: punctuator ;
conditional.c:103:1: keyword extern
conditional.c:103:8: keyword int
conditional.c:103:12: identifier atoi
conditional.c:103:17: punctuator (
conditional.c:103:18: identifier __const
conditional.c:103:26: keyword char
conditional.c:103:31: punctuator *
conditional.c:103:32: identifier __nptr
conditional.c:103:38: punctuator )
conditional.c:104:6: identifier __attribute__
conditional.c:104:20: punctuator (
conditional.c:104:21: punctuator (
conditional.c:104:22: identifier __nothrow__
conditional.c:104:34: punctuator ,
conditional.c:104:36: identifier __leaf__
conditional.c:104:44: punctuator )
conditional.c:104:45: punctuator )
conditional.c:104:47: identifier __attribute__
conditional.c:104:61: punctuator (
conditional.c:104:62: punctuator (
conditional.c:104:63: identifier __pure__
conditional.c:104:71: punctuator )
conditional.c:104:72: punctuator )
conditional.c:104:74: identifier __attribute__
conditional.c:104:88: punctuator (
conditional.c:104:89: punctuator (
conditional.c:104:90: identifier __nonnull__
conditional.c:104:102: punctuator (
conditional.c:104:103: constant 1
conditional.c:104:104: punctuator )
conditional.c:104:105: punctuator )
conditional.c:104:106: punctuator )
conditional.c:104:108: punctuator ;
conditional.c:106:1: keyword extern
conditional.c:106:8: keyword long
conditional.c:106:13: keyword int
conditional.c:106:17: identifier atol
conditional.c:106:22: punctuator (
conditional.c:106:23: identifier __const
conditional.c:106:31: keyword char
conditional.c:106:36: punctuator *
conditional.c:106:37: identifier __nptr
conditional.c:106:43: punctuator )
conditional.c:107:6: identifier __attribute__
conditional.c:107:20: punctuator (
conditional.c:107:21: punctuator (
conditional.c:107:22: identifier __nothrow__
conditional.c:107:34: punctuator ,
conditional.c:107:36: identifier __leaf__
conditional.c:107:44: punctuator )
conditional.c:107:45: punctuator )
conditional.c:107:47: identifier __attribute__
conditional.c:107:61: punctuator (
conditional.c:107:62: punctuator (
conditional.c:107:63: identifier __pure__
conditional.c:107:71: punctuator )
conditional.c:107:72: punctuator )
conditional.c:107:74: identifier __attribute__
conditional.c:107:88: punctuator (
conditional.c:107:89: punctuator (
conditional.c:107:90: identifier __nonnull__
conditional.c:107:102: punctuator (
conditional.c:107:103: constant 1
conditional.c:107:104: punctuator )
conditional.c:107:105: punctuator )
conditional.c:107:106: punctuator )
conditional.c:107:108: punctuator ;
conditional.c:113:1: identifier __extension__
conditional.c:113:15: keyword extern
conditional.c:113:22: keyword long
conditional.c:113:27: keyword long
conditional.c:113:32: keyword int
conditional.c:113:36: identifier atoll
conditional.c:113:42: punctuator (
conditional.c:113:43: identifier __const
conditional.c:113:51: keyword char
conditional.c:113:56: punctuator *
conditional.c:113:57: identifier __nptr
conditional.c:113:63: punctuator )
conditional.c:114:6: identifier __attribute__
conditional.c:114:20: punctuator (
conditional.c:114:21: punctuator (
conditional.c:114:22: identifier __nothrow__
conditional.c:114:34: punctuator ,
conditional.c:114:36: identifier __leaf__
conditional.c:114:44: punctuator )
conditional.c:114:45: punctuator )
conditional.c:114:47: identifier __attribute__
conditional.c:114:61: punctuator (
conditional.c:114:62: punctuator (
conditional.c:114:63: identifier __pure__
conditional.c:114:71: punctuator )
conditional.c:114:72: punctuator )
conditional.c:114:74: identifier __attribute__
conditional.c:114:88: punctuator (
conditional.c:114:89: punctuator (
conditional.c:114:90: identifier __nonnull__
conditional.c:114:102: punctuator (
conditional.c:114:103: constant 1
conditional.c:114:104: punctuator )
conditional.c:114:105: punctuator )
conditional.c:114:106: punctuator )
conditional.c:114:108: punctuator ;
conditional.c:120:1: keyword extern
conditional.c:120:8: keyword double
conditional.c:120:15: identifier strtod
conditional.c:120:22: punctuator (
conditional.c:120:23: identifier __const
conditional.c:120:31: keyword char
conditional.c:120:36: punctuator *
conditional.c:120:37: identifier __restrict
conditional.c:120:48: identifier __nptr
conditional.c:120:54: punctuator ,
conditional.c:121:9: keyword char
conditional.c:121:14: punctuator *
conditional.c:121:15: punctuator *
conditional.c:121:16: identifier __restrict
conditional.c:121:27: identifier __endptr
conditional.c:121:35: punctuator )
conditional.c:122:6: identifier __attribute__
conditional.c:122:20: punctuator (
conditional.c:122:21: punctuator (
conditional.c:122:22: identifier __nothrow__
conditional.c:122:34: punctuator ,
conditional.c:122:36: identifier __leaf__
conditional.c:122:44: punctuator )
conditional.c:122:45: punctuator )
conditional.c:122:47: identifier __attribute__
conditional.c:122:61: punctuator (
conditional.c:122:62: punctuator (
conditional.c:122:63: identifier __nonnull__
conditional.c:122:75: punctuator (
conditional.c:122:76: constant 1
conditional.c:122:77: punctuator )
conditional.c:122:78: punctuator )
conditional.c:122:79: punctuator )
conditional.c:122:81: punctuator ;
conditional.c:128:1: keyword extern
conditional.c:128:8: keyword float
conditional.c:128:14: identifier strtof
conditional.c:128:21: punctuator (
conditional.c:128:22: identifier __const
conditional.c:128:30: keyword char
conditional.c:128:35: punctuator *
conditional.c:128:36: identifier __restrict
conditional.c:128:47: identifier __nptr
conditional.c:128:53: punctuator ,
conditional.c:129:8: keyword char
conditional.c:129:13: punctuator *
conditional.c:129:14: punctuator *
conditional.c:129:15: identifier __restrict
conditional.c:129:26: identifier __endptr
conditional.c:129:34: punctuator )
conditional.c:129:36: identifier __attribute__
conditional.c:129:50: punctuator (
conditional.c:129:51: punctuator (
conditional.c:129:52: identifier __nothrow__
conditional.c:129:64: punctuator ,
conditional.c:129:66: identifier __leaf__
conditional.c:129:74: punctuator )
conditional.c:129:75: punctuator )
conditional.c:129:77: identifier __attribute__
conditional.c:129:91: punctuator (
conditional.c:129:92: punctuator (
conditional.c:129:93: identifier __nonnull__
conditional.c:129:105: punctuator (
conditional.c:129:106: constant 1
conditional.c:129:107: punctuator )
conditional.c:129:108: punctuator )
conditional.c:129:109: punctuator )
conditional.c:129:111: punctuator ;
conditional.c:131:1: keyword extern
conditional.c:131:8: keyword long
conditional.c:131:13: keyword double
conditional.c:131:20: identifier strtold
conditional.c:131:28: punctuator (
conditional.c:131:29: identifier __const
conditional.c:131:37: keyword char
conditional.c:131:42: punctuator *
conditional.c:131:43: identifier __restrict
conditional.c:131:54: identifier __nptr
conditional.c:131:60: punctuator ,
conditional.c:132:8: keyword char
conditional.c:132:13: punctuator *
conditional.c:132:14: punctuator *
conditional.c:132:15: identifier __restrict
conditional.c:132:26: identifier __endptr
conditional.c:132:34: punctuator )
conditional.c:133:6: identifier __attribute__
conditional.c:133:20: punctuator (
conditional.c:133:21: punctuator (
conditional.c:133:22: identifier __nothrow__
conditional.c:133:34: punctuator ,
conditional.c:133:36: identifier __leaf__
conditional.c:133:44: punctuator )
conditional.c:133:45: punctuator )
conditional.c:133:47: identifier __attribute__
conditional.c:133:61: punctuator (
conditional.c:133:62: punctuator (
conditional.c:133:63: identifier __nonnull__
conditional.c:133:75: punctuator (
conditional.c:133:76: constant 1
conditional.c:133:77: punctuator )
conditional.c:133:78: punctuator )
conditional.c:133:79: punctuator )
conditional.c:133:81: punctuator ;
conditional.c:139:1: keyword extern
conditional.c:139:8: keyword long
conditional.c:139:13: keyword int
conditional.c:139:17: identifier strtol
conditional.c:139:24: punctuator (
conditional.c:139:25: identifier __const
conditional.c:139:33: keyword char
conditional.c:139:38: punctuator *
conditional.c:139:39: identifier __restrict
conditional.c:139:50: identifier __nptr
conditional.c:139:56: punctuator ,
conditional.c:140:4: keyword char
conditional.c:140:9: punctuator *
conditional.c:140:10: punctuator *
conditional.c:140:11: identifier __restrict
conditional.c:140:22: identifier __endptr
conditional.c:140:30: punctuator ,
conditional.c:140:32: keyword int
conditional.c:140:36: identifier __base
conditional.c:140:42: punctuator )
conditional.c:141:6: identifier __attribute__
conditional.c:141:20: punctuator (
conditional.c:141:21: punctuator (
conditional.c:141:22: identifier __nothrow__
conditional.c:141:34: punctuator ,
conditional.c:141:36: identifier __leaf__
conditional.c:141:44: punctuator )
conditional.c:141:45: punctuator )
conditional.c:141:47: identifier __attribute__
conditional.c:141:61: punctuator (
conditional.c:141:62: punctuator (
conditional.c:141:63: identifier __nonnull__
conditional.c:141:75: punctuator (
conditional.c:141:76: constant 1
conditional.c:141:77: punctuator )
conditional.c:141:78: punctuator )
conditional.c:141:79: punctuator )
conditional.c:141:81: punctuator ;
conditional.c:143:1: keyword extern
conditional.c:143:8: keyword unsigned
conditional.c:143:17: keyword long
conditional.c:143:22: keyword int
conditional.c:143:26: identifier strtoul
conditional.c:143:34: punctuator (
conditional.c:143:35: identifier __const
conditional.c:143:43: keyword char
conditional.c:143:48: punctuator *
conditional.c:143:49: identifier __restrict
conditional.c:143:60: identifier __nptr
conditional.c:143:66: punctuator ,
conditional.c:144:7: keyword char
conditional.c:144:12: punctuator *
conditional.c:144:13: punctuator *
conditional.c:144:14: identifier __restrict
conditional.c:144:25: identifier __endptr
conditional.c:144:33: punctuator ,
conditional.c:144:35: keyword int
conditional.c:144:39: identifier __base
conditional.c:144:45: punctuator )
conditional.c:145:6: identifier __attribute__
conditional.c:145:20: punctuator (
conditional.c:145:21: punctuator (
conditional.c:145:22: identifier __nothrow__
conditional.c:145:34: punctuator ,
conditional.c:145:36: identifier __leaf__
conditional.c:145:44: punctuator )
conditional.c:145:45: punctuator )
conditional.c:145:47: identifier __attribute__
conditional.c:145:61: punctuator (
conditional.c:145:62: punctuator (
conditional.c:145:63: identifier __nonnull__
conditional.c:145:75: punctuator (
conditional.c:145:76: constant 1
conditional.c:145:77: punctuator )
conditional.c:145:78: punctuator )
conditional.c:145:79: punctuator )
conditional.c:145:81: punctuator ;
conditional.c:150:1: identifier __extension__
conditional.c:151:1: keyword extern
conditional.c:151:8: keyword long
conditional.c:151:13: keyword long
conditional.c:151:18: keyword int
conditional.c:151:22: identifier strtoq
conditional.c:151:29: punctuator (
conditional.c:151:30: identifier __const
conditional.c:151:38: keyword char
conditional.c:151:43: punctuator *
conditional.c:151:44: identifier __restrict
conditional.c:151:55: identifier __nptr
conditional.c:151:61: punctuator ,
conditional.c:152:9: keyword char
conditional.c:152:14: punctuator *
conditional.c:152:15: punctuator *
conditional.c:152:16: identifier __restrict
conditional.c:152:27: identifier __endptr
conditional.c:152:35: punctuator ,
conditional.c:152:37: keyword int
conditional.c:152:41: identifier __base
conditional.c:152:47: punctuator )
conditional.c:153:6: identifier __attribute__
conditional.c:153:20: punctuator (
conditional.c:153:21: punctuator (
conditional.c:153:22: identifier __nothrow__
conditional.c:153:34: punctuator ,
conditional.c:153:36: identifier __leaf__
conditional.c:153:44: punctuator )
conditional.c:153:45: punctuator )
conditional.c:153:47: identifier __attribute__
conditional.c:153:61: punctuator (
conditional.c:153:62: punctuator (
conditional.c:153:63: identifier __nonnull__
conditional.c:153:75: punctuator (
conditional.c:153:76: constant 1
conditional.c:153:77: punctuator )
conditional.c:153:78: punctuator )
conditional.c:153:79: punctuator )
conditional.c:153:81: punctuator ;
conditional.c:155:1: identifier __extension__
conditional.c:156:1: keyword extern
conditional.c:156:8: keyword unsigned
conditional.c:156:17: keyword long
conditional.c:156:22: keyword long
conditional.c:156:27: keyword int
conditional.c:156:31: identifier strtouq
conditional.c:156:39: punctuator (
conditional.c:156:40: identifier __const
conditional.c:156:48: keyword char
conditional.c:156:53: punctuator *
conditional.c:156:54: identifier __restrict
conditional.c:156:65: identifier __nptr
conditional.c:156:71: punctuator ,
conditional.c:157:12: keyword char
conditional.c:157:17: punctuator *
conditional.c:157:18: punctuator *
conditional.c:157:19: identifier __restrict
conditional.c:157:30: identifier __endptr
conditional.c:157:38: punctuator ,
conditional.c:157:40: keyword int
conditional.c:157:44: identifier __base
conditional.c:157:50: punctuator )
conditional.c:158:6: identifier __attribute__
conditional.c:158:20: punctuator (
conditional.c:158:21: punctuator (
conditional.c:158:22: identifier __nothrow__
conditional.c:158:34: punctuator ,
conditional.c:158:36: identifier __leaf__
conditional.c:158:44: punctuator )
conditional.c:158:45: punctuator )
conditional.c:158:47: identifier __attribute__
conditional.c:158:61: punctuator (
conditional.c:158:62: punctuator (
conditional.c:158:63: identifier __nonnull__
conditional.c:158:75: punctuator (
conditional.c:158:76: constant 1
conditional.c:158:77: punctuator )
conditional.c:158:78: punctuator )
conditional.c:158:79: punctuator )
conditional.c:158:81: punctuator ;
conditional.c:164:1: identifier __extension__
conditional.c:165:1: keyword extern
conditional.c:165:8: keyword long
conditional.c:165:13: keyword long
conditional.c:165:18: keyword int
conditional.c:165:22: identifier strtoll
conditional.c:165:30: punctuator (
conditional.c:165:31: identifier __const
conditional.c:165:39: keyword char
conditional.c:165:44: punctuator *
conditional.c:165:45: identifier __restrict
conditional.c:165:56: identifier __nptr
conditional.c:165:62: punctuator ,
conditional.c:166:10: keyword char
conditional.c:166:15: punctuator *
conditional.c:166:16: punctuator *
conditional.c:166:17: identifier __restrict
conditional.c:166:28: identifier __endptr
conditional.c:166:36: punctuator ,
conditional.c:166:38: keyword int
conditional.c:166:42: identifier __base
conditional.c:166:48: punctuator )
conditional.c:167:6: identifier __attribute__
conditional.c:167:20: punctuator (
conditional.c:167:21: punctuator (
conditional.c:167:22: identifier __nothrow__
conditional.c:167:34: punctuator ,
conditional.c:167:36: identifier __leaf__
conditional.c:167:44: punctuator )
conditional.c:167:45: punctuator )
conditional.c:167:47: identifier __attribute__
conditional.c:167:61: punctuator (
conditional.c:167:62: punctuator (
conditional.c:167:63: identifier __nonnull__
conditional.c:167:75: punctuator (
conditional.c:167:76: constant 1
conditional.c:167:77: punctuator )
conditional.c:167:78: punctuator )
conditional.c:167:79: punctuator )
conditional.c:167:81: punctuator ;
conditional.c:169:1: identifier __extension__
conditional.c:170:1: keyword extern
conditional.c:170:8: keyword unsigned
conditional.c:170:17: keyword long
conditional.c:170:22: keyword long
conditional.c:170:27: keyword int
conditional.c:170:31: identifier strtoull
conditional.c:170:40: punctuator (
conditional.c:170:41: identifier __const
conditional.c:170:49: keyword char
conditional.c:170:54: punctuator *
conditional.c:170:55: identifier __restrict
conditional.c:170:66: identifier __nptr
conditional.c:170:72: punctuator ,
conditional.c:171:6: keyword char
conditional.c:171:11: punctuator *
conditional.c:171:12: punctuator *
conditional.c:171:13: identifier __restrict
conditional.c:171:24: identifier __endptr
conditional.c:171:32: punctuator ,
conditional.c:171:34: keyword int
conditional.c:171:38: identifier __base
conditional.c:171:44: punctuator )
conditional.c:172:6: identifier __attribute__
conditional.c:172:20: punctuator (
conditional.c:172:21: punctuator (
conditional.c:172:22: identifier __nothrow__
conditional.c:172:34: punctuator ,
conditional.c:172:36: identifier __leaf__
conditional.c:172:44: punctuator )
conditional.c:172:45: punctuator )
conditional.c:172:47: identifier __attribute__
conditional.c:172:61: punctuator (
conditional.c:172:62: punctuator (
conditional.c:172:63: identifier __nonnull__
conditional.c:172:75: punctuator (
conditional.c:172:76: constant 1
conditional.c:172:77: punctuator )
conditional.c:172:78: punctuator )
conditional.c:172:79: punctuator )
conditional.c:172:81: punctuator ;
conditional.c:174:1: keyword extern
conditional.c:174:8: keyword char
conditional.c:174:13: punctuator *
conditional.c:174:14: identifier l64a
conditional.c:174:19: punctuator (
conditional.c:174:20: keyword long
conditional.c:174:25: keyword int
conditional.c:174:29: identifier __n
conditional.c:174:32: punctuator )
conditional.c:174:34: identifier __attribute__
conditional.c:174:48: punctuator (
conditional.c:174:49: punctuator (
conditional.c:174:50: identifier __nothrow__
conditional.c:174:62: punctuator ,
conditional.c:174:64: identifier __leaf__
conditional.c:174:72: punctuator )
conditional.c:174:73: punctuator )
conditional.c:174:75: punctuator ;
conditional.c:177:1: keyword extern
conditional.c:177:8: keyword long
conditional.c:177:13: keyword int
conditional.c:177:17: identifier a64l
conditional.c:177:22: punctuator (
conditional.c:177:23: identifier __const
conditional.c:177:31: keyword char
conditional.c:177:36: punctuator *
conditional.c:177:37: identifier __s
conditional.c:177:40: punctuator )
conditional.c:178:6: identifier __attribute__
conditional.c:178:20: punctuator (
conditional.c:178:21: punctuator (
conditional.c:178:22: identifier __nothrow__
conditional.c:178:34: punctuator ,
conditional.c:178:36: identifier __leaf__
conditional.c:178:44: punctuator )
conditional.c:178:45: punctuator )
conditional.c:178:47: identifier __attribute__
conditional.c:178:61: punctuator (
conditional.c:178:62: punctuator (
conditional.c:178:63: identifier __pure__
conditional.c:178:71: punctuator )
conditional.c:178:72: punctuator )
conditional.c:178:74: identifier __attribute__
conditional.c:178:88: punctuator (
conditional.c:178:89: punctuator (
conditional.c:178:90: identifier __nonnull__
conditional.c:178:102: punctuator (
conditional.c:178:103: constant 1
conditional.c:178:104: punctuator )
conditional.c:178:105: punctuator )
conditional.c:178:106: punctuator )
conditional.c:178:108: punctuator ;
conditional.c:187:1: keyword typedef
conditional.c:187:9: keyword unsigned
conditional.c:187:18: keyword char
conditional.c:187:23: identifier __u_char
conditional.c:187:31: punctuator ;
conditional.c:188:1: keyword typedef
conditional.c:188:9: keyword unsigned
conditional.c:188:18: keyword short
conditional.c:188:24: keyword int
conditional.c:188:28: identifier __u_short
conditional.c:188:37: punctuator ;
conditional.c:189:1: keyword typedef
conditional.c:189:9: keyword unsigned
conditional.c:189:18: keyword int
conditional.c:189:22: identifier __u_int
conditional.c:189:29: punctuator ;
conditional.c:190:1: keyword typedef
conditional.c:190:9: keyword unsigned
conditional.c:190:18: keyword long
conditional.c:190:23: keyword int
conditional.c:190:27: identifier __u_long
conditional.c:190:35: punctuator ;
conditional.c:193:1: keyword typedef
conditional.c:193:9: keyword signed
conditional.c:193:16: keyword char
conditional.c:193:21: identifier __int8_t
conditional.c:193:29: punctuator ;
conditional.c:194:1: keyword typedef
conditional.c:194:9: keyword unsigned
conditional.c:194:18: keyword char
conditional.c:194:23: identifier __uint8_t
conditional.c:194:32: punctuator ;
conditional.c:195:1: keyword typedef
conditional.c:195:9: keyword signed
conditional.c:195:16: keyword short
conditional.c:195:22: keyword int
conditional.c:195:26: identifier __int16_t
conditional.c:195:35: punctuator ;
conditional.c:196:1: keyword typedef
conditional.c:196:9: keyword unsigned
conditional.c:196:18: keyword short
conditional.c:196:24: keyword int
conditional.c:196:28: identifier __uint16_t
conditional.c:196:38: punctuator ;
conditional.c:197:1: keyword typedef
conditional.c:197:9: keyword signed
conditional.c:197:16: keyword int
conditional.c:197:20: identifier __int32_t
conditional.c:197:29: punctuator ;
conditional.c:198:1: keyword typedef
conditional.c:198:9: keyword unsigned
conditional.c:198:18: keyword int
conditional.c:198:22: identifier __uint32_t
conditional.c:198:32: punctuator ;
conditional.c:200:1: keyword typedef
conditional.c:200:9: keyword signed
conditional.c:200:16: keyword long
conditional.c:200:21: keyword int
conditional.c:200:25: identifier __int64_t
conditional.c:200:34: punctuator ;
conditional.c:201:1: keyword typedef
conditional.c:201:9: keyword unsigned
conditional.c:201:18: keyword long
conditional.c:201:23: keyword int
conditional.c:201:27: identifier __uint64_t
conditional.c:201:37: punctuator ;
conditional.c:209:1: keyword typedef
conditional.c:209:9: keyword long
conditional.c:209:14: keyword int
conditional.c:209:18: identifier __quad_t
conditional.c:209:26: punctuator ;
conditional.c:210:1: keyword typedef
conditional.c:210:9: keyword unsigned
conditional.c:210:18: keyword long
conditional.c:210:23: keyword int
conditional.c:210:27: identifier __u_quad_t
conditional.c:210:37: punctuator ;
conditional.c:213:1: keyword typedef
conditional.c:213:9: keyword unsigned
conditional.c:213:18: keyword long
conditional.c:213:23: keyword int
conditional.c:213:27: identifier __dev_t
conditional.c:213:34: punctuator ;
conditional.c:214:1: keyword typedef
conditional.c:214:9: keyword unsigned
conditional.c:214:18: keyword int
conditional.c:214:22: identifier __uid_t
conditional.c:214:29: punctuator ;
conditional.c:215:1: keyword typedef
conditional.c:215:9: keyword unsigned
conditional.c:215:18: keyword int
conditional.c:215:22: identifier __gid_t
conditional.c:215:29: punctuator ;
conditional.c:216:1: keyword typedef
conditional.c:216:9: keyword unsigned
conditional.c:216:18: keyword long
conditional.c:216:23: keyword int
conditional.c:216:27: identifier __ino_t
conditional.c:216:34: punctuator ;
conditional.c:217:1: keyword typedef
conditional.c:217:9: keyword unsigned
conditional.c:217:18: keyword long
conditional.c:217:23: keyword int
conditional.c:217:27: identifier __ino64_t
conditional.c:217:36: punctuator ;
conditional.c:218:1: keyword typedef
conditional.c:218:9: keyword unsigned
conditional.c:218:18: keyword int
conditional.c:218:22: identifier __mode_t
conditional.c:218:30: punctuator ;
conditional.c:219:1: keyword typedef
conditional.c:219:9: keyword unsigned
conditional.c:219:18: keyword long
conditional.c:219:23: keyword int
conditional.c:219:27: identifier __nlink_t
conditional.c:219:36: punctuator ;
conditional.c:220:1: keyword typedef
conditional.c:220:9: keyword long
conditional.c:220:14: keyword int
conditional.c:220:18: identifier __off_t
conditional.c:220:25: punctuator ;
conditional.c:221:1: keyword typedef
conditional.c:221:9: keyword long
conditional.c:221:14: keyword int
conditional.c:221:18: identifier __off64_t
conditional.c:221:27: punctuator ;
conditional.c:222:1: keyword typedef
conditional.c:222:9: keyword int
conditional.c:222:13: identifier __pid_t
conditional.c:222:20: punctuator ;
conditional.c:223:1: keyword typedef
conditional.c:223:9: keyword struct
conditional.c:223:16: punctuator {
conditional.c:223:18: keyword int
conditional.c:223:22: identifier __val
conditional.c:223:27: punctuator [
conditional.c:223:28: constant 2
conditional.c:223:29: punctuator ]
conditional.c:223:30: punctuator ;
conditional.c:223:32: punctuator }
conditional.c:223:34: identifier __fsid_t
conditional.c:223:42: punctuator ;
conditional.c:224:1: keyword typedef
conditional.c:224:9: keyword long
conditional.c:224:14: keyword int
conditional.c:224:18: identifier __clock_t
conditional.c:224:27: punctuator ;
conditional.c:225:1: keyword typedef
conditional.c:225:9: keyword unsigned
conditional.c:225:18: keyword long
conditional.c:225:23: keyword int
conditional.c:225:27: identifier __rlim_t
conditional.c:225:35: punctuator ;
conditional.c:226:1: keyword typedef
conditional.c:226:9: keyword unsigned
conditional.c:226:18: keyword long
conditional.c:226:23: keyword int
conditional.c:226:27: identifier __rlim64_t
conditional.c:226:37: punctuator ;
conditional.c:227:1: keyword typedef
conditional.c:227:9: keyword unsigned
conditional.c:227:18: keyword int
conditional.c:227:22: identifier __id_t
conditional.c:227:28: punctuator ;
conditional.c:228:1: keyword typedef
conditional.c:228:9: keyword long
conditional.c:228:14: keyword int
conditional.c:228:18: identifier __time_t
conditional.c:228:26: punctuator ;
conditional.c:229:1: keyword typedef
conditional.c:229:9: keyword unsigned
conditional.c:229:18: keyword int
conditional.c:229:22: identifier __useconds_t
conditional.c:229:34: punctuator ;
conditional.c:230:1: keyword typedef
conditional.c:230:9: keyword long
conditional.c:230:14: keyword int
conditional.c:230:18: identifier __suseconds_t
conditional.c:230:31: punctuator ;
conditional.c:232:1: keyword typedef
conditional.c:232:9: keyword int
conditional.c:232:13: identifier __daddr_t
conditional.c:232:22: punctuator ;
conditional.c:233:1: keyword typedef
conditional.c:233:9: keyword long
conditional.c:233:14: keyword int
conditional.c:233:18: identifier __swblk_t
conditional.c:233:27: punctuator ;
conditional.c:234:1: keyword typedef
conditional.c:234:9: keyword int
conditional.c:234:13: identifier __key_t
conditional.c:234:20: punctuator ;
conditional.c:237:1: keyword typedef
conditional.c:237:9: keyword int
conditional.c:237:13: identifier __clockid_t
conditional.c:237:24: punctuator ;
conditional.c:240:1: keyword typedef
conditional.c:240:9: keyword void
conditional.c:240:14: punctuator *
conditional.c:240:16: identifier __timer_t
conditional.c:240:25: punctuator ;
conditional.c:243:1: keyword typedef
conditional.c:243:9: keyword long
conditional.c:243:14: keyword int
conditional.c:243:18: identifier __blksize_t
conditional.c:243:29: punctuator ;
conditional.c:248:1: keyword typedef
conditional.c:248:9: keyword long
conditional.c:248:14: keyword int
conditional.c:248:18: identifier __blkcnt_t
conditional.c:248:28: punctuator ;
conditional.c:249:1: keyword typedef
conditional.c:249:9: keyword long
conditional.c:249:14: keyword int
conditional.c:249:18: identifier __blkcnt64_t
conditional.c:249:30: punctuator ;
conditional.c:252:1: keyword typedef
conditional.c:252:9: keyword unsigned
conditional.c:252:18: keyword long
conditional.c:252:23: keyword int
conditional.c:252:27: identifier __fsblkcnt_t
conditional.c:252:39: punctuator ;
conditional.c:253:1: keyword typedef
conditional.c:253:9: keyword unsigned
conditional.c:253:18: keyword long
conditional.c:253:23: keyword int
conditional.c:253:27: identifier __fsblkcnt64_t
conditional.c:253:41: punctuator ;
conditional.c:256:1: keyword typedef
conditional.c:256:9: keyword unsigned
conditional.c:256:18: keyword long
conditional.c:256:23: keyword int
conditional.c:256:27: identifier __fsfilcnt_t
conditional.c:256:39: punctuator ;
conditional.c:257:1: keyword typedef
conditional.c:257:9: keyword unsigned
conditional.c:257:18: keyword long
conditional.c:257:23: keyword int
conditional.c:257:27: identifier __fsfilcnt64_t
conditional.c:257:41: punctuator ;
conditional.c:259:1: keyword typedef
conditional.c:259:9: keyword long
conditional.c:259:14: keyword int
conditional.c:259:18: identifier __ssize_t
conditional.c:259:27: punctuator ;
conditional.c:263:1: keyword typedef
conditional.c:263:9: identifier __off64_t
conditional.c:263:19: identifier __loff_t
conditional.c:263:27: punctuator ;
conditional.c:264:1: keyword typedef
conditional.c:264:9: identifier __quad_t
conditional.c:264:18: punctuator *
conditional.c:264:19: identifier __qaddr_t
conditional.c:264:28: punctuator ;
conditional.c:265:1: keyword typedef
conditional.c:265:9: keyword char
conditional.c:265:14: punctuator *
conditional.c:265:15: identifier __caddr_t
conditional.c:265:24: punctuator ;
conditional.c:268:1: keyword typedef
conditional.c:268:9: keyword long
conditional.c:268:14: keyword int
conditional.c:268:18: identifier __intptr_t
conditional.c:268:28: punctuator ;
conditional.c:271:1: keyword typedef
conditional.c:271:9: keyword unsigned
conditional.c:271:18: keyword int
conditional.c:271:22: identifier __socklen_t
conditional.c:271:33: punctuator ;
conditional.c:275:1: keyword typedef
conditional.c:275:9: identifier __u_char
conditional.c:275:18: identifier u_char
conditional.c:275:24: punctuator ;
conditional.c:276:1: keyword typedef
conditional.c:276:9: identifier __u_short
conditional.c:276:19: identifier u_short
conditional.c:276:26: punctuator ;
conditional.c:277:1: keyword typedef
conditional.c:277:9: identifier __u_int
conditional.c:277:17: identifier u_int
conditional.c:277:22: punctuator ;
conditional.c:278:1: keyword typedef
conditional.c:278:9: identifier __u_long
conditional.c:278:18: identifier u_long
conditional.c:278:24: punctuator ;
conditional.c:279:1: keyword typedef
conditional.c:279:9: identifier __quad_t
conditional.c:279:18: identifier quad_t
conditional.c:279:24: punctuator ;
conditional.c:280:1: keyword typedef
conditional.c:280:9: identifier __u_quad_t
conditional.c:280:20: identifier u_quad_t
conditional.c:280:28: punctuator ;
conditional.c:281:1: keyword typedef
conditional.c:281:9: identifier __fsid_t
conditional.c:281:18: identifier fsid_t
conditional.c:281:24: punctuator ;
conditional.c:286:1: keyword typedef
conditional.c:286:9: identifier __loff_t
conditional.c:286:18: identifier loff_t
conditional.c:286:24: punctuator ;
conditional.c:290:1: keyword typedef
conditional.c:290:9: identifier __ino_t
conditional.c:290:17: identifier ino_t
conditional.c:290:22: punctuator ;
conditional.c:291:1: keyword typedef
conditional.c:291:9: identifier __dev_t
conditional.c:291:17: identifier dev_t
conditional.c:291:22: punctuator ;
conditional.c:296:1: keyword typedef
conditional.c:296:9: identifier __gid_t
conditional.c:296:17: identifier gid_t
conditional.c:296:22: punctuator ;
conditional.c:301:1: keyword typedef
conditional.c:301:9: identifier __mode_t
conditional.c:301:18: identifier mode_t
conditional.c:301:24: punctuator ;
conditional.c:306:1: keyword typedef
conditional.c:306:9: identifier __nlink_t
conditional.c:306:19: identifier nlink_t
conditional.c:306:26: punctuator ;
conditional.c:311:1: keyword typedef
conditional.c:311:9: identifier __uid_t
conditional.c:311:17: identifier uid_t
conditional.c:311:22: punctuator ;
conditional.c:317:1: keyword typedef
conditional.c:317:9: identifier __off_t
conditional.c:317:17: identifier off_t
conditional.c:317:22: punctuator ;
conditional.c:318:1: keyword typedef
conditional.c:318:9: identifier __pid_t
conditional.c:318:17: identifier pid_t
conditional.c:318:22: punctuator ;
conditional.c:324:1: keyword typedef
conditional.c:324:9: identifier __id_t
conditional.c:324:16: identifier id_t
conditional.c:324:20: punctuator ;
conditional.c:329:1: keyword typedef
conditional.c:329:9: identifier __ssize_t
conditional.c:329:19: identifier ssize_t
conditional.c:329:26: punctuator ;
conditional.c:335:1: keyword typedef
conditional.c:335:9: identifier __daddr_t
conditional.c:335:19: identifier daddr_t
conditional.c:335:26: punctuator ;
conditional.c:336:1: keyword typedef
conditional.c:336:9: identifier __caddr_t
conditional.c:336:19: identifier caddr_t
conditional.c:336:26: punctuator ;
conditional.c:342:1: keyword typedef
conditional.c:342:9: identifier __key_t
conditional.c:342:17: identifier key_t
conditional.c:342:22: punctuator ;
conditional.c:345:1: keyword typedef
conditional.c:345:9: identifier __clock_t
conditional.c:345:19: identifier clock_t
conditional.c:345:26: punctuator ;
conditional.c:351:1: keyword typedef
conditional.c:351:9: identifier __time_t
conditional.c:351:18: identifier time_t
conditional.c:351:24: punctuator ;
conditional.c:355:1: keyword typedef
conditional.c:355:9: identifier __clockid_t
conditional.c:355:21: identifier clockid_t
conditional.c:355:30: punctuator ;
conditional.c:356:1: keyword typedef
conditional.c:356:9: identifier __timer_t
conditional.c:356:19: identifier timer_t
conditional.c:356:26: punctuator ;
conditional.c:360:1: keyword typedef
conditional.c:360:9: keyword unsigned
conditional.c:360:18: keyword long
conditional.c:360:23: keyword int
conditional.c:360:27: identifier ulong
conditional.c:360:32: punctuator ;
conditional.c:361:1: keyword typedef
conditional.c:361:9: keyword unsigned
conditional.c:361:18: keyword short
conditional.c:361:24: keyword int
conditional.c:361:28: identifier ushort
conditional.c:361:34: punctuator ;
conditional.c:362:1: keyword typedef
conditional.c:362:9: keyword unsigned
conditional.c:362:18: keyword int
conditional.c:362:22: identifier uint
conditional.c:362:26: punctuator ;
conditional.c:363:1: keyword typedef
conditional.c:363:9: keyword int
conditional.c:363:13: identifier int8_t
conditional.c:363:20: identifier __attribute__
conditional.c:363:34: punctuator (
conditional.c:363:35: punctuator (
conditional.c:363:36: identifier __mode__
conditional.c:363:45: punctuator (
conditional.c:363:46: identifier __QI__
conditional.c:363:52: punctuator )
conditional.c:363:53: punctuator )
conditional.c:363:54: punctuator )
conditional.c:363:55: punctuator ;
conditional.c:364:1: keyword typedef
conditional.c:364:9: keyword int
conditional.c:364:13: identifier int16_t
conditional.c:364:21: identifier __attribute__
conditional.c:364:35: punctuator (
conditional.c:364:36: punctuator (
conditional.c:364:37: identifier __mode__
conditional.c:364:46: punctuator (
conditional.c:364:47: identifier __HI__
conditional.c:364:53: punctuator )
conditional.c:364:54: punctuator )
conditional.c:364:55: punctuator )
conditional.c:364:56: punctuator ;
conditional.c:365:1: keyword typedef
conditional.c:365:9: keyword int
conditional.c:365:13: identifier int32_t
conditional.c:365:21: identifier __attribute__
conditional.c:365:35: punctuator (
conditional.c:365:36: punctuator (
conditional.c:365:37: identifier __mode__
conditional.c:365:46: punctuator (
conditional.c:365:47: identifier __SI__
conditional.c:365:53: punctuator )
conditional.c:365:54: punctuator )
conditional.c:365:55: punctuator )
conditional.c:365:56: punctuator ;
conditional.c:366:1: keyword typedef
conditional.c:366:9: keyword int
conditional.c:366:13: identifier int64_t
conditional.c:366:21: identifier __attribute__
conditional.c:366:35: punctuator (
conditional.c:366:36: punctuator (
conditional.c:366:37: identifier __mode__
conditional.c:366:46: punctuator (
conditional.c:366:47: identifier __DI__
conditional.c:366:53: punctuator )
conditional.c:366:54: punctuator )
conditional.c:366:55: punctuator )
conditional.c:366:56: punctuator ;
conditional.c:369:1: keyword typedef
conditional.c:369:9: keyword unsigned
conditional.c:369:18: keyword int
conditional.c:369:22: identifier u_int8_t
conditional.c:369:31: identifier __attribute__
conditional.c:369:45: punctuator (
conditional.c:369:46: punctuator (
conditional.c:369:47: identifier __mode__
conditional.c:369:56: punctuator (
conditional.c:369:57: identifier __QI__
conditional.c:369:63: punctuator )
conditional.c:369:64: punctuator )
conditional.c:369:65: punctuator )
conditional.c:369:66: punctuator ;
conditional.c:370:1: keyword typedef
conditional.c:370:9: keyword unsigned
conditional.c:370:18: keyword int
conditional.c:370:22: identifier u_int16_t
conditional.c:370:32: identifier __attribute__
conditional.c:370:46: punctuator (
conditional.c:370:47: punctuator (
conditional.c:370:48: identifier __mode__
conditional.c:370:57: punctuator (
conditional.c:370:58: identifier __HI__
conditional.c:370:64: punctuator )
conditional.c:370:65: punctuator )
conditional.c:370:66: punctuator )
conditional.c:370:67: punctuator ;
conditional.c:371:1: keyword typedef
conditional.c:371:9: keyword unsigned
conditional.c:371:18: keyword int
conditional.c:371:22: identifier u_int32_t
conditional.c:371:32: identifier __attribute__
conditional.c:371:46: punctuator (
conditional.c:371:47: punctuator (
conditional.c:371:48: identifier __mode__
conditional.c:371:57: punctuator (
conditional.c:371:58: identifier __SI__
conditional.c:371:64: punctuator )
conditional.c:371:65: punctuator )
conditional.c:371:66: punctuator )
conditional.c:371:67: punctuator ;
conditional.c:372:1: keyword typedef
conditional.c:372:9: keyword unsigned
conditional.c:372:18: keyword int
conditional.c:372:22: identifier u_int64_t
conditional.c:372:32: identifier __attribute__
conditional.c:372:46: punctuator (
conditional.c:372:47: punctuator (
conditional.c:372:48: identifier __mode__
conditional.c:372:57: punctuator (
conditional.c:372:58: identifier __DI__
conditional.c:372:64: punctuator )
conditional.c:372:65: punctuator )
conditional.c:372:66: punctuator )
conditional.c:372:67: punctuator ;
conditional.c:374:1: keyword typedef
conditional.c:374:9: keyword int
conditional.c:374:13: identifier register_t
conditional.c:374:24: identifier __attribute__
conditional.c:374:38: punctuator (
conditional.c:374:39: punctuator (
conditional.c:374:40: identifier __mode__
conditional.c:374:49: punctuator (
conditional.c:374:50: identifier __word__
conditional.c:374:58: punctuator )
conditional.c:374:59: punctuator )
conditional.c:374:60: punctuator )
conditional.c:374:61: punctuator ;
conditional.c:377:1: keyword typedef
conditional.c:377:9: keyword int
conditional.c:377:13: identifier __sig_atomic_t
conditional.c:377:27: punctuator ;
conditional.c:382:1: keyword typedef
conditional.c:382:9: keyword struct
conditional.c:383:3: punctuator {
conditional.c:384:5: keyword unsigned
conditional.c:384:14: keyword long
conditional.c:384:19: keyword int
conditional.c:384:23: identifier __val
conditional.c:384:28: punctuator [
conditional.c:384:29: punctuator (
conditional.c:384:30: constant 1024
conditional.c:384:35: punctuator /
conditional.c:384:37: punctuator (
conditional.c:384:38: constant 8
conditional.c:384:40: punctuator *
conditional.c:384:42: keyword sizeof
conditional.c:384:49: punctuator (
conditional.c:384:50: keyword unsigned
conditional.c:384:59: keyword long
conditional.c:384:64: keyword int
conditional.c:384:67: punctuator )
conditional.c:384:68: punctuator )
conditional.c:384:69: punctuator )
conditional.c:384:70: punctuator ]
conditional.c:384:71: punctuator ;
conditional.c:385:3: punctuator }
conditional.c:385:5: identifier __sigset_t
conditional.c:385:15: punctuator ;
conditional.c:389:1: keyword typedef
conditional.c:389:9: identifier __sigset_t
conditional.c:389:20: identifier sigset_t
conditional.c:389:28: punctuator ;
conditional.c:395:1: keyword struct
conditional.c:395:8: identifier timespec
conditional.c:396:3: punctuator {
conditional.c:397:5: identifier __time_t
conditional.c:397:14: identifier tv_sec
conditional.c:397:20: punctuator ;
conditional.c:398:5: keyword long
conditional.c:398:10: keyword int
conditional.c:398:14: identifier tv_nsec
conditional.c:398:21: punctuator ;
conditional.c:399:3: punctuator }
conditional.c:399:4: punctuator ;
conditional.c:401:1: keyword struct
conditional.c:401:8: identifier timeval
conditional.c:402:3: punctuator {
conditional.c:403:5: identifier __time_t
conditional.c:403:14: identifier tv_sec
conditional.c:403:20: punctuator ;
conditional.c:404:5: identifier __suseconds_t
conditional.c:404:19: identifier tv_usec
conditional.c:404:26: punctuator ;
conditional.c:405:3: punctuator }
conditional.c:405:4: punctuator ;
conditional.c:408:1: keyword typedef
conditional.c:408:9: identifier __suseconds_t
conditional.c:408:23: identifier suseconds_t
conditional.c:408:34: punctuator ;
conditional.c:414:1: keyword typedef
conditional.c:414:9: keyword long
conditional.c:414:14: keyword int
conditional.c:414:18: identifier __fd_mask
conditional.c:414:27: punctuator ;
conditional.c:415:1: keyword typedef
conditional.c:415:9: keyword struct
conditional.c:416:3: punctuator {
conditional.c:423:5: identifier __fd_mask
conditional.c:423:15: identifier __fds_bits
conditional.c:423:25: punctuator [
conditional.c:423:26: constant 1024
conditional.c:423:31: punctuator /
conditional.c:423:33: punctuator (
conditional.c:423:34: constant 8
conditional.c:423:36: punctuator *
conditional.c:423:38: punctuator (
conditional.c:423:39: keyword int
conditional.c:423:42: punctuator )
conditional.c:423:44: keyword sizeof
conditional.c:423:51: punctuator (
conditional.c:423:52: identifier __fd_mask
conditional.c:423:61: punctuator )
conditional.c:423:62: punctuator )
conditional.c:423:63: punctuator ]
conditional.c:423:64: punctuator ;
conditional.c:426:3: punctuator }
conditional.c:426:5: identifier fd_set
conditional.c:426:11: punctuator ;
conditional.c:433:1: keyword typedef
conditional.c:433:9: identifier __fd_mask
conditional.c:433:19: identifier fd_mask
conditional.c:433:26: punctuator ;
conditional.c:435:1: keyword extern
conditional.c:435:8: keyword int
conditional.c:435:12: identifier select
conditional.c:435:19: punctuator (
conditional.c:435:20: keyword int
conditional.c:435:24: identifier __nfds
conditional.c:435:30: punctuator ,
conditional.c:435:32: identifier fd_set
conditional.c:435:39: punctuator *
conditional.c:435:40: identifier __restrict
conditional.c:435:51: identifier __readfds
conditional.c:435:60: punctuator ,
conditional.c:436:6: identifier fd_set
conditional.c:436:13: punctuator *
conditional.c:436:14: identifier __restrict
conditional.c:436:25: identifier __writefds
conditional.c:436:35: punctuator ,
conditional.c:437:6: identifier fd_set
conditional.c:437:13: punctuator *
conditional.c:437:14: identifier __restrict
conditional.c:437:25: identifier __exceptfds
conditional.c:437:36: punctuator ,
conditional.c:438:6: keyword struct
conditional.c:438:13: identifier timeval
conditional.c:438:21: punctuator *
conditional.c:438:22: identifier __restrict
conditional.c:438:33: identifier __timeout
conditional.c:438:42: punctuator )
conditional.c:438:43: punctuator ;
conditional.c:439:1: keyword extern
conditional.c:439:8: keyword int
conditional.c:439:12: identifier pselect
conditional.c:439:20: punctuator (
conditional.c:439:21: keyword int
conditional.c:439:25: identifier __nfds
conditional.c:439:31: punctuator ,
conditional.c:439:33: identifier fd_set
conditional.c:439:40: punctuator *
conditional.c:439:41: identifier __restrict
conditional.c:439:52: identifier __readfds
conditional.c:439:61: punctuator ,
conditional.c:440:7: identifier fd_set
conditional.c:440:14: punctuator *
conditional.c:440:15: identifier __restrict
conditional.c:440:26: identifier __writefds
conditional.c:440:36: punctuator ,
conditional.c:441:7: identifier fd_set
conditional.c:441:14: punctuator *
conditional.c:441:15: identifier __restrict
conditional.c:441:26: identifier __exceptfds
conditional.c:441:37: punctuator ,
conditional.c:442:7: keyword const
conditional.c:442:13: keyword struct
conditional.c:442:20: identifier timespec
conditional.c:442:29: punctuator *
conditional.c:442:30: identifier __restrict
conditional.c:442:41: identifier __timeout
conditional.c:442:50: punctuator ,
conditional.c:443:7: keyword const
conditional.c:443:13: identifier __sigset_t
conditional.c:443:24: punctuator *
conditional.c:443:25: identifier __restrict
conditional.c:443:36: identifier __sigmask
conditional.c:443:45: punctuator )
conditional.c:443:46: punctuator ;
conditional.c:449:1: identifier __extension__
conditional.c:450:1: keyword extern
conditional.c:450:8: keyword unsigned
conditional.c:450:17: keyword int
conditional.c:450:21: identifier gnu_dev_major
conditional.c:450:35: punctuator (
conditional.c:450:36: keyword unsigned
conditional.c:450:45: keyword long
conditional.c:450:50: keyword long
conditional.c:450:55: keyword int
conditional.c:450:59: identifier __dev
conditional.c:450:64: punctuator )
conditional.c:451:6: identifier __attribute__
conditional.c:451:20: punctuator (
conditional.c:451:21: punctuator (
conditional.c:451:22: identifier __nothrow__
conditional.c:451:34: punctuator ,
conditional.c:451:36: identifier __leaf__
conditional.c:451:44: punctuator )
conditional.c:451:45: punctuator )
conditional.c:451:47: identifier __attribute__
conditional.c:451:61: punctuator (
conditional.c:451:62: punctuator (
conditional.c:451:63: identifier __const__
conditional.c:451:72: punctuator )
conditional.c:451:73: punctuator )
conditional.c:451:74: punctuator ;
conditional.c:452:1: identifier __extension__
conditional.c:453:1: keyword extern
conditional.c:453:8: keyword unsigned
conditional.c:453:17: keyword int
conditional.c:453:21: identifier gnu_dev_minor
conditional.c:453:35: punctuator (
conditional.c:453:36: keyword unsigned
conditional.c:453:45: keyword long
conditional.c:453:50: keyword long
conditional.c:453:55: keyword int
conditional.c:453:59: identifier __dev
conditional.c:453:64: punctuator )
conditional.c:454:6: identifier __attribute__
conditional.c:454:20: punctuator (
conditional.c:454:21: punctuator (
conditional.c:454:22: identifier __nothrow__
conditional.c:454:34: punctuator ,
conditional.c:454:36: identifier __leaf__
conditional.c:454:44: punctuator )
conditional.c:454:45: punctuator )
conditional.c:454:47: identifier __attribute__
conditional.c:454:61: punctuator (
conditional.c:454:62: punctuator (
conditional.c:454:63: identifier __const__
conditional.c:454:72: punctuator )
conditional.c:454:73: punctuator )
conditional.c:454:74: punctuator ;
conditional.c:455:1: identifier __extension__
conditional.c:456:1: keyword extern
conditional.c:456:8: keyword unsigned
conditional.c:456:17: keyword long
conditional.c:456:22: keyword long
conditional.c:456:27: keyword int
conditional.c:456:31: identifier gnu_dev_makedev
conditional.c:456:47: punctuator (
conditional.c:456:48: keyword unsigned
conditional.c:456:57: keyword int
conditional.c:456:61: identifier __major
conditional.c:456:68: punctuator ,
conditional.c:457:13: keyword unsigned
conditional.c:457:22: keyword int
conditional.c:457:26: identifier __minor
conditional.c:457:33: punctuator )
conditional.c:458:6: identifier __attribute__
conditional.c:458:20: punctuator (
conditional.c:458:21: punctuator (
conditional.c:458:22: identifier __nothrow__
conditional.c:458:34: punctuator ,
conditional.c:458:36: identifier __leaf__
conditional.c:458:44: punctuator )
conditional.c:458:45: punctuator )
conditional.c:458:47: identifier __attribute__
conditional.c:458:61: punctuator (
conditional.c:458:62: punctuator (
conditional.c:458:63: identifier __const__
conditional.c:458:72: punctuator )
conditional.c:458:73: punctuator )
conditional.c:458:74: punctuator ;
conditional.c:465:1: keyword typedef
conditional.c:465:9: identifier __blksize_t
conditional.c:465:21: identifier blksize_t
conditional.c:465:30: punctuator ;
conditional.c:472:1: keyword typedef
conditional.c:472:9: identifier __blkcnt_t
conditional.c:472:20: identifier blkcnt_t
conditional.c:472:28: punctuator ;
conditional.c:476:1: keyword typedef
conditional.c:476:9: identifier __fsblkcnt_t
conditional.c:476:22: identifier fsblkcnt_t
conditional.c:476:32: punctuator ;
conditional.c:480:1: keyword typedef
conditional.c:480:9: identifier __fsfilcnt_t
conditional.c:480:22: identifier fsfilcnt_t
conditional.c:480:32: punctuator ;
conditional.c:481:1: keyword typedef
conditional.c:481:9: keyword unsigned
conditional.c:481:18: keyword long
conditional.c:481:23: keyword int
conditional.c:481:27: identifier pthread_t
conditional.c:481:36: punctuator ;
conditional.c:484:1: keyword typedef
conditional.c:484:9: keyword union
conditional.c:485:1: punctuator {
conditional.c:486:3: keyword char
conditional.c:486:8: identifier __size
conditional.c:486:14: punctuator [
conditional.c:486:15: constant 56
conditional.c:486:17: punctuator ]
conditional.c:486:18: punctuator ;
conditional.c:487:3: keyword long
conditional.c:487:8: keyword int
conditional.c:487:12: identifier __align
conditional.c:487:19: punctuator ;
conditional.c:488:1: punctuator }
conditional.c:488:3: identifier pthread_attr_t
conditional.c:488:17: punctuator ;
conditional.c:492:1: keyword typedef
conditional.c:492:9: keyword struct
conditional.c:492:16: identifier __pthread_internal_list
conditional.c:493:1: punctuator {
conditional.c:494:3: keyword struct
conditional.c:494:10: identifier __pthread_internal_list
conditional.c:494:34: punctuator *
conditional.c:494:35: identifier __prev
conditional.c:494:41: punctuator ;
conditional.c:495:3: keyword struct
conditional.c:495:10: identifier __pthread_internal_list
conditional.c:495:34: punctuator *
conditional.c:495:35: identifier __next
conditional.c:495:41: punctuator ;
conditional.c:496:1: punctuator }
conditional.c:496:3: identifier __pthread_list_t
conditional.c:496:19: punctuator ;
conditional.c:497:1: keyword typedef
conditional.c:497:9: keyword union
conditional.c:498:1: punctuator {
conditional.c:499:3: keyword struct
conditional.c:499:10: identifier __pthread_mutex_s
conditional.c:500:3: punctuator {
conditional.c:501:5: keyword int
conditional.c:501:9: identifier __lock
conditional.c:501:15: punctuator ;
conditional.c:502:5: keyword unsigned
conditional.c:502:14: keyword int
conditional.c:502:18: identifier __count
conditional.c:502:25: punctuator ;
conditional.c:503:5: keyword int
conditional.c:503:9: identifier __owner
conditional.c:503:16: punctuator ;
conditional.c:505:5: keyword unsigned
conditional.c:505:14: keyword int
conditional.c:505:18: identifier __nusers
conditional.c:505:26: punctuator ;
conditional.c:509:5: keyword int
conditional.c:509:9: identifier __kind
conditional.c:509:15: punctuator ;
conditional.c:511:5: keyword int
conditional.c:511:9: identifier __spins
conditional.c:511:16: punctuator ;
conditional.c:512:5: identifier __pthread_list_t
conditional.c:512:22: identifier __list
conditional.c:512:28: punctuator ;
conditional.c:513:3: punctuator }
conditional.c:513:5: identifier __data
conditional.c:513:11: punctuator ;
conditional.c:514:3: keyword char
conditional.c:514:8: identifier __size
conditional.c:514:14: punctuator [
conditional.c:514:15: constant 40
conditional.c:514:17: punctuator ]
conditional.c:514:18: punctuator ;
conditional.c:515:3: keyword long
conditional.c:515:8: keyword int
conditional.c:515:12: identifier __align
conditional.c:515:19: punctuator ;
conditional.c:516:1: punctuator }
conditional.c:516:3: identifier pthread_mutex_t
conditional.c:516:18: punctuator ;
conditional.c:518:1: keyword typedef
conditional.c:518:9: keyword union
conditional.c:519:1: punctuator {
conditional.c:520:3: keyword char
conditional.c:520:8: identifier __size
conditional.c:520:14: punctuator [
conditional.c:520:15: constant 4
conditional.c:520:16: punctuator ]
conditional.c:520:17: punctuator ;
conditional.c:521:3: keyword int
conditional.c:521:7: identifier __align
conditional.c:521:14: punctuator ;
conditional.c:522:1: punctuator }
conditional.c:522:3: identifier pthread_mutexattr_t
conditional.c:522:22: punctuator ;
conditional.c:527:1: keyword typedef
conditional.c:527:9: keyword union
conditional.c:528:1: punctuator {
conditional.c:529:3: keyword struct
conditional.c:530:3: punctuator {
conditional.c:531:5: keyword int
conditional.c:531:9: identifier __lock
conditional.c:531:15: punctuator ;
conditional.c:532:5: keyword unsigned
conditional.c:532:14: keyword int
conditional.c:532:18: identifier __futex
conditional.c:532:25: punctuator ;
conditional.c:533:5: identifier __extension__
conditional.c:533:19: keyword unsigned
conditional.c:533:28: keyword long
conditional.c:533:33: keyword long
conditional.c:533:38: keyword int
conditional.c:533:42: identifier __total_seq
conditional.c:533:53: punctuator ;
conditional.c:534:5: identifier __extension__
conditional.c:534:19: keyword unsigned
conditional.c:534:28: keyword long
conditional.c:534:33: keyword long
conditional.c:534:38: keyword int
conditional.c:534:42: identifier __wakeup_seq
conditional.c:534:54: punctuator ;
conditional.c:535:5: identifier __extension__
conditional.c:535:19: keyword unsigned
conditional.c:535:28: keyword long
conditional.c:535:33: keyword long
conditional.c:535:38: keyword int
conditional.c:535:42: identifier __woken_seq
conditional.c:535:53: punctuator ;
conditional.c:536:5: keyword void
conditional.c:536:10: punctuator *
conditional.c:536:11: identifier __mutex
conditional.c:536:18: punctuator ;
conditional.c:537:5: keyword unsigned
conditional.c:537:14: keyword int
conditional.c:537:18: identifier __nwaiters
conditional.c:537:28: punctuator ;
conditional.c:538:5: keyword unsigned
conditional.c:538:14: keyword int
conditional.c:538:18: identifier __broadcast_seq
conditional.c:538:33: punctuator ;
conditional.c:539:3: punctuator }
conditional.c:539:5: identifier __data
conditional.c:539:11: punctuator ;
conditional.c:540:3: keyword char
conditional.c:540:8: identifier __size
conditional.c:540:14: punctuator [
conditional.c:540:15: constant 48
conditional.c:540:17: punctuator ]
conditional.c:540:18: punctuator ;
conditional.c:541:3: identifier __extension__
conditional.c:541:17: keyword long
conditional.c:541:22: keyword long
conditional.c:541:27: keyword int
conditional.c:541:31: identifier __align
conditional.c:541:38: punctuator ;
conditional.c:542:1: punctuator }
conditional.c:542:3: identifier pthread_cond_t
conditional.c:542:17: punctuator ;
conditional.c:544:1: keyword typedef
conditional.c:544:9: keyword union
conditional.c:545:1: punctuator {
conditional.c:546:3: keyword char
conditional.c:546:8: identifier __size
conditional.c:546:14: punctuator [
conditional.c:546:15: constant 4
conditional.c:546:16: punctuator ]
conditional.c:546:17: punctuator ;
conditional.c:547:3: keyword int
conditional.c:547:7: identifier __align
conditional.c:547:14: punctuator ;
conditional.c:548:1: punctuator }
conditional.c:548:3: identifier pthread_condattr_t
conditional.c:548:21: punctuator ;
conditional.c:552:1: keyword typedef
conditional.c:552:9: keyword unsigned
conditional.c:552:18: keyword int
conditional.c:552:22: identifier pthread_key_t
conditional.c:552:35: punctuator ;
conditional.c:556:1: keyword typedef
conditional.c:556:9: keyword int
conditional.c:556:13: identifier pthread_once_t
conditional.c:556:27: punctuator ;
conditional.c:562:1: keyword typedef
conditional.c:562:9: keyword union
conditional.c:563:1: punctuator {
conditional.c:565:3: keyword struct
conditional.c:566:3: punctuator {
conditional.c:567:5: keyword int
conditional.c:567:9: identifier __lock
conditional.c:567:15: punctuator ;
conditional.c:568:5: keyword unsigned
conditional.c:568:14: keyword int
conditional.c:568:18: identifier __nr_readers
conditional.c:568:30: punctuator ;
conditional.c:569:5: keyword unsigned
conditional.c:569:14: keyword int
conditional.c:569:18: identifier __readers_wakeup
conditional.c:569:34: punctuator ;
conditional.c:570:5: keyword unsigned
conditional.c:570:14: keyword int
conditional.c:570:18: identifier __writer_wakeup
conditional.c:570:33: punctuator ;
conditional.c:571:5: keyword unsigned
conditional.c:571:14: keyword int
conditional.c:571:18: identifier __nr_readers_queued
conditional.c:571:37: punctuator ;
conditional.c:572:5: keyword unsigned
conditional.c:572:14: keyword int
conditional.c:572:18: identifier __nr_writers_queued
conditional.c:572:37: punctuator ;
conditional.c:573:5: keyword int
conditional.c:573:9: identifier __writer
conditional.c:573:17: punctuator ;
conditional.c:574:5: keyword int
conditional.c:574:9: identifier __shared
conditional.c:574:17: punctuator ;
conditional.c:575:5: keyword unsigned
conditional.c:575:14: keyword long
conditional.c:575:19: keyword int
conditional.c:575:23: identifier __pad1
conditional.c:575:29: punctuator ;
conditional.c:576:5: keyword unsigned
conditional.c:576:14: keyword long
conditional.c:576:19: keyword int
conditional.c:576:23: identifier __pad2
conditional.c:576:29: punctuator ;
conditional.c:579:5: keyword unsigned
conditional.c:579:14: keyword int
conditional.c:579:18: identifier __flags
conditional.c:579:25: punctuator ;
conditional.c:580:3: punctuator }
conditional.c:580:5: identifier __data
conditional.c:580:11: punctuator ;
conditional.c:581:3: keyword char
conditional.c:581:8: identifier __size
conditional.c:581:14: punctuator [
conditional.c:581:15: constant 56
conditional.c:581:17: punctuator ]
conditional.c:581:18: punctuator ;
conditional.c:582:3: keyword long
conditional.c:582:8: keyword int
conditional.c:582:12: identifier __align
conditional.c:582:19: punctuator ;
conditional.c:583:1: punctuator }
conditional.c:583:3: identifier pthread_rwlock_t
conditional.c:583:19: punctuator ;
conditional.c:585:1: keyword typedef
conditional.c:585:9: keyword union
conditional.c:586:1: punctuator {
conditional.c:587:3: keyword char
conditional.c:587:8: identifier __size
conditional.c:587:14: punctuator [
conditional.c:587:15: constant 8
conditional.c:587:16: punctuator ]
conditional.c:587:17: punctuator ;
conditional.c:588:3: keyword long
conditional.c:588:8: keyword int
conditional.c:588:12: identifier __align
conditional.c:588:19: punctuator ;
conditional.c:589:1: punctuator }
conditional.c:589:3: identifier pthread_rwlockattr_t
conditional.c:589:23: punctuator ;
conditional.c:595:1: keyword typedef
conditional.c:595:9: keyword volatile
conditional.c:595:18: keyword int
conditional.c:595:22: identifier pthread_spinlock_t
conditional.c:595:40: punctuator ;
conditional.c:600:1: keyword typedef
conditional.c:600:9: keyword union
conditional.c:601:1: punctuator {
conditional.c:602:3: keyword char
conditional.c:602:8: identifier __size
conditional.c:602:14: punctuator [
conditional.c:602:15: constant 32
conditional.c:602:17: punctuator ]
conditional.c:602:18: punctuator ;
conditional.c:603:3: keyword long
conditional.c:603:8: keyword int
conditional.c:603:12: identifier __align
conditional.c:603:19: punctuator ;
conditional.c:604:1: punctuator }
conditional.c:604:3: identifier pthread_barrier_t
conditional.c:604:20: punctuator ;
conditional.c:606:1: keyword typedef
conditional.c:606:9: keyword union
conditional.c:607:1: punctuator {
conditional.c:608:3: keyword char
conditional.c:608:8: identifier __size
conditional.c:608:14: punctuator [
conditional.c:608:15: constant 4
conditional.c:608:16: punctuator ]
conditional.c:608:17: punctuator ;
conditional.c:609:3: keyword int
conditional.c:609:7: identifier __align
conditional.c:609:14: punctuator ;
conditional.c:610:1: punctuator }
conditional.c:610:3: identifier pthread_barrierattr_t
conditional.c:610:24: punctuator ;
conditional.c:620:1: keyword extern
conditional.c:620:8: keyword long
conditional.c:620:13: keyword int
conditional.c:620:17: identifier random
conditional.c:620:24: punctuator (
conditional.c:620:25: keyword void
conditional.c:620:29: punctuator )
conditional.c:620:31: identifier __attribute__
conditional.c:620:45: punctuator (
conditional.c:620:46: punctuator (
conditional.c:620:47: identifier __nothrow__
conditional.c:620:59: punctuator ,
conditional.c:620:61: identifier __leaf__
conditional.c:620:69: punctuator )
conditional.c:620:70: punctuator )
conditional.c:620:71: punctuator ;
conditional.c:623:1: keyword extern
conditional.c:623:8: keyword void
conditional.c:623:13: identifier srandom
conditional.c:623:21: punctuator (
conditional.c:623:22: keyword unsigned
conditional.c:623:31: keyword int
conditional.c:623:35: identifier __seed
conditional.c:623:41: punctuator )
conditional.c:623:43: identifier __attribute__
conditional.c:623:57: punctuator (
conditional.c:623:58: punctuator (
conditional.c:623:59: identifier __nothrow__
conditional.c:623:71: punctuator ,
conditional.c:623:73: identifier __leaf__
conditional.c:623:81: punctuator )
conditional.c:623:82: punctuator )
conditional.c:623:83: punctuator ;
conditional.c:629:1: keyword extern
conditional.c:629:8: keyword char
conditional.c:629:13: punctuator *
conditional.c:629:14: identifier initstate
conditional.c:629:24: punctuator (
conditional.c:629:25: keyword unsigned
conditional.c:629:34: keyword int
conditional.c:629:38: identifier __seed
conditional.c:629:44: punctuator ,
conditional.c:629:46: keyword char
conditional.c:629:51: punctuator *
conditional.c:629:52: identifier __statebuf
conditional.c:629:62: punctuator ,
conditional.c:630:4: identifier size_t
conditional.c:630:11: identifier __statelen
conditional.c:630:21: punctuator )
conditional.c:630:23: identifier __attribute__
conditional.c:630:37: punctuator (
conditional.c:630:38: punctuator (
conditional.c:630:39: identifier __nothrow__
conditional.c:630:51: punctuator ,
conditional.c:630:53: identifier __leaf__
conditional.c:630:61: punctuator )
conditional.c:630:62: punctuator )
conditional.c:630:64: identifier __attribute__
conditional.c:630:78: punctuator (
conditional.c:630:79: punctuator (
conditional.c:630:80: identifier __nonnull__
conditional.c:630:92: punctuator (
conditional.c:630:93: constant 2
conditional.c:630:94: punctuator )
conditional.c:630:95: punctuator )
conditional.c:630:96: punctuator )
conditional.c:630:97: punctuator ;
conditional.c:634:1: keyword extern
conditional.c:634:8: keyword char
conditional.c:634:13: punctuator *
conditional.c:634:14: identifier setstate
conditional.c:634:23: punctuator (
conditional.c:634:24: keyword char
conditional.c:634:29: punctuator *
conditional.c:634:30: identifier __statebuf
conditional.c:634:40: punctuator )
conditional.c:634:42: identifier __attribute__
conditional.c:634:56: punctuator (
conditional.c:634:57: punctuator (
conditional.c:634:58: identifier __nothrow__
conditional.c:634:70: punctuator ,
conditional.c:634:72: identifier __leaf__
conditional.c:634:80: punctuator )
conditional.c:634:81: punctuator )
conditional.c:634:83: identifier __attribute__
conditional.c:634:97: punctuator (
conditional.c:634:98: punctuator (
conditional.c:634:99: identifier __nonnull__
conditional.c:634:111: punctuator (
conditional.c:634:112: constant 1
conditional.c:634:113: punctuator )
conditional.c:634:114: punctuator )
conditional.c:634:115: punctuator )
conditional.c:634:116: punctuator ;
conditional.c:642:1: keyword struct
conditional.c:642:8: identifier random_data
conditional.c:643:3: punctuator {
conditional.c:644:5: identifier int32_t
conditional.c:644:13: punctuator *
conditional.c:644:14: identifier fptr
conditional.c:644:18: punctuator ;
conditional.c:645:5: identifier int32_t
conditional.c:645:13: punctuator *
conditional.c:645:14: identifier rptr
conditional.c:645:18: punctuator ;
conditional.c:646:5: identifier int32_t
conditional.c:646:13: punctuator *
conditional.c:646:14: identifier state
conditional.c:646:19: punctuator ;
conditional.c:647:5: keyword int
conditional.c:647:9: identifier rand_type
conditional.c:647:18: punctuator ;
conditional.c:648:5: keyword int
conditional.c:648:9: identifier rand_deg
conditional.c:648:17: punctuator ;
conditional.c:649:5: keyword int
conditional.c:649:9: identifier rand_sep
conditional.c:649:17: punctuator ;
conditional.c:650:5: identifier int32_t
conditional.c:650:13: punctuator *
conditional.c:650:14: identifier end_ptr
conditional.c:650:21: punctuator ;
conditional.c:651:3: punctuator }
conditional.c:651:4: punctuator ;
conditional.c:653:1: keyword extern
conditional.c:653:8: keyword int
conditional.c:653:12: identifier random_r
conditional.c:653:21: punctuator (
conditional.c:653:22: keyword struct
conditional.c:653:29: identifier random_data
conditional.c:653:41: punctuator *
conditional.c:653:42: identifier __restrict
conditional.c:653:53: identifier __buf
conditional.c:653:58: punctuator ,
conditional.c:654:8: identifier int32_t
conditional.c:654:16: punctuator *
conditional.c:654:17: identifier __restrict
conditional.c:654:28: identifier __result
conditional.c:654:36: punctuator )
conditional.c:654:38: identifier __attribute__
conditional.c:654:52: punctuator (
conditional.c:654:53: punctuator (
conditional.c:654:54: identifier __nothrow__
conditional.c:654:66: punctuator ,
conditional.c:654:68: identifier __leaf__
conditional.c:654:76: punctuator )
conditional.c:654:77: punctuator )
conditional.c:654:79: identifier __attribute__
conditional.c:654:93: punctuator (
conditional.c:654:94: punctuator (
conditional.c:654:95: identifier __nonnull__
conditional.c:654:107: punctuator (
conditional.c:654:108: constant 1
conditional.c:654:109: punctuator ,
conditional.c:654:111: constant 2
conditional.c:654:112: punctuator )
conditional.c:654:113: punctuator )
conditional.c:654:114: punctuator )
conditional.c:654:115: punctuator ;
conditional.c:656:1: keyword extern
conditional.c:656:8: keyword int
conditional.c:656:12: identifier srandom_r
conditional.c:656:22: punctuator (
conditional.c:656:23: keyword unsigned
conditional.c:656:32: keyword int
conditional.c:656:36: identifier __seed
conditional.c:656:42: punctuator ,
conditional.c:656:44: keyword struct
conditional.c:656:51: identifier random_data
conditional.c:656:63: punctuator *
conditional.c:656:64: identifier __buf
conditional.c:656:69: punctuator )
conditional.c:657:6: identifier __attribute__
conditional.c:657:20: punctuator (
conditional.c:657:21: punctuator (
conditional.c:657:22: identifier __nothrow__
conditional.c:657:34: punctuator ,
conditional.c:657:36: identifier __leaf__
conditional.c:657:44: punctuator )
conditional.c:657:45: punctuator )
conditional.c:657:47: identifier __attribute__
conditional.c:657:61: punctuator (
conditional.c:657:62: punctuator (
conditional.c:657:63: identifier __nonnull__
conditional.c:657:75: punctuator (
conditional.c:657:76: constant 2
conditional.c:657:77: punctuator )
conditional.c:657:78: punctuator )
conditional.c:657:79: punctuator )
conditional.c:657:80: punctuator ;
conditional.c:659:1: keyword extern
conditional.c:659:8: keyword int
conditional.c:659:12: identifier initstate_r
conditional.c:659:24: punctuator (
conditional.c:659:25: keyword unsigned
conditional.c:659:34: keyword int
conditional.c:659:38: identifier __seed
conditional.c:659:44: punctuator ,
conditional.c:659:46: keyword char
conditional.c:659:51: punctuator *
conditional.c:659:52: identifier __restrict
conditional.c:659:63: identifier __statebuf
conditional.c:659:73: punctuator ,
conditional.c:660:4: identifier size_t
conditional.c:660:11: identifier __statelen
conditional.c:660:21: punctuator ,
conditional.c:661:4: keyword struct
conditional.c:661:11: identifier random_data
conditional.c:661:23: punctuator *
conditional.c:661:24: identifier __restrict
conditional.c:661:35: identifier __buf
conditional.c:661:40: punctuator )
conditional.c:662:6: identifier __attribute__
conditional.c:662:20: punctuator (
conditional.c:662:21: punctuator (
conditional.c:662:22: identifier __nothrow__
conditional.c:662:34: punctuator ,
conditional.c:662:36: identifier __leaf__
conditional.c:662:44: punctuator )
conditional.c:662:45: punctuator )
conditional.c:662:47: identifier __attribute__
conditional.c:662:61: punctuator (
conditional.c:662:62: punctuator (
conditional.c:662:63: identifier __nonnull__
conditional.c:662:75: punctuator (
conditional.c:662:76: constant 2
conditional.c:662:77: punctuator ,
conditional.c:662:79: constant 4
conditional.c:662:80: punctuator )
conditional.c:662:81: punctuator )
conditional.c:662:82: punctuator )
conditional.c:662:83: punctuator ;
conditional.c:664:1: keyword extern
conditional.c:664:8: keyword int
conditional.c:664:12: identifier setstate_r
conditional.c:664:23: punctuator (
conditional.c:664:24: keyword char
conditional.c:664:29: punctuator *
conditional.c:664:30: identifier __restrict
conditional.c:664:41: identifier __statebuf
conditional.c:664:51: punctuator ,
conditional.c:665:10: keyword struct
conditional.c:665:17: identifier random_data
conditional.c:665:29: punctuator *
conditional.c:665:30: identifier __restrict
conditional.c:665:41: identifier __buf
conditional.c:665:46: punctuator )
conditional.c:666:6: identifier __attribute__
conditional.c:666:20: punctuator (
conditional.c:666:21: punctuator (
conditional.c:666:22: identifier __nothrow__
conditional.c:666:34: punctuator ,
conditional.c:666:36: identifier __leaf__
conditional.c:666:44: punctuator )
conditional.c:666:45: punctuator )
conditional.c:666:47: identifier __attribute__
conditional.c:666:61: punctuator (
conditional.c:666:62: punctuator (
conditional.c:666:63: identifier __nonnull__
conditional.c:666:75: punctuator (
conditional.c:666:76: constant 1
conditional.c:666:77: punctuator ,
conditional.c:666:79: constant 2
conditional.c:666:80: punctuator )
conditional.c:666:81: punctuator )
conditional.c:666:82: punctuator )
conditional.c:666:83: punctuator ;
conditional.c:673:1: keyword extern
conditional.c:673:8: keyword int
conditional.c:673:12: identifier rand
conditional.c:673:17: punctuator (
conditional.c:673:18: keyword void
conditional.c:673:22: punctuator )
conditional.c:673:24: identifier __attribute__
conditional.c:673:38: punctuator (
conditional.c:673:39: punctuator (
conditional.c:673:40: identifier __nothrow__
conditional.c:673:52: punctuator ,
conditional.c:673:54: identifier __leaf__
conditional.c:673:62: punctuator )
conditional.c:673:63: punctuator )
conditional.c:673:64: punctuator ;
conditional.c:675:1: keyword extern
conditional.c:675:8: keyword void
conditional.c:675:13: identifier srand
conditional.c:675:19: punctuator (
conditional.c:675:20: keyword unsigned
conditional.c:675:29: keyword int
conditional.c:675:33: identifier __seed
conditional.c:675:39: punctuator )
conditional.c:675:41: identifier __attribute__
conditional.c:675:55: punctuator (
conditional.c:675:56: punctuator (
conditional.c:675:57: identifier __nothrow__
conditional.c:675:69: punctuator ,
conditional.c:675:71: identifier __leaf__
conditional.c:675:79: punctuator )
conditional.c:675:80: punctuator )
conditional.c:675:81: punctuator ;
conditional.c:680:1: keyword extern
conditional.c:680:8: keyword int
conditional.c:680:12: identifier rand_r
conditional.c:680:19: punctuator (
conditional.c:680:20: keyword unsigned
conditional.c:680:29: keyword int
conditional.c:680:33: punctuator *
conditional.c:680:34: identifier __seed
conditional.c:680:40: punctuator )
conditional.c:680:42: identifier __attribute__
conditional.c:680:56: punctuator (
conditional.c:680:57: punctuator (
conditional.c:680:58: identifier __nothrow__
conditional.c:680:70: punctuator ,
conditional.c:680:72: identifier __leaf__
conditional.c:680:80: punctuator )
conditional.c:680:81: punctuator )
conditional.c:680:82: punctuator ;
conditional.c:688:1: keyword extern
conditional.c:688:8: keyword double
conditional.c:688:15: identifier drand48
conditional.c:688:23: punctuator (
conditional.c:688:24: keyword void
conditional.c:688:28: punctuator )
conditional.c:688:30: identifier __attribute__
conditional.c:688:44: punctuator (
conditional.c:688:45: punctuator (
conditional.c:688:46: identifier __nothrow__
conditional.c:688:58: punctuator ,
conditional.c:688:60: identifier __leaf__
conditional.c:688:68: punctuator )
conditional.c:688:69: punctuator )
conditional.c:688:70: punctuator ;
conditional.c:689:1: keyword extern
conditional.c:689:8: keyword double
conditional.c:689:15: identifier erand48
conditional.c:689:23: punctuator (
conditional.c:689:24: keyword unsigned
conditional.c:689:33: keyword short
conditional.c:689:39: keyword int
conditional.c:689:43: identifier __xsubi
conditional.c:689:50: punctuator [
conditional.c:689:51: constant 3
conditional.c:689:52: punctuator ]
conditional.c:689:53: punctuator )
conditional.c:689:55: identifier __attribute__
conditional.c:689:69: punctuator (
conditional.c:689:70: punctuator (
conditional.c:689:71: identifier __nothrow__
conditional.c:689:83: punctuator ,
conditional.c:689:85: identifier __leaf__
conditional.c:689:93: punctuator )
conditional.c:689:94: punctuator )
conditional.c:689:96: identifier __attribute__
conditional.c:689:110: punctuator (
conditional.c:689:111: punctuator (
conditional.c:689:112: identifier __nonnull__
conditional.c:689:124: punctuator (
conditional.c:689:125: constant 1
conditional.c:689:126: punctuator )
conditional.c:689:127: punctuator )
conditional.c:689:128: punctuator )
conditional.c:689:129: punctuator ;
conditional.c:692:1: keyword extern
conditional.c:692:8: keyword long
conditional.c:692:13: keyword int
conditional.c:692:17: identifier lrand48
conditional.c:692:25: punctuator (
conditional.c:692:26: keyword void
conditional.c:692:30: punctuator )
conditional.c:692:32: identifier __attribute__
conditional.c:692:46: punctuator (
conditional.c:692:47: punctuator (
conditional.c:692:48: identifier __nothrow__
conditional.c:692:60: punctuator ,
conditional.c:692:62: identifier __leaf__
conditional.c:692:70: punctuator )
conditional.c:692:71: punctuator )
conditional.c:692:72: punctuator ;
conditional.c:693:1: keyword extern
conditional.c:693:8: keyword long
conditional.c:693:13: keyword int
conditional.c:693:17: identifier nrand48
conditional.c:693:25: punctuator (
conditional.c:693:26: keyword unsigned
conditional.c:693:35: keyword short
conditional.c:693:41: keyword int
conditional.c:693:45: identifier __xsubi
conditional.c:693:52: punctuator [
conditional.c:693:53: constant 3
conditional.c:693:54: punctuator ]
conditional.c:693:55: punctuator )
conditional.c:694:6: identifier __attribute__
conditional.c:694:20: punctuator (
conditional.c:694:21: punctuator (
conditional.c:694:22: identifier __nothrow__
conditional.c:694:34: punctuator ,
conditional.c:694:36: identifier __leaf__
conditional.c:694:44: punctuator )
conditional.c:694:45: punctuator )
conditional.c:694:47: identifier __attribute__
conditional.c:694:61: punctuator (
conditional.c:694:62: punctuator (
conditional.c:694:63: identifier __nonnull__
conditional.c:694:75: punctuator (
conditional.c:694:76: constant 1
conditional.c:694:77: punctuator )
conditional.c:694:78: punctuator )
conditional.c:694:79: punctuator )
conditional.c:694:80: punctuator ;
conditional.c:697:1: keyword extern
conditional.c:697:8: keyword long
conditional.c:697:13: keyword int
conditional.c:697:17: identifier mrand48
conditional.c:697:25: punctuator (
conditional.c:697:26: keyword void
conditional.c:697:30: punctuator )
conditional.c:697:32: identifier __attribute__
conditional.c:697:46: punctuator (
conditional.c:697:47: punctuator (
conditional.c:697:48: identifier __nothrow__
conditional.c:697:60: punctuator ,
conditional.c:697:62: identifier __leaf__
conditional.c:697:70: punctuator )
conditional.c:697:71: punctuator )
conditional.c:697:72: punctuator ;
conditional.c:698:1: keyword extern
conditional.c:698:8: keyword long
conditional.c:698:13: keyword int
conditional.c:698:17: identifier jrand48
conditional.c:698:25: punctuator (
conditional.c:698:26: keyword unsigned
conditional.c:698:35: keyword short
conditional.c:698:41: keyword int
conditional.c:698:45: identifier __xsubi
conditional.c:698:52: punctuator [
conditional.c:698:53: constant 3
conditional.c:698:54: punctuator ]
conditional.c:698:55: punctuator )
conditional.c:699:6: identifier __attribute__
conditional.c:699:20: punctuator (
conditional.c:699:21: punctuator (
conditional.c:699:22: identifier __nothrow__
conditional.c:699:34: punctuator ,
conditional.c:699:36: identifier __leaf__
conditional.c:699:44: punctuator )
conditional.c:699:45: punctuator )
conditional.c:699:47: identifier __attribute__
conditional.c:699:61: punctuator (
conditional.c:699:62: punctuator (
conditional.c:699:63: identifier __nonnull__
conditional.c:699:75: punctuator (
conditional.c:699:76: constant 1
conditional.c:699:77: punctuator )
conditional.c:699:78: punctuator )
conditional.c:699:79: punctuator )
conditional.c:699:80: punctuator ;
conditional.c:702:1: keyword extern
conditional.c:702:8: keyword void
conditional.c:702:13: identifier srand48
conditional.c:702:21: punctuator (
conditional.c:702:22: keyword long
conditional.c:702:27: keyword int
conditional.c:702:31: identifier __seedval
conditional.c:702:40: punctuator )
conditional.c:702:42: identifier __attribute__
conditional.c:702:56: punctuator (
conditional.c:702:57: punctuator (
conditional.c:702:58: identifier __nothrow__
conditional.c:702:70: punctuator ,
conditional.c:702:72: identifier __leaf__
conditional.c:702:80: punctuator )
conditional.c:702:81: punctuator )
conditional.c:702:82: punctuator ;
conditional.c:703:1: keyword extern
conditional.c:703:8: keyword unsigned
conditional.c:703:17: keyword short
conditional.c:703:23: keyword int
conditional.c:703:27: punctuator *
conditional.c:703:28: identifier seed48
conditional.c:703:35: punctuator (
conditional.c:703:36: keyword unsigned
conditional.c:703:45: keyword short
conditional.c:703:51: keyword int
conditional.c:703:55: identifier __seed16v
conditional.c:703:64: punctuator [
conditional.c:703:65: constant 3
conditional.c:703:66: punctuator ]
conditional.c:703:67: punctuator )
conditional.c:704:6: identifier __attribute__
conditional.c:704:20: punctuator (
conditional.c:704:21: punctuator (
conditional.c:704:22: identifier __nothrow__
conditional.c:704:34: punctuator ,
conditional.c:704:36: identifier __leaf__
conditional.c:704:44: punctuator )
conditional.c:704:45: punctuator )
conditional.c:704:47: identifier __attribute__
conditional.c:704:61: punctuator (
conditional.c:704:62: punctuator (
conditional.c:704:63: identifier __nonnull__
conditional.c:704:75: punctuator (
conditional.c:704:76: constant 1
conditional.c:704:77: punctuator )
conditional.c:704:78: punctuator )
conditional.c:704:79: punctuator )
conditional.c:704:80: punctuator ;
conditional.c:705:1: keyword extern
conditional.c:705:8: keyword void
conditional.c:705:13: identifier lcong48
conditional.c:705:21: punctuator (
conditional.c:705:22: keyword unsigned
conditional.c:705:31: keyword short
conditional.c:705:37: keyword int
conditional.c:705:41: identifier __param
conditional.c:705:48: punctuator [
conditional.c:705:49: constant 7
conditional.c:705:50: punctuator ]
conditional.c:705:51: punctuator )
conditional.c:705:53: identifier __attribute__
conditional.c:705:67: punctuator (
conditional.c:705:68: punctuator (
conditional.c:705:69: identifier __nothrow__
conditional.c:705:81: punctuator ,
conditional.c:705:83: identifier __leaf__
conditional.c:705:91: punctuator )
conditional.c:705:92: punctuator )
conditional.c:705:94: identifier __attribute__
conditional.c:705:108: punctuator (
conditional.c:705:109: punctuator (
conditional.c:705:110: identifier __nonnull__
conditional.c:705:122: punctuator (
conditional.c:705:123: constant 1
conditional.c:705:124: punctuator )
conditional.c:705:125: punctuator )
conditional.c:705:126: punctuator )
conditional.c:705:127: punctuator ;
conditional.c:711:1: keyword struct
conditional.c:711:8: identifier drand48_data
conditional.c:712:3: punctuator {
conditional.c:713:5: keyword unsigned
conditional.c:713:14: keyword short
conditional.c:713:20: keyword int
conditional.c:713:24: identifier __x
conditional.c:713:27: punctuator [
conditional.c:713:28: constant 3
conditional.c:713:29: punctuator ]
conditional.c:713:30: punctuator ;
conditional.c:714:5: keyword unsigned
conditional.c:714:14: keyword short
conditional.c:714:20: keyword int
conditional.c:714:24: identifier __old_x
conditional.c:714:31: punctuator [
conditional.c:714:32: constant 3
conditional.c:714:33: punctuator ]
conditional.c:714:34: punctuator ;
conditional.c:715:5: keyword unsigned
conditional.c:715:14: keyword short
conditional.c:715:20: keyword int
conditional.c:715:24: identifier __c
conditional.c:715:27: punctuator ;
conditional.c:716:5: keyword unsigned
conditional.c:716:14: keyword short
conditional.c:716:20: keyword int
conditional.c:716:24: identifier __init
conditional.c:716:30: punctuator ;
conditional.c:717:5: keyword unsigned
conditional.c:717:14: keyword long
conditional.c:717:19: keyword long
conditional.c:717:24: keyword int
conditional.c:717:28: identifier __a
conditional.c:717:31: punctuator ;
conditional.c:718:3: punctuator }
conditional.c:718:4: punctuator ;
conditional.c:721:1: keyword extern
conditional.c:721:8: keyword int
conditional.c:721:12: identifier drand48_r
conditional.c:721:22: punctuator (
conditional.c:721:23: keyword struct
conditional.c:721:30: identifier drand48_data
conditional.c:721:43: punctuator *
conditional.c:721:44: identifier __restrict
conditional.c:721:55: identifier __buffer
conditional.c:721:63: punctuator ,
conditional.c:722:9: keyword double
conditional.c:722:16: punctuator *
conditional.c:722:17: identifier __restrict
conditional.c:722:28: identifier __result
conditional.c:722:36: punctuator )
conditional.c:722:38: identifier __attribute__
conditional.c:722:52: punctuator (
conditional.c:722:53: punctuator (
conditional.c:722:54: identifier __nothrow__
conditional.c:722:66: punctuator ,
conditional.c:722:68: identifier __leaf__
conditional.c:722:76: punctuator )
conditional.c:722:77: punctuator )
conditional.c:722:79: identifier __attribute__
conditional.c:722:93: punctuator (
conditional.c:722:94: punctuator (
conditional.c:722:95: identifier __nonnull__
conditional.c:722:107: punctuator (
conditional.c:722:108: constant 1
conditional.c:722:109: punctuator ,
conditional.c:722:111: constant 2
conditional.c:722:112: punctuator )
conditional.c:722:113: punctuator )
conditional.c:722:114: punctuator )
conditional.c:722:115: punctuator ;
conditional.c:723:1: keyword extern
conditional.c:723:8: keyword int
conditional.c:723:12: identifier erand48_r
conditional.c:723:22: punctuator (
conditional.c:723:23: keyword unsigned
conditional.c:723:32: keyword short
conditional.c:723:38: keyword int
conditional.c:723:42: identifier __xsubi
conditional.c:723:49: punctuator [
conditional.c:723:50: constant 3
conditional.c:723:51: punctuator ]
conditional.c:723:52: punctuator ,
conditional.c:724:9: keyword struct
conditional.c:724:16: identifier drand48_data
conditional.c:724:29: punctuator *
conditional.c:724:30: identifier __restrict
conditional.c:724:41: identifier __buffer
conditional.c:724:49: punctuator ,
conditional.c:725:9: keyword double
conditional.c:725:16: punctuator *
conditional.c:725:17: identifier __restrict
conditional.c:725:28: identifier __result
conditional.c:725:36: punctuator )
conditional.c:725:38: identifier __attribute__
conditional.c:725:52: punctuator (
conditional.c:725:53: punctuator (
conditional.c:725:54: identifier __nothrow__
conditional.c:725:66: punctuator ,
conditional.c:725:68: identifier __leaf__
conditional.c:725:76: punctuator )
conditional.c:725:77: punctuator )
conditional.c:725:79: identifier __attribute__
conditional.c:725:93: punctuator (
conditional.c:725:94: punctuator (
conditional.c:725:95: identifier __nonnull__
conditional.c:725:107: punctuator (
conditional.c:725:108: constant 1
conditional.c:725:109: punctuator ,
conditional.c:725:111: constant 2
conditional.c:725:112: punctuator )
conditional.c:725:113: punctuator )
conditional.c:725:114: punctuator )
conditional.c:725:115: punctuator ;
conditional.c:728:1: keyword extern
conditional.c:728:8: keyword int
conditional.c:728:12: identifier lrand48_r
conditional.c:728:22: punctuator (
conditional.c:728:23: keyword struct
conditional.c:728:30: identifier drand48_data
conditional.c:728:43: punctuator *
conditional.c:728:44: identifier __restrict
conditional.c:728:55: identifier __buffer
conditional.c:728:63: punctuator ,
conditional.c:729:9: keyword long
conditional.c:729:14: keyword int
conditional.c:729:18: punctuator *
conditional.c:729:19: identifier __restrict
conditional.c:729:30: identifier __result
conditional.c:729:38: punctuator )
conditional.c:730:6: identifier __attribute__
conditional.c:730:20: punctuator (
conditional.c:730:21: punctuator (
conditional.c:730:22: identifier __nothrow__
conditional.c:730:34: punctuator ,
conditional.c:730:36: identifier __leaf__
conditional.c:730:44: punctuator )
conditional.c:730:45: punctuator )
conditional.c:730:47: identifier __attribute__
conditional.c:730:61: punctuator (
conditional.c:730:62: punctuator (
conditional.c:730:63: identifier __nonnull__
conditional.c:730:75: punctuator (
conditional.c:730:76: constant 1
conditional.c:730:77: punctuator ,
conditional.c:730:79: constant 2
conditional.c:730:80: punctuator )
conditional.c:730:81: punctuator )
conditional.c:730:82: punctuator )
conditional.c:730:83: punctuator ;
conditional.c:731:1: keyword extern
conditional.c:731:8: keyword int
conditional.c:731:12: identifier nrand48_r
conditional.c:731:22: punctuator (
conditional.c:731:23: keyword unsigned
conditional.c:731:32: keyword short
conditional.c:731:38: keyword int
conditional.c:731:42: identifier __xsubi
conditional.c:731:49: punctuator [
conditional.c:731:50: constant 3
conditional.c:731:51: punctuator ]
conditional.c:731:52: punctuator ,
conditional.c:732:9: keyword struct
conditional.c:732:16: identifier drand48_data
conditional.c:732:29: punctuator *
conditional.c:732:30: identifier __restrict
conditional.c:732:41: identifier __buffer
conditional.c:732:49: punctuator ,
conditional.c:733:9: keyword long
conditional.c:733:14: keyword int
conditional.c:733:18: punctuator *
conditional.c:733:19: identifier __restrict
conditional.c:733:30: identifier __result
conditional.c:733:38: punctuator )
conditional.c:734:6: identifier __attribute__
conditional.c:734:20: punctuator (
conditional.c:734:21: punctuator (
conditional.c:734:22: identifier __nothrow__
conditional.c:734:34: punctuator ,
conditional.c:734:36: identifier __leaf__
conditional.c:734:44: punctuator )
conditional.c:734:45: punctuator )
conditional.c:734:47: identifier __attribute__
conditional.c:734:61: punctuator (
conditional.c:734:62: punctuator (
conditional.c:734:63: identifier __nonnull__
conditional.c:734:75: punctuator (
conditional.c:734:76: constant 1
conditional.c:734:77: punctuator ,
conditional.c:734:79: constant 2
conditional.c:734:80: punctuator )
conditional.c:734:81: punctuator )
conditional.c:734:82: punctuator )
conditional.c:734:83: punctuator ;
conditional.c:737:1: keyword extern
conditional.c:737:8: keyword int
conditional.c:737:12: identifier mrand48_r
conditional.c:737:22: punctuator (
conditional.c:737:23: keyword struct
conditional.c:737:30: identifier drand48_data
conditional.c:737:43: punctuator *
conditional.c:737:44: identifier __restrict
conditional.c:737:55: identifier __buffer
conditional.c:737:63: punctuator ,
conditional.c:738:9: keyword long
conditional.c:738:14: keyword int
conditional.c:738:18: punctuator *
conditional.c:738:19: identifier __restrict
conditional.c:738:30: identifier __result
conditional.c:738:38: punctuator )
conditional.c:739:6: identifier __attribute__
conditional.c:739:20: punctuator (
conditional.c:739:21: punctuator (
conditional.c:739:22: identifier __nothrow__
conditional.c:739:34: punctuator ,
conditional.c:739:36: identifier __leaf__
conditional.c:739:44: punctuator )
conditional.c:739:45: punctuator )
conditional.c:739:47: identifier __attribute__
conditional.c:739:61: punctuator (
conditional.c:739:62: punctuator (
conditional.c:739:63: identifier __nonnull__
conditional.c:739:75: punctuator (
conditional.c:739:76: constant 1
conditional.c:739:77: punctuator ,
conditional.c:739:79: constant 2
conditional.c:739:80: punctuator )
conditional.c:739:81: punctuator )
conditional.c:739:82: punctuator )
conditional.c:739:83: punctuator ;
conditional.c:740:1: keyword extern
conditional.c:740:8: keyword int
conditional.c:740:12: identifier jrand48_r
conditional.c:740:22: punctuator (
conditional.c:740:23: keyword unsigned
conditional.c:740:32: keyword short
conditional.c:740:38: keyword int
conditional.c:740:42: identifier __xsubi
conditional.c:740:49: punctuator [
conditional.c:740:50: constant 3
conditional.c:740:51: punctuator ]
conditional.c:740:52: punctuator ,
conditional.c:741:9: keyword struct
conditional.c:741:16: identifier drand48_data
conditional.c:741:29: punctuator *
conditional.c:741:30: identifier __restrict
conditional.c:741:41: identifier __buffer
conditional.c:741:49: punctuator ,
conditional.c:742:9: keyword long
conditional.c:742:14: keyword int
conditional.c:742:18: punctuator *
conditional.c:742:19: identifier __restrict
conditional.c:742:30: identifier __result
conditional.c:742:38: punctuator )
conditional.c:743:6: identifier __attribute__
conditional.c:743:20: punctuator (
conditional.c:743:21: punctuator (
conditional.c:743:22: identifier __nothrow__
conditional.c:743:34: punctuator ,
conditional.c:743:36: identifier __leaf__
conditional.c:743:44: punctuator )
conditional.c:743:45: punctuator )
conditional.c:743:47: identifier __attribute__
conditional.c:743:61: punctuator (
conditional.c:743:62: punctuator (
conditional.c:743:63: identifier __nonnull__
conditional.c:743:75: punctuator (
conditional.c:743:76: constant 1
conditional.c:743:77: punctuator ,
conditional.c:743:79: constant 2
conditional.c:743:80: punctuator )
conditional.c:743:81: punctuator )
conditional.c:743:82: punctuator )
conditional.c:743:83: punctuator ;
conditional.c:746:1: keyword extern
conditional.c:746:8: keyword int
conditional.c:746:12: identifier srand48_r
conditional.c:746:22: punctuator (
conditional.c:746:23: keyword long
conditional.c:746:28: keyword int
conditional.c:746:32: identifier __seedval
conditional.c:746:41: punctuator ,
conditional.c:746:43: keyword struct
conditional.c:746:50: identifier drand48_data
conditional.c:746:63: punctuator *
conditional.c:746:64: identifier __buffer
conditional.c:746:72: punctuator )
conditional.c:747:6: identifier __attribute__
conditional.c:747:20: punctuator (
conditional.c:747:21: punctuator (
conditional.c:747:22: identifier __nothrow__
conditional.c:747:34: punctuator ,
conditional.c:747:36: identifier __leaf__
conditional.c:747:44: punctuator )
conditional.c:747:45: punctuator )
conditional.c:747:47: identifier __attribute__
conditional.c:747:61: punctuator (
conditional.c:747:62: punctuator (
conditional.c:747:63: identifier __nonnull__
conditional.c:747:75: punctuator (
conditional.c:747:76: constant 2
conditional.c:747:77: punctuator )
conditional.c:747:78: punctuator )
conditional.c:747:79: punctuator )
conditional.c:747:80: punctuator ;
conditional.c:749:1: keyword extern
conditional.c:749:8: keyword int
conditional.c:749:12: identifier seed48_r
conditional.c:749:21: punctuator (
conditional.c:749:22: keyword unsigned
conditional.c:749:31: keyword short
conditional.c:749:37: keyword int
conditional.c:749:41: identifier __seed16v
conditional.c:749:50: punctuator [
conditional.c:749:51: constant 3
conditional.c:749:52: punctuator ]
conditional.c:749:53: punctuator ,
conditional.c:750:8: keyword struct
conditional.c:750:15: identifier drand48_data
conditional.c:750:28: punctuator *
conditional.c:750:29: identifier __buffer
conditional.c:750:37: punctuator )
conditional.c:750:39: identifier __attribute__
conditional.c:750:53: punctuator (
conditional.c:750:54: punctuator (
conditional.c:750:55: identifier __nothrow__
conditional.c:750:67: punctuator ,
conditional.c:750:69: identifier __leaf__
conditional.c:750:77: punctuator )
conditional.c:750:78: punctuator )
conditional.c:750:80: identifier __attribute__
conditional.c:750:94: punctuator (
conditional.c:750:95: punctuator (
conditional.c:750:96: identifier __nonnull__
conditional.c:750:108: punctuator (
conditional.c:750:109: constant 1
conditional.c:750:110: punctuator ,
conditional.c:750:112: constant 2
conditional.c:750:113: punctuator )
conditional.c:750:114: punctuator )
conditional.c:750:115: punctuator )
conditional.c:750:116: punctuator ;
conditional.c:752:1: keyword extern
conditional.c:752:8: keyword int
conditional.c:752:12: identifier lcong48_r
conditional.c:752:22: punctuator (
conditional.c:752:23: keyword unsigned
conditional.c:752:32: keyword short
conditional.c:752:38: keyword int
conditional.c:752:42: identifier __param
conditional.c:752:49: punctuator [
conditional.c:752:50: constant 7
conditional.c:752:51: punctuator ]
conditional.c:752:52: punctuator ,
conditional.c:753:9: keyword struct
conditional.c:753:16: identifier drand48_data
conditional.c:753:29: punctuator *
conditional.c:753:30: identifier __buffer
conditional.c:753:38: punctuator )
conditional.c:754:6: identifier __attribute__
conditional.c:754:20: punctuator (
conditional.c:754:21: punctuator (
conditional.c:754:22: identifier __nothrow__
conditional.c:754:34: punctuator ,
conditional.c:754:36: identifier __leaf__
conditional.c:754:44: punctuator )
conditional.c:754:45: punctuator )
conditional.c:754:47: identifier __attribute__
conditional.c:754:61: punctuator (
conditional.c:754:62: punctuator (
conditional.c:754:63: identifier __nonnull__
conditional.c:754:75: punctuator (
conditional.c:754:76: constant 1
conditional.c:754:77: punctuator ,
conditional.c:754:79: constant 2
conditional.c:754:80: punctuator )
conditional.c:754:81: punctuator )
conditional.c:754:82: punctuator )
conditional.c:754:83: punctuator ;
conditional.c:764:1: keyword extern
conditional.c:764:8: keyword void
conditional.c:764:13: punctuator *
conditional.c:764:14: identifier malloc
conditional.c:764:21: punctuator (
conditional.c:764:22: identifier size_t
conditional.c:764:29: identifier __size
conditional.c:764:35: punctuator )
conditional.c:764:37: identifier __attribute__
conditional.c:764:51: punctuator (
conditional.c:764:52: punctuator (
conditional.c:764:53: identifier __nothrow__
conditional.c:764:65: punctuator ,
conditional.c:764:67: identifier __leaf__
conditional.c:764:75: punctuator )
conditional.c:764:76: punctuator )
conditional.c:764:78: identifier __attribute__
conditional.c:764:92: punctuator (
conditional.c:764:93: punctuator (
conditional.c:764:94: identifier __malloc__
conditional.c:764:104: punctuator )
conditional.c:764:105: punctuator )
conditional.c:764:107: punctuator ;
conditional.c:766:1: keyword extern
conditional.c:766:8: keyword void
conditional.c:766:13: punctuator *
conditional.c:766:14: identifier calloc
conditional.c:766:21: punctuator (
conditional.c:766:22: identifier size_t
conditional.c:766:29: identifier __nmemb
conditional.c:766:36: punctuator ,
conditional.c:766:38: identifier size_t
conditional.c:766:45: identifier __size
conditional.c:766:51: punctuator )
conditional.c:767:6: identifier __attribute__
conditional.c:767:20: punctuator (
conditional.c:767:21: punctuator (
conditional.c:767:22: identifier __nothrow__
conditional.c:767:34: punctuator ,
conditional.c:767:36: identifier __leaf__
conditional.c:767:44: punctuator )
conditional.c:767:45: punctuator )
conditional.c:767:47: identifier __attribute__
conditional.c:767:61: punctuator (
conditional.c:767:62: punctuator (
conditional.c:767:63: identifier __malloc__
conditional.c:767:73: punctuator )
conditional.c:767:74: punctuator )
conditional.c:767:76: punctuator ;
conditional.c:778:1: keyword extern
conditional.c:778:8: keyword void
conditional.c:778:13: punctuator *
conditional.c:778:14: identifier realloc
conditional.c:778:22: punctuator (
conditional.c:778:23: keyword void
conditional.c:778:28: punctuator *
conditional.c:778:29: identifier __ptr
conditional.c:778:34: punctuator ,
conditional.c:778:36: identifier size_t
conditional.c:778:43: identifier __size
conditional.c:778:49: punctuator )
conditional.c:779:6: identifier __attribute__
conditional.c:779:20: punctuator (
conditional.c:779:21: punctuator (
conditional.c:779:22: identifier __nothrow__
conditional.c:779:34: punctuator ,
conditional.c:779:36: identifier __leaf__
conditional.c:779:44: punctuator )
conditional.c:779:45: punctuator )
conditional.c:779:47: identifier __attribute__
conditional.c:779:61: punctuator (
conditional.c:779:62: punctuator (
conditional.c:779:63: identifier __warn_unused_result__
conditional.c:779:85: punctuator )
conditional.c:779:86: punctuator )
conditional.c:779:87: punctuator ;
conditional.c:781:1: keyword extern
conditional.c:781:8: keyword void
conditional.c:781:13: identifier free
conditional.c:781:18: punctuator (
conditional.c:781:19: keyword void
conditional.c:781:24: punctuator *
conditional.c:781:25: identifier __ptr
conditional.c:781:30: punctuator )
conditional.c:781:32: identifier __attribute__
conditional.c:781:46: punctuator (
conditional.c:781:47: punctuator (
conditional.c:781:48: identifier __nothrow__
conditional.c:781:60: punctuator ,
conditional.c:781:62: identifier __leaf__
conditional.c:781:70: punctuator )
conditional.c:781:71: punctuator )
conditional.c:781:72: punctuator ;
conditional.c:786:1: keyword extern
conditional.c:786:8: keyword void
conditional.c:786:13: identifier cfree
conditional.c:786:19: punctuator (
conditional.c:786:20: keyword void
conditional.c:786:25: punctuator *
conditional.c:786:26: identifier __ptr
conditional.c:786:31: punctuator )
conditional.c:786:33: identifier __attribute__
conditional.c:786:47: punctuator (
conditional.c:786:48: punctuator (
conditional.c:786:49: identifier __nothrow__
conditional.c:786:61: punctuator ,
conditional.c:786:63: identifier __leaf__
conditional.c:786:71: punctuator )
conditional.c:786:72: punctuator )
conditional.c:786:73: punctuator ;
conditional.c:797:1: keyword extern
conditional.c:797:8: keyword void
conditional.c:797:13: punctuator *
conditional.c:797:14: identifier alloca
conditional.c:797:21: punctuator (
conditional.c:797:22: identifier size_t
conditional.c:797:29: identifier __size
conditional.c:797:35: punctuator )
conditional.c:797:37: identifier __attribute__
conditional.c:797:51: punctuator (
conditional.c:797:52: punctuator (
conditional.c:797:53: identifier __nothrow__
conditional.c:797:65: punctuator ,
conditional.c:797:67: identifier __leaf__
conditional.c:797:75: punctuator )
conditional.c:797:76: punctuator )
conditional.c:797:77: punctuator ;
conditional.c:809:1: keyword extern
conditional.c:809:8: keyword void
conditional.c:809:13: punctuator *
conditional.c:809:14: identifier valloc
conditional.c:809:21: punctuator (
conditional.c:809:22: identifier size_t
conditional.c:809:29: identifier __size
conditional.c:809:35: punctuator )
conditional.c:809:37: identifier __attribute__
conditional.c:809:51: punctuator (
conditional.c:809:52: punctuator (
conditional.c:809:53: identifier __nothrow__
conditional.c:809:65: punctuator ,
conditional.c:809:67: identifier __leaf__
conditional.c:809:75: punctuator )
conditional.c:809:76: punctuator )
conditional.c:809:78: identifier __attribute__
conditional.c:809:92: punctuator (
conditional.c:809:93: punctuator (
conditional.c:809:94: identifier __malloc__
conditional.c:809:104: punctuator )
conditional.c:809:105: punctuator )
conditional.c:809:107: punctuator ;
conditional.c:814:1: keyword extern
conditional.c:814:8: keyword int
conditional.c:814:12: identifier posix_memalign
conditional.c:814:27: punctuator (
conditional.c:814:28: keyword void
conditional.c:814:33: punctuator *
conditional.c:814:34: punctuator *
conditional.c:814:35: identifier __memptr
conditional.c:814:43: punctuator ,
conditional.c:814:45: identifier size_t
conditional.c:814:52: identifier __alignment
conditional.c:814:63: punctuator ,
conditional.c:814:65: identifier size_t
conditional.c:814:72: identifier __size
conditional.c:814:78: punctuator )
conditional.c:815:6: identifier __attribute__
conditional.c:815:20: punctuator (
conditional.c:815:21: punctuator (
conditional.c:815:22: identifier __nothrow__
conditional.c:815:34: punctuator ,
conditional.c:815:36: identifier __leaf__
conditional.c:815:44: punctuator )
conditional.c:815:45: punctuator )
conditional.c:815:47: identifier __attribute__
conditional.c:815:61: punctuator (
conditional.c:815:62: punctuator (
conditional.c:815:63: identifier __nonnull__
conditional.c:815:75: punctuator (
conditional.c:815:76: constant 1
conditional.c:815:77: punctuator )
conditional.c:815:78: punctuator )
conditional.c:815:79: punctuator )
conditional.c:815:81: punctuator ;
conditional.c:820:1: keyword extern
conditional.c:820:8: keyword void
conditional.c:820:13: identifier abort
conditional.c:820:19: punctuator (
conditional.c:820:20: keyword void
conditional.c:820:24: punctuator )
conditional.c:820:26: identifier __attribute__
conditional.c:820:40: punctuator (
conditional.c:820:41: punctuator (
conditional.c:820:42: identifier __nothrow__
conditional.c:820:54: punctuator ,
conditional.c:820:56: identifier __leaf__
conditional.c:820:64: punctuator )
conditional.c:820:65: punctuator )
conditional.c:820:67: identifier __attribute__
conditional.c:820:81: punctuator (
conditional.c:820:82: punctuator (
conditional.c:820:83: identifier __noreturn__
conditional.c:820:95: punctuator )
conditional.c:820:96: punctuator )
conditional.c:820:97: punctuator ;
conditional.c:824:1: keyword extern
conditional.c:824:8: keyword int
conditional.c:824:12: identifier atexit
conditional.c:824:19: punctuator (
conditional.c:824:20: keyword void
conditional.c:824:25: punctuator (
conditional.c:824:26: punctuator *
conditional.c:824:27: identifier __func
conditional.c:824:33: punctuator )
conditional.c:824:35: punctuator (
conditional.c:824:36: keyword void
conditional.c:824:40: punctuator )
conditional.c:824:41: punctuator )
conditional.c:824:43: identifier __attribute__
conditional.c:824:57: punctuator (
conditional.c:824:58: punctuator (
conditional.c:824:59: identifier __nothrow__
conditional.c:824:71: punctuator ,
conditional.c:824:73: identifier __leaf__
conditional.c:824:81: punctuator )
conditional.c:824:82: punctuator )
conditional.c:824:84: identifier __attribute__
conditional.c:824:98: punctuator (
conditional.c:824:99: punctuator (
conditional.c:824:100: identifier __nonnull__
conditional.c:824:112: punctuator (
conditional.c:824:113: constant 1
conditional.c:824:114: punctuator )
conditional.c:824:115: punctuator )
conditional.c:824:116: punctuator )
conditional.c:824:117: punctuator ;
conditional.c:830:1: keyword extern
conditional.c:830:8: keyword int
conditional.c:830:12: identifier on_exit
conditional.c:830:20: punctuator (
conditional.c:830:21: keyword void
conditional.c:830:26: punctuator (
conditional.c:830:27: punctuator *
conditional.c:830:28: identifier __func
conditional.c:830:34: punctuator )
conditional.c:830:36: punctuator (
conditional.c:830:37: keyword int
conditional.c:830:41: identifier __status
conditional.c:830:49: punctuator ,
conditional.c:830:51: keyword void
conditional.c:830:56: punctuator *
conditional.c:830:57: identifier __arg
conditional.c:830:62: punctuator )
conditional.c:830:63: punctuator ,
conditional.c:830:65: keyword void
conditional.c:830:70: punctuator *
conditional.c:830:71: identifier __arg
conditional.c:830:76: punctuator )
conditional.c:831:6: identifier __attribute__
conditional.c:831:20: punctuator (
conditional.c:831:21: punctuator (
conditional.c:831:22: identifier __nothrow__
conditional.c:831:34: punctuator ,
conditional.c:831:36: identifier __leaf__
conditional.c:831:44: punctuator )
conditional.c:831:45: punctuator )
conditional.c:831:47: identifier __attribute__
conditional.c:831:61: punctuator (
conditional.c:831:62: punctuator (
conditional.c:831:63: identifier __nonnull__
conditional.c:831:75: punctuator (
conditional.c:831:76: constant 1
conditional.c:831:77: punctuator )
conditional.c:831:78: punctuator )
conditional.c:831:79: punctuator )
conditional.c:831:80: punctuator ;
conditional.c:838:1: keyword extern
conditional.c:838:8: keyword void
conditional.c:838:13: identifier exit
conditional.c:838:18: punctuator (
conditional.c:838:19: keyword int
conditional.c:838:23: identifier __status
conditional.c:838:31: punctuator )
conditional.c:838:33: identifier __attribute__
conditional.c:838:47: punctuator (
conditional.c:838:48: punctuator (
conditional.c:838:49: identifier __nothrow__
conditional.c:838:61: punctuator ,
conditional.c:838:63: identifier __leaf__
conditional.c:838:71: punctuator )
conditional.c:838:72: punctuator )
conditional.c:838:74: identifier __attribute__
conditional.c:838:88: punctuator (
conditional.c:838:89: punctuator (
conditional.c:838:90: identifier __noreturn__
conditional.c:838:102: punctuator )
conditional.c:838:103: punctuator )
conditional.c:838:104: punctuator ;
conditional.c:845:1: keyword extern
conditional.c:845:8: keyword void
conditional.c:845:13: identifier _Exit
conditional.c:845:19: punctuator (
conditional.c:845:20: keyword int
conditional.c:845:24: identifier __status
conditional.c:845:32: punctuator )
conditional.c:845:34: identifier __attribute__
conditional.c:845:48: punctuator (
conditional.c:845:49: punctuator (
conditional.c:845:50: identifier __nothrow__
conditional.c:845:62: punctuator ,
conditional.c:845:64: identifier __leaf__
conditional.c:845:72: punctuator )
conditional.c:845:73: punctuator )
conditional.c:845:75: identifier __attribute__
conditional.c:845:89: punctuator (
conditional.c:845:90: punctuator (
conditional.c:845:91: identifier __noreturn__
conditional.c:845:103: punctuator )
conditional.c:845:104: punctuator )
conditional.c:845:105: punctuator ;
conditional.c:852:1: keyword extern
conditional.c:852:8: keyword char
conditional.c:852:13: punctuator *
conditional.c:852:14: identifier getenv
conditional.c:852:21: punctuator (
conditional.c:852:22: identifier __const
conditional.c:852:30: keyword char
conditional.c:852:35: punctuator *
conditional.c:852:36: identifier __name
conditional.c:852:42: punctuator )
conditional.c:852:44: identifier __attribute__
conditional.c:852:58: punctuator (
conditional.c:852:59: punctuator (
conditional.c:852:60: identifier __nothrow__
conditional.c:852:72: punctuator ,
conditional.c:852:74: identifier __leaf__
conditional.c:852:82: punctuator )
conditional.c:852:83: punctuator )
conditional.c:852:85: identifier __attribute__
conditional.c:852:99: punctuator (
conditional.c:852:100: punctuator (
conditional.c:852:101: identifier __nonnull__
conditional.c:852:113: punctuator (
conditional.c:852:114: constant 1
conditional.c:852:115: punctuator )
conditional.c:852:116: punctuator )
conditional.c:852:117: punctuator )
conditional.c:852:119: punctuator ;
conditional.c:857:1: keyword extern
conditional.c:857:8: keyword char
conditional.c:857:13: punctuator *
conditional.c:857:14: identifier __secure_getenv
conditional.c:857:30: punctuator (
conditional.c:857:31: identifier __const
conditional.c:857:39: keyword char
conditional.c:857:44: punctuator *
conditional.c:857:45: identifier __name
conditional.c:857:51: punctuator )
conditional.c:858:6: identifier __attribute__
conditional.c:858:20: punctuator (
conditional.c:858:21: punctuator (
conditional.c:858:22: identifier __nothrow__
conditional.c:858:34: punctuator ,
conditional.c:858:36: identifier __leaf__
conditional.c:858:44: punctuator )
conditional.c:858:45: punctuator )
conditional.c:858:47: identifier __attribute__
conditional.c:858:61: punctuator (
conditional.c:858:62: punctuator (
conditional.c:858:63: identifier __nonnull__
conditional.c:858:75: punctuator (
conditional.c:858:76: constant 1
conditional.c:858:77: punctuator )
conditional.c:858:78: punctuator )
conditional.c:858:79: punctuator )
conditional.c:858:81: punctuator ;
conditional.c:864:1: keyword extern
conditional.c:864:8: keyword int
conditional.c:864:12: identifier putenv
conditional.c:864:19: punctuator (
conditional.c:864:20: keyword char
conditional.c:864:25: punctuator *
conditional.c:864:26: identifier __string
conditional.c:864:34: punctuator )
conditional.c:864:36: identifier __attribute__
conditional.c:864:50: punctuator (
conditional.c:864:51: punctuator (
conditional.c:864:52: identifier __nothrow__
conditional.c:864:64: punctuator ,
conditional.c:864:66: identifier __leaf__
conditional.c:864:74: punctuator )
conditional.c:864:75: punctuator )
conditional.c:864:77: identifier __attribute__
conditional.c:864:91: punctuator (
conditional.c:864:92: punctuator (
conditional.c:864:93: identifier __nonnull__
conditional.c:864:105: punctuator (
conditional.c:864:106: constant 1
conditional.c:864:107: punctuator )
conditional.c:864:108: punctuator )
conditional.c:864:109: punctuator )
conditional.c:864:110: punctuator ;
conditional.c:870:1: keyword extern
conditional.c:870:8: keyword int
conditional.c:870:12: identifier setenv
conditional.c:870:19: punctuator (
conditional.c:870:20: identifier __const
conditional.c:870:28: keyword char
conditional.c:870:33: punctuator *
conditional.c:870:34: identifier __name
conditional.c:870:40: punctuator ,
conditional.c:870:42: identifier __const
conditional.c:870:50: keyword char
conditional.c:870:55: punctuator *
conditional.c:870:56: identifier __value
conditional.c:870:63: punctuator ,
conditional.c:870:65: keyword int
conditional.c:870:69: identifier __replace
conditional.c:870:78: punctuator )
conditional.c:871:6: identifier __attribute__
conditional.c:871:20: punctuator (
conditional.c:871:21: punctuator (
conditional.c:871:22: identifier __nothrow__
conditional.c:871:34: punctuator ,
conditional.c:871:36: identifier __leaf__
conditional.c:871:44: punctuator )
conditional.c:871:45: punctuator )
conditional.c:871:47: identifier __attribute__
conditional.c:871:61: punctuator (
conditional.c:871:62: punctuator (
conditional.c:871:63: identifier __nonnull__
conditional.c:871:75: punctuator (
conditional.c:871:76: constant 2
conditional.c:871:77: punctuator )
conditional.c:871:78: punctuator )
conditional.c:871:79: punctuator )
conditional.c:871:80: punctuator ;
conditional.c:874:1: keyword extern
conditional.c:874:8: keyword int
conditional.c:874:12: identifier unsetenv
conditional.c:874:21: punctuator (
conditional.c:874:22: identifier __const
conditional.c:874:30: keyword char
conditional.c:874:35: punctuator *
conditional.c:874:36: identifier __name
conditional.c:874:42: punctuator )
conditional.c:874:44: identifier __attribute__
conditional.c:874:58: punctuator (
conditional.c:874:59: punctuator (
conditional.c:874:60: identifier __nothrow__
conditional.c:874:72: punctuator ,
conditional.c:874:74: identifier __leaf__
conditional.c:874:82: punctuator )
conditional.c:874:83: punctuator )
conditional.c:874:85: identifier __attribute__
conditional.c:874:99: punctuator (
conditional.c:874:100: punctuator (
conditional.c:874:101: identifier __nonnull__
conditional.c:874:113: punctuator (
conditional.c:874:114: constant 1
conditional.c:874:115: punctuator )
conditional.c:874:116: punctuator )
conditional.c:874:117: punctuator )
conditional.c:874:118: punctuator ;
conditional.c:881:1: keyword extern
conditional.c:881:8: keyword int
conditional.c:881:12: identifier clearenv
conditional.c:881:21: punctuator (
conditional.c:881:22: keyword void
conditional.c:881:26: punctuator )
conditional.c:881:28: identifier __attribute__
conditional.c:881:42: punctuator (
conditional.c:881:43: punctuator (
conditional.c:881:44: identifier __nothrow__
conditional.c:881:56: punctuator ,
conditional.c:881:58: identifier __leaf__
conditional.c:881:66: punctuator )
conditional.c:881:67: punctuator )
conditional.c:881:68: punctuator ;
conditional.c:882:1: keyword extern
conditional.c:882:8: keyword char
conditional.c:882:13: punctuator *
conditional.c:882:14: identifier mktemp
conditional.c:882:21: punctuator (
conditional.c:882:22: keyword char
conditional.c:882:27: punctuator *
conditional.c:882:28: identifier __template
conditional.c:882:38: punctuator )
conditional.c:882:40: identifier __attribute__
conditional.c:882:54: punctuator (
conditional.c:882:55: punctuator (
conditional.c:882:56: identifier __nothrow__
conditional.c:882:68: punctuator ,
conditional.c:882:70: identifier __leaf__
conditional.c:882:78: punctuator )
conditional.c:882:79: punctuator )
conditional.c:882:81: identifier __attribute__
conditional.c:882:95: punctuator (
conditional.c:882:96: punctuator (
conditional.c:882:97: identifier __nonnull__
conditional.c:882:109: punctuator (
conditional.c:882:110: constant 1
conditional.c:882:111: punctuator )
conditional.c:882:112: punctuator )
conditional.c:882:113: punctuator )
conditional.c:882:115: punctuator ;
conditional.c:883:1: keyword extern
conditional.c:883:8: keyword int
conditional.c:883:12: identifier mkstemp
conditional.c:883:20: punctuator (
conditional.c:883:21: keyword char
conditional.c:883:26: punctuator *
conditional.c:883:27: identifier __template
conditional.c:883:37: punctuator )
conditional.c:883:39: identifier __attribute__
conditional.c:883:53: punctuator (
conditional.c:883:54: punctuator (
conditional.c:883:55: identifier __nonnull__
conditional.c:883:67: punctuator (
conditional.c:883:68: constant 1
conditional.c:883:69: punctuator )
conditional.c:883:70: punctuator )
conditional.c:883:71: punctuator )
conditional.c:883:73: punctuator ;
conditional.c:884:1: keyword extern
conditional.c:884:8: keyword int
conditional.c:884:12: identifier mkstemps
conditional.c:884:21: punctuator (
conditional.c:884:22: keyword char
conditional.c:884:27: punctuator *
conditional.c:884:28: identifier __template
conditional.c:884:38: punctuator ,
conditional.c:884:40: keyword int
conditional.c:884:44: identifier __suffixlen
conditional.c:884:55: punctuator )
conditional.c:884:57: identifier __attribute__
conditional.c:884:71: punctuator (
conditional.c:884:72: punctuator (
conditional.c:884:73: identifier __nonnull__
conditional.c:884:85: punctuator (
conditional.c:884:86: constant 1
conditional.c:884:87: punctuator )
conditional.c:884:88: punctuator )
conditional.c:884:89: punctuator )
conditional.c:884:91: punctuator ;
conditional.c:885:1: keyword extern
conditional.c:885:8: keyword char
conditional.c:885:13: punctuator *
conditional.c:885:14: identifier mkdtemp
conditional.c:885:22: punctuator (
conditional.c:885:23: keyword char
conditional.c:885:28: punctuator *
conditional.c:885:29: identifier __template
conditional.c:885:39: punctuator )
conditional.c:885:41: identifier __attribute__
conditional.c:885:55: punctuator (
conditional.c:885:56: punctuator (
conditional.c:885:57: identifier __nothrow__
conditional.c:885:69: punctuator ,
conditional.c:885:71: identifier __leaf__
conditional.c:885:79: punctuator )
conditional.c:885:80: punctuator )
conditional.c:885:82: identifier __attribute__
conditional.c:885:96: punctuator (
conditional.c:885:97: punctuator (
conditional.c:885:98: identifier __nonnull__
conditional.c:885:110: punctuator (
conditional.c:885:111: constant 1
conditional.c:885:112: punctuator )
conditional.c:885:113: punctuator )
conditional.c:885:114: punctuator )
conditional.c:885:116: punctuator ;
conditional.c:891:1: keyword extern
conditional.c:891:8: keyword int
conditional.c:891:12: identifier system
conditional.c:891:19: punctuator (
conditional.c:891:20: identifier __const
conditional.c:891:28: keyword char
conditional.c:891:33: punctuator *
conditional.c:891:34: identifier __command
conditional.c:891:43: punctuator )
conditional.c:891:45: punctuator ;
conditional.c:893:1: keyword extern
conditional.c:893:8: keyword char
conditional.c:893:13: punctuator *
conditional.c:893:14: identifier realpath
conditional.c:893:23: punctuator (
conditional.c:893:24: identifier __const
conditional.c:893:32: keyword char
conditional.c:893:37: punctuator *
conditional.c:893:38: identifier __restrict
conditional.c:893:49: identifier __name
conditional.c:893:55: punctuator ,
conditional.c:894:10: keyword char
conditional.c:894:15: punctuator *
conditional.c:894:16: identifier __restrict
conditional.c:894:27: identifier __resolved
conditional.c:894:37: punctuator )
conditional.c:894:39: identifier __attribute__
conditional.c:894:53: punctuator (
conditional.c:894:54: punctuator (
conditional.c:894:55: identifier __nothrow__
conditional.c:894:67: punctuator ,
conditional.c:894:69: identifier __leaf__
conditional.c:894:77: punctuator )
conditional.c:894:78: punctuator )
conditional.c:894:80: punctuator ;
conditional.c:901:1: keyword typedef
conditional.c:901:9: keyword int
conditional.c:901:13: punctuator (
conditional.c:901:14: punctuator *
conditional.c:901:15: identifier __compar_fn_t
conditional.c:901:28: punctuator )
conditional.c:901:30: punctuator (
conditional.c:901:31: identifier __const
conditional.c:901:39: keyword void
conditional.c:901:44: punctuator *
conditional.c:901:45: punctuator ,
conditional.c:901:47: identifier __const
conditional.c:901:55: keyword void
conditional.c:901:60: punctuator *
conditional.c:901:61: punctuator )
conditional.c:901:62: punctuator ;
conditional.c:905:1: keyword extern
conditional.c:905:8: keyword void
conditional.c:905:13: punctuator *
conditional.c:905:14: identifier bsearch
conditional.c:905:22: punctuator (
conditional.c:905:23: identifier __const
conditional.c:905:31: keyword void
conditional.c:905:36: punctuator *
conditional.c:905:37: identifier __key
conditional.c:905:42: punctuator ,
conditional.c:905:44: identifier __const
conditional.c:905:52: keyword void
conditional.c:905:57: punctuator *
conditional.c:905:58: identifier __base
conditional.c:905:64: punctuator ,
conditional.c:906:9: identifier size_t
conditional.c:906:16: identifier __nmemb
conditional.c:906:23: punctuator ,
conditional.c:906:25: identifier size_t
conditional.c:906:32: identifier __size
conditional.c:906:38: punctuator ,
conditional.c:906:40: identifier __compar_fn_t
conditional.c:906:54: identifier __compar
conditional.c:906:62: punctuator )
conditional.c:907:6: identifier __attribute__
conditional.c:907:20: punctuator (
conditional.c:907:21: punctuator (
conditional.c:907:22: identifier __nonnull__
conditional.c:907:34: punctuator (
conditional.c:907:35: constant 1
conditional.c:907:36: punctuator ,
conditional.c:907:38: constant 2
conditional.c:907:39: punctuator ,
conditional.c:907:41: constant 5
conditional.c:907:42: punctuator )
conditional.c:907:43: punctuator )
conditional.c:907:44: punctuator )
conditional.c:907:46: punctuator ;
conditional.c:911:1: keyword extern
conditional.c:911:8: keyword void
conditional.c:911:13: identifier qsort
conditional.c:911:19: punctuator (
conditional.c:911:20: keyword void
conditional.c:911:25: punctuator *
conditional.c:911:26: identifier __base
conditional.c:911:32: punctuator ,
conditional.c:911:34: identifier size_t
conditional.c:911:41: identifier __nmemb
conditional.c:911:48: punctuator ,
conditional.c:911:50: identifier size_t
conditional.c:911:57: identifier __size
conditional.c:911:63: punctuator ,
conditional.c:912:6: identifier __compar_fn_t
conditional.c:912:20: identifier __compar
conditional.c:912:28: punctuator )
conditional.c:912:30: identifier __attribute__
conditional.c:912:44: punctuator (
conditional.c:912:45: punctuator (
conditional.c:912:46: identifier __nonnull__
conditional.c:912:58: punctuator (
conditional.c:912:59: constant 1
conditional.c:912:60: punctuator ,
conditional.c:912:62: constant 4
conditional.c:912:63: punctuator )
conditional.c:912:64: punctuator )
conditional.c:912:65: punctuator )
conditional.c:912:66: punctuator ;
conditional.c:913:1: keyword extern
conditional.c:913:8: keyword int
conditional.c:913:12: identifier abs
conditional.c:913:16: punctuator (
conditional.c:913:17: keyword int
conditional.c:913:21: identifier __x
conditional.c:913:24: punctuator )
conditional.c:913:26: identifier __attribute__
conditional.c:913:40: punctuator (
conditional.c:913:41: punctuator (
conditional.c:913:42: identifier __nothrow__
conditional.c:913:54: punctuator ,
conditional.c:913:56: identifier __leaf__
conditional.c:913:64: punctuator )
conditional.c:913:65: punctuator )
conditional.c:913:67: identifier __attribute__
conditional.c:913:81: punctuator (
conditional.c:913:82: punctuator (
conditional.c:913:83: identifier __const__
conditional.c:913:92: punctuator )
conditional.c:913:93: punctuator )
conditional.c:913:95: punctuator ;
conditional.c:914:1: keyword extern
conditional.c:914:8: keyword long
conditional.c:914:13: keyword int
conditional.c:914:17: identifier labs
conditional.c:914:22: punctuator (
conditional.c:914:23: keyword long
conditional.c:914:28: keyword int
conditional.c:914:32: identifier __x
conditional.c:914:35: punctuator )
conditional.c:914:37: identifier __attribute__
conditional.c:914:51: punctuator (
conditional.c:914:52: punctuator (
conditional.c:914:53: identifier __nothrow__
conditional.c:914:65: punctuator ,
conditional.c:914:67: identifier __leaf__
conditional.c:914:75: punctuator )
conditional.c:914:76: punctuator )
conditional.c:914:78: identifier __attribute__
conditional.c:914:92: punctuator (
conditional.c:914:93: punctuator (
conditional.c:914:94: identifier __const__
conditional.c:914:103: punctuator )
conditional.c:914:104: punctuator )
conditional.c:914:106: punctuator ;
conditional.c:918:1: identifier __extension__
conditional.c:918:15: keyword extern
conditional.c:918:22: keyword long
conditional.c:918:27: keyword long
conditional.c:918:32: keyword int
conditional.c:918:36: identifier llabs
conditional.c:918:42: punctuator (
conditional.c:918:43: keyword long
conditional.c:918:48: keyword long
conditional.c:918:53: keyword int
conditional.c:918:57: identifier __x
conditional.c:918:60: punctuator )
conditional.c:919:6: identifier __attribute__
conditional.c:919:20: punctuator (
conditional.c:919:21: punctuator (
conditional.c:919:22: identifier __nothrow__
conditional.c:919:34: punctuator ,
conditional.c:919:36: identifier __leaf__
conditional.c:919:44: punctuator )
conditional.c:919:45: punctuator )
conditional.c:919:47: identifier __attribute__
conditional.c:919:61: punctuator (
conditional.c:919:62: punctuator (
conditional.c:919:63: identifier __const__
conditional.c:919:72: punctuator )
conditional.c:919:73: punctuator )
conditional.c:919:75: punctuator ;
conditional.c:927:1: keyword extern
conditional.c:927:8: identifier div_t
conditional.c:927:14: identifier div
conditional.c:927:18: punctuator (
conditional.c:927:19: keyword int
conditional.c:927:23: identifier __numer
conditional.c:927:30: punctuator ,
conditional.c:927:32: keyword int
conditional.c:927:36: identifier __denom
conditional.c:927:43: punctuator )
conditional.c:928:6: identifier __attribute__
conditional.c:928:20: punctuator (
conditional.c:928:21: punctuator (
conditional.c:928:22: identifier __nothrow__
conditional.c:928:34: punctuator ,
conditional.c:928:36: identifier __leaf__
conditional.c:928:44: punctuator )
conditional.c:928:45: punctuator )
conditional.c:928:47: identifier __attribute__
conditional.c:928:61: punctuator (
conditional.c:928:62: punctuator (
conditional.c:928:63: identifier __const__
conditional.c:928:72: punctuator )
conditional.c:928:73: punctuator )
conditional.c:928:75: punctuator ;
conditional.c:929:1: keyword extern
conditional.c:929:8: identifier ldiv_t
conditional.c:929:15: identifier ldiv
conditional.c:929:20: punctuator (
conditional.c:929:21: keyword long
conditional.c:929:26: keyword int
conditional.c:929:30: identifier __numer
conditional.c:929:37: punctuator ,
conditional.c:929:39: keyword long
conditional.c:929:44: keyword int
conditional.c:929:48: identifier __denom
conditional.c:929:55: punctuator )
conditional.c:930:6: identifier __attribute__
conditional.c:930:20: punctuator (
conditional.c:930:21: punctuator (
conditional.c:930:22: identifier __nothrow__
conditional.c:930:34: punctuator ,
conditional.c:930:36: identifier __leaf__
conditional.c:930:44: punctuator )
conditional.c:930:45: punctuator )
conditional.c:930:47: identifier __attribute__
conditional.c:930:61: punctuator (
conditional.c:930:62: punctuator (
conditional.c:930:63: identifier __const__
conditional.c:930:72: punctuator )
conditional.c:930:73: punctuator )
conditional.c:930:75: punctuator ;
conditional.c:935:1: identifier __extension__
conditional.c:935:15: keyword extern
conditional.c:935:22: identifier lldiv_t
conditional.c:935:30: identifier lldiv
conditional.c:935:36: punctuator (
conditional.c:935:37: keyword long
conditional.c:935:42: keyword long
conditional.c:935:47: keyword int
conditional.c:935:51: identifier __numer
conditional.c:935:58: punctuator ,
conditional.c:936:9: keyword long
conditional.c:936:14: keyword long
conditional.c:936:19: keyword int
conditional.c:936:23: identifier __denom
conditional.c:936:30: punctuator )
conditional.c:937:6: identifier __attribute__
conditional.c:937:20: punctuator (
conditional.c:937:21: punctuator (
conditional.c:937:22: identifier __nothrow__
conditional.c:937:34: punctuator ,
conditional.c:937:36: identifier __leaf__
conditional.c:937:44: punctuator )
conditional.c:937:45: punctuator )
conditional.c:937:47: identifier __attribute__
conditional.c:937:61: punctuator (
conditional.c:937:62: punctuator (
conditional.c:937:63: identifier __const__
conditional.c:937:72: punctuator )
conditional.c:937:73: punctuator )
conditional.c:937:75: punctuator ;
conditional.c:939:1: keyword extern
conditional.c:939:8: keyword char
conditional.c:939:13: punctuator *
conditional.c:939:14: identifier ecvt
conditional.c:939:19: punctuator (
conditional.c:939:20: keyword double
conditional.c:939:27: identifier __value
conditional.c:939:34: punctuator ,
conditional.c:939:36: keyword int
conditional.c:939:40: identifier __ndigit
conditional.c:939:48: punctuator ,
conditional.c:939:50: keyword int
conditional.c:939:54: punctuator *
conditional.c:939:55: identifier __restrict
conditional.c:939:66: identifier __decpt
conditional.c:939:73: punctuator ,
conditional.c:940:6: keyword int
conditional.c:940:10: punctuator *
conditional.c:940:11: identifier __restrict
conditional.c:940:22: identifier __sign
conditional.c:940:28: punctuator )
conditional.c:940:30: identifier __attribute__
conditional.c:940:44: punctuator (
conditional.c:940:45: punctuator (
conditional.c:940:46: identifier __nothrow__
conditional.c:940:58: punctuator ,
conditional.c:940:60: identifier __leaf__
conditional.c:940:68: punctuator )
conditional.c:940:69: punctuator )
conditional.c:940:71: identifier __attribute__
conditional.c:940:85: punctuator (
conditional.c:940:86: punctuator (
conditional.c:940:87: identifier __nonnull__
conditional.c:940:99: punctuator (
conditional.c:940:100: constant 3
conditional.c:940:101: punctuator ,
conditional.c:940:103: constant 4
conditional.c:940:104: punctuator )
conditional.c:940:105: punctuator )
conditional.c:940:106: punctuator )
conditional.c:940:108: punctuator ;
conditional.c:945:1: keyword extern
conditional.c:945:8: keyword char
conditional.c:945:13: punctuator *
conditional.c:945:14: identifier fcvt
conditional.c:945:19: punctuator (
conditional.c:945:20: keyword double
conditional.c:945:27: identifier __value
conditional.c:945:34: punctuator ,
conditional.c:945:36: keyword int
conditional.c:945:40: identifier __ndigit
conditional.c:945:48: punctuator ,
conditional.c:945:50: keyword int
conditional.c:945:54: punctuator *
conditional.c:945:55: identifier __restrict
conditional.c:945:66: identifier __decpt
conditional.c:945:73: punctuator ,
conditional.c:946:6: keyword int
conditional.c:946:10: punctuator *
conditional.c:946:11: identifier __restrict
conditional.c:946:22: identifier __sign
conditional.c:946:28: punctuator )
conditional.c:946:30: identifier __attribute__
conditional.c:946:44: punctuator (
conditional.c:946:45: punctuator (
conditional.c:946:46: identifier __nothrow__
conditional.c:946:58: punctuator ,
conditional.c:946:60: identifier __leaf__
conditional.c:946:68: punctuator )
conditional.c:946:69: punctuator )
conditional.c:946:71: identifier __attribute__
conditional.c:946:85: punctuator (
conditional.c:946:86: punctuator (
conditional.c:946:87: identifier __nonnull__
conditional.c:946:99: punctuator (
conditional.c:946:100: constant 3
conditional.c:946:101: punctuator ,
conditional.c:946:103: constant 4
conditional.c:946:104: punctuator )
conditional.c:946:105: punctuator )
conditional.c:946:106: punctuator )
conditional.c:946:108: punctuator ;
conditional.c:951:1: keyword extern
conditional.c:951:8: keyword char
conditional.c:951:13: punctuator *
conditional.c:951:14: identifier gcvt
conditional.c:951:19: punctuator (
conditional.c:951:20: keyword double
conditional.c:951:27: identifier __value
conditional.c:951:34: punctuator ,
conditional.c:951:36: keyword int
conditional.c:951:40: identifier __ndigit
conditional.c:951:48: punctuator ,
conditional.c:951:50: keyword char
conditional.c:951:55: punctuator *
conditional.c:951:56: identifier __buf
conditional.c:951:61: punctuator )
conditional.c:952:6: identifier __attribute__
conditional.c:952:20: punctuator (
conditional.c:952:21: punctuator (
conditional.c:952:22: identifier __nothrow__
conditional.c:952:34: punctuator ,
conditional.c:952:36: identifier __leaf__
conditional.c:952:44: punctuator )
conditional.c:952:45: punctuator )
conditional.c:952:47: identifier __attribute__
conditional.c:952:61: punctuator (
conditional.c:952:62: punctuator (
conditional.c:952:63: identifier __nonnull__
conditional.c:952:75: punctuator (
conditional.c:952:76: constant 3
conditional.c:952:77: punctuator )
conditional.c:952:78: punctuator )
conditional.c:952:79: punctuator )
conditional.c:952:81: punctuator ;
conditional.c:957:1: keyword extern
conditional.c:957:8: keyword char
conditional.c:957:13: punctuator *
conditional.c:957:14: identifier qecvt
conditional.c:957:20: punctuator (
conditional.c:957:21: keyword long
conditional.c:957:26: keyword double
conditional.c:957:33: identifier __value
conditional.c:957:40: punctuator ,
conditional.c:957:42: keyword int
conditional.c:957:46: identifier __ndigit
conditional.c:957:54: punctuator ,
conditional.c:958:7: keyword int
conditional.c:958:11: punctuator *
conditional.c:958:12: identifier __restrict
conditional.c:958:23: identifier __decpt
conditional.c:958:30: punctuator ,
conditional.c:958:32: keyword int
conditional.c:958:36: punctuator *
conditional.c:958:37: identifier __restrict
conditional.c:958:48: identifier __sign
conditional.c:958:54: punctuator )
conditional.c:959:6: identifier __attribute__
conditional.c:959:20: punctuator (
conditional.c:959:21: punctuator (
conditional.c:959:22: identifier __nothrow__
conditional.c:959:34: punctuator ,
conditional.c:959:36: identifier __leaf__
conditional.c:959:44: punctuator )
conditional.c:959:45: punctuator )
conditional.c:959:47: identifier __attribute__
conditional.c:959:61: punctuator (
conditional.c:959:62: punctuator (
conditional.c:959:63: identifier __nonnull__
conditional.c:959:75: punctuator (
conditional.c:959:76: constant 3
conditional.c:959:77: punctuator ,
conditional.c:959:79: constant 4
conditional.c:959:80: punctuator )
conditional.c:959:81: punctuator )
conditional.c:959:82: punctuator )
conditional.c:959:84: punctuator ;
conditional.c:960:1: keyword extern
conditional.c:960:8: keyword char
conditional.c:960:13: punctuator *
conditional.c:960:14: identifier qfcvt
conditional.c:960:20: punctuator (
conditional.c:960:21: keyword long
conditional.c:960:26: keyword double
conditional.c:960:33: identifier __value
conditional.c:960:40: punctuator ,
conditional.c:960:42: keyword int
conditional.c:960:46: identifier __ndigit
conditional.c:960:54: punctuator ,
conditional.c:961:7: keyword int
conditional.c:961:11: punctuator *
conditional.c:961:12: identifier __restrict
conditional.c:961:23: identifier __decpt
conditional.c:961:30: punctuator ,
conditional.c:961:32: keyword int
conditional.c:961:36: punctuator *
conditional.c:961:37: identifier __restrict
conditional.c:961:48: identifier __sign
conditional.c:961:54: punctuator )
conditional.c:962:6: identifier __attribute__
conditional.c:962:20: punctuator (
conditional.c:962:21: punctuator (
conditional.c:962:22: identifier __nothrow__
conditional.c:962:34: punctuator ,
conditional.c:962:36: identifier __leaf__
conditional.c:962:44: punctuator )
conditional.c:962:45: punctuator )
conditional.c:962:47: identifier __attribute__
conditional.c:962:61: punctuator (
conditional.c:962:62: punctuator (
conditional.c:962:63: identifier __nonnull__
conditional.c:962:75: punctuator (
conditional.c:962:76: constant 3
conditional.c:962:77: punctuator ,
conditional.c:962:79: constant 4
conditional.c:962:80: punctuator )
conditional.c:962:81: punctuator )
conditional.c:962:82: punctuator )
conditional.c:962:84: punctuator ;
conditional.c:963:1: keyword extern
conditional.c:963:8: keyword char
conditional.c:963:13: punctuator *
conditional.c:963:14: identifier qgcvt
conditional.c:963:20: punctuator (
conditional.c:963:21: keyword long
conditional.c:963:26: keyword double
conditional.c:963:33: identifier __value
conditional.c:963:40: punctuator ,
conditional.c:963:42: keyword int
conditional.c:963:46: identifier __ndigit
conditional.c:963:54: punctuator ,
conditional.c:963:56: keyword char
conditional.c:963:61: punctuator *
conditional.c:963:62: identifier __buf
conditional.c:963:67: punctuator )
conditional.c:964:6: identifier __attribute__
conditional.c:964:20: punctuator (
conditional.c:964:21: punctuator (
conditional.c:964:22: identifier __nothrow__
conditional.c:964:34: punctuator ,
conditional.c:964:36: identifier __leaf__
conditional.c:964:44: punctuator )
conditional.c:964:45: punctuator )
conditional.c:964:47: identifier __attribute__
conditional.c:964:61: punctuator (
conditional.c:964:62: punctuator (
conditional.c:964:63: identifier __nonnull__
conditional.c:964:75: punctuator (
conditional.c:964:76: constant 3
conditional.c:964:77: punctuator )
conditional.c:964:78: punctuator )
conditional.c:964:79: punctuator )
conditional.c:964:81: punctuator ;
conditional.c:969:1: keyword extern
conditional.c:969:8: keyword int
conditional.c:969:12: identifier ecvt_r
conditional.c:969:19: punctuator (
conditional.c:969:20: keyword double
conditional.c:969:27: identifier __value
conditional.c:969:34: punctuator ,
conditional.c:969:36: keyword int
conditional.c:969:40: identifier __ndigit
conditional.c:969:48: punctuator ,
conditional.c:969:50: keyword int
conditional.c:969:54: punctuator *
conditional.c:969:55: identifier __restrict
conditional.c:969:66: identifier __decpt
conditional.c:969:73: punctuator ,
conditional.c:970:6: keyword int
conditional.c:970:10: punctuator *
conditional.c:970:11: identifier __restrict
conditional.c:970:22: identifier __sign
conditional.c:970:28: punctuator ,
conditional.c:970:30: keyword char
conditional.c:970:35: punctuator *
conditional.c:970:36: identifier __restrict
conditional.c:970:47: identifier __buf
conditional.c:970:52: punctuator ,
conditional.c:971:6: identifier size_t
conditional.c:971:13: identifier __len
conditional.c:971:18: punctuator )
conditional.c:971:20: identifier __attribute__
conditional.c:971:34: punctuator (
conditional.c:971:35: punctuator (
conditional.c:971:36: identifier __nothrow__
conditional.c:971:48: punctuator ,
conditional.c:971:50: identifier __leaf__
conditional.c:971:58: punctuator )
conditional.c:971:59: punctuator )
conditional.c:971:61: identifier __attribute__
conditional.c:971:75: punctuator (
conditional.c:971:76: punctuator (
conditional.c:971:77: identifier __nonnull__
conditional.c:971:89: punctuator (
conditional.c:971:90: constant 3
conditional.c:971:91: punctuator ,
conditional.c:971:93: constant 4
conditional.c:971:94: punctuator ,
conditional.c:971:96: constant 5
conditional.c:971:97: punctuator )
conditional.c:971:98: punctuator )
conditional.c:971:99: punctuator )
conditional.c:971:100: punctuator ;
conditional.c:972:1: keyword extern
conditional.c:972:8: keyword int
conditional.c:972:12: identifier fcvt_r
conditional.c:972:19: punctuator (
conditional.c:972:20: keyword double
conditional.c:972:27: identifier __value
conditional.c:972:34: punctuator ,
conditional.c:972:36: keyword int
conditional.c:972:40: identifier __ndigit
conditional.c:972:48: punctuator ,
conditional.c:972:50: keyword int
conditional.c:972:54: punctuator *
conditional.c:972:55: identifier __restrict
conditional.c:972:66: identifier __decpt
conditional.c:972:73: punctuator ,
conditional.c:973:6: keyword int
conditional.c:973:10: punctuator *
conditional.c:973:11: identifier __restrict
conditional.c:973:22: identifier __sign
conditional.c:973:28: punctuator ,
conditional.c:973:30: keyword char
conditional.c:973:35: punctuator *
conditional.c:973:36: identifier __restrict
conditional.c:973:47: identifier __buf
conditional.c:973:52: punctuator ,
conditional.c:974:6: identifier size_t
conditional.c:974:13: identifier __len
conditional.c:974:18: punctuator )
conditional.c:974:20: identifier __attribute__
conditional.c:974:34: punctuator (
conditional.c:974:35: punctuator (
conditional.c:974:36: identifier __nothrow__
conditional.c:974:48: punctuator ,
conditional.c:974:50: identifier __leaf__
conditional.c:974:58: punctuator )
conditional.c:974:59: punctuator )
conditional.c:974:61: identifier __attribute__
conditional.c:974:75: punctuator (
conditional.c:974:76: punctuator (
conditional.c:974:77: identifier __nonnull__
conditional.c:974:89: punctuator (
conditional.c:974:90: constant 3
conditional.c:974:91: punctuator ,
conditional.c:974:93: constant 4
conditional.c:974:94: punctuator ,
conditional.c:974:96: constant 5
conditional.c:974:97: punctuator )
conditional.c:974:98: punctuator )
conditional.c:974:99: punctuator )
conditional.c:974:100: punctuator ;
conditional.c:976:1: keyword extern
conditional.c:976:8: keyword int
conditional.c:976:12: identifier qecvt_r
conditional.c:976:20: punctuator (
conditional.c:976:21: keyword long
conditional.c:976:26: keyword double
conditional.c:976:33: identifier __value
conditional.c:976:40: punctuator ,
conditional.c:976:42: keyword int
conditional.c:976:46: identifier __ndigit
conditional.c:976:54: punctuator ,
conditional.c:977:7: keyword int
conditional.c:977:11: punctuator *
conditional.c:977:12: identifier __restrict
conditional.c:977:23: identifier __decpt
conditional.c:977:30: punctuator ,
conditional.c:977:32: keyword int
conditional.c:977:36: punctuator *
conditional.c:977:37: identifier __restrict
conditional.c:977:48: identifier __sign
conditional.c:977:54: punctuator ,
conditional.c:978:7: keyword char
conditional.c:978:12: punctuator *
conditional.c:978:13: identifier __restrict
conditional.c:978:24: identifier __buf
conditional.c:978:29: punctuator ,
conditional.c:978:31: identifier size_t
conditional.c:978:38: identifier __len
conditional.c:978:43: punctuator )
conditional.c:979:6: identifier __attribute__
conditional.c:979:20: punctuator (
conditional.c:979:21: punctuator (
conditional.c:979:22: identifier __nothrow__
conditional.c:979:34: punctuator ,
conditional.c:979:36: identifier __leaf__
conditional.c:979:44: punctuator )
conditional.c:979:45: punctuator )
conditional.c:979:47: identifier __attribute__
conditional.c:979:61: punctuator (
conditional.c:979:62: punctuator (
conditional.c:979:63: identifier __nonnull__
conditional.c:979:75: punctuator (
conditional.c:979:76: constant 3
conditional.c:979:77: punctuator ,
conditional.c:979:79: constant 4
conditional.c:979:80: punctuator ,
conditional.c:979:82: constant 5
conditional.c:979:83: punctuator )
conditional.c:979:84: punctuator )
conditional.c:979:85: punctuator )
conditional.c:979:86: punctuator ;
conditional.c:980:1: keyword extern
conditional.c:980:8: keyword int
conditional.c:980:12: identifier qfcvt_r
conditional.c:980:20: punctuator (
conditional.c:980:21: keyword long
conditional.c:980:26: keyword double
conditional.c:980:33: identifier __value
conditional.c:980:40: punctuator ,
conditional.c:980:42: keyword int
conditional.c:980:46: identifier __ndigit
conditional.c:980:54: punctuator ,
conditional.c:981:7: keyword int
conditional.c:981:11: punctuator *
conditional.c:981:12: identifier __restrict
conditional.c:981:23: identifier __decpt
conditional.c:981:30: punctuator ,
conditional.c:981:32: keyword int
conditional.c:981:36: punctuator *
conditional.c:981:37: identifier __restrict
conditional.c:981:48: identifier __sign
conditional.c:981:54: punctuator ,
conditional.c:982:7: keyword char
conditional.c:982:12: punctuator *
conditional.c:982:13: identifier __restrict
conditional.c:982:24: identifier __buf
conditional.c:982:29: punctuator ,
conditional.c:982:31: identifier size_t
conditional.c:982:38: identifier __len
conditional.c:982:43: punctuator )
conditional.c:983:6: identifier __attribute__
conditional.c:983:20: punctuator (
conditional.c:983:21: punctuator (
conditional.c:983:22: identifier __nothrow__
conditional.c:983:34: punctuator ,
conditional.c:983:36: identifier __leaf__
conditional.c:983:44: punctuator )
conditional.c:983:45: punctuator )
conditional.c:983:47: identifier __attribute__
conditional.c:983:61: punctuator (
conditional.c:983:62: punctuator (
conditional.c:983:63: identifier __nonnull__
conditional.c:983:75: punctuator (
conditional.c:983:76: constant 3
conditional.c:983:77: punctuator ,
conditional.c:983:79: constant 4
conditional.c:983:80: punctuator ,
conditional.c:983:82: constant 5
conditional.c:983:83: punctuator )
conditional.c:983:84: punctuator )
conditional.c:983:85: punctuator )
conditional.c:983:86: punctuator ;
conditional.c:991:1: keyword extern
conditional.c:991:8: keyword int
conditional.c:991:12: identifier mblen
conditional.c:991:18: punctuator (
conditional.c:991:19: identifier __const
conditional.c:991:27: keyword char
conditional.c:991:32: punctuator *
conditional.c:991:33: identifier __s
conditional.c:991:36: punctuator ,
conditional.c:991:38: identifier size_t
conditional.c:991:45: identifier __n
conditional.c:991:48: punctuator )
conditional.c:991:50: identifier __attribute__
conditional.c:991:64: punctuator (
conditional.c:991:65: punctuator (
conditional.c:991:66: identifier __nothrow__
conditional.c:991:78: punctuator ,
conditional.c:991:80: identifier __leaf__
conditional.c:991:88: punctuator )
conditional.c:991:89: punctuator )
conditional.c:991:91: punctuator ;
conditional.c:994:1: keyword extern
conditional.c:994:8: keyword int
conditional.c:994:12: identifier mbtowc
conditional.c:994:19: punctuator (
conditional.c:994:20: identifier wchar_t
conditional.c:994:28: punctuator *
conditional.c:994:29: identifier __restrict
conditional.c:994:40: identifier __pwc
conditional.c:994:45: punctuator ,
conditional.c:995:6: identifier __const
conditional.c:995:14: keyword char
conditional.c:995:19: punctuator *
conditional.c:995:20: identifier __restrict
conditional.c:995:31: identifier __s
conditional.c:995:34: punctuator ,
conditional.c:995:36: identifier size_t
conditional.c:995:43: identifier __n
conditional.c:995:46: punctuator )
conditional.c:995:48: identifier __attribute__
conditional.c:995:62: punctuator (
conditional.c:995:63: punctuator (
conditional.c:995:64: identifier __nothrow__
conditional.c:995:76: punctuator ,
conditional.c:995:78: identifier __leaf__
conditional.c:995:86: punctuator )
conditional.c:995:87: punctuator )
conditional.c:995:89: punctuator ;
conditional.c:998:1: keyword extern
conditional.c:998:8: keyword int
conditional.c:998:12: identifier wctomb
conditional.c:998:19: punctuator (
conditional.c:998:20: keyword char
conditional.c:998:25: punctuator *
conditional.c:998:26: identifier __s
conditional.c:998:29: punctuator ,
conditional.c:998:31: identifier wchar_t
conditional.c:998:39: identifier __wchar
conditional.c:998:46: punctuator )
conditional.c:998:48: identifier __attribute__
conditional.c:998:62: punctuator (
conditional.c:998:63: punctuator (
conditional.c:998:64: identifier __nothrow__
conditional.c:998:76: punctuator ,
conditional.c:998:78: identifier __leaf__
conditional.c:998:86: punctuator )
conditional.c:998:87: punctuator )
conditional.c:998:89: punctuator ;
conditional.c:1002:1: keyword extern
conditional.c:1002:8: identifier size_t
conditional.c:1002:15: identifier mbstowcs
conditional.c:1002:24: punctuator (
conditional.c:1002:25: identifier wchar_t
conditional.c:1002:33: punctuator *
conditional.c:1002:34: identifier __restrict
conditional.c:1002:45: identifier __pwcs
conditional.c:1002:51: punctuator ,
conditional.c:1003:4: identifier __const
conditional.c:1003:12: keyword char
conditional.c:1003:17: punctuator *
conditional.c:1003:18: identifier __restrict
conditional.c:1003:29: identifier __s
conditional.c:1003:32: punctuator ,
conditional.c:1003:34: identifier size_t
conditional.c:1003:41: identifier __n
conditional.c:1003:44: punctuator )
conditional.c:1003:46: identifier __attribute__
conditional.c:1003:60: punctuator (
conditional.c:1003:61: punctuator (
conditional.c:1003:62: identifier __nothrow__
conditional.c:1003:74: punctuator ,
conditional.c:1003:76: identifier __leaf__
conditional.c:1003:84: punctuator )
conditional.c:1003:85: punctuator )
conditional.c:1003:86: punctuator ;
conditional.c:1005:1: keyword extern
conditional.c:1005:8: identifier size_t
conditional.c:1005:15: identifier wcstombs
conditional.c:1005:24: punctuator (
conditional.c:1005:25: keyword char
conditional.c:1005:30: punctuator *
conditional.c:1005:31: identifier __restrict
conditional.c:1005:42: identifier __s
conditional.c:1005:45: punctuator ,
conditional.c:1006:4: identifier __const
conditional.c:1006:12: identifier wchar_t
conditional.c:1006:20: punctuator *
conditional.c:1006:21: identifier __restrict
conditional.c:1006:32: identifier __pwcs
conditional.c:1006:38: punctuator ,
conditional.c:1006:40: identifier size_t
conditional.c:1006:47: identifier __n
conditional.c:1006:50: punctuator )
conditional.c:1007:6: identifier __attribute__
conditional.c:1007:20: punctuator (
conditional.c:1007:21: punctuator (
conditional.c:1007:22: identifier __nothrow__
conditional.c:1007:34: punctuator ,
conditional.c:1007:36: identifier __leaf__
conditional.c:1007:44: punctuator )
conditional.c:1007:45: punctuator )
conditional.c:1007:46: punctuator ;
conditional.c:1016:1: keyword extern
conditional.c:1016:8: keyword int
conditional.c:1016:12: identifier rpmatch
conditional.c:1016:20: punctuator (
conditional.c:1016:21: identifier __const
conditional.c:1016:29: keyword char
conditional.c:1016:34: punctuator *
conditional.c:1016:35: identifier __response
conditional.c:1016:45: punctuator )
conditional.c:1016:47: identifier __attribute__
conditional.c:1016:61: punctuator (
conditional.c:1016:62: punctuator (
conditional.c:1016:63: identifier __nothrow__
conditional.c:1016:75: punctuator ,
conditional.c:1016:77: identifier __leaf__
conditional.c:1016:85: punctuator )
conditional.c:1016:86: punctuator )
conditional.c:1016:88: identifier __attribute__
conditional.c:1016:102: punctuator (
conditional.c:1016:103: punctuator (
conditional.c:1016:104: identifier __nonnull__
conditional.c:1016:116: punctuator (
conditional.c:1016:117: constant 1
conditional.c:1016:118: punctuator )
conditional.c:1016:119: punctuator )
conditional.c:1016:120: punctuator )
conditional.c:1016:122: punctuator ;
conditional.c:1017:1: keyword extern
conditional.c:1017:8: keyword int
conditional.c:1017:12: identifier getsubopt
conditional.c:1017:22: punctuator (
conditional.c:1017:23: keyword char
conditional.c:1017:28: punctuator *
conditional.c:1017:29: punctuator *
conditional.c:1017:30: identifier __restrict
conditional.c:1017:41: identifier __optionp
conditional.c:1017:50: punctuator ,
conditional.c:1018:9: keyword char
conditional.c:1018:14: punctuator *
conditional.c:1018:15: identifier __const
conditional.c:1018:23: punctuator *
conditional.c:1018:24: identifier __restrict
conditional.c:1018:35: identifier __tokens
conditional.c:1018:43: punctuator ,
conditional.c:1019:9: keyword char
conditional.c:1019:14: punctuator *
conditional.c:1019:15: punctuator *
conditional.c:1019:16: identifier __restrict
conditional.c:1019:27: identifier __valuep
conditional.c:1019:35: punctuator )
conditional.c:1020:6: identifier __attribute__
conditional.c:1020:20: punctuator (
conditional.c:1020:21: punctuator (
conditional.c:1020:22: identifier __nothrow__
conditional.c:1020:34: punctuator ,
conditional.c:1020:36: identifier __leaf__
conditional.c:1020:44: punctuator )
conditional.c:1020:45: punctuator )
conditional.c:1020:47: identifier __attribute__
conditional.c:1020:61: punctuator (
conditional.c:1020:62: punctuator (
conditional.c:1020:63: identifier __nonnull__
conditional.c:1020:75: punctuator (
conditional.c:1020:76: constant 1
conditional.c:1020:77: punctuator ,
conditional.c:1020:79: constant 2
conditional.c:1020:80: punctuator ,
conditional.c:1020:82: constant 3
conditional.c:1020:83: punctuator )
conditional.c:1020:84: punctuator )
conditional.c:1020:85: punctuator )
conditional.c:1020:87: punctuator ;
conditional.c:1021:1: keyword extern
conditional.c:1021:8: keyword int
conditional.c:1021:12: identifier getloadavg
conditional.c:1021:23: punctuator (
conditional.c:1021:24: keyword double
conditional.c:1021:31: identifier __loadavg
conditional.c:1021:40: punctuator [
conditional.c:1021:41: punctuator ]
conditional.c:1021:42: punctuator ,
conditional.c:1021:44: keyword int
conditional.c:1021:48: identifier __nelem
conditional.c:1021:55: punctuator )
conditional.c:1022:6: identifier __attribute__
conditional.c:1022:20: punctuator (
conditional.c:1022:21: punctuator (
conditional.c:1022:22: identifier __nothrow__
conditional.c:1022:34: punctuator ,
conditional.c:1022:36: identifier __leaf__
conditional.c:1022:44: punctuator )
conditional.c:1022:45: punctuator )
conditional.c:1022:47: identifier __attribute__
conditional.c:1022:61: punctuator (
conditional.c:1022:62: punctuator (
conditional.c:1022:63: identifier __nonnull__
conditional.c:1022:75: punctuator (
conditional.c:1022:76: constant 1
conditional.c:1022:77: punctuator )
conditional.c:1022:78: punctuator )
conditional.c:1022:79: punctuator )
conditional.c:1022:80: punctuator ;
conditional.c:1024:1: keyword int
conditional.c:1024:5: identifier main
conditional.c:1024:9: punctuator (
conditional.c:1024:10: keyword void
conditional.c:1024:14: punctuator )
conditional.c:1025:1: punctuator {
conditional.c:1026:3: keyword int
conditional.c:1026:7: identifier argc
conditional.c:1026:12: punctuator =
conditional.c:1026:14: constant 1
conditional.c:1026:15: punctuator ;
conditional.c:1027:3: keyword short
conditional.c:1027:9: identifier array
conditional.c:1027:14: punctuator [
conditional.c:1027:15: constant 1000
conditional.c:1027:19: punctuator ]
conditional.c:1027:20: punctuator ,
conditional.c:1027:22: identifier array2
conditional.c:1027:28: punctuator [
conditional.c:1027:29: constant 1000
conditional.c:1027:33: punctuator ]
conditional.c:1027:34: punctuator ,
conditional.c:1027:36: punctuator *
conditional.c:1027:37: identifier array3
conditional.c:1027:43: punctuator ,
conditional.c:1027:45: identifier cond
conditional.c:1027:49: punctuator [
conditional.c:1027:50: constant 1000
conditional.c:1027:54: punctuator ]
conditional.c:1027:55: punctuator ,
conditional.c:1027:57: identifier ii
conditional.c:1027:60: punctuator =
conditional.c:1027:62: constant 0
conditional.c:1027:63: punctuator ;
conditional.c:1029:3: identifier __asm
conditional.c:1029:9: keyword volatile
conditional.c:1029:18: punctuator (
conditional.c:1029:19: string-literal ""
conditional.c:1029:22: punctuator :
conditional.c:1029:24: string-literal "+r"
conditional.c:1029:29: punctuator (
conditional.c:1029:30: identifier argc
conditional.c:1029:34: punctuator )
conditional.c:1029:35: punctuator )
conditional.c:1029:36: punctuator ;
conditional.c:1030:3: keyword for
conditional.c:1030:7: punctuator (
conditional.c:1030:8: identifier ii
conditional.c:1030:11: punctuator =
conditional.c:1030:13: constant 0
conditional.c:1030:14: punctuator ;
conditional.c:1030:16: identifier ii
conditional.c:1030:19: punctuator <
conditional.c:1030:21: constant 1000
conditional.c:1030:25: punctuator ;
conditional.c:1030:27: identifier ii
conditional.c:1030:29: punctuator ++
conditional.c:1030:31: punctuator )
conditional.c:1030:33: punctuator {
conditional.c:1031:5: identifier cond
conditional.c:1031:9: punctuator [
conditional.c:1031:10: identifier ii
conditional.c:1031:12: punctuator ]
conditional.c:1031:14: punctuator =
conditional.c:1031:16: constant 1
conditional.c:1031:17: punctuator ;
conditional.c:1032:5: identifier array
conditional.c:1032:10: punctuator [
conditional.c:1032:11: identifier ii
conditional.c:1032:13: punctuator ]
conditional.c:1032:15: punctuator =
conditional.c:1032:17: constant 1000
conditional.c:1032:21: punctuator ;
conditional.c:1033:5: identifier array2
conditional.c:1033:11: punctuator [
conditional.c:1033:12: identifier ii
conditional.c:1033:14: punctuator ]
conditional.c:1033:16: punctuator =
conditional.c:1033:18: constant 2000
conditional.c:1033:22: punctuator ;
conditional.c:1034:3: punctuator }
conditional.c:1035:3: identifier array2
conditional.c:1035:9: punctuator [
conditional.c:1035:10: punctuator :
conditional.c:1035:11: punctuator ]
conditional.c:1035:13: punctuator =
conditional.c:1035:15: identifier cond
conditional.c:1035:19: punctuator [
conditional.c:1035:20: punctuator :
conditional.c:1035:21: punctuator ]
conditional.c:1035:23: punctuator ?
conditional.c:1035:25: identifier array
conditional.c:1035:30: punctuator [
conditional.c:1035:31: punctuator :
conditional.c:1035:32: punctuator ]
conditional.c:1035:34: punctuator :
conditional.c:1035:36: identifier array2
conditional.c:1035:42: punctuator [
conditional.c:1035:43: punctuator :
conditional.c:1035:44: punctuator ]
conditional.c:1035:45: punctuator ;
conditional.c:1037:3: keyword for
conditional.c:1037:7: punctuator (
conditional.c:1037:8: identifier ii
conditional.c:1037:11: punctuator =
conditional.c:1037:13: constant 0
conditional.c:1037:14: punctuator ;
conditional.c:1037:16: identifier ii
conditional.c:1037:19: punctuator <
conditional.c:1037:21: constant 1000
conditional.c:1037:25: punctuator ;
conditional.c:1037:27: identifier ii
conditional.c:1037:29: punctuator ++
conditional.c:1037:31: punctuator )
conditional.c:1037:33: punctuator {
conditional.c:1038:4: keyword if
conditional.c:1038:7: punctuator (
conditional.c:1038:8: identifier array2
conditional.c:1038:14: punctuator [
conditional.c:1038:15: identifier ii
conditional.c:1038:17: punctuator ]
conditional.c:1038:19: punctuator !=
conditional.c:1038:22: constant 1000
conditional.c:1038:26: punctuator )
conditional.c:1039:6: keyword return
conditional.c:1039:13: constant 1
conditional.c:1039:14: punctuator ;
conditional.c:1040:3: punctuator }
conditional.c:1042:3: identifier array2
conditional.c:1042:9: punctuator [
conditional.c:1042:10: constant 0
conditional.c:1042:11: punctuator :
conditional.c:1042:12: constant 500
conditional.c:1042:15: punctuator :
conditional.c:1042:16: constant 2
conditional.c:1042:17: punctuator ]
conditional.c:1042:19: punctuator =
conditional.c:1042:21: identifier cond
conditional.c:1042:25: punctuator [
conditional.c:1042:26: constant 0
conditional.c:1042:27: punctuator :
conditional.c:1042:28: constant 500
conditional.c:1042:31: punctuator ]
conditional.c:1042:33: punctuator ?
conditional.c:1042:35: identifier array
conditional.c:1042:40: punctuator [
conditional.c:1042:41: constant 0
conditional.c:1042:42: punctuator :
conditional.c:1042:43: constant 500
conditional.c:1042:46: punctuator :
conditional.c:1042:47: constant 1
conditional.c:1042:48: punctuator ]
conditional.c:1042:50: punctuator :
conditional.c:1042:52: identifier array2
conditional.c:1042:58: punctuator [
conditional.c:1042:59: constant 0
conditional.c:1042:60: punctuator :
conditional.c:1042:61: constant 500
conditional.c:1042:64: punctuator :
conditional.c:1042:65: constant 2
conditional.c:1042:66: punctuator ]
conditional.c:1042:67: punctuator ;
conditional.c:1044:3: keyword for
conditional.c:1044:7: punctuator (
conditional.c:1044:8: identifier ii
conditional.c:1044:11: punctuator =
conditional.c:1044:13: constant 0
conditional.c:1044:14: punctuator ;
conditional.c:1044:16: identifier ii
conditional.c:1044:19: punctuator <
conditional.c:1044:21: constant 1000
conditional.c:1044:25: punctuator ;
conditional.c:1044:27: identifier ii
conditional.c:1044:29: punctuator ++
conditional.c:1044:31: punctuator )
conditional.c:1044:33: punctuator {
conditional.c:1045:4: keyword if
conditional.c:1045:7: punctuator (
conditional.c:1045:8: identifier array2
conditional.c:1045:14: punctuator [
conditional.c:1045:15: identifier ii
conditional.c:1045:17: punctuator ]
conditional.c:1045:19: punctuator !=
conditional.c:1045:22: constant 1000
conditional.c:1045:26: punctuator )
conditional.c:1046:6: keyword return
conditional.c:1046:13: constant 2
conditional.c:1046:14: punctuator ;
conditional.c:1047:3: punctuator }
conditional.c:1049:3: keyword for
conditional.c:1049:7: punctuator (
conditional.c:1049:8: identifier ii
conditional.c:1049:11: punctuator =
conditional.c:1049:13: constant 0
conditional.c:1049:14: punctuator ;
conditional.c:1049:16: identifier ii
conditional.c:1049:19: punctuator <
conditional.c:1049:21: constant 1000
conditional.c:1049:25: punctuator ;
conditional.c:1049:27: identifier ii
conditional.c:1049:29: punctuator ++
conditional.c:1049:31: punctuator )
conditional.c:1049:33: punctuator {
conditional.c:1050:5: identifier cond
conditional.c:1050:9: punctuator [
conditional.c:1050:10: identifier ii
conditional.c:1050:12: punctuator ]
conditional.c:1050:14: punctuator =
conditional.c:1050:16: identifier ii
conditional.c:1050:19: punctuator %
conditional.c:1050:21: constant 2
conditional.c:1050:22: punctuator ;
conditional.c:1051:5: identifier array2
conditional.c:1051:11: punctuator [
conditional.c:1051:12: identifier ii
conditional.c:1051:14: punctuator ]
conditional.c:1051:16: punctuator =
conditional.c:1051:18: constant 5
conditional.c:1051:19: punctuator ;
conditional.c:1052:5: identifier array
conditional.c:1052:10: punctuator [
conditional.c:1052:11: identifier ii
conditional.c:1052:13: punctuator ]
conditional.c:1052:15: punctuator =
conditional.c:1052:17: constant 3
conditional.c:1052:18: punctuator ;
conditional.c:1053:3: punctuator }
conditional.c:1054:3: identifier array3
conditional.c:1054:10: punctuator =
conditional.c:1054:12: punctuator (
conditional.c:1054:13: keyword short
conditional.c:1054:19: punctuator *
conditional.c:1054:20: punctuator )
conditional.c:1054:22: identifier malloc
conditional.c:1054:29: punctuator (
conditional.c:1054:30: keyword sizeof
conditional.c:1054:37: punctuator (
conditional.c:1054:38: keyword short
conditional.c:1054:43: punctuator )
conditional.c:1054:45: punctuator *
conditional.c:1054:47: constant 1000
conditional.c:1054:51: punctuator )
conditional.c:1054:52: punctuator ;
conditional.c:1055:3: identifier array3
conditional.c:1055:9: punctuator [
conditional.c:1055:10: constant 0
conditional.c:1055:11: punctuator :
conditional.c:1055:12: constant 1000
conditional.c:1055:16: punctuator :
conditional.c:1055:17: identifier argc
conditional.c:1055:21: punctuator ]
conditional.c:1055:23: punctuator =
conditional.c:1055:25: identifier cond
conditional.c:1055:29: punctuator [
conditional.c:1055:30: punctuator :
conditional.c:1055:31: punctuator ]
conditional.c:1055:33: punctuator ?
conditional.c:1055:35: identifier array
conditional.c:1055:40: punctuator [
conditional.c:1055:41: constant 0
conditional.c:1055:42: punctuator :
conditional.c:1055:43: punctuator (
conditional.c:1055:44: identifier argc
conditional.c:1055:49: punctuator *
conditional.c:1055:51: constant 1000
conditional.c:1055:55: punctuator )
conditional.c:1055:56: punctuator ]
conditional.c:1055:58: punctuator :
conditional.c:1055:60: identifier array2
conditional.c:1055:66: punctuator [
conditional.c:1055:67: identifier argc
conditional.c:1055:71: punctuator -
conditional.c:1055:72: constant 1
conditional.c:1055:73: punctuator :
conditional.c:1055:74: constant 1000
conditional.c:1055:78: punctuator ]
conditional.c:1055:79: punctuator ;
conditional.c:1057:3: keyword for
conditional.c:1057:7: punctuator (
conditional.c:1057:8: identifier ii
conditional.c:1057:11: punctuator =
conditional.c:1057:13: constant 0
conditional.c:1057:14: punctuator ;
conditional.c:1057:16: identifier ii
conditional.c:1057:19: punctuator <
conditional.c:1057:21: constant 1000
conditional.c:1057:25: punctuator ;
conditional.c:1057:27: identifier ii
conditional.c:1057:29: punctuator ++
conditional.c:1057:31: punctuator )
conditional.c:1057:33: punctuator {
conditional.c:1058:5: keyword if
conditional.c:1058:8: punctuator (
conditional.c:1058:9: punctuator (
conditional.c:1058:10: identifier cond
conditional.c:1058:14: punctuator [
conditional.c:1058:15: identifier ii
conditional.c:1058:17: punctuator ]
conditional.c:1058:19: punctuator ==
conditional.c:1058:22: constant 0
conditional.c:1058:24: punctuator &&
conditional.c:1058:27: identifier array3
conditional.c:1058:33: punctuator [
conditional.c:1058:34: identifier ii
conditional.c:1058:36: punctuator ]
conditional.c:1058:38: punctuator !=
conditional.c:1058:41: constant 5
conditional.c:1058:42: punctuator )
conditional.c:1059:9: punctuator ||
conditional.c:1059:12: punctuator (
conditional.c:1059:13: identifier cond
conditional.c:1059:17: punctuator [
conditional.c:1059:18: identifier ii
conditional.c:1059:20: punctuator ]
conditional.c:1059:22: punctuator ==
conditional.c:1059:25: constant 1
conditional.c:1059:27: punctuator &&
conditional.c:1059:30: identifier array3
conditional.c:1059:36: punctuator [
conditional.c:1059:37: identifier ii
conditional.c:1059:39: punctuator ]
conditional.c:1059:41: punctuator !=
conditional.c:1059:44: constant 3
conditional.c:1059:45: punctuator )
conditional.c:1059:46: punctuator )
conditional.c:1060:6: keyword return
conditional.c:1060:13: constant 3
conditional.c:1060:14: punctuator ;
conditional.c:1061:3: punctuator }
conditional.c:1062:3: keyword return
conditional.c:1062:10: constant 0
conditional.c:1062:11: punctuator ;
conditional.c:1063:1: punctuator }
