0
convert-bfp-5.c:4:1: keyword int
convert-bfp-5.c:4:5: identifier failures
convert-bfp-5.c:4:13: punctuator ;
convert-bfp-5.c:6:1: keyword volatile
convert-bfp-5.c:6:10: identifier _Decimal32
convert-bfp-5.c:6:21: identifier sd
convert-bfp-5.c:6:23: punctuator ;
convert-bfp-5.c:7:1: keyword volatile
convert-bfp-5.c:7:10: identifier _Decimal64
convert-bfp-5.c:7:21: identifier dd
convert-bfp-5.c:7:23: punctuator ;
convert-bfp-5.c:8:1: keyword volatile
convert-bfp-5.c:8:10: identifier _Decimal128
convert-bfp-5.c:8:22: identifier td
convert-bfp-5.c:8:24: punctuator ;
convert-bfp-5.c:9:1: keyword volatile
convert-bfp-5.c:9:10: keyword float
convert-bfp-5.c:9:16: identifier sf
convert-bfp-5.c:9:18: punctuator ;
convert-bfp-5.c:10:1: keyword volatile
convert-bfp-5.c:10:10: keyword double
convert-bfp-5.c:10:17: identifier df
convert-bfp-5.c:10:19: punctuator ;
convert-bfp-5.c:11:1: keyword volatile
convert-bfp-5.c:11:10: keyword long
convert-bfp-5.c:11:15: keyword double
convert-bfp-5.c:11:22: identifier tf
convert-bfp-5.c:11:24: punctuator ;
convert-bfp-5.c:13:1: keyword void
convert-bfp-5.c:13:6: identifier convert_t_sdsf_nan
convert-bfp-5.c:13:25: punctuator (
convert-bfp-5.c:13:26: keyword void
convert-bfp-5.c:13:30: punctuator )
convert-bfp-5.c:13:32: punctuator {
convert-bfp-5.c:13:34: punctuator ;
convert-bfp-5.c:13:36: identifier sd
convert-bfp-5.c:13:39: punctuator =
convert-bfp-5.c:13:41: identifier __builtin_nand32
convert-bfp-5.c:13:58: punctuator (
convert-bfp-5.c:13:59: string-literal ""
convert-bfp-5.c:13:61: punctuator )
convert-bfp-5.c:13:62: punctuator ;
convert-bfp-5.c:13:64: identifier sf
convert-bfp-5.c:13:67: punctuator =
convert-bfp-5.c:13:69: identifier sd
convert-bfp-5.c:13:71: punctuator ;
convert-bfp-5.c:13:73: keyword if
convert-bfp-5.c:13:76: punctuator (
convert-bfp-5.c:13:77: identifier __builtin_isnanf
convert-bfp-5.c:13:94: punctuator (
convert-bfp-5.c:13:95: identifier sf
convert-bfp-5.c:13:97: punctuator )
convert-bfp-5.c:13:99: punctuator ==
convert-bfp-5.c:13:102: constant 0
convert-bfp-5.c:13:103: punctuator )
convert-bfp-5.c:13:105: identifier __builtin_abort
convert-bfp-5.c:13:121: punctuator (
convert-bfp-5.c:13:122: punctuator )
convert-bfp-5.c:13:123: punctuator ;
convert-bfp-5.c:13:124: punctuator ;
convert-bfp-5.c:13:126: punctuator }
convert-bfp-5.c:13:128: keyword void
convert-bfp-5.c:13:133: identifier convert_t_sddf_nan
convert-bfp-5.c:13:152: punctuator (
convert-bfp-5.c:13:153: keyword void
convert-bfp-5.c:13:157: punctuator )
convert-bfp-5.c:13:159: punctuator {
convert-bfp-5.c:13:161: punctuator ;
convert-bfp-5.c:13:163: identifier sd
convert-bfp-5.c:13:166: punctuator =
convert-bfp-5.c:13:168: identifier __builtin_nand32
convert-bfp-5.c:13:185: punctuator (
convert-bfp-5.c:13:186: string-literal ""
convert-bfp-5.c:13:188: punctuator )
convert-bfp-5.c:13:189: punctuator ;
convert-bfp-5.c:13:191: identifier df
convert-bfp-5.c:13:194: punctuator =
convert-bfp-5.c:13:196: identifier sd
convert-bfp-5.c:13:198: punctuator ;
convert-bfp-5.c:13:200: keyword if
convert-bfp-5.c:13:203: punctuator (
convert-bfp-5.c:13:204: identifier __builtin_isnan
convert-bfp-5.c:13:220: punctuator (
convert-bfp-5.c:13:221: identifier df
convert-bfp-5.c:13:223: punctuator )
convert-bfp-5.c:13:225: punctuator ==
convert-bfp-5.c:13:228: constant 0
convert-bfp-5.c:13:229: punctuator )
convert-bfp-5.c:13:231: identifier __builtin_abort
convert-bfp-5.c:13:247: punctuator (
convert-bfp-5.c:13:248: punctuator )
convert-bfp-5.c:13:249: punctuator ;
convert-bfp-5.c:13:250: punctuator ;
convert-bfp-5.c:13:252: punctuator }
convert-bfp-5.c:13:254: keyword void
convert-bfp-5.c:13:259: identifier convert_t_ddsf_nan
convert-bfp-5.c:13:278: punctuator (
convert-bfp-5.c:13:279: keyword void
convert-bfp-5.c:13:283: punctuator )
convert-bfp-5.c:13:285: punctuator {
convert-bfp-5.c:13:287: punctuator ;
convert-bfp-5.c:13:289: identifier dd
convert-bfp-5.c:13:292: punctuator =
convert-bfp-5.c:13:294: identifier __builtin_nand64
convert-bfp-5.c:13:311: punctuator (
convert-bfp-5.c:13:312: string-literal ""
convert-bfp-5.c:13:314: punctuator )
convert-bfp-5.c:13:315: punctuator ;
convert-bfp-5.c:13:317: identifier sf
convert-bfp-5.c:13:320: punctuator =
convert-bfp-5.c:13:322: identifier dd
convert-bfp-5.c:13:324: punctuator ;
convert-bfp-5.c:13:326: keyword if
convert-bfp-5.c:13:329: punctuator (
convert-bfp-5.c:13:330: identifier __builtin_isnanf
convert-bfp-5.c:13:347: punctuator (
convert-bfp-5.c:13:348: identifier sf
convert-bfp-5.c:13:350: punctuator )
convert-bfp-5.c:13:352: punctuator ==
convert-bfp-5.c:13:355: constant 0
convert-bfp-5.c:13:356: punctuator )
convert-bfp-5.c:13:358: identifier __builtin_abort
convert-bfp-5.c:13:374: punctuator (
convert-bfp-5.c:13:375: punctuator )
convert-bfp-5.c:13:376: punctuator ;
convert-bfp-5.c:13:377: punctuator ;
convert-bfp-5.c:13:379: punctuator }
convert-bfp-5.c:13:381: keyword void
convert-bfp-5.c:13:386: identifier convert_t_dddf_nan
convert-bfp-5.c:13:405: punctuator (
convert-bfp-5.c:13:406: keyword void
convert-bfp-5.c:13:410: punctuator )
convert-bfp-5.c:13:412: punctuator {
convert-bfp-5.c:13:414: punctuator ;
convert-bfp-5.c:13:416: identifier dd
convert-bfp-5.c:13:419: punctuator =
convert-bfp-5.c:13:421: identifier __builtin_nand64
convert-bfp-5.c:13:438: punctuator (
convert-bfp-5.c:13:439: string-literal ""
convert-bfp-5.c:13:441: punctuator )
convert-bfp-5.c:13:442: punctuator ;
convert-bfp-5.c:13:444: identifier df
convert-bfp-5.c:13:447: punctuator =
convert-bfp-5.c:13:449: identifier dd
convert-bfp-5.c:13:451: punctuator ;
convert-bfp-5.c:13:453: keyword if
convert-bfp-5.c:13:456: punctuator (
convert-bfp-5.c:13:457: identifier __builtin_isnan
convert-bfp-5.c:13:473: punctuator (
convert-bfp-5.c:13:474: identifier df
convert-bfp-5.c:13:476: punctuator )
convert-bfp-5.c:13:478: punctuator ==
convert-bfp-5.c:13:481: constant 0
convert-bfp-5.c:13:482: punctuator )
convert-bfp-5.c:13:484: identifier __builtin_abort
convert-bfp-5.c:13:500: punctuator (
convert-bfp-5.c:13:501: punctuator )
convert-bfp-5.c:13:502: punctuator ;
convert-bfp-5.c:13:503: punctuator ;
convert-bfp-5.c:13:505: punctuator }
convert-bfp-5.c:13:507: keyword void
convert-bfp-5.c:13:512: identifier convert_t_tdsf_nan
convert-bfp-5.c:13:531: punctuator (
convert-bfp-5.c:13:532: keyword void
convert-bfp-5.c:13:536: punctuator )
convert-bfp-5.c:13:538: punctuator {
convert-bfp-5.c:13:540: punctuator ;
convert-bfp-5.c:13:542: identifier td
convert-bfp-5.c:13:545: punctuator =
convert-bfp-5.c:13:547: identifier __builtin_nand128
convert-bfp-5.c:13:565: punctuator (
convert-bfp-5.c:13:566: string-literal ""
convert-bfp-5.c:13:568: punctuator )
convert-bfp-5.c:13:569: punctuator ;
convert-bfp-5.c:13:571: identifier sf
convert-bfp-5.c:13:574: punctuator =
convert-bfp-5.c:13:576: identifier td
convert-bfp-5.c:13:578: punctuator ;
convert-bfp-5.c:13:580: keyword if
convert-bfp-5.c:13:583: punctuator (
convert-bfp-5.c:13:584: identifier __builtin_isnanf
convert-bfp-5.c:13:601: punctuator (
convert-bfp-5.c:13:602: identifier sf
convert-bfp-5.c:13:604: punctuator )
convert-bfp-5.c:13:606: punctuator ==
convert-bfp-5.c:13:609: constant 0
convert-bfp-5.c:13:610: punctuator )
convert-bfp-5.c:13:612: identifier __builtin_abort
convert-bfp-5.c:13:628: punctuator (
convert-bfp-5.c:13:629: punctuator )
convert-bfp-5.c:13:630: punctuator ;
convert-bfp-5.c:13:631: punctuator ;
convert-bfp-5.c:13:633: punctuator }
convert-bfp-5.c:13:635: keyword void
convert-bfp-5.c:13:640: identifier convert_t_tddf_nan
convert-bfp-5.c:13:659: punctuator (
convert-bfp-5.c:13:660: keyword void
convert-bfp-5.c:13:664: punctuator )
convert-bfp-5.c:13:666: punctuator {
convert-bfp-5.c:13:668: punctuator ;
convert-bfp-5.c:13:670: identifier td
convert-bfp-5.c:13:673: punctuator =
convert-bfp-5.c:13:675: identifier __builtin_nand128
convert-bfp-5.c:13:693: punctuator (
convert-bfp-5.c:13:694: string-literal ""
convert-bfp-5.c:13:696: punctuator )
convert-bfp-5.c:13:697: punctuator ;
convert-bfp-5.c:13:699: identifier df
convert-bfp-5.c:13:702: punctuator =
convert-bfp-5.c:13:704: identifier td
convert-bfp-5.c:13:706: punctuator ;
convert-bfp-5.c:13:708: keyword if
convert-bfp-5.c:13:711: punctuator (
convert-bfp-5.c:13:712: identifier __builtin_isnan
convert-bfp-5.c:13:728: punctuator (
convert-bfp-5.c:13:729: identifier df
convert-bfp-5.c:13:731: punctuator )
convert-bfp-5.c:13:733: punctuator ==
convert-bfp-5.c:13:736: constant 0
convert-bfp-5.c:13:737: punctuator )
convert-bfp-5.c:13:739: identifier __builtin_abort
convert-bfp-5.c:13:755: punctuator (
convert-bfp-5.c:13:756: punctuator )
convert-bfp-5.c:13:757: punctuator ;
convert-bfp-5.c:13:758: punctuator ;
convert-bfp-5.c:13:760: punctuator }
convert-bfp-5.c:13:762: keyword void
convert-bfp-5.c:13:767: identifier convert_t_sfsd_nan
convert-bfp-5.c:13:786: punctuator (
convert-bfp-5.c:13:787: keyword void
convert-bfp-5.c:13:791: punctuator )
convert-bfp-5.c:13:793: punctuator {
convert-bfp-5.c:13:795: punctuator ;
convert-bfp-5.c:13:797: identifier sf
convert-bfp-5.c:13:800: punctuator =
convert-bfp-5.c:13:802: identifier __builtin_nanf
convert-bfp-5.c:13:817: punctuator (
convert-bfp-5.c:13:818: string-literal ""
convert-bfp-5.c:13:820: punctuator )
convert-bfp-5.c:13:821: punctuator ;
convert-bfp-5.c:13:823: identifier sd
convert-bfp-5.c:13:826: punctuator =
convert-bfp-5.c:13:828: identifier sf
convert-bfp-5.c:13:830: punctuator ;
convert-bfp-5.c:13:832: keyword if
convert-bfp-5.c:13:835: punctuator (
convert-bfp-5.c:13:836: identifier __builtin_isnand32
convert-bfp-5.c:13:855: punctuator (
convert-bfp-5.c:13:856: identifier sd
convert-bfp-5.c:13:858: punctuator )
convert-bfp-5.c:13:860: punctuator ==
convert-bfp-5.c:13:863: constant 0
convert-bfp-5.c:13:864: punctuator )
convert-bfp-5.c:13:866: identifier __builtin_abort
convert-bfp-5.c:13:882: punctuator (
convert-bfp-5.c:13:883: punctuator )
convert-bfp-5.c:13:884: punctuator ;
convert-bfp-5.c:13:885: punctuator ;
convert-bfp-5.c:13:887: punctuator }
convert-bfp-5.c:13:889: keyword void
convert-bfp-5.c:13:894: identifier convert_t_sfdd_nan
convert-bfp-5.c:13:913: punctuator (
convert-bfp-5.c:13:914: keyword void
convert-bfp-5.c:13:918: punctuator )
convert-bfp-5.c:13:920: punctuator {
convert-bfp-5.c:13:922: punctuator ;
convert-bfp-5.c:13:924: identifier sf
convert-bfp-5.c:13:927: punctuator =
convert-bfp-5.c:13:929: identifier __builtin_nanf
convert-bfp-5.c:13:944: punctuator (
convert-bfp-5.c:13:945: string-literal ""
convert-bfp-5.c:13:947: punctuator )
convert-bfp-5.c:13:948: punctuator ;
convert-bfp-5.c:13:950: identifier dd
convert-bfp-5.c:13:953: punctuator =
convert-bfp-5.c:13:955: identifier sf
convert-bfp-5.c:13:957: punctuator ;
convert-bfp-5.c:13:959: keyword if
convert-bfp-5.c:13:962: punctuator (
convert-bfp-5.c:13:963: identifier __builtin_isnand64
convert-bfp-5.c:13:982: punctuator (
convert-bfp-5.c:13:983: identifier dd
convert-bfp-5.c:13:985: punctuator )
convert-bfp-5.c:13:987: punctuator ==
convert-bfp-5.c:13:990: constant 0
convert-bfp-5.c:13:991: punctuator )
convert-bfp-5.c:13:993: identifier __builtin_abort
convert-bfp-5.c:13:1009: punctuator (
convert-bfp-5.c:13:1010: punctuator )
convert-bfp-5.c:13:1011: punctuator ;
convert-bfp-5.c:13:1012: punctuator ;
convert-bfp-5.c:13:1014: punctuator }
convert-bfp-5.c:13:1016: keyword void
convert-bfp-5.c:13:1021: identifier convert_t_sftd_nan
convert-bfp-5.c:13:1040: punctuator (
convert-bfp-5.c:13:1041: keyword void
convert-bfp-5.c:13:1045: punctuator )
convert-bfp-5.c:13:1047: punctuator {
convert-bfp-5.c:13:1049: punctuator ;
convert-bfp-5.c:13:1051: identifier sf
convert-bfp-5.c:13:1054: punctuator =
convert-bfp-5.c:13:1056: identifier __builtin_nanf
convert-bfp-5.c:13:1071: punctuator (
convert-bfp-5.c:13:1072: string-literal ""
convert-bfp-5.c:13:1074: punctuator )
convert-bfp-5.c:13:1075: punctuator ;
convert-bfp-5.c:13:1077: identifier td
convert-bfp-5.c:13:1080: punctuator =
convert-bfp-5.c:13:1082: identifier sf
convert-bfp-5.c:13:1084: punctuator ;
convert-bfp-5.c:13:1086: keyword if
convert-bfp-5.c:13:1089: punctuator (
convert-bfp-5.c:13:1090: identifier __builtin_isnand128
convert-bfp-5.c:13:1110: punctuator (
convert-bfp-5.c:13:1111: identifier td
convert-bfp-5.c:13:1113: punctuator )
convert-bfp-5.c:13:1115: punctuator ==
convert-bfp-5.c:13:1118: constant 0
convert-bfp-5.c:13:1119: punctuator )
convert-bfp-5.c:13:1121: identifier __builtin_abort
convert-bfp-5.c:13:1137: punctuator (
convert-bfp-5.c:13:1138: punctuator )
convert-bfp-5.c:13:1139: punctuator ;
convert-bfp-5.c:13:1140: punctuator ;
convert-bfp-5.c:13:1142: punctuator }
convert-bfp-5.c:13:1144: keyword void
convert-bfp-5.c:13:1149: identifier convert_t_dfsd_nan
convert-bfp-5.c:13:1168: punctuator (
convert-bfp-5.c:13:1169: keyword void
convert-bfp-5.c:13:1173: punctuator )
convert-bfp-5.c:13:1175: punctuator {
convert-bfp-5.c:13:1177: punctuator ;
convert-bfp-5.c:13:1179: identifier df
convert-bfp-5.c:13:1182: punctuator =
convert-bfp-5.c:13:1184: identifier __builtin_nan
convert-bfp-5.c:13:1198: punctuator (
convert-bfp-5.c:13:1199: string-literal ""
convert-bfp-5.c:13:1201: punctuator )
convert-bfp-5.c:13:1202: punctuator ;
convert-bfp-5.c:13:1204: identifier sd
convert-bfp-5.c:13:1207: punctuator =
convert-bfp-5.c:13:1209: identifier df
convert-bfp-5.c:13:1211: punctuator ;
convert-bfp-5.c:13:1213: keyword if
convert-bfp-5.c:13:1216: punctuator (
convert-bfp-5.c:13:1217: identifier __builtin_isnand32
convert-bfp-5.c:13:1236: punctuator (
convert-bfp-5.c:13:1237: identifier sd
convert-bfp-5.c:13:1239: punctuator )
convert-bfp-5.c:13:1241: punctuator ==
convert-bfp-5.c:13:1244: constant 0
convert-bfp-5.c:13:1245: punctuator )
convert-bfp-5.c:13:1247: identifier __builtin_abort
convert-bfp-5.c:13:1263: punctuator (
convert-bfp-5.c:13:1264: punctuator )
convert-bfp-5.c:13:1265: punctuator ;
convert-bfp-5.c:13:1266: punctuator ;
convert-bfp-5.c:13:1268: punctuator }
convert-bfp-5.c:13:1270: keyword void
convert-bfp-5.c:13:1275: identifier convert_t_dfdd_nan
convert-bfp-5.c:13:1294: punctuator (
convert-bfp-5.c:13:1295: keyword void
convert-bfp-5.c:13:1299: punctuator )
convert-bfp-5.c:13:1301: punctuator {
convert-bfp-5.c:13:1303: punctuator ;
convert-bfp-5.c:13:1305: identifier df
convert-bfp-5.c:13:1308: punctuator =
convert-bfp-5.c:13:1310: identifier __builtin_nan
convert-bfp-5.c:13:1324: punctuator (
convert-bfp-5.c:13:1325: string-literal ""
convert-bfp-5.c:13:1327: punctuator )
convert-bfp-5.c:13:1328: punctuator ;
convert-bfp-5.c:13:1330: identifier dd
convert-bfp-5.c:13:1333: punctuator =
convert-bfp-5.c:13:1335: identifier df
convert-bfp-5.c:13:1337: punctuator ;
convert-bfp-5.c:13:1339: keyword if
convert-bfp-5.c:13:1342: punctuator (
convert-bfp-5.c:13:1343: identifier __builtin_isnand64
convert-bfp-5.c:13:1362: punctuator (
convert-bfp-5.c:13:1363: identifier dd
convert-bfp-5.c:13:1365: punctuator )
convert-bfp-5.c:13:1367: punctuator ==
convert-bfp-5.c:13:1370: constant 0
convert-bfp-5.c:13:1371: punctuator )
convert-bfp-5.c:13:1373: identifier __builtin_abort
convert-bfp-5.c:13:1389: punctuator (
convert-bfp-5.c:13:1390: punctuator )
convert-bfp-5.c:13:1391: punctuator ;
convert-bfp-5.c:13:1392: punctuator ;
convert-bfp-5.c:13:1394: punctuator }
convert-bfp-5.c:13:1396: keyword void
convert-bfp-5.c:13:1401: identifier convert_t_dftd_nan
convert-bfp-5.c:13:1420: punctuator (
convert-bfp-5.c:13:1421: keyword void
convert-bfp-5.c:13:1425: punctuator )
convert-bfp-5.c:13:1427: punctuator {
convert-bfp-5.c:13:1429: punctuator ;
convert-bfp-5.c:13:1431: identifier df
convert-bfp-5.c:13:1434: punctuator =
convert-bfp-5.c:13:1436: identifier __builtin_nan
convert-bfp-5.c:13:1450: punctuator (
convert-bfp-5.c:13:1451: string-literal ""
convert-bfp-5.c:13:1453: punctuator )
convert-bfp-5.c:13:1454: punctuator ;
convert-bfp-5.c:13:1456: identifier td
convert-bfp-5.c:13:1459: punctuator =
convert-bfp-5.c:13:1461: identifier df
convert-bfp-5.c:13:1463: punctuator ;
convert-bfp-5.c:13:1465: keyword if
convert-bfp-5.c:13:1468: punctuator (
convert-bfp-5.c:13:1469: identifier __builtin_isnand128
convert-bfp-5.c:13:1489: punctuator (
convert-bfp-5.c:13:1490: identifier td
convert-bfp-5.c:13:1492: punctuator )
convert-bfp-5.c:13:1494: punctuator ==
convert-bfp-5.c:13:1497: constant 0
convert-bfp-5.c:13:1498: punctuator )
convert-bfp-5.c:13:1500: identifier __builtin_abort
convert-bfp-5.c:13:1516: punctuator (
convert-bfp-5.c:13:1517: punctuator )
convert-bfp-5.c:13:1518: punctuator ;
convert-bfp-5.c:13:1519: punctuator ;
convert-bfp-5.c:13:1521: punctuator }
convert-bfp-5.c:13:1523: keyword void
convert-bfp-5.c:13:1528: identifier convert_t_sddd_nan
convert-bfp-5.c:13:1547: punctuator (
convert-bfp-5.c:13:1548: keyword void
convert-bfp-5.c:13:1552: punctuator )
convert-bfp-5.c:13:1554: punctuator {
convert-bfp-5.c:13:1556: punctuator ;
convert-bfp-5.c:13:1558: identifier sd
convert-bfp-5.c:13:1561: punctuator =
convert-bfp-5.c:13:1563: identifier __builtin_nand32
convert-bfp-5.c:13:1580: punctuator (
convert-bfp-5.c:13:1581: string-literal ""
convert-bfp-5.c:13:1583: punctuator )
convert-bfp-5.c:13:1584: punctuator ;
convert-bfp-5.c:13:1586: identifier dd
convert-bfp-5.c:13:1589: punctuator =
convert-bfp-5.c:13:1591: identifier sd
convert-bfp-5.c:13:1593: punctuator ;
convert-bfp-5.c:13:1595: keyword if
convert-bfp-5.c:13:1598: punctuator (
convert-bfp-5.c:13:1599: identifier __builtin_isnand64
convert-bfp-5.c:13:1618: punctuator (
convert-bfp-5.c:13:1619: identifier dd
convert-bfp-5.c:13:1621: punctuator )
convert-bfp-5.c:13:1623: punctuator ==
convert-bfp-5.c:13:1626: constant 0
convert-bfp-5.c:13:1627: punctuator )
convert-bfp-5.c:13:1629: identifier __builtin_abort
convert-bfp-5.c:13:1645: punctuator (
convert-bfp-5.c:13:1646: punctuator )
convert-bfp-5.c:13:1647: punctuator ;
convert-bfp-5.c:13:1648: punctuator ;
convert-bfp-5.c:13:1650: punctuator }
convert-bfp-5.c:13:1652: keyword void
convert-bfp-5.c:13:1657: identifier convert_t_sdtd_nan
convert-bfp-5.c:13:1676: punctuator (
convert-bfp-5.c:13:1677: keyword void
convert-bfp-5.c:13:1681: punctuator )
convert-bfp-5.c:13:1683: punctuator {
convert-bfp-5.c:13:1685: punctuator ;
convert-bfp-5.c:13:1687: identifier sd
convert-bfp-5.c:13:1690: punctuator =
convert-bfp-5.c:13:1692: identifier __builtin_nand32
convert-bfp-5.c:13:1709: punctuator (
convert-bfp-5.c:13:1710: string-literal ""
convert-bfp-5.c:13:1712: punctuator )
convert-bfp-5.c:13:1713: punctuator ;
convert-bfp-5.c:13:1715: identifier td
convert-bfp-5.c:13:1718: punctuator =
convert-bfp-5.c:13:1720: identifier sd
convert-bfp-5.c:13:1722: punctuator ;
convert-bfp-5.c:13:1724: keyword if
convert-bfp-5.c:13:1727: punctuator (
convert-bfp-5.c:13:1728: identifier __builtin_isnand128
convert-bfp-5.c:13:1748: punctuator (
convert-bfp-5.c:13:1749: identifier td
convert-bfp-5.c:13:1751: punctuator )
convert-bfp-5.c:13:1753: punctuator ==
convert-bfp-5.c:13:1756: constant 0
convert-bfp-5.c:13:1757: punctuator )
convert-bfp-5.c:13:1759: identifier __builtin_abort
convert-bfp-5.c:13:1775: punctuator (
convert-bfp-5.c:13:1776: punctuator )
convert-bfp-5.c:13:1777: punctuator ;
convert-bfp-5.c:13:1778: punctuator ;
convert-bfp-5.c:13:1780: punctuator }
convert-bfp-5.c:13:1782: keyword void
convert-bfp-5.c:13:1787: identifier convert_t_ddsd_nan
convert-bfp-5.c:13:1806: punctuator (
convert-bfp-5.c:13:1807: keyword void
convert-bfp-5.c:13:1811: punctuator )
convert-bfp-5.c:13:1813: punctuator {
convert-bfp-5.c:13:1815: punctuator ;
convert-bfp-5.c:13:1817: identifier dd
convert-bfp-5.c:13:1820: punctuator =
convert-bfp-5.c:13:1822: identifier __builtin_nand64
convert-bfp-5.c:13:1839: punctuator (
convert-bfp-5.c:13:1840: string-literal ""
convert-bfp-5.c:13:1842: punctuator )
convert-bfp-5.c:13:1843: punctuator ;
convert-bfp-5.c:13:1845: identifier sd
convert-bfp-5.c:13:1848: punctuator =
convert-bfp-5.c:13:1850: identifier dd
convert-bfp-5.c:13:1852: punctuator ;
convert-bfp-5.c:13:1854: keyword if
convert-bfp-5.c:13:1857: punctuator (
convert-bfp-5.c:13:1858: identifier __builtin_isnand32
convert-bfp-5.c:13:1877: punctuator (
convert-bfp-5.c:13:1878: identifier sd
convert-bfp-5.c:13:1880: punctuator )
convert-bfp-5.c:13:1882: punctuator ==
convert-bfp-5.c:13:1885: constant 0
convert-bfp-5.c:13:1886: punctuator )
convert-bfp-5.c:13:1888: identifier __builtin_abort
convert-bfp-5.c:13:1904: punctuator (
convert-bfp-5.c:13:1905: punctuator )
convert-bfp-5.c:13:1906: punctuator ;
convert-bfp-5.c:13:1907: punctuator ;
convert-bfp-5.c:13:1909: punctuator }
convert-bfp-5.c:13:1911: keyword void
convert-bfp-5.c:13:1916: identifier convert_t_ddtd_nan
convert-bfp-5.c:13:1935: punctuator (
convert-bfp-5.c:13:1936: keyword void
convert-bfp-5.c:13:1940: punctuator )
convert-bfp-5.c:13:1942: punctuator {
convert-bfp-5.c:13:1944: punctuator ;
convert-bfp-5.c:13:1946: identifier dd
convert-bfp-5.c:13:1949: punctuator =
convert-bfp-5.c:13:1951: identifier __builtin_nand64
convert-bfp-5.c:13:1968: punctuator (
convert-bfp-5.c:13:1969: string-literal ""
convert-bfp-5.c:13:1971: punctuator )
convert-bfp-5.c:13:1972: punctuator ;
convert-bfp-5.c:13:1974: identifier td
convert-bfp-5.c:13:1977: punctuator =
convert-bfp-5.c:13:1979: identifier dd
convert-bfp-5.c:13:1981: punctuator ;
convert-bfp-5.c:13:1983: keyword if
convert-bfp-5.c:13:1986: punctuator (
convert-bfp-5.c:13:1987: identifier __builtin_isnand128
convert-bfp-5.c:13:2007: punctuator (
convert-bfp-5.c:13:2008: identifier td
convert-bfp-5.c:13:2010: punctuator )
convert-bfp-5.c:13:2012: punctuator ==
convert-bfp-5.c:13:2015: constant 0
convert-bfp-5.c:13:2016: punctuator )
convert-bfp-5.c:13:2018: identifier __builtin_abort
convert-bfp-5.c:13:2034: punctuator (
convert-bfp-5.c:13:2035: punctuator )
convert-bfp-5.c:13:2036: punctuator ;
convert-bfp-5.c:13:2037: punctuator ;
convert-bfp-5.c:13:2039: punctuator }
convert-bfp-5.c:13:2041: keyword void
convert-bfp-5.c:13:2046: identifier convert_t_tdsd_nan
convert-bfp-5.c:13:2065: punctuator (
convert-bfp-5.c:13:2066: keyword void
convert-bfp-5.c:13:2070: punctuator )
convert-bfp-5.c:13:2072: punctuator {
convert-bfp-5.c:13:2074: punctuator ;
convert-bfp-5.c:13:2076: identifier td
convert-bfp-5.c:13:2079: punctuator =
convert-bfp-5.c:13:2081: identifier __builtin_nand128
convert-bfp-5.c:13:2099: punctuator (
convert-bfp-5.c:13:2100: string-literal ""
convert-bfp-5.c:13:2102: punctuator )
convert-bfp-5.c:13:2103: punctuator ;
convert-bfp-5.c:13:2105: identifier sd
convert-bfp-5.c:13:2108: punctuator =
convert-bfp-5.c:13:2110: identifier td
convert-bfp-5.c:13:2112: punctuator ;
convert-bfp-5.c:13:2114: keyword if
convert-bfp-5.c:13:2117: punctuator (
convert-bfp-5.c:13:2118: identifier __builtin_isnand32
convert-bfp-5.c:13:2137: punctuator (
convert-bfp-5.c:13:2138: identifier sd
convert-bfp-5.c:13:2140: punctuator )
convert-bfp-5.c:13:2142: punctuator ==
convert-bfp-5.c:13:2145: constant 0
convert-bfp-5.c:13:2146: punctuator )
convert-bfp-5.c:13:2148: identifier __builtin_abort
convert-bfp-5.c:13:2164: punctuator (
convert-bfp-5.c:13:2165: punctuator )
convert-bfp-5.c:13:2166: punctuator ;
convert-bfp-5.c:13:2167: punctuator ;
convert-bfp-5.c:13:2169: punctuator }
convert-bfp-5.c:13:2171: keyword void
convert-bfp-5.c:13:2176: identifier convert_t_tddd_nan
convert-bfp-5.c:13:2195: punctuator (
convert-bfp-5.c:13:2196: keyword void
convert-bfp-5.c:13:2200: punctuator )
convert-bfp-5.c:13:2202: punctuator {
convert-bfp-5.c:13:2204: punctuator ;
convert-bfp-5.c:13:2206: identifier td
convert-bfp-5.c:13:2209: punctuator =
convert-bfp-5.c:13:2211: identifier __builtin_nand128
convert-bfp-5.c:13:2229: punctuator (
convert-bfp-5.c:13:2230: string-literal ""
convert-bfp-5.c:13:2232: punctuator )
convert-bfp-5.c:13:2233: punctuator ;
convert-bfp-5.c:13:2235: identifier dd
convert-bfp-5.c:13:2238: punctuator =
convert-bfp-5.c:13:2240: identifier td
convert-bfp-5.c:13:2242: punctuator ;
convert-bfp-5.c:13:2244: keyword if
convert-bfp-5.c:13:2247: punctuator (
convert-bfp-5.c:13:2248: identifier __builtin_isnand64
convert-bfp-5.c:13:2267: punctuator (
convert-bfp-5.c:13:2268: identifier dd
convert-bfp-5.c:13:2270: punctuator )
convert-bfp-5.c:13:2272: punctuator ==
convert-bfp-5.c:13:2275: constant 0
convert-bfp-5.c:13:2276: punctuator )
convert-bfp-5.c:13:2278: identifier __builtin_abort
convert-bfp-5.c:13:2294: punctuator (
convert-bfp-5.c:13:2295: punctuator )
convert-bfp-5.c:13:2296: punctuator ;
convert-bfp-5.c:13:2297: punctuator ;
convert-bfp-5.c:13:2299: punctuator }
convert-bfp-5.c:13:2301: keyword void
convert-bfp-5.c:13:2306: identifier convert_t_sdtf_nan
convert-bfp-5.c:13:2325: punctuator (
convert-bfp-5.c:13:2326: keyword void
convert-bfp-5.c:13:2330: punctuator )
convert-bfp-5.c:13:2332: punctuator {
convert-bfp-5.c:13:2334: punctuator ;
convert-bfp-5.c:13:2336: identifier sd
convert-bfp-5.c:13:2339: punctuator =
convert-bfp-5.c:13:2341: identifier __builtin_nand32
convert-bfp-5.c:13:2358: punctuator (
convert-bfp-5.c:13:2359: string-literal ""
convert-bfp-5.c:13:2361: punctuator )
convert-bfp-5.c:13:2362: punctuator ;
convert-bfp-5.c:13:2364: identifier tf
convert-bfp-5.c:13:2367: punctuator =
convert-bfp-5.c:13:2369: identifier sd
convert-bfp-5.c:13:2371: punctuator ;
convert-bfp-5.c:13:2373: keyword if
convert-bfp-5.c:13:2376: punctuator (
convert-bfp-5.c:13:2377: identifier __builtin_isnanl
convert-bfp-5.c:13:2394: punctuator (
convert-bfp-5.c:13:2395: identifier tf
convert-bfp-5.c:13:2397: punctuator )
convert-bfp-5.c:13:2399: punctuator ==
convert-bfp-5.c:13:2402: constant 0
convert-bfp-5.c:13:2403: punctuator )
convert-bfp-5.c:13:2405: identifier __builtin_abort
convert-bfp-5.c:13:2421: punctuator (
convert-bfp-5.c:13:2422: punctuator )
convert-bfp-5.c:13:2423: punctuator ;
convert-bfp-5.c:13:2424: punctuator ;
convert-bfp-5.c:13:2426: punctuator }
convert-bfp-5.c:13:2428: keyword void
convert-bfp-5.c:13:2433: identifier convert_t_ddtf_nan
convert-bfp-5.c:13:2452: punctuator (
convert-bfp-5.c:13:2453: keyword void
convert-bfp-5.c:13:2457: punctuator )
convert-bfp-5.c:13:2459: punctuator {
convert-bfp-5.c:13:2461: punctuator ;
convert-bfp-5.c:13:2463: identifier dd
convert-bfp-5.c:13:2466: punctuator =
convert-bfp-5.c:13:2468: identifier __builtin_nand64
convert-bfp-5.c:13:2485: punctuator (
convert-bfp-5.c:13:2486: string-literal ""
convert-bfp-5.c:13:2488: punctuator )
convert-bfp-5.c:13:2489: punctuator ;
convert-bfp-5.c:13:2491: identifier tf
convert-bfp-5.c:13:2494: punctuator =
convert-bfp-5.c:13:2496: identifier dd
convert-bfp-5.c:13:2498: punctuator ;
convert-bfp-5.c:13:2500: keyword if
convert-bfp-5.c:13:2503: punctuator (
convert-bfp-5.c:13:2504: identifier __builtin_isnanl
convert-bfp-5.c:13:2521: punctuator (
convert-bfp-5.c:13:2522: identifier tf
convert-bfp-5.c:13:2524: punctuator )
convert-bfp-5.c:13:2526: punctuator ==
convert-bfp-5.c:13:2529: constant 0
convert-bfp-5.c:13:2530: punctuator )
convert-bfp-5.c:13:2532: identifier __builtin_abort
convert-bfp-5.c:13:2548: punctuator (
convert-bfp-5.c:13:2549: punctuator )
convert-bfp-5.c:13:2550: punctuator ;
convert-bfp-5.c:13:2551: punctuator ;
convert-bfp-5.c:13:2553: punctuator }
convert-bfp-5.c:13:2555: keyword void
convert-bfp-5.c:13:2560: identifier convert_t_tdtf_nan
convert-bfp-5.c:13:2579: punctuator (
convert-bfp-5.c:13:2580: keyword void
convert-bfp-5.c:13:2584: punctuator )
convert-bfp-5.c:13:2586: punctuator {
convert-bfp-5.c:13:2588: punctuator ;
convert-bfp-5.c:13:2590: identifier td
convert-bfp-5.c:13:2593: punctuator =
convert-bfp-5.c:13:2595: identifier __builtin_nand128
convert-bfp-5.c:13:2613: punctuator (
convert-bfp-5.c:13:2614: string-literal ""
convert-bfp-5.c:13:2616: punctuator )
convert-bfp-5.c:13:2617: punctuator ;
convert-bfp-5.c:13:2619: identifier tf
convert-bfp-5.c:13:2622: punctuator =
convert-bfp-5.c:13:2624: identifier td
convert-bfp-5.c:13:2626: punctuator ;
convert-bfp-5.c:13:2628: keyword if
convert-bfp-5.c:13:2631: punctuator (
convert-bfp-5.c:13:2632: identifier __builtin_isnanl
convert-bfp-5.c:13:2649: punctuator (
convert-bfp-5.c:13:2650: identifier tf
convert-bfp-5.c:13:2652: punctuator )
convert-bfp-5.c:13:2654: punctuator ==
convert-bfp-5.c:13:2657: constant 0
convert-bfp-5.c:13:2658: punctuator )
convert-bfp-5.c:13:2660: identifier __builtin_abort
convert-bfp-5.c:13:2676: punctuator (
convert-bfp-5.c:13:2677: punctuator )
convert-bfp-5.c:13:2678: punctuator ;
convert-bfp-5.c:13:2679: punctuator ;
convert-bfp-5.c:13:2681: punctuator }
convert-bfp-5.c:13:2683: keyword void
convert-bfp-5.c:13:2688: identifier convert_t_tfsd_nan
convert-bfp-5.c:13:2707: punctuator (
convert-bfp-5.c:13:2708: keyword void
convert-bfp-5.c:13:2712: punctuator )
convert-bfp-5.c:13:2714: punctuator {
convert-bfp-5.c:13:2716: punctuator ;
convert-bfp-5.c:13:2718: identifier tf
convert-bfp-5.c:13:2721: punctuator =
convert-bfp-5.c:13:2723: identifier __builtin_nanl
convert-bfp-5.c:13:2738: punctuator (
convert-bfp-5.c:13:2739: string-literal ""
convert-bfp-5.c:13:2741: punctuator )
convert-bfp-5.c:13:2742: punctuator ;
convert-bfp-5.c:13:2744: identifier sd
convert-bfp-5.c:13:2747: punctuator =
convert-bfp-5.c:13:2749: identifier tf
convert-bfp-5.c:13:2751: punctuator ;
convert-bfp-5.c:13:2753: keyword if
convert-bfp-5.c:13:2756: punctuator (
convert-bfp-5.c:13:2757: identifier __builtin_isnand32
convert-bfp-5.c:13:2776: punctuator (
convert-bfp-5.c:13:2777: identifier sd
convert-bfp-5.c:13:2779: punctuator )
convert-bfp-5.c:13:2781: punctuator ==
convert-bfp-5.c:13:2784: constant 0
convert-bfp-5.c:13:2785: punctuator )
convert-bfp-5.c:13:2787: identifier __builtin_abort
convert-bfp-5.c:13:2803: punctuator (
convert-bfp-5.c:13:2804: punctuator )
convert-bfp-5.c:13:2805: punctuator ;
convert-bfp-5.c:13:2806: punctuator ;
convert-bfp-5.c:13:2808: punctuator }
convert-bfp-5.c:13:2810: keyword void
convert-bfp-5.c:13:2815: identifier convert_t_tfdd_nan
convert-bfp-5.c:13:2834: punctuator (
convert-bfp-5.c:13:2835: keyword void
convert-bfp-5.c:13:2839: punctuator )
convert-bfp-5.c:13:2841: punctuator {
convert-bfp-5.c:13:2843: punctuator ;
convert-bfp-5.c:13:2845: identifier tf
convert-bfp-5.c:13:2848: punctuator =
convert-bfp-5.c:13:2850: identifier __builtin_nanl
convert-bfp-5.c:13:2865: punctuator (
convert-bfp-5.c:13:2866: string-literal ""
convert-bfp-5.c:13:2868: punctuator )
convert-bfp-5.c:13:2869: punctuator ;
convert-bfp-5.c:13:2871: identifier dd
convert-bfp-5.c:13:2874: punctuator =
convert-bfp-5.c:13:2876: identifier tf
convert-bfp-5.c:13:2878: punctuator ;
convert-bfp-5.c:13:2880: keyword if
convert-bfp-5.c:13:2883: punctuator (
convert-bfp-5.c:13:2884: identifier __builtin_isnand64
convert-bfp-5.c:13:2903: punctuator (
convert-bfp-5.c:13:2904: identifier dd
convert-bfp-5.c:13:2906: punctuator )
convert-bfp-5.c:13:2908: punctuator ==
convert-bfp-5.c:13:2911: constant 0
convert-bfp-5.c:13:2912: punctuator )
convert-bfp-5.c:13:2914: identifier __builtin_abort
convert-bfp-5.c:13:2930: punctuator (
convert-bfp-5.c:13:2931: punctuator )
convert-bfp-5.c:13:2932: punctuator ;
convert-bfp-5.c:13:2933: punctuator ;
convert-bfp-5.c:13:2935: punctuator }
convert-bfp-5.c:13:2937: keyword void
convert-bfp-5.c:13:2942: identifier convert_t_tftd_nan
convert-bfp-5.c:13:2961: punctuator (
convert-bfp-5.c:13:2962: keyword void
convert-bfp-5.c:13:2966: punctuator )
convert-bfp-5.c:13:2968: punctuator {
convert-bfp-5.c:13:2970: punctuator ;
convert-bfp-5.c:13:2972: identifier tf
convert-bfp-5.c:13:2975: punctuator =
convert-bfp-5.c:13:2977: identifier __builtin_nanl
convert-bfp-5.c:13:2992: punctuator (
convert-bfp-5.c:13:2993: string-literal ""
convert-bfp-5.c:13:2995: punctuator )
convert-bfp-5.c:13:2996: punctuator ;
convert-bfp-5.c:13:2998: identifier td
convert-bfp-5.c:13:3001: punctuator =
convert-bfp-5.c:13:3003: identifier tf
convert-bfp-5.c:13:3005: punctuator ;
convert-bfp-5.c:13:3007: keyword if
convert-bfp-5.c:13:3010: punctuator (
convert-bfp-5.c:13:3011: identifier __builtin_isnand128
convert-bfp-5.c:13:3031: punctuator (
convert-bfp-5.c:13:3032: identifier td
convert-bfp-5.c:13:3034: punctuator )
convert-bfp-5.c:13:3036: punctuator ==
convert-bfp-5.c:13:3039: constant 0
convert-bfp-5.c:13:3040: punctuator )
convert-bfp-5.c:13:3042: identifier __builtin_abort
convert-bfp-5.c:13:3058: punctuator (
convert-bfp-5.c:13:3059: punctuator )
convert-bfp-5.c:13:3060: punctuator ;
convert-bfp-5.c:13:3061: punctuator ;
convert-bfp-5.c:13:3063: punctuator }
convert-bfp-5.c:13:3064: punctuator ;
convert-bfp-5.c:15:1: keyword int
convert-bfp-5.c:16:1: identifier main
convert-bfp-5.c:16:6: punctuator (
convert-bfp-5.c:16:7: punctuator )
convert-bfp-5.c:17:1: punctuator {
convert-bfp-5.c:18:3: identifier convert_t_sdsf_nan
convert-bfp-5.c:18:22: punctuator (
convert-bfp-5.c:18:23: punctuator )
convert-bfp-5.c:18:24: punctuator ;
convert-bfp-5.c:18:26: identifier convert_t_sddf_nan
convert-bfp-5.c:18:45: punctuator (
convert-bfp-5.c:18:46: punctuator )
convert-bfp-5.c:18:47: punctuator ;
convert-bfp-5.c:18:49: identifier convert_t_ddsf_nan
convert-bfp-5.c:18:68: punctuator (
convert-bfp-5.c:18:69: punctuator )
convert-bfp-5.c:18:70: punctuator ;
convert-bfp-5.c:18:72: identifier convert_t_dddf_nan
convert-bfp-5.c:18:91: punctuator (
convert-bfp-5.c:18:92: punctuator )
convert-bfp-5.c:18:93: punctuator ;
convert-bfp-5.c:18:95: identifier convert_t_tdsf_nan
convert-bfp-5.c:18:114: punctuator (
convert-bfp-5.c:18:115: punctuator )
convert-bfp-5.c:18:116: punctuator ;
convert-bfp-5.c:18:118: identifier convert_t_tddf_nan
convert-bfp-5.c:18:137: punctuator (
convert-bfp-5.c:18:138: punctuator )
convert-bfp-5.c:18:139: punctuator ;
convert-bfp-5.c:18:141: identifier convert_t_sfsd_nan
convert-bfp-5.c:18:160: punctuator (
convert-bfp-5.c:18:161: punctuator )
convert-bfp-5.c:18:162: punctuator ;
convert-bfp-5.c:18:164: identifier convert_t_sfdd_nan
convert-bfp-5.c:18:183: punctuator (
convert-bfp-5.c:18:184: punctuator )
convert-bfp-5.c:18:185: punctuator ;
convert-bfp-5.c:18:187: identifier convert_t_sftd_nan
convert-bfp-5.c:18:206: punctuator (
convert-bfp-5.c:18:207: punctuator )
convert-bfp-5.c:18:208: punctuator ;
convert-bfp-5.c:18:210: identifier convert_t_dfsd_nan
convert-bfp-5.c:18:229: punctuator (
convert-bfp-5.c:18:230: punctuator )
convert-bfp-5.c:18:231: punctuator ;
convert-bfp-5.c:18:233: identifier convert_t_dfdd_nan
convert-bfp-5.c:18:252: punctuator (
convert-bfp-5.c:18:253: punctuator )
convert-bfp-5.c:18:254: punctuator ;
convert-bfp-5.c:18:256: identifier convert_t_dftd_nan
convert-bfp-5.c:18:275: punctuator (
convert-bfp-5.c:18:276: punctuator )
convert-bfp-5.c:18:277: punctuator ;
convert-bfp-5.c:18:279: identifier convert_t_sddd_nan
convert-bfp-5.c:18:298: punctuator (
convert-bfp-5.c:18:299: punctuator )
convert-bfp-5.c:18:300: punctuator ;
convert-bfp-5.c:18:302: identifier convert_t_sdtd_nan
convert-bfp-5.c:18:321: punctuator (
convert-bfp-5.c:18:322: punctuator )
convert-bfp-5.c:18:323: punctuator ;
convert-bfp-5.c:18:325: identifier convert_t_ddsd_nan
convert-bfp-5.c:18:344: punctuator (
convert-bfp-5.c:18:345: punctuator )
convert-bfp-5.c:18:346: punctuator ;
convert-bfp-5.c:18:348: identifier convert_t_ddtd_nan
convert-bfp-5.c:18:367: punctuator (
convert-bfp-5.c:18:368: punctuator )
convert-bfp-5.c:18:369: punctuator ;
convert-bfp-5.c:18:371: identifier convert_t_tdsd_nan
convert-bfp-5.c:18:390: punctuator (
convert-bfp-5.c:18:391: punctuator )
convert-bfp-5.c:18:392: punctuator ;
convert-bfp-5.c:18:394: identifier convert_t_tddd_nan
convert-bfp-5.c:18:413: punctuator (
convert-bfp-5.c:18:414: punctuator )
convert-bfp-5.c:18:415: punctuator ;
convert-bfp-5.c:18:417: identifier convert_t_sdtf_nan
convert-bfp-5.c:18:436: punctuator (
convert-bfp-5.c:18:437: punctuator )
convert-bfp-5.c:18:438: punctuator ;
convert-bfp-5.c:18:440: identifier convert_t_ddtf_nan
convert-bfp-5.c:18:459: punctuator (
convert-bfp-5.c:18:460: punctuator )
convert-bfp-5.c:18:461: punctuator ;
convert-bfp-5.c:18:463: identifier convert_t_tdtf_nan
convert-bfp-5.c:18:482: punctuator (
convert-bfp-5.c:18:483: punctuator )
convert-bfp-5.c:18:484: punctuator ;
convert-bfp-5.c:18:486: identifier convert_t_tfsd_nan
convert-bfp-5.c:18:505: punctuator (
convert-bfp-5.c:18:506: punctuator )
convert-bfp-5.c:18:507: punctuator ;
convert-bfp-5.c:18:509: identifier convert_t_tfdd_nan
convert-bfp-5.c:18:528: punctuator (
convert-bfp-5.c:18:529: punctuator )
convert-bfp-5.c:18:530: punctuator ;
convert-bfp-5.c:18:532: identifier convert_t_tftd_nan
convert-bfp-5.c:18:551: punctuator (
convert-bfp-5.c:18:552: punctuator )
convert-bfp-5.c:18:553: punctuator ;
convert-bfp-5.c:20:3: keyword return
convert-bfp-5.c:20:10: constant 0
convert-bfp-5.c:20:11: punctuator ;
convert-bfp-5.c:21:1: punctuator }
