0
operator-arith-fold.c:6:1 keyword int
operator-arith-fold.c:6:5 identifier failures
operator-arith-fold.c:6:13 punctuator ;
operator-arith-fold.c:8:1 keyword extern
operator-arith-fold.c:8:8 keyword void
operator-arith-fold.c:8:13 identifier link_error
operator-arith-fold.c:8:24 punctuator (
operator-arith-fold.c:8:25 keyword void
operator-arith-fold.c:8:29 punctuator )
operator-arith-fold.c:8:30 punctuator ;
operator-arith-fold.c:10:1 keyword int
operator-arith-fold.c:11:1 identifier main
operator-arith-fold.c:11:6 punctuator (
operator-arith-fold.c:11:7 punctuator )
operator-arith-fold.c:12:1 punctuator {
operator-arith-fold.c:13:3 identifier _Decimal32
operator-arith-fold.c:13:14 identifier d32_1
operator-arith-fold.c:13:19 punctuator ,
operator-arith-fold.c:13:21 identifier d32_2
operator-arith-fold.c:13:26 punctuator ;
operator-arith-fold.c:16:3 keyword if
operator-arith-fold.c:16:6 punctuator (
operator-arith-fold.c:16:7 constant 2.99df
operator-arith-fold.c:16:14 punctuator +
operator-arith-fold.c:16:16 constant 5.1df
operator-arith-fold.c:16:22 punctuator !=
operator-arith-fold.c:16:25 constant 8.09df
operator-arith-fold.c:16:31 punctuator )
operator-arith-fold.c:17:5 identifier link_error
operator-arith-fold.c:17:16 punctuator (
operator-arith-fold.c:17:17 punctuator )
operator-arith-fold.c:17:18 punctuator ;
operator-arith-fold.c:19:3 keyword if
operator-arith-fold.c:19:6 punctuator (
operator-arith-fold.c:19:7 constant 5.77df
operator-arith-fold.c:19:14 punctuator -
operator-arith-fold.c:19:16 constant 2.22dd
operator-arith-fold.c:19:23 punctuator !=
operator-arith-fold.c:19:26 constant 3.55df
operator-arith-fold.c:19:32 punctuator )
operator-arith-fold.c:20:5 identifier link_error
operator-arith-fold.c:20:16 punctuator (
operator-arith-fold.c:20:17 punctuator )
operator-arith-fold.c:20:18 punctuator ;
operator-arith-fold.c:22:3 keyword if
operator-arith-fold.c:22:6 punctuator (
operator-arith-fold.c:22:7 constant 2.0dl
operator-arith-fold.c:22:13 punctuator *
operator-arith-fold.c:22:15 constant 3.7dd
operator-arith-fold.c:22:21 punctuator *
operator-arith-fold.c:22:23 punctuator -
operator-arith-fold.c:22:24 constant 2
operator-arith-fold.c:22:26 punctuator !=
operator-arith-fold.c:22:29 punctuator -
operator-arith-fold.c:22:30 constant 14.8df
operator-arith-fold.c:22:36 punctuator )
operator-arith-fold.c:23:5 identifier link_error
operator-arith-fold.c:23:16 punctuator (
operator-arith-fold.c:23:17 punctuator )
operator-arith-fold.c:23:18 punctuator ;
operator-arith-fold.c:25:3 keyword if
operator-arith-fold.c:25:6 punctuator (
operator-arith-fold.c:25:7 constant .18df
operator-arith-fold.c:25:13 punctuator /
operator-arith-fold.c:25:15 punctuator -
operator-arith-fold.c:25:16 constant .2df
operator-arith-fold.c:25:21 punctuator +
operator-arith-fold.c:25:23 constant 1
operator-arith-fold.c:25:25 punctuator !=
operator-arith-fold.c:25:28 constant 1.e-1dd
operator-arith-fold.c:25:35 punctuator )
operator-arith-fold.c:26:5 identifier link_error
operator-arith-fold.c:26:16 punctuator (
operator-arith-fold.c:26:17 punctuator )
operator-arith-fold.c:26:18 punctuator ;
operator-arith-fold.c:28:3 identifier d32_1
operator-arith-fold.c:28:9 punctuator =
operator-arith-fold.c:28:11 constant 3.0df
operator-arith-fold.c:28:16 punctuator ;
operator-arith-fold.c:29:3 identifier d32_2
operator-arith-fold.c:29:9 punctuator =
operator-arith-fold.c:29:11 constant 1.0df
operator-arith-fold.c:29:16 punctuator ;
operator-arith-fold.c:31:3 keyword if
operator-arith-fold.c:31:6 punctuator (
operator-arith-fold.c:31:7 punctuator !
operator-arith-fold.c:31:8 identifier __builtin_constant_p
operator-arith-fold.c:31:29 punctuator (
operator-arith-fold.c:31:30 identifier d32_1
operator-arith-fold.c:31:36 punctuator +
operator-arith-fold.c:31:38 constant 0.2df
operator-arith-fold.c:31:43 punctuator )
operator-arith-fold.c:31:44 punctuator )
operator-arith-fold.c:32:5 identifier link_error
operator-arith-fold.c:32:16 punctuator (
operator-arith-fold.c:32:17 punctuator )
operator-arith-fold.c:32:18 punctuator ;
operator-arith-fold.c:34:3 keyword if
operator-arith-fold.c:34:6 punctuator (
operator-arith-fold.c:34:7 punctuator !
operator-arith-fold.c:34:8 identifier __builtin_constant_p
operator-arith-fold.c:34:29 punctuator (
operator-arith-fold.c:34:30 constant 1.0df
operator-arith-fold.c:34:36 punctuator /
operator-arith-fold.c:34:38 constant 3.0df
operator-arith-fold.c:34:43 punctuator )
operator-arith-fold.c:34:44 punctuator )
operator-arith-fold.c:35:5 identifier link_error
operator-arith-fold.c:35:16 punctuator (
operator-arith-fold.c:35:17 punctuator )
operator-arith-fold.c:35:18 punctuator ;
operator-arith-fold.c:37:3 keyword if
operator-arith-fold.c:37:6 punctuator (
operator-arith-fold.c:37:7 punctuator !
operator-arith-fold.c:37:8 identifier __builtin_constant_p
operator-arith-fold.c:37:29 punctuator (
operator-arith-fold.c:37:30 identifier d32_2
operator-arith-fold.c:37:36 punctuator /
operator-arith-fold.c:37:38 identifier d32_1
operator-arith-fold.c:37:43 punctuator )
operator-arith-fold.c:37:44 punctuator )
operator-arith-fold.c:38:5 identifier link_error
operator-arith-fold.c:38:16 punctuator (
operator-arith-fold.c:38:17 punctuator )
operator-arith-fold.c:38:18 punctuator ;
operator-arith-fold.c:40:3 identifier d32_2
operator-arith-fold.c:40:9 punctuator =
operator-arith-fold.c:40:11 constant 2.0df
operator-arith-fold.c:40:16 punctuator ;
operator-arith-fold.c:41:3 keyword if
operator-arith-fold.c:41:6 punctuator (
operator-arith-fold.c:41:7 punctuator !
operator-arith-fold.c:41:8 identifier __builtin_constant_p
operator-arith-fold.c:41:29 punctuator (
operator-arith-fold.c:41:30 identifier d32_2
operator-arith-fold.c:41:36 punctuator /
operator-arith-fold.c:41:38 identifier d32_1
operator-arith-fold.c:41:43 punctuator )
operator-arith-fold.c:41:44 punctuator )
operator-arith-fold.c:42:5 identifier link_error
operator-arith-fold.c:42:16 punctuator (
operator-arith-fold.c:42:17 punctuator )
operator-arith-fold.c:42:18 punctuator ;
operator-arith-fold.c:44:3 keyword return
operator-arith-fold.c:44:10 constant 0
operator-arith-fold.c:44:11 punctuator ;
operator-arith-fold.c:45:1 punctuator }
