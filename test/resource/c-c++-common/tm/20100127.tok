0
20100127.c:6:1: keyword typedef
20100127.c:6:9: keyword struct
20100127.c:6:16: identifier node
20100127.c:6:21: punctuator {
20100127.c:7:3: keyword int
20100127.c:7:7: punctuator *
20100127.c:7:9: identifier val
20100127.c:7:12: punctuator ;
20100127.c:8:3: keyword struct
20100127.c:8:10: identifier node
20100127.c:8:15: punctuator *
20100127.c:8:16: identifier next
20100127.c:8:20: punctuator ;
20100127.c:9:1: punctuator }
20100127.c:9:3: identifier node_t
20100127.c:9:9: punctuator ;
20100127.c:11:1: identifier node_t
20100127.c:11:8: punctuator *
20100127.c:11:9: identifier next
20100127.c:11:13: punctuator ;
20100127.c:12:1: keyword int
20100127.c:12:5: identifier nontrxn1
20100127.c:12:13: punctuator ,
20100127.c:12:15: identifier nontrxn
20100127.c:12:22: punctuator ;
20100127.c:14:1: keyword static
20100127.c:14:8: keyword int
20100127.c:14:12: identifier set_remove
20100127.c:14:22: punctuator (
20100127.c:14:23: keyword int
20100127.c:14:27: punctuator *
20100127.c:14:29: identifier val
20100127.c:14:32: punctuator )
20100127.c:15:1: punctuator {
20100127.c:16:3: keyword int
20100127.c:16:7: identifier result
20100127.c:16:13: punctuator ;
20100127.c:17:3: keyword int
20100127.c:17:7: punctuator *
20100127.c:17:9: identifier v
20100127.c:17:10: punctuator ;
20100127.c:18:3: identifier __transaction_relaxed
20100127.c:18:25: punctuator {
20100127.c:19:5: identifier v
20100127.c:19:7: punctuator =
20100127.c:19:9: identifier next
20100127.c:19:13: punctuator ->
20100127.c:19:15: identifier val
20100127.c:19:18: punctuator ;
20100127.c:20:5: identifier result
20100127.c:20:12: punctuator =
20100127.c:20:14: punctuator (
20100127.c:20:15: identifier v
20100127.c:20:17: punctuator ==
20100127.c:20:20: identifier val
20100127.c:20:23: punctuator )
20100127.c:20:24: punctuator ;
20100127.c:21:5: keyword if
20100127.c:21:8: punctuator (
20100127.c:21:9: identifier result
20100127.c:21:15: punctuator )
20100127.c:22:7: identifier result
20100127.c:22:14: punctuator =
20100127.c:22:16: constant 2
20100127.c:22:17: punctuator ;
20100127.c:23:3: punctuator }
20100127.c:24:3: keyword return
20100127.c:24:10: identifier result
20100127.c:24:16: punctuator ;
20100127.c:25:1: punctuator }
20100127.c:27:1: keyword void
20100127.c:27:6: identifier test
20100127.c:27:10: punctuator (
20100127.c:27:11: keyword void
20100127.c:27:16: punctuator *
20100127.c:27:17: identifier data
20100127.c:27:21: punctuator )
20100127.c:28:1: punctuator {
20100127.c:29:3: keyword extern
20100127.c:29:10: keyword void
20100127.c:29:15: identifier bark
20100127.c:29:19: punctuator (
20100127.c:29:20: keyword void
20100127.c:29:24: punctuator )
20100127.c:29:25: punctuator ;
20100127.c:30:3: keyword if
20100127.c:30:6: punctuator (
20100127.c:30:7: identifier set_remove
20100127.c:30:17: punctuator (
20100127.c:30:18: constant 0
20100127.c:30:19: punctuator )
20100127.c:30:20: punctuator )
20100127.c:31:5: identifier bark
20100127.c:31:9: punctuator (
20100127.c:31:10: punctuator )
20100127.c:31:11: punctuator ;
20100127.c:32:3: identifier nontrxn
20100127.c:32:11: punctuator =
20100127.c:32:13: constant 99
20100127.c:32:15: punctuator ;
20100127.c:33:1: punctuator }
