0
simd1.c:5:1: keyword extern
simd1.c:5:8: keyword int
simd1.c:5:12: identifier a
simd1.c:5:13: punctuator [
simd1.c:5:14: constant 1024
simd1.c:5:18: punctuator ]
simd1.c:5:19: punctuator ,
simd1.c:5:21: identifier b
simd1.c:5:22: punctuator [
simd1.c:5:23: constant 1024
simd1.c:5:27: punctuator ]
simd1.c:5:28: punctuator ,
simd1.c:5:30: identifier k
simd1.c:5:31: punctuator ,
simd1.c:5:33: identifier l
simd1.c:5:34: punctuator ,
simd1.c:5:36: identifier m
simd1.c:5:37: punctuator ;
simd1.c:7:1: keyword void
simd1.c:8:1: identifier foo
simd1.c:8:5: punctuator (
simd1.c:8:6: punctuator )
simd1.c:9:1: punctuator {
simd1.c:10:3: keyword int
simd1.c:10:7: identifier i
simd1.c:10:8: punctuator ;
simd1.c:11:3: keyword for
simd1.c:11:7: punctuator (
simd1.c:11:8: identifier i
simd1.c:11:10: punctuator =
simd1.c:11:12: constant 0
simd1.c:11:13: punctuator ;
simd1.c:11:15: identifier i
simd1.c:11:17: punctuator <
simd1.c:11:19: constant 1024
simd1.c:11:23: punctuator ;
simd1.c:11:25: identifier i
simd1.c:11:26: punctuator ++
simd1.c:11:28: punctuator )
simd1.c:12:5: identifier a
simd1.c:12:6: punctuator [
simd1.c:12:7: identifier i
simd1.c:12:8: punctuator ]
simd1.c:12:10: punctuator *=
simd1.c:12:13: identifier b
simd1.c:12:14: punctuator [
simd1.c:12:15: identifier i
simd1.c:12:16: punctuator ]
simd1.c:12:17: punctuator ;
simd1.c:13:1: punctuator }
simd1.c:15:1: keyword void
simd1.c:16:1: identifier bar
simd1.c:16:5: punctuator (
simd1.c:16:6: keyword int
simd1.c:16:10: punctuator *
simd1.c:16:11: identifier p
simd1.c:16:12: punctuator )
simd1.c:17:1: punctuator {
simd1.c:18:3: keyword int
simd1.c:18:7: identifier i
simd1.c:18:8: punctuator ;
simd1.c:19:3: keyword for
simd1.c:19:7: punctuator (
simd1.c:19:8: identifier i
simd1.c:19:10: punctuator =
simd1.c:19:12: constant 0
simd1.c:19:13: punctuator ;
simd1.c:19:15: identifier i
simd1.c:19:17: punctuator <
simd1.c:19:19: constant 1024
simd1.c:19:23: punctuator ;
simd1.c:19:25: identifier i
simd1.c:19:26: punctuator ++
simd1.c:19:28: punctuator )
simd1.c:20:5: identifier a
simd1.c:20:6: punctuator [
simd1.c:20:7: identifier i
simd1.c:20:8: punctuator ]
simd1.c:20:10: punctuator *=
simd1.c:20:13: identifier p
simd1.c:20:14: punctuator [
simd1.c:20:15: identifier i
simd1.c:20:16: punctuator ]
simd1.c:20:17: punctuator ,
simd1.c:20:19: identifier k
simd1.c:20:21: punctuator +=
simd1.c:20:24: identifier m
simd1.c:20:26: punctuator +
simd1.c:20:28: constant 1
simd1.c:20:29: punctuator ;
simd1.c:21:1: punctuator }
simd1.c:23:1: keyword void
simd1.c:24:1: identifier baz
simd1.c:24:5: punctuator (
simd1.c:24:6: keyword int
simd1.c:24:10: punctuator *
simd1.c:24:11: identifier p
simd1.c:24:12: punctuator )
simd1.c:25:1: punctuator {
simd1.c:26:3: keyword for
simd1.c:26:7: punctuator (
simd1.c:26:8: keyword int
simd1.c:26:12: identifier i
simd1.c:26:14: punctuator =
simd1.c:26:16: constant 0
simd1.c:26:17: punctuator ;
simd1.c:26:19: identifier i
simd1.c:26:21: punctuator <
simd1.c:26:23: constant 1024
simd1.c:26:27: punctuator ;
simd1.c:26:29: identifier i
simd1.c:26:30: punctuator ++
simd1.c:26:32: punctuator )
simd1.c:27:5: identifier a
simd1.c:27:6: punctuator [
simd1.c:27:7: identifier i
simd1.c:27:8: punctuator ]
simd1.c:27:10: punctuator *=
simd1.c:27:13: identifier p
simd1.c:27:14: punctuator [
simd1.c:27:15: identifier i
simd1.c:27:16: punctuator ]
simd1.c:27:17: punctuator ,
simd1.c:27:19: identifier k
simd1.c:27:21: punctuator +=
simd1.c:27:24: identifier m
simd1.c:27:26: punctuator +
simd1.c:27:28: constant 1
simd1.c:27:29: punctuator ;
simd1.c:28:1: punctuator }
