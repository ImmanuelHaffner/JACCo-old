0
bprob-1.c:7:1: keyword extern
bprob-1.c:7:8: keyword void
bprob-1.c:7:13: identifier abort
bprob-1.c:7:19: punctuator (
bprob-1.c:7:20: keyword void
bprob-1.c:7:24: punctuator )
bprob-1.c:7:25: punctuator ;
bprob-1.c:9:1: keyword int
bprob-1.c:9:5: identifier do_something
bprob-1.c:9:18: punctuator (
bprob-1.c:9:19: keyword int
bprob-1.c:9:23: identifier i
bprob-1.c:9:24: punctuator )
bprob-1.c:10:1: punctuator {
bprob-1.c:11:3: keyword return
bprob-1.c:11:10: identifier i
bprob-1.c:11:11: punctuator ;
bprob-1.c:12:1: punctuator }
bprob-1.c:16:1: keyword int
bprob-1.c:16:5: identifier unref_val
bprob-1.c:16:14: punctuator ;
bprob-1.c:18:1: keyword static
bprob-1.c:18:8: keyword inline
bprob-1.c:18:15: keyword int
bprob-1.c:19:1: identifier unreferenced
bprob-1.c:19:14: punctuator (
bprob-1.c:19:15: keyword int
bprob-1.c:19:19: identifier i
bprob-1.c:19:20: punctuator ,
bprob-1.c:19:22: keyword int
bprob-1.c:19:26: identifier j
bprob-1.c:19:27: punctuator )
bprob-1.c:20:1: punctuator {
bprob-1.c:21:3: keyword return
bprob-1.c:21:10: identifier i
bprob-1.c:21:12: punctuator -
bprob-1.c:21:14: identifier j
bprob-1.c:21:15: punctuator ;
bprob-1.c:22:1: punctuator }
bprob-1.c:24:1: keyword static
bprob-1.c:24:8: keyword inline
bprob-1.c:24:15: keyword int
bprob-1.c:25:1: identifier uncalled
bprob-1.c:25:10: punctuator (
bprob-1.c:25:11: keyword int
bprob-1.c:25:15: identifier i
bprob-1.c:25:16: punctuator ,
bprob-1.c:25:18: keyword int
bprob-1.c:25:22: identifier j
bprob-1.c:25:23: punctuator )
bprob-1.c:26:1: punctuator {
bprob-1.c:27:3: keyword return
bprob-1.c:27:10: identifier i
bprob-1.c:27:12: punctuator *
bprob-1.c:27:14: identifier j
bprob-1.c:27:15: punctuator ;
bprob-1.c:28:1: punctuator }
bprob-1.c:30:1: keyword static
bprob-1.c:30:8: keyword inline
bprob-1.c:30:15: keyword int
bprob-1.c:31:1: identifier called
bprob-1.c:31:8: punctuator (
bprob-1.c:31:9: keyword int
bprob-1.c:31:13: identifier i
bprob-1.c:31:14: punctuator ,
bprob-1.c:31:16: keyword int
bprob-1.c:31:20: identifier j
bprob-1.c:31:21: punctuator )
bprob-1.c:32:1: punctuator {
bprob-1.c:33:5: keyword return
bprob-1.c:33:12: identifier i
bprob-1.c:33:14: punctuator +
bprob-1.c:33:16: identifier j
bprob-1.c:33:17: punctuator ;
bprob-1.c:34:1: punctuator }
bprob-1.c:36:1: keyword void
bprob-1.c:37:1: identifier call_unref
bprob-1.c:37:12: punctuator (
bprob-1.c:37:13: punctuator )
bprob-1.c:38:1: punctuator {
bprob-1.c:39:3: keyword if
bprob-1.c:39:6: punctuator (
bprob-1.c:39:7: identifier unref_val
bprob-1.c:39:16: punctuator )
bprob-1.c:40:5: identifier unref_val
bprob-1.c:40:15: punctuator =
bprob-1.c:40:17: identifier uncalled
bprob-1.c:40:26: punctuator (
bprob-1.c:40:27: constant 1
bprob-1.c:40:28: punctuator ,
bprob-1.c:40:30: constant 2
bprob-1.c:40:31: punctuator )
bprob-1.c:40:32: punctuator ;
bprob-1.c:41:3: identifier unref_val
bprob-1.c:41:13: punctuator =
bprob-1.c:41:15: identifier called
bprob-1.c:41:22: punctuator (
bprob-1.c:41:23: identifier unref_val
bprob-1.c:41:32: punctuator ,
bprob-1.c:41:34: constant 4
bprob-1.c:41:35: punctuator )
bprob-1.c:41:36: punctuator ;
bprob-1.c:42:1: punctuator }
bprob-1.c:47:1: keyword int
bprob-1.c:47:5: identifier for_val1
bprob-1.c:47:13: punctuator ;
bprob-1.c:48:1: keyword int
bprob-1.c:48:5: identifier for_val2
bprob-1.c:48:13: punctuator ;
bprob-1.c:49:1: keyword int
bprob-1.c:49:5: identifier for_temp
bprob-1.c:49:13: punctuator ;
bprob-1.c:51:1: keyword int
bprob-1.c:52:1: identifier test_for1
bprob-1.c:52:11: punctuator (
bprob-1.c:52:12: keyword int
bprob-1.c:52:16: identifier n
bprob-1.c:52:17: punctuator )
bprob-1.c:53:1: punctuator {
bprob-1.c:54:3: keyword int
bprob-1.c:54:7: identifier i
bprob-1.c:54:8: punctuator ;
bprob-1.c:55:3: identifier for_temp
bprob-1.c:55:12: punctuator =
bprob-1.c:55:14: constant 1
bprob-1.c:55:15: punctuator ;
bprob-1.c:56:3: keyword for
bprob-1.c:56:7: punctuator (
bprob-1.c:56:8: identifier i
bprob-1.c:56:10: punctuator =
bprob-1.c:56:12: constant 0
bprob-1.c:56:13: punctuator ;
bprob-1.c:56:15: identifier i
bprob-1.c:56:17: punctuator <
bprob-1.c:56:19: identifier n
bprob-1.c:56:20: punctuator ;
bprob-1.c:56:22: identifier i
bprob-1.c:56:23: punctuator ++
bprob-1.c:56:25: punctuator )
bprob-1.c:57:5: identifier for_temp
bprob-1.c:57:13: punctuator ++
bprob-1.c:57:15: punctuator ;
bprob-1.c:58:3: keyword return
bprob-1.c:58:10: identifier for_temp
bprob-1.c:58:18: punctuator ;
bprob-1.c:59:1: punctuator }
bprob-1.c:61:1: keyword int
bprob-1.c:62:1: identifier test_for2
bprob-1.c:62:11: punctuator (
bprob-1.c:62:12: keyword int
bprob-1.c:62:16: identifier m
bprob-1.c:62:17: punctuator ,
bprob-1.c:62:19: keyword int
bprob-1.c:62:23: identifier n
bprob-1.c:62:24: punctuator ,
bprob-1.c:62:26: keyword int
bprob-1.c:62:30: identifier o
bprob-1.c:62:31: punctuator )
bprob-1.c:63:1: punctuator {
bprob-1.c:64:3: keyword int
bprob-1.c:64:7: identifier i
bprob-1.c:64:8: punctuator ,
bprob-1.c:64:10: identifier j
bprob-1.c:64:11: punctuator ,
bprob-1.c:64:13: identifier k
bprob-1.c:64:14: punctuator ;
bprob-1.c:65:3: identifier for_temp
bprob-1.c:65:12: punctuator =
bprob-1.c:65:14: constant 1
bprob-1.c:65:15: punctuator ;
bprob-1.c:66:3: keyword for
bprob-1.c:66:7: punctuator (
bprob-1.c:66:8: identifier i
bprob-1.c:66:10: punctuator =
bprob-1.c:66:12: constant 0
bprob-1.c:66:13: punctuator ;
bprob-1.c:66:15: identifier i
bprob-1.c:66:17: punctuator <
bprob-1.c:66:19: identifier n
bprob-1.c:66:20: punctuator ;
bprob-1.c:66:22: identifier i
bprob-1.c:66:23: punctuator ++
bprob-1.c:66:25: punctuator )
bprob-1.c:67:5: keyword for
bprob-1.c:67:9: punctuator (
bprob-1.c:67:10: identifier j
bprob-1.c:67:12: punctuator =
bprob-1.c:67:14: constant 0
bprob-1.c:67:15: punctuator ;
bprob-1.c:67:17: identifier j
bprob-1.c:67:19: punctuator <
bprob-1.c:67:21: identifier m
bprob-1.c:67:22: punctuator ;
bprob-1.c:67:24: identifier j
bprob-1.c:67:25: punctuator ++
bprob-1.c:67:27: punctuator )
bprob-1.c:68:7: keyword for
bprob-1.c:68:11: punctuator (
bprob-1.c:68:12: identifier k
bprob-1.c:68:14: punctuator =
bprob-1.c:68:16: constant 0
bprob-1.c:68:17: punctuator ;
bprob-1.c:68:19: identifier k
bprob-1.c:68:21: punctuator <
bprob-1.c:68:23: identifier o
bprob-1.c:68:24: punctuator ;
bprob-1.c:68:26: identifier k
bprob-1.c:68:27: punctuator ++
bprob-1.c:68:29: punctuator )
bprob-1.c:69:2: identifier for_temp
bprob-1.c:69:10: punctuator ++
bprob-1.c:69:12: punctuator ;
bprob-1.c:70:3: keyword return
bprob-1.c:70:10: identifier for_temp
bprob-1.c:70:18: punctuator ;
bprob-1.c:71:1: punctuator }
bprob-1.c:73:1: keyword void
bprob-1.c:74:1: identifier call_for
bprob-1.c:74:10: punctuator (
bprob-1.c:74:11: punctuator )
bprob-1.c:75:1: punctuator {
bprob-1.c:76:3: identifier for_val1
bprob-1.c:76:12: punctuator +=
bprob-1.c:76:15: identifier test_for1
bprob-1.c:76:25: punctuator (
bprob-1.c:76:26: constant 0
bprob-1.c:76:27: punctuator )
bprob-1.c:76:28: punctuator ;
bprob-1.c:77:3: identifier for_val1
bprob-1.c:77:12: punctuator +=
bprob-1.c:77:15: identifier test_for1
bprob-1.c:77:25: punctuator (
bprob-1.c:77:26: constant 2
bprob-1.c:77:27: punctuator )
bprob-1.c:77:28: punctuator ;
bprob-1.c:78:3: identifier for_val1
bprob-1.c:78:12: punctuator +=
bprob-1.c:78:15: identifier test_for1
bprob-1.c:78:25: punctuator (
bprob-1.c:78:26: constant 7
bprob-1.c:78:27: punctuator )
bprob-1.c:78:28: punctuator ;
bprob-1.c:80:3: identifier for_val2
bprob-1.c:80:12: punctuator +=
bprob-1.c:80:15: identifier test_for2
bprob-1.c:80:25: punctuator (
bprob-1.c:80:26: constant 0
bprob-1.c:80:27: punctuator ,
bprob-1.c:80:29: constant 0
bprob-1.c:80:30: punctuator ,
bprob-1.c:80:32: constant 0
bprob-1.c:80:33: punctuator )
bprob-1.c:80:34: punctuator ;
bprob-1.c:81:3: identifier for_val2
bprob-1.c:81:12: punctuator +=
bprob-1.c:81:15: identifier test_for2
bprob-1.c:81:25: punctuator (
bprob-1.c:81:26: constant 1
bprob-1.c:81:27: punctuator ,
bprob-1.c:81:29: constant 0
bprob-1.c:81:30: punctuator ,
bprob-1.c:81:32: constant 0
bprob-1.c:81:33: punctuator )
bprob-1.c:81:34: punctuator ;
bprob-1.c:82:3: identifier for_val2
bprob-1.c:82:12: punctuator +=
bprob-1.c:82:15: identifier test_for2
bprob-1.c:82:25: punctuator (
bprob-1.c:82:26: constant 1
bprob-1.c:82:27: punctuator ,
bprob-1.c:82:29: constant 3
bprob-1.c:82:30: punctuator ,
bprob-1.c:82:32: constant 0
bprob-1.c:82:33: punctuator )
bprob-1.c:82:34: punctuator ;
bprob-1.c:83:3: identifier for_val2
bprob-1.c:83:12: punctuator +=
bprob-1.c:83:15: identifier test_for2
bprob-1.c:83:25: punctuator (
bprob-1.c:83:26: constant 1
bprob-1.c:83:27: punctuator ,
bprob-1.c:83:29: constant 3
bprob-1.c:83:30: punctuator ,
bprob-1.c:83:32: constant 1
bprob-1.c:83:33: punctuator )
bprob-1.c:83:34: punctuator ;
bprob-1.c:84:3: identifier for_val2
bprob-1.c:84:12: punctuator +=
bprob-1.c:84:15: identifier test_for2
bprob-1.c:84:25: punctuator (
bprob-1.c:84:26: constant 3
bprob-1.c:84:27: punctuator ,
bprob-1.c:84:29: constant 1
bprob-1.c:84:30: punctuator ,
bprob-1.c:84:32: constant 5
bprob-1.c:84:33: punctuator )
bprob-1.c:84:34: punctuator ;
bprob-1.c:85:3: identifier for_val2
bprob-1.c:85:12: punctuator +=
bprob-1.c:85:15: identifier test_for2
bprob-1.c:85:25: punctuator (
bprob-1.c:85:26: constant 3
bprob-1.c:85:27: punctuator ,
bprob-1.c:85:29: constant 7
bprob-1.c:85:30: punctuator ,
bprob-1.c:85:32: constant 3
bprob-1.c:85:33: punctuator )
bprob-1.c:85:34: punctuator ;
bprob-1.c:86:1: punctuator }
bprob-1.c:90:1: keyword int
bprob-1.c:90:5: identifier goto_val
bprob-1.c:90:13: punctuator ;
bprob-1.c:92:1: keyword int
bprob-1.c:93:1: identifier test_goto1
bprob-1.c:93:12: punctuator (
bprob-1.c:93:13: keyword int
bprob-1.c:93:17: identifier f
bprob-1.c:93:18: punctuator )
bprob-1.c:94:1: punctuator {
bprob-1.c:95:3: keyword if
bprob-1.c:95:6: punctuator (
bprob-1.c:95:7: identifier f
bprob-1.c:95:8: punctuator )
bprob-1.c:96:5: keyword goto
bprob-1.c:96:10: identifier lab1
bprob-1.c:96:14: punctuator ;
bprob-1.c:97:3: keyword return
bprob-1.c:97:10: constant 1
bprob-1.c:97:11: punctuator ;
bprob-1.c:98:1: identifier lab1
bprob-1.c:98:5: punctuator :
bprob-1.c:99:3: keyword return
bprob-1.c:99:10: constant 2
bprob-1.c:99:11: punctuator ;
bprob-1.c:100:1: punctuator }
bprob-1.c:102:1: keyword int
bprob-1.c:103:1: identifier test_goto2
bprob-1.c:103:12: punctuator (
bprob-1.c:103:13: keyword int
bprob-1.c:103:17: identifier f
bprob-1.c:103:18: punctuator )
bprob-1.c:104:1: punctuator {
bprob-1.c:105:3: keyword int
bprob-1.c:105:7: identifier i
bprob-1.c:105:8: punctuator ;
bprob-1.c:106:3: keyword for
bprob-1.c:106:7: punctuator (
bprob-1.c:106:8: identifier i
bprob-1.c:106:10: punctuator =
bprob-1.c:106:12: constant 0
bprob-1.c:106:13: punctuator ;
bprob-1.c:106:15: identifier i
bprob-1.c:106:17: punctuator <
bprob-1.c:106:19: constant 10
bprob-1.c:106:21: punctuator ;
bprob-1.c:106:23: identifier i
bprob-1.c:106:24: punctuator ++
bprob-1.c:106:26: punctuator )
bprob-1.c:107:5: keyword if
bprob-1.c:107:8: punctuator (
bprob-1.c:107:9: identifier i
bprob-1.c:107:11: punctuator ==
bprob-1.c:107:14: identifier f
bprob-1.c:107:15: punctuator )
bprob-1.c:107:17: keyword goto
bprob-1.c:107:22: identifier lab2
bprob-1.c:107:26: punctuator ;
bprob-1.c:108:3: keyword return
bprob-1.c:108:10: constant 4
bprob-1.c:108:11: punctuator ;
bprob-1.c:109:1: identifier lab2
bprob-1.c:109:5: punctuator :
bprob-1.c:110:3: keyword return
bprob-1.c:110:10: constant 8
bprob-1.c:110:11: punctuator ;
bprob-1.c:111:1: punctuator }
bprob-1.c:113:1: keyword void
bprob-1.c:114:1: identifier call_goto
bprob-1.c:114:11: punctuator (
bprob-1.c:114:12: punctuator )
bprob-1.c:115:1: punctuator {
bprob-1.c:116:3: identifier goto_val
bprob-1.c:116:12: punctuator +=
bprob-1.c:116:15: identifier test_goto1
bprob-1.c:116:26: punctuator (
bprob-1.c:116:27: constant 0
bprob-1.c:116:28: punctuator )
bprob-1.c:116:29: punctuator ;
bprob-1.c:117:3: identifier goto_val
bprob-1.c:117:12: punctuator +=
bprob-1.c:117:15: identifier test_goto1
bprob-1.c:117:26: punctuator (
bprob-1.c:117:27: constant 1
bprob-1.c:117:28: punctuator )
bprob-1.c:117:29: punctuator ;
bprob-1.c:118:3: identifier goto_val
bprob-1.c:118:12: punctuator +=
bprob-1.c:118:15: identifier test_goto2
bprob-1.c:118:26: punctuator (
bprob-1.c:118:27: constant 3
bprob-1.c:118:28: punctuator )
bprob-1.c:118:29: punctuator ;
bprob-1.c:119:3: identifier goto_val
bprob-1.c:119:12: punctuator +=
bprob-1.c:119:15: identifier test_goto2
bprob-1.c:119:26: punctuator (
bprob-1.c:119:27: constant 30
bprob-1.c:119:29: punctuator )
bprob-1.c:119:30: punctuator ;
bprob-1.c:120:1: punctuator }
bprob-1.c:124:1: keyword int
bprob-1.c:124:5: identifier ifelse_val1
bprob-1.c:124:16: punctuator ;
bprob-1.c:125:1: keyword int
bprob-1.c:125:5: identifier ifelse_val2
bprob-1.c:125:16: punctuator ;
bprob-1.c:126:1: keyword int
bprob-1.c:126:5: identifier ifelse_val3
bprob-1.c:126:16: punctuator ;
bprob-1.c:128:1: keyword int
bprob-1.c:129:1: identifier test_ifelse1
bprob-1.c:129:14: punctuator (
bprob-1.c:129:15: keyword int
bprob-1.c:129:19: identifier i
bprob-1.c:129:20: punctuator ,
bprob-1.c:129:22: keyword int
bprob-1.c:129:26: identifier j
bprob-1.c:129:27: punctuator )
bprob-1.c:130:1: punctuator {
bprob-1.c:131:3: keyword int
bprob-1.c:131:7: identifier result
bprob-1.c:131:14: punctuator =
bprob-1.c:131:16: constant 0
bprob-1.c:131:17: punctuator ;
bprob-1.c:132:3: keyword if
bprob-1.c:132:6: punctuator (
bprob-1.c:132:7: identifier i
bprob-1.c:132:8: punctuator )
bprob-1.c:133:5: keyword if
bprob-1.c:133:8: punctuator (
bprob-1.c:133:9: identifier j
bprob-1.c:133:10: punctuator )
bprob-1.c:134:7: identifier result
bprob-1.c:134:14: punctuator =
bprob-1.c:134:16: identifier do_something
bprob-1.c:134:29: punctuator (
bprob-1.c:134:30: constant 4
bprob-1.c:134:31: punctuator )
bprob-1.c:134:32: punctuator ;
bprob-1.c:135:5: keyword else
bprob-1.c:136:7: identifier result
bprob-1.c:136:14: punctuator =
bprob-1.c:136:16: identifier do_something
bprob-1.c:136:29: punctuator (
bprob-1.c:136:30: constant 1024
bprob-1.c:136:34: punctuator )
bprob-1.c:136:35: punctuator ;
bprob-1.c:137:3: keyword else
bprob-1.c:138:5: keyword if
bprob-1.c:138:8: punctuator (
bprob-1.c:138:9: identifier j
bprob-1.c:138:10: punctuator )
bprob-1.c:139:7: identifier result
bprob-1.c:139:14: punctuator =
bprob-1.c:139:16: identifier do_something
bprob-1.c:139:29: punctuator (
bprob-1.c:139:30: constant 1
bprob-1.c:139:31: punctuator )
bprob-1.c:139:32: punctuator ;
bprob-1.c:140:5: keyword else
bprob-1.c:141:7: identifier result
bprob-1.c:141:14: punctuator =
bprob-1.c:141:16: identifier do_something
bprob-1.c:141:29: punctuator (
bprob-1.c:141:30: constant 2
bprob-1.c:141:31: punctuator )
bprob-1.c:141:32: punctuator ;
bprob-1.c:142:3: keyword if
bprob-1.c:142:6: punctuator (
bprob-1.c:142:7: identifier i
bprob-1.c:142:9: punctuator >
bprob-1.c:142:11: identifier j
bprob-1.c:142:12: punctuator )
bprob-1.c:143:5: identifier result
bprob-1.c:143:12: punctuator =
bprob-1.c:143:14: identifier do_something
bprob-1.c:143:27: punctuator (
bprob-1.c:143:28: identifier result
bprob-1.c:143:34: punctuator *
bprob-1.c:143:35: constant 2
bprob-1.c:143:36: punctuator )
bprob-1.c:143:37: punctuator ;
bprob-1.c:144:3: keyword if
bprob-1.c:144:6: punctuator (
bprob-1.c:144:7: identifier i
bprob-1.c:144:9: punctuator >
bprob-1.c:144:11: constant 10
bprob-1.c:144:13: punctuator )
bprob-1.c:145:5: keyword if
bprob-1.c:145:8: punctuator (
bprob-1.c:145:9: identifier j
bprob-1.c:145:11: punctuator >
bprob-1.c:145:13: constant 10
bprob-1.c:145:15: punctuator )
bprob-1.c:146:7: identifier result
bprob-1.c:146:14: punctuator =
bprob-1.c:146:16: identifier do_something
bprob-1.c:146:29: punctuator (
bprob-1.c:146:30: identifier result
bprob-1.c:146:36: punctuator *
bprob-1.c:146:37: constant 4
bprob-1.c:146:38: punctuator )
bprob-1.c:146:39: punctuator ;
bprob-1.c:147:3: keyword return
bprob-1.c:147:10: identifier result
bprob-1.c:147:16: punctuator ;
bprob-1.c:148:1: punctuator }
bprob-1.c:150:1: keyword int
bprob-1.c:151:1: identifier test_ifelse2
bprob-1.c:151:14: punctuator (
bprob-1.c:151:15: keyword int
bprob-1.c:151:19: identifier i
bprob-1.c:151:20: punctuator )
bprob-1.c:152:1: punctuator {
bprob-1.c:153:3: keyword int
bprob-1.c:153:7: identifier result
bprob-1.c:153:14: punctuator =
bprob-1.c:153:16: constant 0
bprob-1.c:153:17: punctuator ;
bprob-1.c:154:3: keyword if
bprob-1.c:154:6: punctuator (
bprob-1.c:154:7: punctuator !
bprob-1.c:154:8: identifier i
bprob-1.c:154:9: punctuator )
bprob-1.c:155:5: identifier result
bprob-1.c:155:12: punctuator =
bprob-1.c:155:14: identifier do_something
bprob-1.c:155:27: punctuator (
bprob-1.c:155:28: constant 1
bprob-1.c:155:29: punctuator )
bprob-1.c:155:30: punctuator ;
bprob-1.c:156:3: keyword if
bprob-1.c:156:6: punctuator (
bprob-1.c:156:7: identifier i
bprob-1.c:156:9: punctuator ==
bprob-1.c:156:12: constant 1
bprob-1.c:156:13: punctuator )
bprob-1.c:157:5: identifier result
bprob-1.c:157:12: punctuator =
bprob-1.c:157:14: identifier do_something
bprob-1.c:157:27: punctuator (
bprob-1.c:157:28: constant 1024
bprob-1.c:157:32: punctuator )
bprob-1.c:157:33: punctuator ;
bprob-1.c:158:3: keyword if
bprob-1.c:158:6: punctuator (
bprob-1.c:158:7: identifier i
bprob-1.c:158:9: punctuator ==
bprob-1.c:158:12: constant 2
bprob-1.c:158:13: punctuator )
bprob-1.c:159:5: identifier result
bprob-1.c:159:12: punctuator =
bprob-1.c:159:14: identifier do_something
bprob-1.c:159:27: punctuator (
bprob-1.c:159:28: constant 2
bprob-1.c:159:29: punctuator )
bprob-1.c:159:30: punctuator ;
bprob-1.c:160:3: keyword if
bprob-1.c:160:6: punctuator (
bprob-1.c:160:7: identifier i
bprob-1.c:160:9: punctuator ==
bprob-1.c:160:12: constant 3
bprob-1.c:160:13: punctuator )
bprob-1.c:161:5: keyword return
bprob-1.c:161:12: identifier do_something
bprob-1.c:161:25: punctuator (
bprob-1.c:161:26: constant 8
bprob-1.c:161:27: punctuator )
bprob-1.c:161:28: punctuator ;
bprob-1.c:162:3: keyword if
bprob-1.c:162:6: punctuator (
bprob-1.c:162:7: identifier i
bprob-1.c:162:9: punctuator ==
bprob-1.c:162:12: constant 4
bprob-1.c:162:13: punctuator )
bprob-1.c:163:5: keyword return
bprob-1.c:163:12: identifier do_something
bprob-1.c:163:25: punctuator (
bprob-1.c:163:26: constant 2048
bprob-1.c:163:30: punctuator )
bprob-1.c:163:31: punctuator ;
bprob-1.c:164:3: keyword return
bprob-1.c:164:10: identifier result
bprob-1.c:164:16: punctuator ;
bprob-1.c:165:1: punctuator }
bprob-1.c:167:1: keyword int
bprob-1.c:168:1: identifier test_ifelse3
bprob-1.c:168:14: punctuator (
bprob-1.c:168:15: keyword int
bprob-1.c:168:19: identifier i
bprob-1.c:168:20: punctuator ,
bprob-1.c:168:22: keyword int
bprob-1.c:168:26: identifier j
bprob-1.c:168:27: punctuator )
bprob-1.c:169:1: punctuator {
bprob-1.c:170:3: keyword int
bprob-1.c:170:7: identifier result
bprob-1.c:170:14: punctuator =
bprob-1.c:170:16: constant 1
bprob-1.c:170:17: punctuator ;
bprob-1.c:171:3: keyword if
bprob-1.c:171:6: punctuator (
bprob-1.c:171:7: identifier i
bprob-1.c:171:9: punctuator >
bprob-1.c:171:11: constant 10
bprob-1.c:171:14: punctuator &&
bprob-1.c:171:17: identifier j
bprob-1.c:171:19: punctuator >
bprob-1.c:171:21: identifier i
bprob-1.c:171:23: punctuator &&
bprob-1.c:171:26: identifier j
bprob-1.c:171:28: punctuator <
bprob-1.c:171:30: constant 20
bprob-1.c:171:32: punctuator )
bprob-1.c:172:5: identifier result
bprob-1.c:172:12: punctuator =
bprob-1.c:172:14: identifier do_something
bprob-1.c:172:27: punctuator (
bprob-1.c:172:28: constant 16
bprob-1.c:172:30: punctuator )
bprob-1.c:172:31: punctuator ;
bprob-1.c:173:3: keyword if
bprob-1.c:173:6: punctuator (
bprob-1.c:173:7: identifier i
bprob-1.c:173:9: punctuator >
bprob-1.c:173:11: constant 20
bprob-1.c:173:13: punctuator )
bprob-1.c:174:5: keyword if
bprob-1.c:174:8: punctuator (
bprob-1.c:174:9: identifier j
bprob-1.c:174:11: punctuator >
bprob-1.c:174:13: identifier i
bprob-1.c:174:14: punctuator )
bprob-1.c:175:7: keyword if
bprob-1.c:175:10: punctuator (
bprob-1.c:175:11: identifier j
bprob-1.c:175:13: punctuator <
bprob-1.c:175:15: constant 30
bprob-1.c:175:17: punctuator )
bprob-1.c:176:2: identifier result
bprob-1.c:176:9: punctuator =
bprob-1.c:176:11: identifier do_something
bprob-1.c:176:24: punctuator (
bprob-1.c:176:25: constant 32
bprob-1.c:176:27: punctuator )
bprob-1.c:176:28: punctuator ;
bprob-1.c:177:3: keyword if
bprob-1.c:177:6: punctuator (
bprob-1.c:177:7: identifier i
bprob-1.c:177:9: punctuator ==
bprob-1.c:177:12: constant 3
bprob-1.c:177:14: punctuator ||
bprob-1.c:177:17: identifier j
bprob-1.c:177:19: punctuator ==
bprob-1.c:177:22: constant 47
bprob-1.c:177:25: punctuator ||
bprob-1.c:177:28: identifier i
bprob-1.c:177:30: punctuator ==
bprob-1.c:177:33: identifier j
bprob-1.c:177:34: punctuator )
bprob-1.c:178:5: identifier result
bprob-1.c:178:12: punctuator =
bprob-1.c:178:14: identifier do_something
bprob-1.c:178:27: punctuator (
bprob-1.c:178:28: constant 64
bprob-1.c:178:30: punctuator )
bprob-1.c:178:31: punctuator ;
bprob-1.c:179:3: keyword return
bprob-1.c:179:10: identifier result
bprob-1.c:179:16: punctuator ;
bprob-1.c:180:1: punctuator }
bprob-1.c:182:1: keyword void
bprob-1.c:183:1: identifier call_ifelse
bprob-1.c:183:13: punctuator (
bprob-1.c:183:14: punctuator )
bprob-1.c:184:1: punctuator {
bprob-1.c:185:3: identifier ifelse_val1
bprob-1.c:185:15: punctuator +=
bprob-1.c:185:18: identifier test_ifelse1
bprob-1.c:185:31: punctuator (
bprob-1.c:185:32: constant 0
bprob-1.c:185:33: punctuator ,
bprob-1.c:185:35: constant 2
bprob-1.c:185:36: punctuator )
bprob-1.c:185:37: punctuator ;
bprob-1.c:186:3: identifier ifelse_val1
bprob-1.c:186:15: punctuator +=
bprob-1.c:186:18: identifier test_ifelse1
bprob-1.c:186:31: punctuator (
bprob-1.c:186:32: constant 0
bprob-1.c:186:33: punctuator ,
bprob-1.c:186:35: constant 0
bprob-1.c:186:36: punctuator )
bprob-1.c:186:37: punctuator ;
bprob-1.c:187:3: identifier ifelse_val1
bprob-1.c:187:15: punctuator +=
bprob-1.c:187:18: identifier test_ifelse1
bprob-1.c:187:31: punctuator (
bprob-1.c:187:32: constant 1
bprob-1.c:187:33: punctuator ,
bprob-1.c:187:35: constant 2
bprob-1.c:187:36: punctuator )
bprob-1.c:187:37: punctuator ;
bprob-1.c:188:3: identifier ifelse_val1
bprob-1.c:188:15: punctuator +=
bprob-1.c:188:18: identifier test_ifelse1
bprob-1.c:188:31: punctuator (
bprob-1.c:188:32: constant 10
bprob-1.c:188:34: punctuator ,
bprob-1.c:188:36: constant 2
bprob-1.c:188:37: punctuator )
bprob-1.c:188:38: punctuator ;
bprob-1.c:189:3: identifier ifelse_val1
bprob-1.c:189:15: punctuator +=
bprob-1.c:189:18: identifier test_ifelse1
bprob-1.c:189:31: punctuator (
bprob-1.c:189:32: constant 11
bprob-1.c:189:34: punctuator ,
bprob-1.c:189:36: constant 11
bprob-1.c:189:38: punctuator )
bprob-1.c:189:39: punctuator ;
bprob-1.c:191:3: identifier ifelse_val2
bprob-1.c:191:15: punctuator +=
bprob-1.c:191:18: identifier test_ifelse2
bprob-1.c:191:31: punctuator (
bprob-1.c:191:32: constant 0
bprob-1.c:191:33: punctuator )
bprob-1.c:191:34: punctuator ;
bprob-1.c:192:3: identifier ifelse_val2
bprob-1.c:192:15: punctuator +=
bprob-1.c:192:18: identifier test_ifelse2
bprob-1.c:192:31: punctuator (
bprob-1.c:192:32: constant 2
bprob-1.c:192:33: punctuator )
bprob-1.c:192:34: punctuator ;
bprob-1.c:193:3: identifier ifelse_val2
bprob-1.c:193:15: punctuator +=
bprob-1.c:193:18: identifier test_ifelse2
bprob-1.c:193:31: punctuator (
bprob-1.c:193:32: constant 2
bprob-1.c:193:33: punctuator )
bprob-1.c:193:34: punctuator ;
bprob-1.c:194:3: identifier ifelse_val2
bprob-1.c:194:15: punctuator +=
bprob-1.c:194:18: identifier test_ifelse2
bprob-1.c:194:31: punctuator (
bprob-1.c:194:32: constant 2
bprob-1.c:194:33: punctuator )
bprob-1.c:194:34: punctuator ;
bprob-1.c:195:3: identifier ifelse_val2
bprob-1.c:195:15: punctuator +=
bprob-1.c:195:18: identifier test_ifelse2
bprob-1.c:195:31: punctuator (
bprob-1.c:195:32: constant 3
bprob-1.c:195:33: punctuator )
bprob-1.c:195:34: punctuator ;
bprob-1.c:196:3: identifier ifelse_val2
bprob-1.c:196:15: punctuator +=
bprob-1.c:196:18: identifier test_ifelse2
bprob-1.c:196:31: punctuator (
bprob-1.c:196:32: constant 3
bprob-1.c:196:33: punctuator )
bprob-1.c:196:34: punctuator ;
bprob-1.c:198:3: identifier ifelse_val3
bprob-1.c:198:15: punctuator +=
bprob-1.c:198:18: identifier test_ifelse3
bprob-1.c:198:31: punctuator (
bprob-1.c:198:32: constant 11
bprob-1.c:198:34: punctuator ,
bprob-1.c:198:36: constant 19
bprob-1.c:198:38: punctuator )
bprob-1.c:198:39: punctuator ;
bprob-1.c:199:3: identifier ifelse_val3
bprob-1.c:199:15: punctuator +=
bprob-1.c:199:18: identifier test_ifelse3
bprob-1.c:199:31: punctuator (
bprob-1.c:199:32: constant 25
bprob-1.c:199:34: punctuator ,
bprob-1.c:199:36: constant 27
bprob-1.c:199:38: punctuator )
bprob-1.c:199:39: punctuator ;
bprob-1.c:200:3: identifier ifelse_val3
bprob-1.c:200:15: punctuator +=
bprob-1.c:200:18: identifier test_ifelse3
bprob-1.c:200:31: punctuator (
bprob-1.c:200:32: constant 11
bprob-1.c:200:34: punctuator ,
bprob-1.c:200:36: constant 22
bprob-1.c:200:38: punctuator )
bprob-1.c:200:39: punctuator ;
bprob-1.c:201:3: identifier ifelse_val3
bprob-1.c:201:15: punctuator +=
bprob-1.c:201:18: identifier test_ifelse3
bprob-1.c:201:31: punctuator (
bprob-1.c:201:32: constant 11
bprob-1.c:201:34: punctuator ,
bprob-1.c:201:36: constant 10
bprob-1.c:201:38: punctuator )
bprob-1.c:201:39: punctuator ;
bprob-1.c:202:3: identifier ifelse_val3
bprob-1.c:202:15: punctuator +=
bprob-1.c:202:18: identifier test_ifelse3
bprob-1.c:202:31: punctuator (
bprob-1.c:202:32: constant 21
bprob-1.c:202:34: punctuator ,
bprob-1.c:202:36: constant 32
bprob-1.c:202:38: punctuator )
bprob-1.c:202:39: punctuator ;
bprob-1.c:203:3: identifier ifelse_val3
bprob-1.c:203:15: punctuator +=
bprob-1.c:203:18: identifier test_ifelse3
bprob-1.c:203:31: punctuator (
bprob-1.c:203:32: constant 21
bprob-1.c:203:34: punctuator ,
bprob-1.c:203:36: constant 20
bprob-1.c:203:38: punctuator )
bprob-1.c:203:39: punctuator ;
bprob-1.c:204:3: identifier ifelse_val3
bprob-1.c:204:15: punctuator +=
bprob-1.c:204:18: identifier test_ifelse3
bprob-1.c:204:31: punctuator (
bprob-1.c:204:32: constant 1
bprob-1.c:204:33: punctuator ,
bprob-1.c:204:35: constant 2
bprob-1.c:204:36: punctuator )
bprob-1.c:204:37: punctuator ;
bprob-1.c:205:3: identifier ifelse_val3
bprob-1.c:205:15: punctuator +=
bprob-1.c:205:18: identifier test_ifelse3
bprob-1.c:205:31: punctuator (
bprob-1.c:205:32: constant 32
bprob-1.c:205:34: punctuator ,
bprob-1.c:205:36: constant 31
bprob-1.c:205:38: punctuator )
bprob-1.c:205:39: punctuator ;
bprob-1.c:206:3: identifier ifelse_val3
bprob-1.c:206:15: punctuator +=
bprob-1.c:206:18: identifier test_ifelse3
bprob-1.c:206:31: punctuator (
bprob-1.c:206:32: constant 3
bprob-1.c:206:33: punctuator ,
bprob-1.c:206:35: constant 0
bprob-1.c:206:36: punctuator )
bprob-1.c:206:37: punctuator ;
bprob-1.c:207:3: identifier ifelse_val3
bprob-1.c:207:15: punctuator +=
bprob-1.c:207:18: identifier test_ifelse3
bprob-1.c:207:31: punctuator (
bprob-1.c:207:32: constant 0
bprob-1.c:207:33: punctuator ,
bprob-1.c:207:35: constant 47
bprob-1.c:207:37: punctuator )
bprob-1.c:207:38: punctuator ;
bprob-1.c:208:3: identifier ifelse_val3
bprob-1.c:208:15: punctuator +=
bprob-1.c:208:18: identifier test_ifelse3
bprob-1.c:208:31: punctuator (
bprob-1.c:208:32: constant 65
bprob-1.c:208:34: punctuator ,
bprob-1.c:208:36: constant 65
bprob-1.c:208:38: punctuator )
bprob-1.c:208:39: punctuator ;
bprob-1.c:209:1: punctuator }
bprob-1.c:213:1: keyword int
bprob-1.c:213:5: identifier switch_val
bprob-1.c:213:15: punctuator ,
bprob-1.c:213:17: identifier switch_m
bprob-1.c:213:25: punctuator ;
bprob-1.c:215:1: keyword int
bprob-1.c:216:1: identifier test_switch
bprob-1.c:216:13: punctuator (
bprob-1.c:216:14: keyword int
bprob-1.c:216:18: identifier i
bprob-1.c:216:19: punctuator ,
bprob-1.c:216:21: keyword int
bprob-1.c:216:25: identifier j
bprob-1.c:216:26: punctuator )
bprob-1.c:217:1: punctuator {
bprob-1.c:218:3: keyword int
bprob-1.c:218:7: identifier result
bprob-1.c:218:14: punctuator =
bprob-1.c:218:16: constant 0
bprob-1.c:218:17: punctuator ;
bprob-1.c:220:3: keyword switch
bprob-1.c:220:10: punctuator (
bprob-1.c:220:11: identifier i
bprob-1.c:220:12: punctuator )
bprob-1.c:221:5: punctuator {
bprob-1.c:222:7: keyword case
bprob-1.c:222:12: constant 1
bprob-1.c:222:13: punctuator :
bprob-1.c:223:9: identifier result
bprob-1.c:223:16: punctuator =
bprob-1.c:223:18: identifier do_something
bprob-1.c:223:31: punctuator (
bprob-1.c:223:32: constant 2
bprob-1.c:223:33: punctuator )
bprob-1.c:223:34: punctuator ;
bprob-1.c:224:9: keyword break
bprob-1.c:224:14: punctuator ;
bprob-1.c:225:7: keyword case
bprob-1.c:225:12: constant 2
bprob-1.c:225:13: punctuator :
bprob-1.c:226:9: identifier result
bprob-1.c:226:16: punctuator =
bprob-1.c:226:18: identifier do_something
bprob-1.c:226:31: punctuator (
bprob-1.c:226:32: constant 1024
bprob-1.c:226:36: punctuator )
bprob-1.c:226:37: punctuator ;
bprob-1.c:227:9: keyword break
bprob-1.c:227:14: punctuator ;
bprob-1.c:228:7: keyword case
bprob-1.c:228:12: constant 3
bprob-1.c:228:13: punctuator :
bprob-1.c:229:7: keyword case
bprob-1.c:229:12: constant 4
bprob-1.c:229:13: punctuator :
bprob-1.c:230:9: keyword if
bprob-1.c:230:12: punctuator (
bprob-1.c:230:13: identifier j
bprob-1.c:230:15: punctuator ==
bprob-1.c:230:18: constant 2
bprob-1.c:230:19: punctuator )
bprob-1.c:231:11: keyword return
bprob-1.c:231:18: identifier do_something
bprob-1.c:231:31: punctuator (
bprob-1.c:231:32: constant 4
bprob-1.c:231:33: punctuator )
bprob-1.c:231:34: punctuator ;
bprob-1.c:232:9: identifier result
bprob-1.c:232:16: punctuator =
bprob-1.c:232:18: identifier do_something
bprob-1.c:232:31: punctuator (
bprob-1.c:232:32: constant 8
bprob-1.c:232:33: punctuator )
bprob-1.c:232:34: punctuator ;
bprob-1.c:233:9: keyword break
bprob-1.c:233:14: punctuator ;
bprob-1.c:234:7: keyword default
bprob-1.c:234:14: punctuator :
bprob-1.c:235:2: identifier result
bprob-1.c:235:9: punctuator =
bprob-1.c:235:11: identifier do_something
bprob-1.c:235:24: punctuator (
bprob-1.c:235:25: constant 32
bprob-1.c:235:27: punctuator )
bprob-1.c:235:28: punctuator ;
bprob-1.c:236:2: identifier switch_m
bprob-1.c:236:10: punctuator ++
bprob-1.c:236:12: punctuator ;
bprob-1.c:237:9: keyword break
bprob-1.c:237:14: punctuator ;
bprob-1.c:238:5: punctuator }
bprob-1.c:239:3: keyword return
bprob-1.c:239:10: identifier result
bprob-1.c:239:16: punctuator ;
bprob-1.c:240:1: punctuator }
bprob-1.c:242:1: keyword void
bprob-1.c:243:1: identifier call_switch
bprob-1.c:243:13: punctuator (
bprob-1.c:243:14: punctuator )
bprob-1.c:244:1: punctuator {
bprob-1.c:245:3: identifier switch_val
bprob-1.c:245:14: punctuator +=
bprob-1.c:245:17: identifier test_switch
bprob-1.c:245:29: punctuator (
bprob-1.c:245:30: constant 1
bprob-1.c:245:31: punctuator ,
bprob-1.c:245:33: constant 0
bprob-1.c:245:34: punctuator )
bprob-1.c:245:35: punctuator ;
bprob-1.c:246:3: identifier switch_val
bprob-1.c:246:14: punctuator +=
bprob-1.c:246:17: identifier test_switch
bprob-1.c:246:29: punctuator (
bprob-1.c:246:30: constant 3
bprob-1.c:246:31: punctuator ,
bprob-1.c:246:33: constant 0
bprob-1.c:246:34: punctuator )
bprob-1.c:246:35: punctuator ;
bprob-1.c:247:3: identifier switch_val
bprob-1.c:247:14: punctuator +=
bprob-1.c:247:17: identifier test_switch
bprob-1.c:247:29: punctuator (
bprob-1.c:247:30: constant 3
bprob-1.c:247:31: punctuator ,
bprob-1.c:247:33: constant 2
bprob-1.c:247:34: punctuator )
bprob-1.c:247:35: punctuator ;
bprob-1.c:248:3: identifier switch_val
bprob-1.c:248:14: punctuator +=
bprob-1.c:248:17: identifier test_switch
bprob-1.c:248:29: punctuator (
bprob-1.c:248:30: constant 4
bprob-1.c:248:31: punctuator ,
bprob-1.c:248:33: constant 0
bprob-1.c:248:34: punctuator )
bprob-1.c:248:35: punctuator ;
bprob-1.c:249:3: identifier switch_val
bprob-1.c:249:14: punctuator +=
bprob-1.c:249:17: identifier test_switch
bprob-1.c:249:29: punctuator (
bprob-1.c:249:30: constant 16
bprob-1.c:249:32: punctuator ,
bprob-1.c:249:34: constant 0
bprob-1.c:249:35: punctuator )
bprob-1.c:249:36: punctuator ;
bprob-1.c:250:3: identifier switch_val
bprob-1.c:250:14: punctuator +=
bprob-1.c:250:17: identifier switch_m
bprob-1.c:250:25: punctuator ;
bprob-1.c:251:1: punctuator }
bprob-1.c:253:1: keyword int
bprob-1.c:254:1: identifier main
bprob-1.c:254:5: punctuator (
bprob-1.c:254:6: punctuator )
bprob-1.c:255:1: punctuator {
bprob-1.c:256:3: identifier call_for
bprob-1.c:256:12: punctuator (
bprob-1.c:256:13: punctuator )
bprob-1.c:256:14: punctuator ;
bprob-1.c:257:3: identifier call_goto
bprob-1.c:257:13: punctuator (
bprob-1.c:257:14: punctuator )
bprob-1.c:257:15: punctuator ;
bprob-1.c:258:3: identifier call_ifelse
bprob-1.c:258:15: punctuator (
bprob-1.c:258:16: punctuator )
bprob-1.c:258:17: punctuator ;
bprob-1.c:259:3: identifier call_switch
bprob-1.c:259:15: punctuator (
bprob-1.c:259:16: punctuator )
bprob-1.c:259:17: punctuator ;
bprob-1.c:260:3: identifier call_unref
bprob-1.c:260:14: punctuator (
bprob-1.c:260:15: punctuator )
bprob-1.c:260:16: punctuator ;
bprob-1.c:261:3: keyword if
bprob-1.c:261:6: punctuator (
bprob-1.c:261:7: punctuator (
bprob-1.c:261:8: identifier for_val1
bprob-1.c:261:17: punctuator !=
bprob-1.c:261:20: constant 12
bprob-1.c:261:22: punctuator )
bprob-1.c:262:7: punctuator ||
bprob-1.c:262:10: punctuator (
bprob-1.c:262:11: identifier for_val2
bprob-1.c:262:20: punctuator !=
bprob-1.c:262:23: constant 87
bprob-1.c:262:25: punctuator )
bprob-1.c:263:7: punctuator ||
bprob-1.c:263:10: punctuator (
bprob-1.c:263:11: identifier goto_val
bprob-1.c:263:20: punctuator !=
bprob-1.c:263:23: constant 15
bprob-1.c:263:25: punctuator )
bprob-1.c:264:7: punctuator ||
bprob-1.c:264:10: punctuator (
bprob-1.c:264:11: identifier ifelse_val1
bprob-1.c:264:23: punctuator !=
bprob-1.c:264:26: constant 31
bprob-1.c:264:28: punctuator )
bprob-1.c:265:7: punctuator ||
bprob-1.c:265:10: punctuator (
bprob-1.c:265:11: identifier ifelse_val2
bprob-1.c:265:23: punctuator !=
bprob-1.c:265:26: constant 23
bprob-1.c:265:28: punctuator )
bprob-1.c:266:7: punctuator ||
bprob-1.c:266:10: punctuator (
bprob-1.c:266:11: identifier ifelse_val3
bprob-1.c:266:23: punctuator !=
bprob-1.c:266:26: constant 246
bprob-1.c:266:29: punctuator )
bprob-1.c:267:7: punctuator ||
bprob-1.c:267:10: punctuator (
bprob-1.c:267:11: identifier switch_val
bprob-1.c:267:22: punctuator !=
bprob-1.c:267:25: constant 55
bprob-1.c:267:27: punctuator )
bprob-1.c:268:7: punctuator ||
bprob-1.c:268:10: punctuator (
bprob-1.c:268:11: identifier unref_val
bprob-1.c:268:21: punctuator !=
bprob-1.c:268:24: constant 4
bprob-1.c:268:25: punctuator )
bprob-1.c:268:26: punctuator )
bprob-1.c:269:5: identifier abort
bprob-1.c:269:11: punctuator (
bprob-1.c:269:12: punctuator )
bprob-1.c:269:13: punctuator ;
bprob-1.c:270:3: keyword return
bprob-1.c:270:10: constant 0
bprob-1.c:270:11: punctuator ;
bprob-1.c:271:1: punctuator }
